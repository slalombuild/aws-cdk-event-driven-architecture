{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/core": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::ACMPCA",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::ACMPCA",
    "aws-acmpca"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-acmpca",
  "readme": {
    "markdown": "# AWS::ACMPCA Construct Library\n\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n```ts nofixture\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n```\n\n## Certificate Authority\n\nThis package contains a `CertificateAuthority` class.\nAt the moment, you cannot create new Authorities using it,\nbut you can import existing ones using the `fromCertificateAuthorityArn` static method:\n\n```ts\nconst certificateAuthority = acmpca.CertificateAuthority.fromCertificateAuthorityArn(this, 'CA',\n  'arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77');\n```\n\n## Low-level `Cfn*` classes\n\nYou can always use the low-level classes\n(starting with `Cfn*`) to create resources like the Certificate Authority:\n\n```ts\nconst cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});\n```\n\nIf you need to pass the higher-level `ICertificateAuthority` somewhere,\nyou can get it from the lower-level `CfnCertificateAuthority` using the same `fromCertificateAuthorityArn` method:\n\n```ts\ndeclare const cfnCertificateAuthority: acmpca.CfnCertificateAuthority;\n\nconst certificateAuthority = acmpca.CertificateAuthority.fromCertificateAuthorityArn(this, 'CertificateAuthority',\n  cfnCertificateAuthority.attrArn);\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-acmpca",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.ACMPCA",
      "packageId": "Amazon.CDK.AWS.ACMPCA"
    },
    "java": {
      "maven": {
        "artifactId": "acmpca",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.acmpca"
    },
    "js": {
      "npm": "@aws-cdk/aws-acmpca"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-acmpca",
      "module": "aws_cdk.aws_acmpca"
    }
  },
  "types": {
    "@aws-cdk/aws-acmpca.CertificateAuthority": {
      "assembly": "@aws-cdk/aws-acmpca",
      "docs": {
        "custom": {
          "resource": "AWS::ACMPCA::CertificateAuthority",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Defines a Certificate for ACMPCA.",
        "example": "import * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});"
      },
      "fqn": "@aws-cdk/aws-acmpca.CertificateAuthority",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificate-authority.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing Certificate given an ARN."
          },
          "locationInModule": {
            "filename": "lib/certificate-authority.ts",
            "line": 25
          },
          "name": "fromCertificateAuthorityArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "certificateAuthorityArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-acmpca.ICertificateAuthority"
            }
          },
          "static": true
        }
      ],
      "name": "CertificateAuthority",
      "symbolId": "lib/certificate-authority:CertificateAuthority"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate": {
      "assembly": "@aws-cdk/aws-acmpca",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ACMPCA::Certificate",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::ACMPCA::Certificate` resource is used to issue a certificate using your private certificate authority. For more information, see the [IssueCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_IssueCertificate.html) action.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ACMPCA::Certificate`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificate = new acmpca.CfnCertificate(this, 'MyCfnCertificate', {\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  certificateSigningRequest: 'certificateSigningRequest',\n  signingAlgorithm: 'signingAlgorithm',\n  validity: {\n    type: 'type',\n    value: 123,\n  },\n\n  // the properties below are optional\n  apiPassthrough: {\n    extensions: {\n      certificatePolicies: [{\n        certPolicyId: 'certPolicyId',\n\n        // the properties below are optional\n        policyQualifiers: [{\n          policyQualifierId: 'policyQualifierId',\n          qualifier: {\n            cpsUri: 'cpsUri',\n          },\n        }],\n      }],\n      customExtensions: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n\n        // the properties below are optional\n        critical: false,\n      }],\n      extendedKeyUsage: [{\n        extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n        extendedKeyUsageType: 'extendedKeyUsageType',\n      }],\n      keyUsage: {\n        crlSign: false,\n        dataEncipherment: false,\n        decipherOnly: false,\n        digitalSignature: false,\n        encipherOnly: false,\n        keyAgreement: false,\n        keyCertSign: false,\n        keyEncipherment: false,\n        nonRepudiation: false,\n      },\n      subjectAlternativeNames: [{\n        directoryName: {\n          commonName: 'commonName',\n          country: 'country',\n          customAttributes: [{\n            objectIdentifier: 'objectIdentifier',\n            value: 'value',\n          }],\n          distinguishedNameQualifier: 'distinguishedNameQualifier',\n          generationQualifier: 'generationQualifier',\n          givenName: 'givenName',\n          initials: 'initials',\n          locality: 'locality',\n          organization: 'organization',\n          organizationalUnit: 'organizationalUnit',\n          pseudonym: 'pseudonym',\n          serialNumber: 'serialNumber',\n          state: 'state',\n          surname: 'surname',\n          title: 'title',\n        },\n        dnsName: 'dnsName',\n        ediPartyName: {\n          nameAssigner: 'nameAssigner',\n          partyName: 'partyName',\n        },\n        ipAddress: 'ipAddress',\n        otherName: {\n          typeId: 'typeId',\n          value: 'value',\n        },\n        registeredId: 'registeredId',\n        rfc822Name: 'rfc822Name',\n        uniformResourceIdentifier: 'uniformResourceIdentifier',\n      }],\n    },\n    subject: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n  },\n  templateArn: 'templateArn',\n  validityNotBefore: {\n    type: 'type',\n    value: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ACMPCA::Certificate`."
        },
        "locationInModule": {
          "filename": "lib/acmpca.generated.ts",
          "line": 261
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-acmpca.CfnCertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 158
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 285
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 302
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCertificate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 162
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the issued certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 187
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Certificate"
            },
            "stability": "external",
            "summary": "The issued Base64 PEM-encoded certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 193
          },
          "name": "attrCertificate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 290
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for the private CA issues the certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 200
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-certificatesigningrequest"
            },
            "stability": "external",
            "summary": "The certificate signing request (CSR) for the certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 207
          },
          "name": "certificateSigningRequest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-signingalgorithm"
            },
            "remarks": "This parameter should not be confused with the `SigningAlgorithm` parameter used to sign a CSR in the `CreateCertificateAuthority` action.\n\n> The specified signing algorithm family (RSA or ECDSA) must match the algorithm family of the CA's secret key.",
            "stability": "external",
            "summary": "The name of the algorithm that will be used to sign the certificate to be issued."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 218
          },
          "name": "signingAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-validity"
            },
            "stability": "external",
            "summary": "The period of time during which the certificate will be valid."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 225
          },
          "name": "validity",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-apipassthrough"
            },
            "stability": "external",
            "summary": "Specifies X.509 certificate information to be included in the issued certificate. An `APIPassthrough` or `APICSRPassthrough` template variant must be selected, or else this parameter is ignored."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 232
          },
          "name": "apiPassthrough",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ApiPassthroughProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-templatearn"
            },
            "remarks": "If this parameter is not provided, AWS Private CA defaults to the `EndEntityCertificate/V1` template. For more information about AWS Private CA templates, see [Using Templates](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html) .",
            "stability": "external",
            "summary": "Specifies a custom configuration template to use when issuing a certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 239
          },
          "name": "templateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-validitynotbefore"
            },
            "remarks": "This parameter sets the “Not Before\" date for the certificate.\n\nBy default, when issuing a certificate, AWS Private CA sets the \"Not Before\" date to the issuance time minus 60 minutes. This compensates for clock inconsistencies across computer systems. The `ValidityNotBefore` parameter can be used to customize the “Not Before” value.\n\nUnlike the `Validity` parameter, the `ValidityNotBefore` parameter is optional.\n\nThe `ValidityNotBefore` value is expressed as an explicit date and time, using the `Validity` type value `ABSOLUTE` .",
            "stability": "external",
            "summary": "Information describing the start of the validity period of the certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 252
          },
          "name": "validityNotBefore",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.ApiPassthroughProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-apipassthrough.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "If conflicting or duplicate certificate information is supplied from other sources, AWS Private CA applies [order of operation rules](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html#template-order-of-operations) to determine what information is used.",
        "stability": "external",
        "summary": "Contains X.509 certificate information to be placed in an issued certificate. An `APIPassthrough` or `APICSRPassthrough` template variant must be selected, or else this parameter is ignored.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst apiPassthroughProperty: acmpca.CfnCertificate.ApiPassthroughProperty = {\n  extensions: {\n    certificatePolicies: [{\n      certPolicyId: 'certPolicyId',\n\n      // the properties below are optional\n      policyQualifiers: [{\n        policyQualifierId: 'policyQualifierId',\n        qualifier: {\n          cpsUri: 'cpsUri',\n        },\n      }],\n    }],\n    customExtensions: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n\n      // the properties below are optional\n      critical: false,\n    }],\n    extendedKeyUsage: [{\n      extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n      extendedKeyUsageType: 'extendedKeyUsageType',\n    }],\n    keyUsage: {\n      crlSign: false,\n      dataEncipherment: false,\n      decipherOnly: false,\n      digitalSignature: false,\n      encipherOnly: false,\n      keyAgreement: false,\n      keyCertSign: false,\n      keyEncipherment: false,\n      nonRepudiation: false,\n    },\n    subjectAlternativeNames: [{\n      directoryName: {\n        commonName: 'commonName',\n        country: 'country',\n        customAttributes: [{\n          objectIdentifier: 'objectIdentifier',\n          value: 'value',\n        }],\n        distinguishedNameQualifier: 'distinguishedNameQualifier',\n        generationQualifier: 'generationQualifier',\n        givenName: 'givenName',\n        initials: 'initials',\n        locality: 'locality',\n        organization: 'organization',\n        organizationalUnit: 'organizationalUnit',\n        pseudonym: 'pseudonym',\n        serialNumber: 'serialNumber',\n        state: 'state',\n        surname: 'surname',\n        title: 'title',\n      },\n      dnsName: 'dnsName',\n      ediPartyName: {\n        nameAssigner: 'nameAssigner',\n        partyName: 'partyName',\n      },\n      ipAddress: 'ipAddress',\n      otherName: {\n        typeId: 'typeId',\n        value: 'value',\n      },\n      registeredId: 'registeredId',\n      rfc822Name: 'rfc822Name',\n      uniformResourceIdentifier: 'uniformResourceIdentifier',\n    }],\n  },\n  subject: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ApiPassthroughProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 318
      },
      "name": "ApiPassthroughProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-apipassthrough.html#cfn-acmpca-certificate-apipassthrough-extensions"
            },
            "stability": "external",
            "summary": "Specifies X.509 extension information for a certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 324
          },
          "name": "extensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ExtensionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-apipassthrough.html#cfn-acmpca-certificate-apipassthrough-subject"
            },
            "remarks": "The Subject field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The Subject must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.",
            "stability": "external",
            "summary": "Contains information about the certificate subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 330
          },
          "name": "subject",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.SubjectProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.ApiPassthroughProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.CustomAttributeProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customattribute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines the X.500 relative distinguished name (RDN).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst customAttributeProperty: acmpca.CfnCertificate.CustomAttributeProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.CustomAttributeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 394
      },
      "name": "CustomAttributeProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customattribute.html#cfn-acmpca-certificate-customattribute-objectidentifier"
            },
            "stability": "external",
            "summary": "Specifies the object identifier (OID) of the attribute type of the relative distinguished name (RDN)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 400
          },
          "name": "objectIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customattribute.html#cfn-acmpca-certificate-customattribute-value"
            },
            "stability": "external",
            "summary": "Specifies the attribute value of relative distinguished name (RDN)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 406
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.CustomAttributeProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.CustomExtensionProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customextension.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Extensions present in `CustomExtensions` follow the `ApiPassthrough` [template rules](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html#template-order-of-operations) .",
        "stability": "external",
        "summary": "Specifies the X.509 extension information for a certificate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst customExtensionProperty: acmpca.CfnCertificate.CustomExtensionProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n\n  // the properties below are optional\n  critical: false,\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.CustomExtensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 474
      },
      "name": "CustomExtensionProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customextension.html#cfn-acmpca-certificate-customextension-objectidentifier"
            },
            "stability": "external",
            "summary": "Specifies the object identifier (OID) of the X.509 extension. For more information, see the [Global OID reference database.](https://docs.aws.amazon.com/https://oidref.com/2.5.29)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 486
          },
          "name": "objectIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customextension.html#cfn-acmpca-certificate-customextension-value"
            },
            "stability": "external",
            "summary": "Specifies the base64-encoded value of the X.509 extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 492
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-customextension.html#cfn-acmpca-certificate-customextension-critical"
            },
            "stability": "external",
            "summary": "Specifies the critical flag of the X.509 extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 480
          },
          "name": "critical",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.CustomExtensionProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.EdiPartyNameProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-edipartyname.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an Electronic Data Interchange (EDI) entity as described in as defined in [Subject Alternative Name](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280) in RFC 5280.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst ediPartyNameProperty: acmpca.CfnCertificate.EdiPartyNameProperty = {\n  nameAssigner: 'nameAssigner',\n  partyName: 'partyName',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.EdiPartyNameProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 561
      },
      "name": "EdiPartyNameProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-edipartyname.html#cfn-acmpca-certificate-edipartyname-nameassigner"
            },
            "stability": "external",
            "summary": "Specifies the name assigner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 567
          },
          "name": "nameAssigner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-edipartyname.html#cfn-acmpca-certificate-edipartyname-partyname"
            },
            "stability": "external",
            "summary": "Specifies the party name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 573
          },
          "name": "partyName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.EdiPartyNameProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.ExtendedKeyUsageProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extendedkeyusage.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies additional purposes for which the certified public key may be used other than basic purposes indicated in the `KeyUsage` extension.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst extendedKeyUsageProperty: acmpca.CfnCertificate.ExtendedKeyUsageProperty = {\n  extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n  extendedKeyUsageType: 'extendedKeyUsageType',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ExtendedKeyUsageProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 639
      },
      "name": "ExtendedKeyUsageProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extendedkeyusage.html#cfn-acmpca-certificate-extendedkeyusage-extendedkeyusageobjectidentifier"
            },
            "stability": "external",
            "summary": "Specifies a custom `ExtendedKeyUsage` with an object identifier (OID)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 645
          },
          "name": "extendedKeyUsageObjectIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extendedkeyusage.html#cfn-acmpca-certificate-extendedkeyusage-extendedkeyusagetype"
            },
            "stability": "external",
            "summary": "Specifies a standard `ExtendedKeyUsage` as defined as in [RFC 5280](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.12) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 651
          },
          "name": "extendedKeyUsageType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.ExtendedKeyUsageProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.ExtensionsProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains X.509 extension information for a certificate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst extensionsProperty: acmpca.CfnCertificate.ExtensionsProperty = {\n  certificatePolicies: [{\n    certPolicyId: 'certPolicyId',\n\n    // the properties below are optional\n    policyQualifiers: [{\n      policyQualifierId: 'policyQualifierId',\n      qualifier: {\n        cpsUri: 'cpsUri',\n      },\n    }],\n  }],\n  customExtensions: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n\n    // the properties below are optional\n    critical: false,\n  }],\n  extendedKeyUsage: [{\n    extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n    extendedKeyUsageType: 'extendedKeyUsageType',\n  }],\n  keyUsage: {\n    crlSign: false,\n    dataEncipherment: false,\n    decipherOnly: false,\n    digitalSignature: false,\n    encipherOnly: false,\n    keyAgreement: false,\n    keyCertSign: false,\n    keyEncipherment: false,\n    nonRepudiation: false,\n  },\n  subjectAlternativeNames: [{\n    directoryName: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n    dnsName: 'dnsName',\n    ediPartyName: {\n      nameAssigner: 'nameAssigner',\n      partyName: 'partyName',\n    },\n    ipAddress: 'ipAddress',\n    otherName: {\n      typeId: 'typeId',\n      value: 'value',\n    },\n    registeredId: 'registeredId',\n    rfc822Name: 'rfc822Name',\n    uniformResourceIdentifier: 'uniformResourceIdentifier',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ExtensionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 715
      },
      "name": "ExtensionsProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-certificatepolicies"
            },
            "remarks": "For more information, see NIST's definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) .\n\nIn an end-entity certificate, these terms indicate the policy under which the certificate was issued and the purposes for which it may be used. In a CA certificate, these terms limit the set of policies for certification paths that include this certificate.",
            "stability": "external",
            "summary": "Contains a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 723
          },
          "name": "certificatePolicies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.PolicyInformationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-customextensions"
            },
            "stability": "external",
            "summary": "Contains a sequence of one or more X.509 extensions, each of which consists of an object identifier (OID), a base64-encoded value, and the critical flag. For more information, see the [Global OID reference database.](https://docs.aws.amazon.com/https://oidref.com/2.5.29)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 729
          },
          "name": "customExtensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.CustomExtensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-extendedkeyusage"
            },
            "stability": "external",
            "summary": "Specifies additional purposes for which the certified public key may be used other than basic purposes indicated in the `KeyUsage` extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 735
          },
          "name": "extendedKeyUsage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ExtendedKeyUsageProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-keyusage"
            },
            "remarks": "Default value for each option is false.",
            "stability": "external",
            "summary": "Defines one or more purposes for which the key contained in the certificate can be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 741
          },
          "name": "keyUsage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.KeyUsageProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-subjectalternativenames"
            },
            "remarks": "These identities may be included in addition to or in place of the identity in the subject field of the certificate.",
            "stability": "external",
            "summary": "The subject alternative name extension allows identities to be bound to the subject of the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 747
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.GeneralNameProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.ExtensionsProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.GeneralNameProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an ASN.1 X.400 `GeneralName` as defined in [RFC 5280](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280) . Only one of the following naming options should be provided. Providing more than one option results in an `InvalidArgsException` error.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst generalNameProperty: acmpca.CfnCertificate.GeneralNameProperty = {\n  directoryName: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n  dnsName: 'dnsName',\n  ediPartyName: {\n    nameAssigner: 'nameAssigner',\n    partyName: 'partyName',\n  },\n  ipAddress: 'ipAddress',\n  otherName: {\n    typeId: 'typeId',\n    value: 'value',\n  },\n  registeredId: 'registeredId',\n  rfc822Name: 'rfc822Name',\n  uniformResourceIdentifier: 'uniformResourceIdentifier',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.GeneralNameProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 820
      },
      "name": "GeneralNameProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-directoryname"
            },
            "remarks": "The certificate can be one issued by your private certificate authority (CA) or it can be your private CA certificate. The Subject field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The Subject must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate. The DN must be unique for each entity, but your private CA can issue more than one certificate with the same DN to the same entity.",
            "stability": "external",
            "summary": "Contains information about the certificate subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 826
          },
          "name": "directoryName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.SubjectProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-dnsname"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as a DNS name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 832
          },
          "name": "dnsName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-edipartyname"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an `EdiPartyName` object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 838
          },
          "name": "ediPartyName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.EdiPartyNameProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-ipaddress"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an IPv4 or IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 844
          },
          "name": "ipAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-othername"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` using an `OtherName` object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 850
          },
          "name": "otherName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.OtherNameProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-registeredid"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an object identifier (OID)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 856
          },
          "name": "registeredId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-rfc822name"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an [RFC 822](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc822) email address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 862
          },
          "name": "rfc822Name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-generalname.html#cfn-acmpca-certificate-generalname-uniformresourceidentifier"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as a URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 868
          },
          "name": "uniformResourceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.GeneralNameProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.KeyUsageProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Default value for each option is false.",
        "stability": "external",
        "summary": "Defines one or more purposes for which the key contained in the certificate can be used.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst keyUsageProperty: acmpca.CfnCertificate.KeyUsageProperty = {\n  crlSign: false,\n  dataEncipherment: false,\n  decipherOnly: false,\n  digitalSignature: false,\n  encipherOnly: false,\n  keyAgreement: false,\n  keyCertSign: false,\n  keyEncipherment: false,\n  nonRepudiation: false,\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.KeyUsageProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 950
      },
      "name": "KeyUsageProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-crlsign"
            },
            "stability": "external",
            "summary": "Key can be used to sign CRLs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 956
          },
          "name": "crlSign",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-dataencipherment"
            },
            "stability": "external",
            "summary": "Key can be used to decipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 962
          },
          "name": "dataEncipherment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-decipheronly"
            },
            "stability": "external",
            "summary": "Key can be used only to decipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 968
          },
          "name": "decipherOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-digitalsignature"
            },
            "stability": "external",
            "summary": "Key can be used for digital signing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 974
          },
          "name": "digitalSignature",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-encipheronly"
            },
            "stability": "external",
            "summary": "Key can be used only to encipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 980
          },
          "name": "encipherOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-keyagreement"
            },
            "stability": "external",
            "summary": "Key can be used in a key-agreement protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 986
          },
          "name": "keyAgreement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-keycertsign"
            },
            "stability": "external",
            "summary": "Key can be used to sign certificates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 992
          },
          "name": "keyCertSign",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-keyencipherment"
            },
            "stability": "external",
            "summary": "Key can be used to encipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 998
          },
          "name": "keyEncipherment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-keyusage.html#cfn-acmpca-certificate-keyusage-nonrepudiation"
            },
            "stability": "external",
            "summary": "Key can be used for non-repudiation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1004
          },
          "name": "nonRepudiation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.KeyUsageProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.OtherNameProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-othername.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines a custom ASN.1 X.400 `GeneralName` using an object identifier (OID) and value. The OID must satisfy the regular expression shown below. For more information, see NIST's definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst otherNameProperty: acmpca.CfnCertificate.OtherNameProperty = {\n  typeId: 'typeId',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.OtherNameProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1089
      },
      "name": "OtherNameProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-othername.html#cfn-acmpca-certificate-othername-typeid"
            },
            "stability": "external",
            "summary": "Specifies an OID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1095
          },
          "name": "typeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-othername.html#cfn-acmpca-certificate-othername-value"
            },
            "stability": "external",
            "summary": "Specifies an OID value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1101
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.OtherNameProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.PolicyInformationProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-policyinformation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines the X.509 `CertificatePolicies` extension.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst policyInformationProperty: acmpca.CfnCertificate.PolicyInformationProperty = {\n  certPolicyId: 'certPolicyId',\n\n  // the properties below are optional\n  policyQualifiers: [{\n    policyQualifierId: 'policyQualifierId',\n    qualifier: {\n      cpsUri: 'cpsUri',\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.PolicyInformationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1167
      },
      "name": "PolicyInformationProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-policyinformation.html#cfn-acmpca-certificate-policyinformation-certpolicyid"
            },
            "remarks": "For more information, see NIST's definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) .",
            "stability": "external",
            "summary": "Specifies the object identifier (OID) of the certificate policy under which the certificate was issued."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1173
          },
          "name": "certPolicyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-policyinformation.html#cfn-acmpca-certificate-policyinformation-policyqualifiers"
            },
            "remarks": "AWS Private CA supports the certification practice statement (CPS) qualifier.",
            "stability": "external",
            "summary": "Modifies the given `CertPolicyId` with a qualifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1179
          },
          "name": "policyQualifiers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.PolicyQualifierInfoProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.PolicyInformationProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.PolicyQualifierInfoProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-policyqualifierinfo.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "AWS Private CA supports the certification practice statement (CPS) qualifier.",
        "stability": "external",
        "summary": "Modifies the `CertPolicyId` of a `PolicyInformation` object with a qualifier.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst policyQualifierInfoProperty: acmpca.CfnCertificate.PolicyQualifierInfoProperty = {\n  policyQualifierId: 'policyQualifierId',\n  qualifier: {\n    cpsUri: 'cpsUri',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.PolicyQualifierInfoProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1244
      },
      "name": "PolicyQualifierInfoProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-policyqualifierinfo.html#cfn-acmpca-certificate-policyqualifierinfo-policyqualifierid"
            },
            "stability": "external",
            "summary": "Identifies the qualifier modifying a `CertPolicyId` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1250
          },
          "name": "policyQualifierId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-policyqualifierinfo.html#cfn-acmpca-certificate-policyqualifierinfo-qualifier"
            },
            "remarks": "AWS Private CA supports the use of a URI for a CPS qualifier in this field.",
            "stability": "external",
            "summary": "Defines the qualifier type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1256
          },
          "name": "qualifier",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.QualifierProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.PolicyQualifierInfoProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.QualifierProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-qualifier.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "AWS Private CA supports the [certification practice statement (CPS) qualifier](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.4) defined in RFC 5280.",
        "stability": "external",
        "summary": "Defines a `PolicyInformation` qualifier.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst qualifierProperty: acmpca.CfnCertificate.QualifierProperty = {\n  cpsUri: 'cpsUri',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.QualifierProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1322
      },
      "name": "QualifierProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-qualifier.html#cfn-acmpca-certificate-qualifier-cpsuri"
            },
            "stability": "external",
            "summary": "Contains a pointer to a certification practice statement (CPS) published by the CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1328
          },
          "name": "cpsUri",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.QualifierProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.SubjectProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `Subject` field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The `Subject` must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.",
        "stability": "external",
        "summary": "Contains information about the certificate subject.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst subjectProperty: acmpca.CfnCertificate.SubjectProperty = {\n  commonName: 'commonName',\n  country: 'country',\n  customAttributes: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n  }],\n  distinguishedNameQualifier: 'distinguishedNameQualifier',\n  generationQualifier: 'generationQualifier',\n  givenName: 'givenName',\n  initials: 'initials',\n  locality: 'locality',\n  organization: 'organization',\n  organizationalUnit: 'organizationalUnit',\n  pseudonym: 'pseudonym',\n  serialNumber: 'serialNumber',\n  state: 'state',\n  surname: 'surname',\n  title: 'title',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.SubjectProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1390
      },
      "name": "SubjectProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-commonname"
            },
            "remarks": "Note: In publicly trusted certificates, the common name must be a fully qualified domain name (FQDN) associated with the certificate subject.",
            "stability": "external",
            "summary": "For CA and end-entity certificates in a private PKI, the common name (CN) can be any string within the length limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1398
          },
          "name": "commonName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-country"
            },
            "stability": "external",
            "summary": "Two-digit code that specifies the country in which the certificate subject located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1404
          },
          "name": "country",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-customattributes"
            },
            "remarks": "> Custom attributes cannot be used in combination with standard attributes.",
            "stability": "external",
            "summary": "Contains a sequence of one or more X.500 relative distinguished names (RDNs), each of which consists of an object identifier (OID) and a value. For more information, see NIST’s definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1412
          },
          "name": "customAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.CustomAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-distinguishednamequalifier"
            },
            "stability": "external",
            "summary": "Disambiguating information for the certificate subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1418
          },
          "name": "distinguishedNameQualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-generationqualifier"
            },
            "remarks": "Examples include Jr. for junior, Sr. for senior, and III for third.",
            "stability": "external",
            "summary": "Typically a qualifier appended to the name of an individual."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1424
          },
          "name": "generationQualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-givenname"
            },
            "stability": "external",
            "summary": "First name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1430
          },
          "name": "givenName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-initials"
            },
            "stability": "external",
            "summary": "Concatenation that typically contains the first letter of the *GivenName* , the first letter of the middle name if one exists, and the first letter of the *Surname* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1436
          },
          "name": "initials",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-locality"
            },
            "stability": "external",
            "summary": "The locality (such as a city or town) in which the certificate subject is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1442
          },
          "name": "locality",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-organization"
            },
            "stability": "external",
            "summary": "Legal name of the organization with which the certificate subject is affiliated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1448
          },
          "name": "organization",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-organizationalunit"
            },
            "stability": "external",
            "summary": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1454
          },
          "name": "organizationalUnit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-pseudonym"
            },
            "remarks": "For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
            "stability": "external",
            "summary": "Typically a shortened version of a longer *GivenName* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1460
          },
          "name": "pseudonym",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-serialnumber"
            },
            "stability": "external",
            "summary": "The certificate serial number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1466
          },
          "name": "serialNumber",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-state"
            },
            "stability": "external",
            "summary": "State in which the subject of the certificate is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1472
          },
          "name": "state",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-surname"
            },
            "remarks": "In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.",
            "stability": "external",
            "summary": "Family name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1478
          },
          "name": "surname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-subject.html#cfn-acmpca-certificate-subject-title"
            },
            "remarks": "or Ms., which is pre-pended to the name to refer formally to the certificate subject.",
            "stability": "external",
            "summary": "A title such as Mr."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1484
          },
          "name": "title",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.SubjectProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-validity.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can issue a certificate by calling the `IssueCertificate` operation.",
        "stability": "external",
        "summary": "Length of time for which the certificate issued by your private certificate authority (CA), or by the private CA itself, is valid in days, months, or years.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst validityProperty: acmpca.CfnCertificate.ValidityProperty = {\n  type: 'type',\n  value: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1587
      },
      "name": "ValidityProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-validity.html#cfn-acmpca-certificate-validity-type"
            },
            "stability": "external",
            "summary": "Specifies whether the `Value` parameter represents days, months, or years."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1593
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-validity.html#cfn-acmpca-certificate-validity-value"
            },
            "stability": "external",
            "summary": "A long integer interpreted according to the value of `Type` , below."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1599
          },
          "name": "value",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificate.ValidityProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority": {
      "assembly": "@aws-cdk/aws-acmpca",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ACMPCA::CertificateAuthority",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html",
          "exampleMetadata": "infused"
        },
        "remarks": "Use the `AWS::ACMPCA::CertificateAuthority` resource to create a private CA. Once the CA exists, you can use the `AWS::ACMPCA::Certificate` resource to issue a new CA certificate. Alternatively, you can issue a CA certificate using an on-premises CA, and then use the `AWS::ACMPCA::CertificateAuthorityActivation` resource to import the new CA certificate and activate the CA.\n\n> Before removing a `AWS::ACMPCA::CertificateAuthority` resource from the CloudFormation stack, disable the affected CA. Otherwise, the action will fail. You can disable the CA by removing its associated `AWS::ACMPCA::CertificateAuthorityActivation` resource from CloudFormation.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ACMPCA::CertificateAuthority`.",
        "example": "const cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ACMPCA::CertificateAuthority`."
        },
        "locationInModule": {
          "filename": "lib/acmpca.generated.ts",
          "line": 1956
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1832
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1982
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2001
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCertificateAuthority",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1836
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for the private CA that issued the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1861
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateSigningRequest"
            },
            "stability": "external",
            "summary": "The Base64 PEM-encoded certificate signing request (CSR) for your certificate authority certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1867
          },
          "name": "attrCertificateSigningRequest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1987
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-tags"
            },
            "remarks": "You can associate up to 50 tags with a private CA. For information using tags with IAM to manage permissions, see [Controlling Access Using IAM Tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html) .",
            "stability": "external",
            "summary": "Key-value pairs that will be attached to the new private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1938
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-keyalgorithm"
            },
            "remarks": "When you create a subordinate CA, you must use a key algorithm supported by the parent CA.",
            "stability": "external",
            "summary": "Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1874
          },
          "name": "keyAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-signingalgorithm"
            },
            "remarks": "This parameter should not be confused with the `SigningAlgorithm` parameter used to sign certificates when they are issued.",
            "stability": "external",
            "summary": "Name of the algorithm your private CA uses to sign certificate requests."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1883
          },
          "name": "signingAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-subject"
            },
            "stability": "external",
            "summary": "Structure that contains X.500 distinguished name information for your private CA."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1890
          },
          "name": "subject",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-type"
            },
            "stability": "external",
            "summary": "Type of your private CA."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1897
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-csrextensions"
            },
            "stability": "external",
            "summary": "Specifies information to be added to the extension section of the certificate signing request (CSR)."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1904
          },
          "name": "csrExtensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CsrExtensionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-keystoragesecuritystandard"
            },
            "remarks": "Default: FIPS_140_2_LEVEL_3_OR_HIGHER\n\n> Some AWS Regions do not support the default. When creating a CA in these Regions, you must provide `FIPS_140_2_LEVEL_2_OR_HIGHER` as the argument for `KeyStorageSecurityStandard` . Failure to do this results in an `InvalidArgsException` with the message, \"A certificate authority cannot be created in this region with the specified security standard.\"\n>\n> For information about security standard support in various Regions, see [Storage and security compliance of AWS Private CA private keys](https://docs.aws.amazon.com/privateca/latest/userguide/data-protection.html#private-keys) .",
            "stability": "external",
            "summary": "Specifies a cryptographic key management compliance standard used for handling CA keys."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1917
          },
          "name": "keyStorageSecurityStandard",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-revocationconfiguration"
            },
            "remarks": "> The following requirements apply to revocation configurations.\n>\n> - A configuration disabling CRLs or OCSP must contain only the `Enabled=False` parameter, and will fail if other parameters such as `CustomCname` or `ExpirationInDays` are included.\n> - In a CRL configuration, the `S3BucketName` parameter must conform to the [Amazon S3 bucket naming rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) .\n> - A configuration containing a custom Canonical Name (CNAME) parameter for CRLs or OCSP must conform to [RFC2396](https://docs.aws.amazon.com/https://www.ietf.org/rfc/rfc2396.txt) restrictions on the use of special characters in a CNAME.\n> - In a CRL or OCSP configuration, the value of a CNAME parameter must not include a protocol prefix such as \"http://\" or \"https://\".",
            "stability": "external",
            "summary": "Certificate revocation information used by the [CreateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html) and [UpdateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html) actions. Your private certificate authority (CA) can configure Online Certificate Status Protocol (OCSP) support and/or maintain a certificate revocation list (CRL). OCSP returns validation information about certificates as requested by clients, and a CRL contains an updated list of certificates revoked by your CA. For more information, see [RevokeCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_RevokeCertificate.html) in the *AWS Private CA API Reference* and [Setting up a certificate revocation method](https://docs.aws.amazon.com/privateca/latest/userguide/revocation-setup.html) in the *AWS Private CA User Guide* ."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1931
          },
          "name": "revocationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.RevocationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-usagemode"
            },
            "remarks": "Short-lived certificate validity is limited to seven days.\n\nThe default value is GENERAL_PURPOSE.",
            "stability": "external",
            "summary": "Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1947
          },
          "name": "usageMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessDescriptionProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-accessdescription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Provides access information used by the `authorityInfoAccess` and `subjectInfoAccess` extensions described in [RFC 5280](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst accessDescriptionProperty: acmpca.CfnCertificateAuthority.AccessDescriptionProperty = {\n  accessLocation: {\n    directoryName: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n    dnsName: 'dnsName',\n    ediPartyName: {\n      nameAssigner: 'nameAssigner',\n      partyName: 'partyName',\n    },\n    ipAddress: 'ipAddress',\n    otherName: {\n      typeId: 'typeId',\n      value: 'value',\n    },\n    registeredId: 'registeredId',\n    rfc822Name: 'rfc822Name',\n    uniformResourceIdentifier: 'uniformResourceIdentifier',\n  },\n  accessMethod: {\n    accessMethodType: 'accessMethodType',\n    customObjectIdentifier: 'customObjectIdentifier',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessDescriptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2015
      },
      "name": "AccessDescriptionProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-accessdescription.html#cfn-acmpca-certificateauthority-accessdescription-accesslocation"
            },
            "stability": "external",
            "summary": "The location of `AccessDescription` information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2021
          },
          "name": "accessLocation",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.GeneralNameProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-accessdescription.html#cfn-acmpca-certificateauthority-accessdescription-accessmethod"
            },
            "stability": "external",
            "summary": "The type and format of `AccessDescription` information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2027
          },
          "name": "accessMethod",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessMethodProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.AccessDescriptionProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessMethodProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-accessmethod.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Only one of `CustomObjectIdentifier` or `AccessMethodType` may be provided. Providing both results in `InvalidArgsException` .",
        "stability": "external",
        "summary": "Describes the type and format of extension access.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst accessMethodProperty: acmpca.CfnCertificateAuthority.AccessMethodProperty = {\n  accessMethodType: 'accessMethodType',\n  customObjectIdentifier: 'customObjectIdentifier',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessMethodProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2093
      },
      "name": "AccessMethodProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-accessmethod.html#cfn-acmpca-certificateauthority-accessmethod-accessmethodtype"
            },
            "stability": "external",
            "summary": "Specifies the `AccessMethod` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2099
          },
          "name": "accessMethodType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-accessmethod.html#cfn-acmpca-certificateauthority-accessmethod-customobjectidentifier"
            },
            "remarks": "The OID must satisfy the regular expression shown below. For more information, see NIST's definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) .",
            "stability": "external",
            "summary": "An object identifier (OID) specifying the `AccessMethod` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2105
          },
          "name": "customObjectIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.AccessMethodProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CrlConfigurationProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-crlconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Your private certificate authority (CA) creates base CRLs. Delta CRLs are not supported. You can enable CRLs for your new or an existing private CA by setting the *Enabled* parameter to `true` . Your private CA writes CRLs to an S3 bucket that you specify in the *S3BucketName* parameter. You can hide the name of your bucket by specifying a value for the *CustomCname* parameter. Your private CA copies the CNAME or the S3 bucket name to the *CRL Distribution Points* extension of each certificate it issues. Your S3 bucket policy must give write permission to AWS Private CA.\n\nAWS Private CA assets that are stored in Amazon S3 can be protected with encryption. For more information, see [Encrypting Your CRLs](https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#crl-encryption) .\n\nYour private CA uses the value in the *ExpirationInDays* parameter to calculate the *nextUpdate* field in the CRL. The CRL is refreshed prior to a certificate's expiration date or when a certificate is revoked. When a certificate is revoked, it appears in the CRL until the certificate expires, and then in one additional CRL after expiration, and it always appears in the audit report.\n\nA CRL is typically updated approximately 30 minutes after a certificate is revoked. If for any reason a CRL update fails, AWS Private CA makes further attempts every 15 minutes.\n\nCRLs contain the following fields:\n\n- *Version* : The current version number defined in RFC 5280 is V2. The integer value is 0x1.\n- *Signature Algorithm* : The name of the algorithm used to sign the CRL.\n- *Issuer* : The X.500 distinguished name of your private CA that issued the CRL.\n- *Last Update* : The issue date and time of this CRL.\n- *Next Update* : The day and time by which the next CRL will be issued.\n- *Revoked Certificates* : List of revoked certificates. Each list item contains the following information.\n\n- *Serial Number* : The serial number, in hexadecimal format, of the revoked certificate.\n- *Revocation Date* : Date and time the certificate was revoked.\n- *CRL Entry Extensions* : Optional extensions for the CRL entry.\n\n- *X509v3 CRL Reason Code* : Reason the certificate was revoked.\n- *CRL Extensions* : Optional extensions for the CRL.\n\n- *X509v3 Authority Key Identifier* : Identifies the public key associated with the private key used to sign the certificate.\n- *X509v3 CRL Number:* : Decimal sequence number for the CRL.\n- *Signature Algorithm* : Algorithm used by your private CA to sign the CRL.\n- *Signature Value* : Signature computed over the CRL.\n\nCertificate revocation lists created by AWS Private CA are DER-encoded. You can use the following OpenSSL command to list a CRL.\n\n`openssl crl -inform DER -text -in *crl_path* -noout`\n\nFor more information, see [Planning a certificate revocation list (CRL)](https://docs.aws.amazon.com/privateca/latest/userguide/crl-planning.html) in the *AWS Private Certificate Authority User Guide*",
        "stability": "external",
        "summary": "Contains configuration information for a certificate revocation list (CRL).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst crlConfigurationProperty: acmpca.CfnCertificateAuthority.CrlConfigurationProperty = {\n  customCname: 'customCname',\n  enabled: false,\n  expirationInDays: 123,\n  s3BucketName: 's3BucketName',\n  s3ObjectAcl: 's3ObjectAcl',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CrlConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2202
      },
      "name": "CrlConfigurationProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-crlconfiguration.html#cfn-acmpca-certificateauthority-crlconfiguration-customcname"
            },
            "remarks": "Use this value if you don't want the name of your S3 bucket to be public.\n\n> The content of a Canonical Name (CNAME) record must conform to [RFC2396](https://docs.aws.amazon.com/https://www.ietf.org/rfc/rfc2396.txt) restrictions on the use of special characters in URIs. Additionally, the value of the CNAME must not include a protocol prefix such as \"http://\" or \"https://\".",
            "stability": "external",
            "summary": "Name inserted into the certificate *CRL Distribution Points* extension that enables the use of an alias for the CRL distribution point."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2210
          },
          "name": "customCname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-crlconfiguration.html#cfn-acmpca-certificateauthority-crlconfiguration-enabled"
            },
            "remarks": "You can use this value to enable certificate revocation for a new CA when you call the `CreateCertificateAuthority` operation or for an existing CA when you call the `UpdateCertificateAuthority` operation.",
            "stability": "external",
            "summary": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2216
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-crlconfiguration.html#cfn-acmpca-certificateauthority-crlconfiguration-expirationindays"
            },
            "stability": "external",
            "summary": "Validity period of the CRL in days."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2222
          },
          "name": "expirationInDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-crlconfiguration.html#cfn-acmpca-certificateauthority-crlconfiguration-s3bucketname"
            },
            "remarks": "If you do not provide a value for the *CustomCname* argument, the name of your S3 bucket is placed into the *CRL Distribution Points* extension of the issued certificate. You can change the name of your bucket by calling the [UpdateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html) operation. You must specify a [bucket policy](https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#s3-policies) that allows AWS Private CA to write the CRL to your bucket.\n\n> The `S3BucketName` parameter must conform to the [S3 bucket naming rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) .",
            "stability": "external",
            "summary": "Name of the S3 bucket that contains the CRL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2230
          },
          "name": "s3BucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-crlconfiguration.html#cfn-acmpca-certificateauthority-crlconfiguration-s3objectacl"
            },
            "remarks": "If you choose PUBLIC_READ, the CRL will be accessible over the public internet. If you choose BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can access the CRL, and your PKI clients may need an alternative method of access.\n\nIf no value is specified, the default is PUBLIC_READ.\n\n*Note:* This default can cause CA creation to fail in some circumstances. If you have have enabled the Block Public Access (BPA) feature in your S3 account, then you must specify the value of this parameter as `BUCKET_OWNER_FULL_CONTROL` , and not doing so results in an error. If you have disabled BPA in S3, then you can specify either `BUCKET_OWNER_FULL_CONTROL` or `PUBLIC_READ` as the value.\n\nFor more information, see [Blocking public access to the S3 bucket](https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#s3-bpa) .",
            "stability": "external",
            "summary": "Determines whether the CRL will be publicly readable or privately held in the CRL Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2242
          },
          "name": "s3ObjectAcl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.CrlConfigurationProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CsrExtensionsProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-csrextensions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the certificate extensions to be added to the certificate signing request (CSR).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst csrExtensionsProperty: acmpca.CfnCertificateAuthority.CsrExtensionsProperty = {\n  keyUsage: {\n    crlSign: false,\n    dataEncipherment: false,\n    decipherOnly: false,\n    digitalSignature: false,\n    encipherOnly: false,\n    keyAgreement: false,\n    keyCertSign: false,\n    keyEncipherment: false,\n    nonRepudiation: false,\n  },\n  subjectInformationAccess: [{\n    accessLocation: {\n      directoryName: {\n        commonName: 'commonName',\n        country: 'country',\n        customAttributes: [{\n          objectIdentifier: 'objectIdentifier',\n          value: 'value',\n        }],\n        distinguishedNameQualifier: 'distinguishedNameQualifier',\n        generationQualifier: 'generationQualifier',\n        givenName: 'givenName',\n        initials: 'initials',\n        locality: 'locality',\n        organization: 'organization',\n        organizationalUnit: 'organizationalUnit',\n        pseudonym: 'pseudonym',\n        serialNumber: 'serialNumber',\n        state: 'state',\n        surname: 'surname',\n        title: 'title',\n      },\n      dnsName: 'dnsName',\n      ediPartyName: {\n        nameAssigner: 'nameAssigner',\n        partyName: 'partyName',\n      },\n      ipAddress: 'ipAddress',\n      otherName: {\n        typeId: 'typeId',\n        value: 'value',\n      },\n      registeredId: 'registeredId',\n      rfc822Name: 'rfc822Name',\n      uniformResourceIdentifier: 'uniformResourceIdentifier',\n    },\n    accessMethod: {\n      accessMethodType: 'accessMethodType',\n      customObjectIdentifier: 'customObjectIdentifier',\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CsrExtensionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2315
      },
      "name": "CsrExtensionsProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-csrextensions.html#cfn-acmpca-certificateauthority-csrextensions-keyusage"
            },
            "stability": "external",
            "summary": "Indicates the purpose of the certificate and of the key contained in the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2321
          },
          "name": "keyUsage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.KeyUsageProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-csrextensions.html#cfn-acmpca-certificateauthority-csrextensions-subjectinformationaccess"
            },
            "remarks": "For more information, see [Subject Information Access](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.2) in RFC 5280.",
            "stability": "external",
            "summary": "For CA certificates, provides a path to additional information pertaining to the CA, such as revocation and policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2327
          },
          "name": "subjectInformationAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessDescriptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.CsrExtensionsProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CustomAttributeProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-customattribute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines the X.500 relative distinguished name (RDN).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst customAttributeProperty: acmpca.CfnCertificateAuthority.CustomAttributeProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CustomAttributeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2391
      },
      "name": "CustomAttributeProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-customattribute.html#cfn-acmpca-certificateauthority-customattribute-objectidentifier"
            },
            "stability": "external",
            "summary": "Specifies the object identifier (OID) of the attribute type of the relative distinguished name (RDN)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2397
          },
          "name": "objectIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-customattribute.html#cfn-acmpca-certificateauthority-customattribute-value"
            },
            "stability": "external",
            "summary": "Specifies the attribute value of relative distinguished name (RDN)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2403
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.CustomAttributeProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.EdiPartyNameProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-edipartyname.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an Electronic Data Interchange (EDI) entity as described in as defined in [Subject Alternative Name](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280) in RFC 5280.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst ediPartyNameProperty: acmpca.CfnCertificateAuthority.EdiPartyNameProperty = {\n  nameAssigner: 'nameAssigner',\n  partyName: 'partyName',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.EdiPartyNameProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2469
      },
      "name": "EdiPartyNameProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-edipartyname.html#cfn-acmpca-certificateauthority-edipartyname-nameassigner"
            },
            "stability": "external",
            "summary": "Specifies the name assigner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2475
          },
          "name": "nameAssigner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-edipartyname.html#cfn-acmpca-certificateauthority-edipartyname-partyname"
            },
            "stability": "external",
            "summary": "Specifies the party name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2481
          },
          "name": "partyName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.EdiPartyNameProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.GeneralNameProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an ASN.1 X.400 `GeneralName` as defined in [RFC 5280](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc5280) . Only one of the following naming options should be provided. Providing more than one option results in an `InvalidArgsException` error.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst generalNameProperty: acmpca.CfnCertificateAuthority.GeneralNameProperty = {\n  directoryName: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n  dnsName: 'dnsName',\n  ediPartyName: {\n    nameAssigner: 'nameAssigner',\n    partyName: 'partyName',\n  },\n  ipAddress: 'ipAddress',\n  otherName: {\n    typeId: 'typeId',\n    value: 'value',\n  },\n  registeredId: 'registeredId',\n  rfc822Name: 'rfc822Name',\n  uniformResourceIdentifier: 'uniformResourceIdentifier',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.GeneralNameProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2547
      },
      "name": "GeneralNameProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-directoryname"
            },
            "remarks": "The certificate can be one issued by your private certificate authority (CA) or it can be your private CA certificate. The Subject field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The Subject must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate. The DN must be unique for each entity, but your private CA can issue more than one certificate with the same DN to the same entity.",
            "stability": "external",
            "summary": "Contains information about the certificate subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2553
          },
          "name": "directoryName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-dnsname"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as a DNS name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2559
          },
          "name": "dnsName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-edipartyname"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an `EdiPartyName` object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2565
          },
          "name": "ediPartyName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.EdiPartyNameProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-ipaddress"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an IPv4 or IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2571
          },
          "name": "ipAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-othername"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` using an `OtherName` object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2577
          },
          "name": "otherName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.OtherNameProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-registeredid"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an object identifier (OID)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2583
          },
          "name": "registeredId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-rfc822name"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as an [RFC 822](https://docs.aws.amazon.com/https://datatracker.ietf.org/doc/html/rfc822) email address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2589
          },
          "name": "rfc822Name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-generalname.html#cfn-acmpca-certificateauthority-generalname-uniformresourceidentifier"
            },
            "stability": "external",
            "summary": "Represents `GeneralName` as a URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2595
          },
          "name": "uniformResourceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.GeneralNameProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.KeyUsageProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Default value for each option is false.",
        "stability": "external",
        "summary": "Defines one or more purposes for which the key contained in the certificate can be used.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst keyUsageProperty: acmpca.CfnCertificateAuthority.KeyUsageProperty = {\n  crlSign: false,\n  dataEncipherment: false,\n  decipherOnly: false,\n  digitalSignature: false,\n  encipherOnly: false,\n  keyAgreement: false,\n  keyCertSign: false,\n  keyEncipherment: false,\n  nonRepudiation: false,\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.KeyUsageProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2677
      },
      "name": "KeyUsageProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-crlsign"
            },
            "stability": "external",
            "summary": "Key can be used to sign CRLs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2683
          },
          "name": "crlSign",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-dataencipherment"
            },
            "stability": "external",
            "summary": "Key can be used to decipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2689
          },
          "name": "dataEncipherment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-decipheronly"
            },
            "stability": "external",
            "summary": "Key can be used only to decipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2695
          },
          "name": "decipherOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-digitalsignature"
            },
            "stability": "external",
            "summary": "Key can be used for digital signing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2701
          },
          "name": "digitalSignature",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-encipheronly"
            },
            "stability": "external",
            "summary": "Key can be used only to encipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2707
          },
          "name": "encipherOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-keyagreement"
            },
            "stability": "external",
            "summary": "Key can be used in a key-agreement protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2713
          },
          "name": "keyAgreement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-keycertsign"
            },
            "stability": "external",
            "summary": "Key can be used to sign certificates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2719
          },
          "name": "keyCertSign",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-keyencipherment"
            },
            "stability": "external",
            "summary": "Key can be used to encipher data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2725
          },
          "name": "keyEncipherment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-keyusage.html#cfn-acmpca-certificateauthority-keyusage-nonrepudiation"
            },
            "stability": "external",
            "summary": "Key can be used for non-repudiation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2731
          },
          "name": "nonRepudiation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.KeyUsageProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.OcspConfigurationProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-ocspconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains information to enable and configure Online Certificate Status Protocol (OCSP) for validating certificate revocation status.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst ocspConfigurationProperty: acmpca.CfnCertificateAuthority.OcspConfigurationProperty = {\n  enabled: false,\n  ocspCustomCname: 'ocspCustomCname',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.OcspConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2816
      },
      "name": "OcspConfigurationProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-ocspconfiguration.html#cfn-acmpca-certificateauthority-ocspconfiguration-enabled"
            },
            "stability": "external",
            "summary": "Flag enabling use of the Online Certificate Status Protocol (OCSP) for validating certificate revocation status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2822
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-ocspconfiguration.html#cfn-acmpca-certificateauthority-ocspconfiguration-ocspcustomcname"
            },
            "remarks": "A customer can alternatively use this object to define a CNAME specifying a customized OCSP domain.\n\n> The content of a Canonical Name (CNAME) record must conform to [RFC2396](https://docs.aws.amazon.com/https://www.ietf.org/rfc/rfc2396.txt) restrictions on the use of special characters in URIs. Additionally, the value of the CNAME must not include a protocol prefix such as \"http://\" or \"https://\".",
            "stability": "external",
            "summary": "By default, AWS Private CA injects an Amazon domain into certificates being validated by the Online Certificate Status Protocol (OCSP)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2830
          },
          "name": "ocspCustomCname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.OcspConfigurationProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.OtherNameProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-othername.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines a custom ASN.1 X.400 `GeneralName` using an object identifier (OID) and value. The OID must satisfy the regular expression shown below. For more information, see NIST's definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst otherNameProperty: acmpca.CfnCertificateAuthority.OtherNameProperty = {\n  typeId: 'typeId',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.OtherNameProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2894
      },
      "name": "OtherNameProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-othername.html#cfn-acmpca-certificateauthority-othername-typeid"
            },
            "stability": "external",
            "summary": "Specifies an OID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2900
          },
          "name": "typeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-othername.html#cfn-acmpca-certificateauthority-othername-value"
            },
            "stability": "external",
            "summary": "Specifies an OID value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2906
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.OtherNameProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.RevocationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-revocationconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> The following requirements apply to revocation configurations.\n>\n> - A configuration disabling CRLs or OCSP must contain only the `Enabled=False` parameter, and will fail if other parameters such as `CustomCname` or `ExpirationInDays` are included.\n> - In a CRL configuration, the `S3BucketName` parameter must conform to the [Amazon S3 bucket naming rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) .\n> - A configuration containing a custom Canonical Name (CNAME) parameter for CRLs or OCSP must conform to [RFC2396](https://docs.aws.amazon.com/https://www.ietf.org/rfc/rfc2396.txt) restrictions on the use of special characters in a CNAME.\n> - In a CRL or OCSP configuration, the value of a CNAME parameter must not include a protocol prefix such as \"http://\" or \"https://\".",
        "stability": "external",
        "summary": "Certificate revocation information used by the [CreateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html) and [UpdateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html) actions. Your private certificate authority (CA) can configure Online Certificate Status Protocol (OCSP) support and/or maintain a certificate revocation list (CRL). OCSP returns validation information about certificates as requested by clients, and a CRL contains an updated list of certificates revoked by your CA. For more information, see [RevokeCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_RevokeCertificate.html) in the *AWS Private CA API Reference* and [Setting up a certificate revocation method](https://docs.aws.amazon.com/privateca/latest/userguide/revocation-setup.html) in the *AWS Private CA User Guide* .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst revocationConfigurationProperty: acmpca.CfnCertificateAuthority.RevocationConfigurationProperty = {\n  crlConfiguration: {\n    customCname: 'customCname',\n    enabled: false,\n    expirationInDays: 123,\n    s3BucketName: 's3BucketName',\n    s3ObjectAcl: 's3ObjectAcl',\n  },\n  ocspConfiguration: {\n    enabled: false,\n    ocspCustomCname: 'ocspCustomCname',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.RevocationConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 2979
      },
      "name": "RevocationConfigurationProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-revocationconfiguration.html#cfn-acmpca-certificateauthority-revocationconfiguration-crlconfiguration"
            },
            "stability": "external",
            "summary": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2985
          },
          "name": "crlConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CrlConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-revocationconfiguration.html#cfn-acmpca-certificateauthority-revocationconfiguration-ocspconfiguration"
            },
            "stability": "external",
            "summary": "Configuration of Online Certificate Status Protocol (OCSP) support, if any, maintained by your private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 2991
          },
          "name": "ocspConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.OcspConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.RevocationConfigurationProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "ASN1 subject for the certificate authority.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst subjectProperty: acmpca.CfnCertificateAuthority.SubjectProperty = {\n  commonName: 'commonName',\n  country: 'country',\n  customAttributes: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n  }],\n  distinguishedNameQualifier: 'distinguishedNameQualifier',\n  generationQualifier: 'generationQualifier',\n  givenName: 'givenName',\n  initials: 'initials',\n  locality: 'locality',\n  organization: 'organization',\n  organizationalUnit: 'organizationalUnit',\n  pseudonym: 'pseudonym',\n  serialNumber: 'serialNumber',\n  state: 'state',\n  surname: 'surname',\n  title: 'title',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 3055
      },
      "name": "SubjectProperty",
      "namespace": "CfnCertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-commonname"
            },
            "stability": "external",
            "summary": "Fully qualified domain name (FQDN) associated with the certificate subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3061
          },
          "name": "commonName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-country"
            },
            "stability": "external",
            "summary": "Two-digit code that specifies the country in which the certificate subject located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3067
          },
          "name": "country",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-customattributes"
            },
            "remarks": "> Custom attributes cannot be used in combination with standard attributes.",
            "stability": "external",
            "summary": "Contains a sequence of one or more X.500 relative distinguished names (RDNs), each of which consists of an object identifier (OID) and a value. For more information, see NIST’s definition of [Object Identifier (OID)](https://docs.aws.amazon.com/https://csrc.nist.gov/glossary/term/Object_Identifier) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3075
          },
          "name": "customAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CustomAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-distinguishednamequalifier"
            },
            "stability": "external",
            "summary": "Disambiguating information for the certificate subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3081
          },
          "name": "distinguishedNameQualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-generationqualifier"
            },
            "remarks": "Examples include Jr. for junior, Sr. for senior, and III for third.",
            "stability": "external",
            "summary": "Typically a qualifier appended to the name of an individual."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3087
          },
          "name": "generationQualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-givenname"
            },
            "stability": "external",
            "summary": "First name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3093
          },
          "name": "givenName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-initials"
            },
            "stability": "external",
            "summary": "Concatenation that typically contains the first letter of the GivenName, the first letter of the middle name if one exists, and the first letter of the SurName."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3099
          },
          "name": "initials",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-locality"
            },
            "stability": "external",
            "summary": "The locality (such as a city or town) in which the certificate subject is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3105
          },
          "name": "locality",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-organization"
            },
            "stability": "external",
            "summary": "Legal name of the organization with which the certificate subject is affiliated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3111
          },
          "name": "organization",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-organizationalunit"
            },
            "stability": "external",
            "summary": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3117
          },
          "name": "organizationalUnit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-pseudonym"
            },
            "remarks": "For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.",
            "stability": "external",
            "summary": "Typically a shortened version of a longer GivenName."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3123
          },
          "name": "pseudonym",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-serialnumber"
            },
            "stability": "external",
            "summary": "The certificate serial number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3129
          },
          "name": "serialNumber",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-state"
            },
            "stability": "external",
            "summary": "State in which the subject of the certificate is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3135
          },
          "name": "state",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-surname"
            },
            "stability": "external",
            "summary": "Family name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3141
          },
          "name": "surname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificateauthority-subject.html#cfn-acmpca-certificateauthority-subject-title"
            },
            "stability": "external",
            "summary": "A personal title such as Mr."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3147
          },
          "name": "title",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthority.SubjectProperty"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivation": {
      "assembly": "@aws-cdk/aws-acmpca",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ACMPCA::CertificateAuthorityActivation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::ACMPCA::CertificateAuthorityActivation` resource creates and installs a CA certificate on a CA. If no status is specified, the `AWS::ACMPCA::CertificateAuthorityActivation` resource status defaults to ACTIVE. Once the CA has a CA certificate installed, you can use the resource to toggle the CA status field between `ACTIVE` and `DISABLED` .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ACMPCA::CertificateAuthorityActivation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificateAuthorityActivation = new acmpca.CfnCertificateAuthorityActivation(this, 'MyCfnCertificateAuthorityActivation', {\n  certificate: 'certificate',\n  certificateAuthorityArn: 'certificateAuthorityArn',\n\n  // the properties below are optional\n  certificateChain: 'certificateChain',\n  status: 'status',\n});"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ACMPCA::CertificateAuthorityActivation`."
        },
        "locationInModule": {
          "filename": "lib/acmpca.generated.ts",
          "line": 3412
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 3346
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3430
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3444
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCertificateAuthorityActivation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3350
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CompleteCertificateChain"
            },
            "stability": "external",
            "summary": "The complete Base64 PEM-encoded certificate chain, including the certificate authority certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3375
          },
          "name": "attrCompleteCertificateChain",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3435
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificate"
            },
            "stability": "external",
            "summary": "The Base64 PEM-encoded certificate authority certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3382
          },
          "name": "certificate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of your private CA."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3389
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificatechain"
            },
            "stability": "external",
            "summary": "The Base64 PEM-encoded certificate chain that chains up to the root CA certificate that you used to sign your private CA certificate."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3396
          },
          "name": "certificateChain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-status"
            },
            "stability": "external",
            "summary": "Status of your private CA."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3403
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthorityActivation"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivationProps": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCertificateAuthorityActivation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificateAuthorityActivationProps: acmpca.CfnCertificateAuthorityActivationProps = {\n  certificate: 'certificate',\n  certificateAuthorityArn: 'certificateAuthorityArn',\n\n  // the properties below are optional\n  certificateChain: 'certificateChain',\n  status: 'status',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 3249
      },
      "name": "CfnCertificateAuthorityActivationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificate"
            },
            "stability": "external",
            "summary": "The Base64 PEM-encoded certificate authority certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3256
          },
          "name": "certificate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of your private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3263
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificatechain"
            },
            "stability": "external",
            "summary": "The Base64 PEM-encoded certificate chain that chains up to the root CA certificate that you used to sign your private CA certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3270
          },
          "name": "certificateChain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-status"
            },
            "stability": "external",
            "summary": "Status of your private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3277
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthorityActivationProps"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html",
          "exampleMetadata": "infused"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCertificateAuthority`.",
        "example": "const cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 1664
      },
      "name": "CfnCertificateAuthorityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-keyalgorithm"
            },
            "remarks": "When you create a subordinate CA, you must use a key algorithm supported by the parent CA.",
            "stability": "external",
            "summary": "Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1671
          },
          "name": "keyAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-signingalgorithm"
            },
            "remarks": "This parameter should not be confused with the `SigningAlgorithm` parameter used to sign certificates when they are issued.",
            "stability": "external",
            "summary": "Name of the algorithm your private CA uses to sign certificate requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1680
          },
          "name": "signingAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-subject"
            },
            "stability": "external",
            "summary": "Structure that contains X.500 distinguished name information for your private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1687
          },
          "name": "subject",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-type"
            },
            "stability": "external",
            "summary": "Type of your private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1694
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-csrextensions"
            },
            "stability": "external",
            "summary": "Specifies information to be added to the extension section of the certificate signing request (CSR)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1701
          },
          "name": "csrExtensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.CsrExtensionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-keystoragesecuritystandard"
            },
            "remarks": "Default: FIPS_140_2_LEVEL_3_OR_HIGHER\n\n> Some AWS Regions do not support the default. When creating a CA in these Regions, you must provide `FIPS_140_2_LEVEL_2_OR_HIGHER` as the argument for `KeyStorageSecurityStandard` . Failure to do this results in an `InvalidArgsException` with the message, \"A certificate authority cannot be created in this region with the specified security standard.\"\n>\n> For information about security standard support in various Regions, see [Storage and security compliance of AWS Private CA private keys](https://docs.aws.amazon.com/privateca/latest/userguide/data-protection.html#private-keys) .",
            "stability": "external",
            "summary": "Specifies a cryptographic key management compliance standard used for handling CA keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1714
          },
          "name": "keyStorageSecurityStandard",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-revocationconfiguration"
            },
            "remarks": "> The following requirements apply to revocation configurations.\n>\n> - A configuration disabling CRLs or OCSP must contain only the `Enabled=False` parameter, and will fail if other parameters such as `CustomCname` or `ExpirationInDays` are included.\n> - In a CRL configuration, the `S3BucketName` parameter must conform to the [Amazon S3 bucket naming rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) .\n> - A configuration containing a custom Canonical Name (CNAME) parameter for CRLs or OCSP must conform to [RFC2396](https://docs.aws.amazon.com/https://www.ietf.org/rfc/rfc2396.txt) restrictions on the use of special characters in a CNAME.\n> - In a CRL or OCSP configuration, the value of a CNAME parameter must not include a protocol prefix such as \"http://\" or \"https://\".",
            "stability": "external",
            "summary": "Certificate revocation information used by the [CreateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html) and [UpdateCertificateAuthority](https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html) actions. Your private certificate authority (CA) can configure Online Certificate Status Protocol (OCSP) support and/or maintain a certificate revocation list (CRL). OCSP returns validation information about certificates as requested by clients, and a CRL contains an updated list of certificates revoked by your CA. For more information, see [RevokeCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_RevokeCertificate.html) in the *AWS Private CA API Reference* and [Setting up a certificate revocation method](https://docs.aws.amazon.com/privateca/latest/userguide/revocation-setup.html) in the *AWS Private CA User Guide* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1728
          },
          "name": "revocationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificateAuthority.RevocationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-tags"
            },
            "remarks": "You can associate up to 50 tags with a private CA. For information using tags with IAM to manage permissions, see [Controlling Access Using IAM Tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html) .",
            "stability": "external",
            "summary": "Key-value pairs that will be attached to the new private CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1735
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-usagemode"
            },
            "remarks": "Short-lived certificate validity is limited to seven days.\n\nThe default value is GENERAL_PURPOSE.",
            "stability": "external",
            "summary": "Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 1744
          },
          "name": "usageMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateAuthorityProps"
    },
    "@aws-cdk/aws-acmpca.CfnCertificateProps": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCertificate`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificateProps: acmpca.CfnCertificateProps = {\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  certificateSigningRequest: 'certificateSigningRequest',\n  signingAlgorithm: 'signingAlgorithm',\n  validity: {\n    type: 'type',\n    value: 123,\n  },\n\n  // the properties below are optional\n  apiPassthrough: {\n    extensions: {\n      certificatePolicies: [{\n        certPolicyId: 'certPolicyId',\n\n        // the properties below are optional\n        policyQualifiers: [{\n          policyQualifierId: 'policyQualifierId',\n          qualifier: {\n            cpsUri: 'cpsUri',\n          },\n        }],\n      }],\n      customExtensions: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n\n        // the properties below are optional\n        critical: false,\n      }],\n      extendedKeyUsage: [{\n        extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n        extendedKeyUsageType: 'extendedKeyUsageType',\n      }],\n      keyUsage: {\n        crlSign: false,\n        dataEncipherment: false,\n        decipherOnly: false,\n        digitalSignature: false,\n        encipherOnly: false,\n        keyAgreement: false,\n        keyCertSign: false,\n        keyEncipherment: false,\n        nonRepudiation: false,\n      },\n      subjectAlternativeNames: [{\n        directoryName: {\n          commonName: 'commonName',\n          country: 'country',\n          customAttributes: [{\n            objectIdentifier: 'objectIdentifier',\n            value: 'value',\n          }],\n          distinguishedNameQualifier: 'distinguishedNameQualifier',\n          generationQualifier: 'generationQualifier',\n          givenName: 'givenName',\n          initials: 'initials',\n          locality: 'locality',\n          organization: 'organization',\n          organizationalUnit: 'organizationalUnit',\n          pseudonym: 'pseudonym',\n          serialNumber: 'serialNumber',\n          state: 'state',\n          surname: 'surname',\n          title: 'title',\n        },\n        dnsName: 'dnsName',\n        ediPartyName: {\n          nameAssigner: 'nameAssigner',\n          partyName: 'partyName',\n        },\n        ipAddress: 'ipAddress',\n        otherName: {\n          typeId: 'typeId',\n          value: 'value',\n        },\n        registeredId: 'registeredId',\n        rfc822Name: 'rfc822Name',\n        uniformResourceIdentifier: 'uniformResourceIdentifier',\n      }],\n    },\n    subject: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n  },\n  templateArn: 'templateArn',\n  validityNotBefore: {\n    type: 'type',\n    value: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnCertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 19
      },
      "name": "CfnCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for the private CA issues the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 26
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-certificatesigningrequest"
            },
            "stability": "external",
            "summary": "The certificate signing request (CSR) for the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 33
          },
          "name": "certificateSigningRequest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-signingalgorithm"
            },
            "remarks": "This parameter should not be confused with the `SigningAlgorithm` parameter used to sign a CSR in the `CreateCertificateAuthority` action.\n\n> The specified signing algorithm family (RSA or ECDSA) must match the algorithm family of the CA's secret key.",
            "stability": "external",
            "summary": "The name of the algorithm that will be used to sign the certificate to be issued."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 44
          },
          "name": "signingAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-validity"
            },
            "stability": "external",
            "summary": "The period of time during which the certificate will be valid."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 51
          },
          "name": "validity",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-apipassthrough"
            },
            "stability": "external",
            "summary": "Specifies X.509 certificate information to be included in the issued certificate. An `APIPassthrough` or `APICSRPassthrough` template variant must be selected, or else this parameter is ignored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 58
          },
          "name": "apiPassthrough",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ApiPassthroughProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-templatearn"
            },
            "remarks": "If this parameter is not provided, AWS Private CA defaults to the `EndEntityCertificate/V1` template. For more information about AWS Private CA templates, see [Using Templates](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html) .",
            "stability": "external",
            "summary": "Specifies a custom configuration template to use when issuing a certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 65
          },
          "name": "templateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-validitynotbefore"
            },
            "remarks": "This parameter sets the “Not Before\" date for the certificate.\n\nBy default, when issuing a certificate, AWS Private CA sets the \"Not Before\" date to the issuance time minus 60 minutes. This compensates for clock inconsistencies across computer systems. The `ValidityNotBefore` parameter can be used to customize the “Not Before” value.\n\nUnlike the `Validity` parameter, the `ValidityNotBefore` parameter is optional.\n\nThe `ValidityNotBefore` value is expressed as an explicit date and time, using the `Validity` type value `ABSOLUTE` .",
            "stability": "external",
            "summary": "Information describing the start of the validity period of the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 78
          },
          "name": "validityNotBefore",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnCertificateProps"
    },
    "@aws-cdk/aws-acmpca.CfnPermission": {
      "assembly": "@aws-cdk/aws-acmpca",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ACMPCA::Permission",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Grants permissions to the AWS Certificate Manager ( ACM ) service principal ( `acm.amazonaws.com` ) to perform [IssueCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_IssueCertificate.html) , [GetCertificate](https://docs.aws.amazon.com/privateca/latest/APIReference/API_GetCertificate.html) , and [ListPermissions](https://docs.aws.amazon.com/privateca/latest/APIReference/API_ListPermissions.html) actions on a CA. These actions are needed for the ACM principal to renew private PKI certificates requested through ACM and residing in the same AWS account as the CA.\n\n**About permissions** - If the private CA and the certificates it issues reside in the same account, you can use `AWS::ACMPCA::Permission` to grant permissions for ACM to carry out automatic certificate renewals.\n- For automatic certificate renewal to succeed, the ACM service principal needs permissions to create, retrieve, and list permissions.\n- If the private CA and the ACM certificates reside in different accounts, then permissions cannot be used to enable automatic renewals. Instead, the ACM certificate owner must set up a resource-based policy to enable cross-account issuance and renewals. For more information, see [Using a Resource Based Policy with AWS Private CA](https://docs.aws.amazon.com/privateca/latest/userguide/pca-rbp.html) .\n\n> To update an `AWS::ACMPCA::Permission` resource, you must first delete the existing permission resource from the CloudFormation stack and then create a new permission resource with updated properties.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ACMPCA::Permission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnPermission = new acmpca.CfnPermission(this, 'MyCfnPermission', {\n  actions: ['actions'],\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  sourceAccount: 'sourceAccount',\n});"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnPermission",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ACMPCA::Permission`."
        },
        "locationInModule": {
          "filename": "lib/acmpca.generated.ts",
          "line": 3621
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-acmpca.CfnPermissionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 3561
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3639
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3653
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPermission",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3565
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3644
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-actions"
            },
            "remarks": "Supported actions are `IssueCertificate` , `GetCertificate` , and `ListPermissions` .",
            "stability": "external",
            "summary": "The private CA actions that can be performed by the designated AWS service."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3591
          },
          "name": "actions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the private CA from which the permission was issued."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3598
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-principal"
            },
            "remarks": "At this time, the only valid principal is `acm.amazonaws.com` .",
            "stability": "external",
            "summary": "The AWS service or entity that holds the permission."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3605
          },
          "name": "principal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-sourceaccount"
            },
            "stability": "external",
            "summary": "The ID of the account that assigned the permission."
          },
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3612
          },
          "name": "sourceAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnPermission"
    },
    "@aws-cdk/aws-acmpca.CfnPermissionProps": {
      "assembly": "@aws-cdk/aws-acmpca",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnPermissionProps: acmpca.CfnPermissionProps = {\n  actions: ['actions'],\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  sourceAccount: 'sourceAccount',\n};"
      },
      "fqn": "@aws-cdk/aws-acmpca.CfnPermissionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/acmpca.generated.ts",
        "line": 3457
      },
      "name": "CfnPermissionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-actions"
            },
            "remarks": "Supported actions are `IssueCertificate` , `GetCertificate` , and `ListPermissions` .",
            "stability": "external",
            "summary": "The private CA actions that can be performed by the designated AWS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3464
          },
          "name": "actions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Number (ARN) of the private CA from which the permission was issued."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3471
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-principal"
            },
            "remarks": "At this time, the only valid principal is `acm.amazonaws.com` .",
            "stability": "external",
            "summary": "The AWS service or entity that holds the permission."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3478
          },
          "name": "principal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-sourceaccount"
            },
            "stability": "external",
            "summary": "The ID of the account that assigned the permission."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/acmpca.generated.ts",
            "line": 3485
          },
          "name": "sourceAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/acmpca.generated:CfnPermissionProps"
    },
    "@aws-cdk/aws-acmpca.ICertificateAuthority": {
      "assembly": "@aws-cdk/aws-acmpca",
      "docs": {
        "stability": "stable",
        "summary": "Interface which all CertificateAuthority based class must implement."
      },
      "fqn": "@aws-cdk/aws-acmpca.ICertificateAuthority",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificate-authority.ts",
        "line": 7
      },
      "name": "ICertificateAuthority",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name of the Certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate-authority.ts",
            "line": 13
          },
          "name": "certificateAuthorityArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/certificate-authority:ICertificateAuthority"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}