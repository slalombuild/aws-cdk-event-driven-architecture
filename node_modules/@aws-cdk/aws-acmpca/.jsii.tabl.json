{"version":"2","toolVersion":"1.80.0","snippets":{"190af510314f50d39e6fe88c9e20dcae317c3d0b167f75f1644d5bec66057f75":{"translations":{"python":{"source":"import aws_cdk.aws_acmpca as acmpca","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.ACMPCA;","version":"1"},"java":{"source":"import software.amazon.awscdk.services.acmpca.*;","version":"1"},"go":{"source":"import acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"","version":"1"},"$":{"source":"import * as acmpca from '@aws-cdk/aws-acmpca';","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-acmpca"},"field":{"field":"markdown","line":17}},"didCompile":true,"fqnsReferenced":[],"fullSource":"import * as acmpca from '@aws-cdk/aws-acmpca';","syntaxKindCounter":{"10":1,"75":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"424163479954ffeb49f7709206f6ea77506eabc23f2251b86badb12d825a2780":{"translations":{"python":{"source":"certificate_authority = acmpca.CertificateAuthority.from_certificate_authority_arn(self, \"CA\", \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77\")","version":"2"},"csharp":{"source":"var certificateAuthority = CertificateAuthority.FromCertificateAuthorityArn(this, \"CA\", \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77\");","version":"1"},"java":{"source":"ICertificateAuthority certificateAuthority = CertificateAuthority.fromCertificateAuthorityArn(this, \"CA\", \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77\");","version":"1"},"go":{"source":"certificateAuthority := acmpca.CertificateAuthority_FromCertificateAuthorityArn(this, jsii.String(\"CA\"), jsii.String(\"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77\"))","version":"1"},"$":{"source":"const certificateAuthority = acmpca.CertificateAuthority.fromCertificateAuthorityArn(this, 'CA',\n  'arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-acmpca"},"field":{"field":"markdown","line":27}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CertificateAuthority","@aws-cdk/aws-acmpca.CertificateAuthority#fromCertificateAuthorityArn","@aws-cdk/aws-acmpca.ICertificateAuthority","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst certificateAuthority = acmpca.CertificateAuthority.fromCertificateAuthorityArn(this, 'CA',\n  'arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/023077d8-2bfa-4eb0-8f22-05c96deade77');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"e5d4b9ca8294c06c507852922c1a2caff106fc75e3eae489154b9171f2e89e2b"},"b84646258ecf1de8e18f2fec9068757519808c1956908d6d8ad0547a4ac57323":{"translations":{"python":{"source":"cfn_certificate_authority = acmpca.CfnCertificateAuthority(self, \"CA\",\n    type=\"ROOT\",\n    key_algorithm=\"RSA_2048\",\n    signing_algorithm=\"SHA256WITHRSA\",\n    subject=acmpca.CfnCertificateAuthority.SubjectProperty(\n        country=\"US\",\n        organization=\"string\",\n        organizational_unit=\"string\",\n        distinguished_name_qualifier=\"string\",\n        state=\"string\",\n        common_name=\"123\",\n        serial_number=\"string\",\n        locality=\"string\",\n        title=\"string\",\n        surname=\"string\",\n        given_name=\"string\",\n        initials=\"DG\",\n        pseudonym=\"string\",\n        generation_qualifier=\"DBG\"\n    )\n)","version":"2"},"csharp":{"source":"var cfnCertificateAuthority = new CfnCertificateAuthority(this, \"CA\", new CfnCertificateAuthorityProps {\n    Type = \"ROOT\",\n    KeyAlgorithm = \"RSA_2048\",\n    SigningAlgorithm = \"SHA256WITHRSA\",\n    Subject = new SubjectProperty {\n        Country = \"US\",\n        Organization = \"string\",\n        OrganizationalUnit = \"string\",\n        DistinguishedNameQualifier = \"string\",\n        State = \"string\",\n        CommonName = \"123\",\n        SerialNumber = \"string\",\n        Locality = \"string\",\n        Title = \"string\",\n        Surname = \"string\",\n        GivenName = \"string\",\n        Initials = \"DG\",\n        Pseudonym = \"string\",\n        GenerationQualifier = \"DBG\"\n    }\n});","version":"1"},"java":{"source":"CfnCertificateAuthority cfnCertificateAuthority = CfnCertificateAuthority.Builder.create(this, \"CA\")\n        .type(\"ROOT\")\n        .keyAlgorithm(\"RSA_2048\")\n        .signingAlgorithm(\"SHA256WITHRSA\")\n        .subject(SubjectProperty.builder()\n                .country(\"US\")\n                .organization(\"string\")\n                .organizationalUnit(\"string\")\n                .distinguishedNameQualifier(\"string\")\n                .state(\"string\")\n                .commonName(\"123\")\n                .serialNumber(\"string\")\n                .locality(\"string\")\n                .title(\"string\")\n                .surname(\"string\")\n                .givenName(\"string\")\n                .initials(\"DG\")\n                .pseudonym(\"string\")\n                .generationQualifier(\"DBG\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cfnCertificateAuthority := acmpca.NewCfnCertificateAuthority(this, jsii.String(\"CA\"), &CfnCertificateAuthorityProps{\n\tType: jsii.String(\"ROOT\"),\n\tKeyAlgorithm: jsii.String(\"RSA_2048\"),\n\tSigningAlgorithm: jsii.String(\"SHA256WITHRSA\"),\n\tSubject: &SubjectProperty{\n\t\tCountry: jsii.String(\"US\"),\n\t\tOrganization: jsii.String(\"string\"),\n\t\tOrganizationalUnit: jsii.String(\"string\"),\n\t\tDistinguishedNameQualifier: jsii.String(\"string\"),\n\t\tState: jsii.String(\"string\"),\n\t\tCommonName: jsii.String(\"123\"),\n\t\tSerialNumber: jsii.String(\"string\"),\n\t\tLocality: jsii.String(\"string\"),\n\t\tTitle: jsii.String(\"string\"),\n\t\tSurname: jsii.String(\"string\"),\n\t\tGivenName: jsii.String(\"string\"),\n\t\tInitials: jsii.String(\"DG\"),\n\t\tPseudonym: jsii.String(\"string\"),\n\t\tGenerationQualifier: jsii.String(\"DBG\"),\n\t},\n})","version":"1"},"$":{"source":"const cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-acmpca"},"field":{"field":"markdown","line":37}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority","@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps","@aws-cdk/core.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":18,"75":21,"104":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"281":18},"fqnsFingerprint":"1f7cc2dc0b6551da8efb2712c191847b5cbd6fe3bf1b4cab304c613812bc9e23"},"637a2c81368bfb75f5aefc1b1c98d69c4e2c5438a9e262852b8be349bb48b6f3":{"translations":{"python":{"source":"# cfn_certificate_authority: acmpca.CfnCertificateAuthority\n\n\ncertificate_authority = acmpca.CertificateAuthority.from_certificate_authority_arn(self, \"CertificateAuthority\", cfn_certificate_authority.attr_arn)","version":"2"},"csharp":{"source":"CfnCertificateAuthority cfnCertificateAuthority;\n\n\nvar certificateAuthority = CertificateAuthority.FromCertificateAuthorityArn(this, \"CertificateAuthority\", cfnCertificateAuthority.AttrArn);","version":"1"},"java":{"source":"CfnCertificateAuthority cfnCertificateAuthority;\n\n\nICertificateAuthority certificateAuthority = CertificateAuthority.fromCertificateAuthorityArn(this, \"CertificateAuthority\", cfnCertificateAuthority.getAttrArn());","version":"1"},"go":{"source":"var cfnCertificateAuthority cfnCertificateAuthority\n\n\ncertificateAuthority := acmpca.CertificateAuthority_FromCertificateAuthorityArn(this, jsii.String(\"CertificateAuthority\"), cfnCertificateAuthority.AttrArn)","version":"1"},"$":{"source":"declare const cfnCertificateAuthority: acmpca.CfnCertificateAuthority;\n\nconst certificateAuthority = acmpca.CertificateAuthority.fromCertificateAuthorityArn(this, 'CertificateAuthority',\n  cfnCertificateAuthority.attrArn);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-acmpca"},"field":{"field":"markdown","line":64}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CertificateAuthority","@aws-cdk/aws-acmpca.CertificateAuthority#fromCertificateAuthorityArn","@aws-cdk/aws-acmpca.CfnCertificateAuthority#attrArn","@aws-cdk/aws-acmpca.ICertificateAuthority","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cfnCertificateAuthority: acmpca.CfnCertificateAuthority;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst certificateAuthority = acmpca.CertificateAuthority.fromCertificateAuthorityArn(this, 'CertificateAuthority',\n  cfnCertificateAuthority.attrArn);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":9,"104":1,"130":1,"153":1,"169":1,"194":3,"196":1,"225":2,"242":2,"243":2,"290":1},"fqnsFingerprint":"a55d4442859fbd7d7b6764cc521eb51454d9e6eb52e02b3ac5b7fb15e5271373"},"640ed066eb95812a85f2a3a397adf04ac1753f00d9d5552018ac96be0c8898e5":{"translations":{"python":{"source":"import aws_cdk.aws_acmpca as acmpca\n\n# vpc: ec2.Vpc\n\ncluster = msk.Cluster(self, \"Cluster\",\n    cluster_name=\"myCluster\",\n    kafka_version=msk.KafkaVersion.V2_8_1,\n    vpc=vpc,\n    encryption_in_transit=msk.EncryptionInTransitConfig(\n        client_broker=msk.ClientBrokerEncryption.TLS\n    ),\n    client_authentication=msk.ClientAuthentication.tls(\n        certificate_authorities=[\n            acmpca.CertificateAuthority.from_certificate_authority_arn(self, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")\n        ]\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.ACMPCA;\n\nVpc vpc;\n\nvar cluster = new Cluster(this, \"Cluster\", new ClusterProps {\n    ClusterName = \"myCluster\",\n    KafkaVersion = KafkaVersion.V2_8_1,\n    Vpc = vpc,\n    EncryptionInTransit = new EncryptionInTransitConfig {\n        ClientBroker = ClientBrokerEncryption.TLS\n    },\n    ClientAuthentication = ClientAuthentication.Tls(new TlsAuthProps {\n        CertificateAuthorities = new [] { CertificateAuthority.FromCertificateAuthorityArn(this, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\") }\n    })\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.acmpca.*;\n\nVpc vpc;\n\nCluster cluster = Cluster.Builder.create(this, \"Cluster\")\n        .clusterName(\"myCluster\")\n        .kafkaVersion(KafkaVersion.V2_8_1)\n        .vpc(vpc)\n        .encryptionInTransit(EncryptionInTransitConfig.builder()\n                .clientBroker(ClientBrokerEncryption.TLS)\n                .build())\n        .clientAuthentication(ClientAuthentication.tls(TlsAuthProps.builder()\n                .certificateAuthorities(List.of(CertificateAuthority.fromCertificateAuthorityArn(this, \"CertificateAuthority\", \"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")))\n                .build()))\n        .build();","version":"1"},"go":{"source":"import acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nvar vpc vpc\n\ncluster := msk.NewCluster(this, jsii.String(\"Cluster\"), &ClusterProps{\n\tClusterName: jsii.String(\"myCluster\"),\n\tKafkaVersion: msk.KafkaVersion_V2_8_1(),\n\tVpc: Vpc,\n\tEncryptionInTransit: &EncryptionInTransitConfig{\n\t\tClientBroker: msk.ClientBrokerEncryption_TLS,\n\t},\n\tClientAuthentication: msk.ClientAuthentication_Tls(&TlsAuthProps{\n\t\tCertificateAuthorities: []iCertificateAuthority{\n\t\t\tacmpca.CertificateAuthority_FromCertificateAuthorityArn(this, jsii.String(\"CertificateAuthority\"), jsii.String(\"arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111\")),\n\t\t},\n\t}),\n})","version":"1"},"$":{"source":"import * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CertificateAuthority"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CertificateAuthority","@aws-cdk/aws-acmpca.CertificateAuthority#fromCertificateAuthorityArn","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-msk.ClientAuthentication","@aws-cdk/aws-msk.ClientAuthentication#tls","@aws-cdk/aws-msk.ClientBrokerEncryption","@aws-cdk/aws-msk.ClientBrokerEncryption#TLS","@aws-cdk/aws-msk.Cluster","@aws-cdk/aws-msk.ClusterProps","@aws-cdk/aws-msk.EncryptionInTransitConfig","@aws-cdk/aws-msk.KafkaVersion","@aws-cdk/aws-msk.KafkaVersion#V2_8_1","@aws-cdk/aws-msk.TlsAuthProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as msk from '@aws-cdk/aws-msk';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cluster = new msk.Cluster(this, 'Cluster', {\n  clusterName: 'myCluster',\n  kafkaVersion: msk.KafkaVersion.V2_8_1,\n  vpc,\n  encryptionInTransit: {\n    clientBroker: msk.ClientBrokerEncryption.TLS,\n  },\n  clientAuthentication: msk.ClientAuthentication.tls({\n    certificateAuthorities: [\n      acmpca.CertificateAuthority.fromCertificateAuthorityArn(\n        this,\n        'CertificateAuthority',\n        'arn:aws:acm-pca:us-west-2:1234567890:certificate-authority/11111111-1111-1111-1111-111111111111',\n      ),\n    ],\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":5,"75":26,"104":2,"130":1,"153":1,"169":1,"192":1,"193":3,"194":9,"196":2,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":6,"282":1,"290":1},"fqnsFingerprint":"954096cb0d80b887e4bfd07a54b9b9ff67711dcc1fbc5b0d0b8c893adb77d8cb"},"7b3ea98d5b03eca7ff26aecd99a9a8f8d5153cd1c84e5d2210930a6f2b955f0d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncfn_certificate = acmpca.CfnCertificate(self, \"MyCfnCertificate\",\n    certificate_authority_arn=\"certificateAuthorityArn\",\n    certificate_signing_request=\"certificateSigningRequest\",\n    signing_algorithm=\"signingAlgorithm\",\n    validity=acmpca.CfnCertificate.ValidityProperty(\n        type=\"type\",\n        value=123\n    ),\n\n    # the properties below are optional\n    api_passthrough=acmpca.CfnCertificate.ApiPassthroughProperty(\n        extensions=acmpca.CfnCertificate.ExtensionsProperty(\n            certificate_policies=[acmpca.CfnCertificate.PolicyInformationProperty(\n                cert_policy_id=\"certPolicyId\",\n\n                # the properties below are optional\n                policy_qualifiers=[acmpca.CfnCertificate.PolicyQualifierInfoProperty(\n                    policy_qualifier_id=\"policyQualifierId\",\n                    qualifier=acmpca.CfnCertificate.QualifierProperty(\n                        cps_uri=\"cpsUri\"\n                    )\n                )]\n            )],\n            custom_extensions=[acmpca.CfnCertificate.CustomExtensionProperty(\n                object_identifier=\"objectIdentifier\",\n                value=\"value\",\n\n                # the properties below are optional\n                critical=False\n            )],\n            extended_key_usage=[acmpca.CfnCertificate.ExtendedKeyUsageProperty(\n                extended_key_usage_object_identifier=\"extendedKeyUsageObjectIdentifier\",\n                extended_key_usage_type=\"extendedKeyUsageType\"\n            )],\n            key_usage=acmpca.CfnCertificate.KeyUsageProperty(\n                crl_sign=False,\n                data_encipherment=False,\n                decipher_only=False,\n                digital_signature=False,\n                encipher_only=False,\n                key_agreement=False,\n                key_cert_sign=False,\n                key_encipherment=False,\n                non_repudiation=False\n            ),\n            subject_alternative_names=[acmpca.CfnCertificate.GeneralNameProperty(\n                directory_name=acmpca.CfnCertificate.SubjectProperty(\n                    common_name=\"commonName\",\n                    country=\"country\",\n                    custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n                        object_identifier=\"objectIdentifier\",\n                        value=\"value\"\n                    )],\n                    distinguished_name_qualifier=\"distinguishedNameQualifier\",\n                    generation_qualifier=\"generationQualifier\",\n                    given_name=\"givenName\",\n                    initials=\"initials\",\n                    locality=\"locality\",\n                    organization=\"organization\",\n                    organizational_unit=\"organizationalUnit\",\n                    pseudonym=\"pseudonym\",\n                    serial_number=\"serialNumber\",\n                    state=\"state\",\n                    surname=\"surname\",\n                    title=\"title\"\n                ),\n                dns_name=\"dnsName\",\n                edi_party_name=acmpca.CfnCertificate.EdiPartyNameProperty(\n                    name_assigner=\"nameAssigner\",\n                    party_name=\"partyName\"\n                ),\n                ip_address=\"ipAddress\",\n                other_name=acmpca.CfnCertificate.OtherNameProperty(\n                    type_id=\"typeId\",\n                    value=\"value\"\n                ),\n                registered_id=\"registeredId\",\n                rfc822_name=\"rfc822Name\",\n                uniform_resource_identifier=\"uniformResourceIdentifier\"\n            )]\n        ),\n        subject=acmpca.CfnCertificate.SubjectProperty(\n            common_name=\"commonName\",\n            country=\"country\",\n            custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n                object_identifier=\"objectIdentifier\",\n                value=\"value\"\n            )],\n            distinguished_name_qualifier=\"distinguishedNameQualifier\",\n            generation_qualifier=\"generationQualifier\",\n            given_name=\"givenName\",\n            initials=\"initials\",\n            locality=\"locality\",\n            organization=\"organization\",\n            organizational_unit=\"organizationalUnit\",\n            pseudonym=\"pseudonym\",\n            serial_number=\"serialNumber\",\n            state=\"state\",\n            surname=\"surname\",\n            title=\"title\"\n        )\n    ),\n    template_arn=\"templateArn\",\n    validity_not_before=acmpca.CfnCertificate.ValidityProperty(\n        type=\"type\",\n        value=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar cfnCertificate = new CfnCertificate(this, \"MyCfnCertificate\", new CfnCertificateProps {\n    CertificateAuthorityArn = \"certificateAuthorityArn\",\n    CertificateSigningRequest = \"certificateSigningRequest\",\n    SigningAlgorithm = \"signingAlgorithm\",\n    Validity = new ValidityProperty {\n        Type = \"type\",\n        Value = 123\n    },\n\n    // the properties below are optional\n    ApiPassthrough = new ApiPassthroughProperty {\n        Extensions = new ExtensionsProperty {\n            CertificatePolicies = new [] { new PolicyInformationProperty {\n                CertPolicyId = \"certPolicyId\",\n\n                // the properties below are optional\n                PolicyQualifiers = new [] { new PolicyQualifierInfoProperty {\n                    PolicyQualifierId = \"policyQualifierId\",\n                    Qualifier = new QualifierProperty {\n                        CpsUri = \"cpsUri\"\n                    }\n                } }\n            } },\n            CustomExtensions = new [] { new CustomExtensionProperty {\n                ObjectIdentifier = \"objectIdentifier\",\n                Value = \"value\",\n\n                // the properties below are optional\n                Critical = false\n            } },\n            ExtendedKeyUsage = new [] { new ExtendedKeyUsageProperty {\n                ExtendedKeyUsageObjectIdentifier = \"extendedKeyUsageObjectIdentifier\",\n                ExtendedKeyUsageType = \"extendedKeyUsageType\"\n            } },\n            KeyUsage = new KeyUsageProperty {\n                CrlSign = false,\n                DataEncipherment = false,\n                DecipherOnly = false,\n                DigitalSignature = false,\n                EncipherOnly = false,\n                KeyAgreement = false,\n                KeyCertSign = false,\n                KeyEncipherment = false,\n                NonRepudiation = false\n            },\n            SubjectAlternativeNames = new [] { new GeneralNameProperty {\n                DirectoryName = new SubjectProperty {\n                    CommonName = \"commonName\",\n                    Country = \"country\",\n                    CustomAttributes = new [] { new CustomAttributeProperty {\n                        ObjectIdentifier = \"objectIdentifier\",\n                        Value = \"value\"\n                    } },\n                    DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n                    GenerationQualifier = \"generationQualifier\",\n                    GivenName = \"givenName\",\n                    Initials = \"initials\",\n                    Locality = \"locality\",\n                    Organization = \"organization\",\n                    OrganizationalUnit = \"organizationalUnit\",\n                    Pseudonym = \"pseudonym\",\n                    SerialNumber = \"serialNumber\",\n                    State = \"state\",\n                    Surname = \"surname\",\n                    Title = \"title\"\n                },\n                DnsName = \"dnsName\",\n                EdiPartyName = new EdiPartyNameProperty {\n                    NameAssigner = \"nameAssigner\",\n                    PartyName = \"partyName\"\n                },\n                IpAddress = \"ipAddress\",\n                OtherName = new OtherNameProperty {\n                    TypeId = \"typeId\",\n                    Value = \"value\"\n                },\n                RegisteredId = \"registeredId\",\n                Rfc822Name = \"rfc822Name\",\n                UniformResourceIdentifier = \"uniformResourceIdentifier\"\n            } }\n        },\n        Subject = new SubjectProperty {\n            CommonName = \"commonName\",\n            Country = \"country\",\n            CustomAttributes = new [] { new CustomAttributeProperty {\n                ObjectIdentifier = \"objectIdentifier\",\n                Value = \"value\"\n            } },\n            DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n            GenerationQualifier = \"generationQualifier\",\n            GivenName = \"givenName\",\n            Initials = \"initials\",\n            Locality = \"locality\",\n            Organization = \"organization\",\n            OrganizationalUnit = \"organizationalUnit\",\n            Pseudonym = \"pseudonym\",\n            SerialNumber = \"serialNumber\",\n            State = \"state\",\n            Surname = \"surname\",\n            Title = \"title\"\n        }\n    },\n    TemplateArn = \"templateArn\",\n    ValidityNotBefore = new ValidityProperty {\n        Type = \"type\",\n        Value = 123\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCfnCertificate cfnCertificate = CfnCertificate.Builder.create(this, \"MyCfnCertificate\")\n        .certificateAuthorityArn(\"certificateAuthorityArn\")\n        .certificateSigningRequest(\"certificateSigningRequest\")\n        .signingAlgorithm(\"signingAlgorithm\")\n        .validity(ValidityProperty.builder()\n                .type(\"type\")\n                .value(123)\n                .build())\n\n        // the properties below are optional\n        .apiPassthrough(ApiPassthroughProperty.builder()\n                .extensions(ExtensionsProperty.builder()\n                        .certificatePolicies(List.of(PolicyInformationProperty.builder()\n                                .certPolicyId(\"certPolicyId\")\n\n                                // the properties below are optional\n                                .policyQualifiers(List.of(PolicyQualifierInfoProperty.builder()\n                                        .policyQualifierId(\"policyQualifierId\")\n                                        .qualifier(QualifierProperty.builder()\n                                                .cpsUri(\"cpsUri\")\n                                                .build())\n                                        .build()))\n                                .build()))\n                        .customExtensions(List.of(CustomExtensionProperty.builder()\n                                .objectIdentifier(\"objectIdentifier\")\n                                .value(\"value\")\n\n                                // the properties below are optional\n                                .critical(false)\n                                .build()))\n                        .extendedKeyUsage(List.of(ExtendedKeyUsageProperty.builder()\n                                .extendedKeyUsageObjectIdentifier(\"extendedKeyUsageObjectIdentifier\")\n                                .extendedKeyUsageType(\"extendedKeyUsageType\")\n                                .build()))\n                        .keyUsage(KeyUsageProperty.builder()\n                                .crlSign(false)\n                                .dataEncipherment(false)\n                                .decipherOnly(false)\n                                .digitalSignature(false)\n                                .encipherOnly(false)\n                                .keyAgreement(false)\n                                .keyCertSign(false)\n                                .keyEncipherment(false)\n                                .nonRepudiation(false)\n                                .build())\n                        .subjectAlternativeNames(List.of(GeneralNameProperty.builder()\n                                .directoryName(SubjectProperty.builder()\n                                        .commonName(\"commonName\")\n                                        .country(\"country\")\n                                        .customAttributes(List.of(CustomAttributeProperty.builder()\n                                                .objectIdentifier(\"objectIdentifier\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                                        .generationQualifier(\"generationQualifier\")\n                                        .givenName(\"givenName\")\n                                        .initials(\"initials\")\n                                        .locality(\"locality\")\n                                        .organization(\"organization\")\n                                        .organizationalUnit(\"organizationalUnit\")\n                                        .pseudonym(\"pseudonym\")\n                                        .serialNumber(\"serialNumber\")\n                                        .state(\"state\")\n                                        .surname(\"surname\")\n                                        .title(\"title\")\n                                        .build())\n                                .dnsName(\"dnsName\")\n                                .ediPartyName(EdiPartyNameProperty.builder()\n                                        .nameAssigner(\"nameAssigner\")\n                                        .partyName(\"partyName\")\n                                        .build())\n                                .ipAddress(\"ipAddress\")\n                                .otherName(OtherNameProperty.builder()\n                                        .typeId(\"typeId\")\n                                        .value(\"value\")\n                                        .build())\n                                .registeredId(\"registeredId\")\n                                .rfc822Name(\"rfc822Name\")\n                                .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n                                .build()))\n                        .build())\n                .subject(SubjectProperty.builder()\n                        .commonName(\"commonName\")\n                        .country(\"country\")\n                        .customAttributes(List.of(CustomAttributeProperty.builder()\n                                .objectIdentifier(\"objectIdentifier\")\n                                .value(\"value\")\n                                .build()))\n                        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                        .generationQualifier(\"generationQualifier\")\n                        .givenName(\"givenName\")\n                        .initials(\"initials\")\n                        .locality(\"locality\")\n                        .organization(\"organization\")\n                        .organizationalUnit(\"organizationalUnit\")\n                        .pseudonym(\"pseudonym\")\n                        .serialNumber(\"serialNumber\")\n                        .state(\"state\")\n                        .surname(\"surname\")\n                        .title(\"title\")\n                        .build())\n                .build())\n        .templateArn(\"templateArn\")\n        .validityNotBefore(ValidityProperty.builder()\n                .type(\"type\")\n                .value(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncfnCertificate := acmpca.NewCfnCertificate(this, jsii.String(\"MyCfnCertificate\"), &CfnCertificateProps{\n\tCertificateAuthorityArn: jsii.String(\"certificateAuthorityArn\"),\n\tCertificateSigningRequest: jsii.String(\"certificateSigningRequest\"),\n\tSigningAlgorithm: jsii.String(\"signingAlgorithm\"),\n\tValidity: &ValidityProperty{\n\t\tType: jsii.String(\"type\"),\n\t\tValue: jsii.Number(123),\n\t},\n\n\t// the properties below are optional\n\tApiPassthrough: &ApiPassthroughProperty{\n\t\tExtensions: &ExtensionsProperty{\n\t\t\tCertificatePolicies: []interface{}{\n\t\t\t\t&PolicyInformationProperty{\n\t\t\t\t\tCertPolicyId: jsii.String(\"certPolicyId\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tPolicyQualifiers: []interface{}{\n\t\t\t\t\t\t&PolicyQualifierInfoProperty{\n\t\t\t\t\t\t\tPolicyQualifierId: jsii.String(\"policyQualifierId\"),\n\t\t\t\t\t\t\tQualifier: &QualifierProperty{\n\t\t\t\t\t\t\t\tCpsUri: jsii.String(\"cpsUri\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tCustomExtensions: []interface{}{\n\t\t\t\t&CustomExtensionProperty{\n\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tCritical: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\tExtendedKeyUsage: []interface{}{\n\t\t\t\t&ExtendedKeyUsageProperty{\n\t\t\t\t\tExtendedKeyUsageObjectIdentifier: jsii.String(\"extendedKeyUsageObjectIdentifier\"),\n\t\t\t\t\tExtendedKeyUsageType: jsii.String(\"extendedKeyUsageType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tKeyUsage: &KeyUsageProperty{\n\t\t\t\tCrlSign: jsii.Boolean(false),\n\t\t\t\tDataEncipherment: jsii.Boolean(false),\n\t\t\t\tDecipherOnly: jsii.Boolean(false),\n\t\t\t\tDigitalSignature: jsii.Boolean(false),\n\t\t\t\tEncipherOnly: jsii.Boolean(false),\n\t\t\t\tKeyAgreement: jsii.Boolean(false),\n\t\t\t\tKeyCertSign: jsii.Boolean(false),\n\t\t\t\tKeyEncipherment: jsii.Boolean(false),\n\t\t\t\tNonRepudiation: jsii.Boolean(false),\n\t\t\t},\n\t\t\tSubjectAlternativeNames: []interface{}{\n\t\t\t\t&GeneralNameProperty{\n\t\t\t\t\tDirectoryName: &SubjectProperty{\n\t\t\t\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\t\t\t\tCountry: jsii.String(\"country\"),\n\t\t\t\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\t\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\t\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\t\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\t\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\t\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\t\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\t\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\t\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\t\t\t\tState: jsii.String(\"state\"),\n\t\t\t\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\t\t\t\tTitle: jsii.String(\"title\"),\n\t\t\t\t\t},\n\t\t\t\t\tDnsName: jsii.String(\"dnsName\"),\n\t\t\t\t\tEdiPartyName: &EdiPartyNameProperty{\n\t\t\t\t\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\t\t\t\t\tPartyName: jsii.String(\"partyName\"),\n\t\t\t\t\t},\n\t\t\t\t\tIpAddress: jsii.String(\"ipAddress\"),\n\t\t\t\t\tOtherName: &OtherNameProperty{\n\t\t\t\t\t\tTypeId: jsii.String(\"typeId\"),\n\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t\tRegisteredId: jsii.String(\"registeredId\"),\n\t\t\t\t\tRfc822Name: jsii.String(\"rfc822Name\"),\n\t\t\t\t\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tSubject: &SubjectProperty{\n\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\tCountry: jsii.String(\"country\"),\n\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\tState: jsii.String(\"state\"),\n\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\tTitle: jsii.String(\"title\"),\n\t\t},\n\t},\n\tTemplateArn: jsii.String(\"templateArn\"),\n\tValidityNotBefore: &ValidityProperty{\n\t\tType: jsii.String(\"type\"),\n\t\tValue: jsii.Number(123),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificate = new acmpca.CfnCertificate(this, 'MyCfnCertificate', {\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  certificateSigningRequest: 'certificateSigningRequest',\n  signingAlgorithm: 'signingAlgorithm',\n  validity: {\n    type: 'type',\n    value: 123,\n  },\n\n  // the properties below are optional\n  apiPassthrough: {\n    extensions: {\n      certificatePolicies: [{\n        certPolicyId: 'certPolicyId',\n\n        // the properties below are optional\n        policyQualifiers: [{\n          policyQualifierId: 'policyQualifierId',\n          qualifier: {\n            cpsUri: 'cpsUri',\n          },\n        }],\n      }],\n      customExtensions: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n\n        // the properties below are optional\n        critical: false,\n      }],\n      extendedKeyUsage: [{\n        extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n        extendedKeyUsageType: 'extendedKeyUsageType',\n      }],\n      keyUsage: {\n        crlSign: false,\n        dataEncipherment: false,\n        decipherOnly: false,\n        digitalSignature: false,\n        encipherOnly: false,\n        keyAgreement: false,\n        keyCertSign: false,\n        keyEncipherment: false,\n        nonRepudiation: false,\n      },\n      subjectAlternativeNames: [{\n        directoryName: {\n          commonName: 'commonName',\n          country: 'country',\n          customAttributes: [{\n            objectIdentifier: 'objectIdentifier',\n            value: 'value',\n          }],\n          distinguishedNameQualifier: 'distinguishedNameQualifier',\n          generationQualifier: 'generationQualifier',\n          givenName: 'givenName',\n          initials: 'initials',\n          locality: 'locality',\n          organization: 'organization',\n          organizationalUnit: 'organizationalUnit',\n          pseudonym: 'pseudonym',\n          serialNumber: 'serialNumber',\n          state: 'state',\n          surname: 'surname',\n          title: 'title',\n        },\n        dnsName: 'dnsName',\n        ediPartyName: {\n          nameAssigner: 'nameAssigner',\n          partyName: 'partyName',\n        },\n        ipAddress: 'ipAddress',\n        otherName: {\n          typeId: 'typeId',\n          value: 'value',\n        },\n        registeredId: 'registeredId',\n        rfc822Name: 'rfc822Name',\n        uniformResourceIdentifier: 'uniformResourceIdentifier',\n      }],\n    },\n    subject: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n  },\n  templateArn: 'templateArn',\n  validityNotBefore: {\n    type: 'type',\n    value: 123,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate","@aws-cdk/aws-acmpca.CfnCertificateProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificate = new acmpca.CfnCertificate(this, 'MyCfnCertificate', {\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  certificateSigningRequest: 'certificateSigningRequest',\n  signingAlgorithm: 'signingAlgorithm',\n  validity: {\n    type: 'type',\n    value: 123,\n  },\n\n  // the properties below are optional\n  apiPassthrough: {\n    extensions: {\n      certificatePolicies: [{\n        certPolicyId: 'certPolicyId',\n\n        // the properties below are optional\n        policyQualifiers: [{\n          policyQualifierId: 'policyQualifierId',\n          qualifier: {\n            cpsUri: 'cpsUri',\n          },\n        }],\n      }],\n      customExtensions: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n\n        // the properties below are optional\n        critical: false,\n      }],\n      extendedKeyUsage: [{\n        extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n        extendedKeyUsageType: 'extendedKeyUsageType',\n      }],\n      keyUsage: {\n        crlSign: false,\n        dataEncipherment: false,\n        decipherOnly: false,\n        digitalSignature: false,\n        encipherOnly: false,\n        keyAgreement: false,\n        keyCertSign: false,\n        keyEncipherment: false,\n        nonRepudiation: false,\n      },\n      subjectAlternativeNames: [{\n        directoryName: {\n          commonName: 'commonName',\n          country: 'country',\n          customAttributes: [{\n            objectIdentifier: 'objectIdentifier',\n            value: 'value',\n          }],\n          distinguishedNameQualifier: 'distinguishedNameQualifier',\n          generationQualifier: 'generationQualifier',\n          givenName: 'givenName',\n          initials: 'initials',\n          locality: 'locality',\n          organization: 'organization',\n          organizationalUnit: 'organizationalUnit',\n          pseudonym: 'pseudonym',\n          serialNumber: 'serialNumber',\n          state: 'state',\n          surname: 'surname',\n          title: 'title',\n        },\n        dnsName: 'dnsName',\n        ediPartyName: {\n          nameAssigner: 'nameAssigner',\n          partyName: 'partyName',\n        },\n        ipAddress: 'ipAddress',\n        otherName: {\n          typeId: 'typeId',\n          value: 'value',\n        },\n        registeredId: 'registeredId',\n        rfc822Name: 'rfc822Name',\n        uniformResourceIdentifier: 'uniformResourceIdentifier',\n      }],\n    },\n    subject: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n  },\n  templateArn: 'templateArn',\n  validityNotBefore: {\n    type: 'type',\n    value: 123,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":56,"75":87,"91":10,"104":1,"192":7,"193":18,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":83,"290":1},"fqnsFingerprint":"5f434ec2e3e055ae44ac91e4736c5ca3722abeb4797c685ff740610020155a0d"},"3096e1c2e0b045c21e93e232e239dc1f381936fb18d63ee4cb61d27c37a3340a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\napi_passthrough_property = acmpca.CfnCertificate.ApiPassthroughProperty(\n    extensions=acmpca.CfnCertificate.ExtensionsProperty(\n        certificate_policies=[acmpca.CfnCertificate.PolicyInformationProperty(\n            cert_policy_id=\"certPolicyId\",\n\n            # the properties below are optional\n            policy_qualifiers=[acmpca.CfnCertificate.PolicyQualifierInfoProperty(\n                policy_qualifier_id=\"policyQualifierId\",\n                qualifier=acmpca.CfnCertificate.QualifierProperty(\n                    cps_uri=\"cpsUri\"\n                )\n            )]\n        )],\n        custom_extensions=[acmpca.CfnCertificate.CustomExtensionProperty(\n            object_identifier=\"objectIdentifier\",\n            value=\"value\",\n\n            # the properties below are optional\n            critical=False\n        )],\n        extended_key_usage=[acmpca.CfnCertificate.ExtendedKeyUsageProperty(\n            extended_key_usage_object_identifier=\"extendedKeyUsageObjectIdentifier\",\n            extended_key_usage_type=\"extendedKeyUsageType\"\n        )],\n        key_usage=acmpca.CfnCertificate.KeyUsageProperty(\n            crl_sign=False,\n            data_encipherment=False,\n            decipher_only=False,\n            digital_signature=False,\n            encipher_only=False,\n            key_agreement=False,\n            key_cert_sign=False,\n            key_encipherment=False,\n            non_repudiation=False\n        ),\n        subject_alternative_names=[acmpca.CfnCertificate.GeneralNameProperty(\n            directory_name=acmpca.CfnCertificate.SubjectProperty(\n                common_name=\"commonName\",\n                country=\"country\",\n                custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n                    object_identifier=\"objectIdentifier\",\n                    value=\"value\"\n                )],\n                distinguished_name_qualifier=\"distinguishedNameQualifier\",\n                generation_qualifier=\"generationQualifier\",\n                given_name=\"givenName\",\n                initials=\"initials\",\n                locality=\"locality\",\n                organization=\"organization\",\n                organizational_unit=\"organizationalUnit\",\n                pseudonym=\"pseudonym\",\n                serial_number=\"serialNumber\",\n                state=\"state\",\n                surname=\"surname\",\n                title=\"title\"\n            ),\n            dns_name=\"dnsName\",\n            edi_party_name=acmpca.CfnCertificate.EdiPartyNameProperty(\n                name_assigner=\"nameAssigner\",\n                party_name=\"partyName\"\n            ),\n            ip_address=\"ipAddress\",\n            other_name=acmpca.CfnCertificate.OtherNameProperty(\n                type_id=\"typeId\",\n                value=\"value\"\n            ),\n            registered_id=\"registeredId\",\n            rfc822_name=\"rfc822Name\",\n            uniform_resource_identifier=\"uniformResourceIdentifier\"\n        )]\n    ),\n    subject=acmpca.CfnCertificate.SubjectProperty(\n        common_name=\"commonName\",\n        country=\"country\",\n        custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n            object_identifier=\"objectIdentifier\",\n            value=\"value\"\n        )],\n        distinguished_name_qualifier=\"distinguishedNameQualifier\",\n        generation_qualifier=\"generationQualifier\",\n        given_name=\"givenName\",\n        initials=\"initials\",\n        locality=\"locality\",\n        organization=\"organization\",\n        organizational_unit=\"organizationalUnit\",\n        pseudonym=\"pseudonym\",\n        serial_number=\"serialNumber\",\n        state=\"state\",\n        surname=\"surname\",\n        title=\"title\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar apiPassthroughProperty = new ApiPassthroughProperty {\n    Extensions = new ExtensionsProperty {\n        CertificatePolicies = new [] { new PolicyInformationProperty {\n            CertPolicyId = \"certPolicyId\",\n\n            // the properties below are optional\n            PolicyQualifiers = new [] { new PolicyQualifierInfoProperty {\n                PolicyQualifierId = \"policyQualifierId\",\n                Qualifier = new QualifierProperty {\n                    CpsUri = \"cpsUri\"\n                }\n            } }\n        } },\n        CustomExtensions = new [] { new CustomExtensionProperty {\n            ObjectIdentifier = \"objectIdentifier\",\n            Value = \"value\",\n\n            // the properties below are optional\n            Critical = false\n        } },\n        ExtendedKeyUsage = new [] { new ExtendedKeyUsageProperty {\n            ExtendedKeyUsageObjectIdentifier = \"extendedKeyUsageObjectIdentifier\",\n            ExtendedKeyUsageType = \"extendedKeyUsageType\"\n        } },\n        KeyUsage = new KeyUsageProperty {\n            CrlSign = false,\n            DataEncipherment = false,\n            DecipherOnly = false,\n            DigitalSignature = false,\n            EncipherOnly = false,\n            KeyAgreement = false,\n            KeyCertSign = false,\n            KeyEncipherment = false,\n            NonRepudiation = false\n        },\n        SubjectAlternativeNames = new [] { new GeneralNameProperty {\n            DirectoryName = new SubjectProperty {\n                CommonName = \"commonName\",\n                Country = \"country\",\n                CustomAttributes = new [] { new CustomAttributeProperty {\n                    ObjectIdentifier = \"objectIdentifier\",\n                    Value = \"value\"\n                } },\n                DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n                GenerationQualifier = \"generationQualifier\",\n                GivenName = \"givenName\",\n                Initials = \"initials\",\n                Locality = \"locality\",\n                Organization = \"organization\",\n                OrganizationalUnit = \"organizationalUnit\",\n                Pseudonym = \"pseudonym\",\n                SerialNumber = \"serialNumber\",\n                State = \"state\",\n                Surname = \"surname\",\n                Title = \"title\"\n            },\n            DnsName = \"dnsName\",\n            EdiPartyName = new EdiPartyNameProperty {\n                NameAssigner = \"nameAssigner\",\n                PartyName = \"partyName\"\n            },\n            IpAddress = \"ipAddress\",\n            OtherName = new OtherNameProperty {\n                TypeId = \"typeId\",\n                Value = \"value\"\n            },\n            RegisteredId = \"registeredId\",\n            Rfc822Name = \"rfc822Name\",\n            UniformResourceIdentifier = \"uniformResourceIdentifier\"\n        } }\n    },\n    Subject = new SubjectProperty {\n        CommonName = \"commonName\",\n        Country = \"country\",\n        CustomAttributes = new [] { new CustomAttributeProperty {\n            ObjectIdentifier = \"objectIdentifier\",\n            Value = \"value\"\n        } },\n        DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n        GenerationQualifier = \"generationQualifier\",\n        GivenName = \"givenName\",\n        Initials = \"initials\",\n        Locality = \"locality\",\n        Organization = \"organization\",\n        OrganizationalUnit = \"organizationalUnit\",\n        Pseudonym = \"pseudonym\",\n        SerialNumber = \"serialNumber\",\n        State = \"state\",\n        Surname = \"surname\",\n        Title = \"title\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nApiPassthroughProperty apiPassthroughProperty = ApiPassthroughProperty.builder()\n        .extensions(ExtensionsProperty.builder()\n                .certificatePolicies(List.of(PolicyInformationProperty.builder()\n                        .certPolicyId(\"certPolicyId\")\n\n                        // the properties below are optional\n                        .policyQualifiers(List.of(PolicyQualifierInfoProperty.builder()\n                                .policyQualifierId(\"policyQualifierId\")\n                                .qualifier(QualifierProperty.builder()\n                                        .cpsUri(\"cpsUri\")\n                                        .build())\n                                .build()))\n                        .build()))\n                .customExtensions(List.of(CustomExtensionProperty.builder()\n                        .objectIdentifier(\"objectIdentifier\")\n                        .value(\"value\")\n\n                        // the properties below are optional\n                        .critical(false)\n                        .build()))\n                .extendedKeyUsage(List.of(ExtendedKeyUsageProperty.builder()\n                        .extendedKeyUsageObjectIdentifier(\"extendedKeyUsageObjectIdentifier\")\n                        .extendedKeyUsageType(\"extendedKeyUsageType\")\n                        .build()))\n                .keyUsage(KeyUsageProperty.builder()\n                        .crlSign(false)\n                        .dataEncipherment(false)\n                        .decipherOnly(false)\n                        .digitalSignature(false)\n                        .encipherOnly(false)\n                        .keyAgreement(false)\n                        .keyCertSign(false)\n                        .keyEncipherment(false)\n                        .nonRepudiation(false)\n                        .build())\n                .subjectAlternativeNames(List.of(GeneralNameProperty.builder()\n                        .directoryName(SubjectProperty.builder()\n                                .commonName(\"commonName\")\n                                .country(\"country\")\n                                .customAttributes(List.of(CustomAttributeProperty.builder()\n                                        .objectIdentifier(\"objectIdentifier\")\n                                        .value(\"value\")\n                                        .build()))\n                                .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                                .generationQualifier(\"generationQualifier\")\n                                .givenName(\"givenName\")\n                                .initials(\"initials\")\n                                .locality(\"locality\")\n                                .organization(\"organization\")\n                                .organizationalUnit(\"organizationalUnit\")\n                                .pseudonym(\"pseudonym\")\n                                .serialNumber(\"serialNumber\")\n                                .state(\"state\")\n                                .surname(\"surname\")\n                                .title(\"title\")\n                                .build())\n                        .dnsName(\"dnsName\")\n                        .ediPartyName(EdiPartyNameProperty.builder()\n                                .nameAssigner(\"nameAssigner\")\n                                .partyName(\"partyName\")\n                                .build())\n                        .ipAddress(\"ipAddress\")\n                        .otherName(OtherNameProperty.builder()\n                                .typeId(\"typeId\")\n                                .value(\"value\")\n                                .build())\n                        .registeredId(\"registeredId\")\n                        .rfc822Name(\"rfc822Name\")\n                        .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n                        .build()))\n                .build())\n        .subject(SubjectProperty.builder()\n                .commonName(\"commonName\")\n                .country(\"country\")\n                .customAttributes(List.of(CustomAttributeProperty.builder()\n                        .objectIdentifier(\"objectIdentifier\")\n                        .value(\"value\")\n                        .build()))\n                .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                .generationQualifier(\"generationQualifier\")\n                .givenName(\"givenName\")\n                .initials(\"initials\")\n                .locality(\"locality\")\n                .organization(\"organization\")\n                .organizationalUnit(\"organizationalUnit\")\n                .pseudonym(\"pseudonym\")\n                .serialNumber(\"serialNumber\")\n                .state(\"state\")\n                .surname(\"surname\")\n                .title(\"title\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\napiPassthroughProperty := &ApiPassthroughProperty{\n\tExtensions: &ExtensionsProperty{\n\t\tCertificatePolicies: []interface{}{\n\t\t\t&PolicyInformationProperty{\n\t\t\t\tCertPolicyId: jsii.String(\"certPolicyId\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tPolicyQualifiers: []interface{}{\n\t\t\t\t\t&PolicyQualifierInfoProperty{\n\t\t\t\t\t\tPolicyQualifierId: jsii.String(\"policyQualifierId\"),\n\t\t\t\t\t\tQualifier: &QualifierProperty{\n\t\t\t\t\t\t\tCpsUri: jsii.String(\"cpsUri\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tCustomExtensions: []interface{}{\n\t\t\t&CustomExtensionProperty{\n\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tCritical: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t\tExtendedKeyUsage: []interface{}{\n\t\t\t&ExtendedKeyUsageProperty{\n\t\t\t\tExtendedKeyUsageObjectIdentifier: jsii.String(\"extendedKeyUsageObjectIdentifier\"),\n\t\t\t\tExtendedKeyUsageType: jsii.String(\"extendedKeyUsageType\"),\n\t\t\t},\n\t\t},\n\t\tKeyUsage: &KeyUsageProperty{\n\t\t\tCrlSign: jsii.Boolean(false),\n\t\t\tDataEncipherment: jsii.Boolean(false),\n\t\t\tDecipherOnly: jsii.Boolean(false),\n\t\t\tDigitalSignature: jsii.Boolean(false),\n\t\t\tEncipherOnly: jsii.Boolean(false),\n\t\t\tKeyAgreement: jsii.Boolean(false),\n\t\t\tKeyCertSign: jsii.Boolean(false),\n\t\t\tKeyEncipherment: jsii.Boolean(false),\n\t\t\tNonRepudiation: jsii.Boolean(false),\n\t\t},\n\t\tSubjectAlternativeNames: []interface{}{\n\t\t\t&GeneralNameProperty{\n\t\t\t\tDirectoryName: &SubjectProperty{\n\t\t\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\t\t\tCountry: jsii.String(\"country\"),\n\t\t\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\t\t\tState: jsii.String(\"state\"),\n\t\t\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\t\t\tTitle: jsii.String(\"title\"),\n\t\t\t\t},\n\t\t\t\tDnsName: jsii.String(\"dnsName\"),\n\t\t\t\tEdiPartyName: &EdiPartyNameProperty{\n\t\t\t\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\t\t\t\tPartyName: jsii.String(\"partyName\"),\n\t\t\t\t},\n\t\t\t\tIpAddress: jsii.String(\"ipAddress\"),\n\t\t\t\tOtherName: &OtherNameProperty{\n\t\t\t\t\tTypeId: jsii.String(\"typeId\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t\tRegisteredId: jsii.String(\"registeredId\"),\n\t\t\t\tRfc822Name: jsii.String(\"rfc822Name\"),\n\t\t\t\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n\t\t\t},\n\t\t},\n\t},\n\tSubject: &SubjectProperty{\n\t\tCommonName: jsii.String(\"commonName\"),\n\t\tCountry: jsii.String(\"country\"),\n\t\tCustomAttributes: []interface{}{\n\t\t\t&CustomAttributeProperty{\n\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\tGivenName: jsii.String(\"givenName\"),\n\t\tInitials: jsii.String(\"initials\"),\n\t\tLocality: jsii.String(\"locality\"),\n\t\tOrganization: jsii.String(\"organization\"),\n\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\tState: jsii.String(\"state\"),\n\t\tSurname: jsii.String(\"surname\"),\n\t\tTitle: jsii.String(\"title\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst apiPassthroughProperty: acmpca.CfnCertificate.ApiPassthroughProperty = {\n  extensions: {\n    certificatePolicies: [{\n      certPolicyId: 'certPolicyId',\n\n      // the properties below are optional\n      policyQualifiers: [{\n        policyQualifierId: 'policyQualifierId',\n        qualifier: {\n          cpsUri: 'cpsUri',\n        },\n      }],\n    }],\n    customExtensions: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n\n      // the properties below are optional\n      critical: false,\n    }],\n    extendedKeyUsage: [{\n      extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n      extendedKeyUsageType: 'extendedKeyUsageType',\n    }],\n    keyUsage: {\n      crlSign: false,\n      dataEncipherment: false,\n      decipherOnly: false,\n      digitalSignature: false,\n      encipherOnly: false,\n      keyAgreement: false,\n      keyCertSign: false,\n      keyEncipherment: false,\n      nonRepudiation: false,\n    },\n    subjectAlternativeNames: [{\n      directoryName: {\n        commonName: 'commonName',\n        country: 'country',\n        customAttributes: [{\n          objectIdentifier: 'objectIdentifier',\n          value: 'value',\n        }],\n        distinguishedNameQualifier: 'distinguishedNameQualifier',\n        generationQualifier: 'generationQualifier',\n        givenName: 'givenName',\n        initials: 'initials',\n        locality: 'locality',\n        organization: 'organization',\n        organizationalUnit: 'organizationalUnit',\n        pseudonym: 'pseudonym',\n        serialNumber: 'serialNumber',\n        state: 'state',\n        surname: 'surname',\n        title: 'title',\n      },\n      dnsName: 'dnsName',\n      ediPartyName: {\n        nameAssigner: 'nameAssigner',\n        partyName: 'partyName',\n      },\n      ipAddress: 'ipAddress',\n      otherName: {\n        typeId: 'typeId',\n        value: 'value',\n      },\n      registeredId: 'registeredId',\n      rfc822Name: 'rfc822Name',\n      uniformResourceIdentifier: 'uniformResourceIdentifier',\n    }],\n  },\n  subject: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.ApiPassthroughProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.ApiPassthroughProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst apiPassthroughProperty: acmpca.CfnCertificate.ApiPassthroughProperty = {\n  extensions: {\n    certificatePolicies: [{\n      certPolicyId: 'certPolicyId',\n\n      // the properties below are optional\n      policyQualifiers: [{\n        policyQualifierId: 'policyQualifierId',\n        qualifier: {\n          cpsUri: 'cpsUri',\n        },\n      }],\n    }],\n    customExtensions: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n\n      // the properties below are optional\n      critical: false,\n    }],\n    extendedKeyUsage: [{\n      extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n      extendedKeyUsageType: 'extendedKeyUsageType',\n    }],\n    keyUsage: {\n      crlSign: false,\n      dataEncipherment: false,\n      decipherOnly: false,\n      digitalSignature: false,\n      encipherOnly: false,\n      keyAgreement: false,\n      keyCertSign: false,\n      keyEncipherment: false,\n      nonRepudiation: false,\n    },\n    subjectAlternativeNames: [{\n      directoryName: {\n        commonName: 'commonName',\n        country: 'country',\n        customAttributes: [{\n          objectIdentifier: 'objectIdentifier',\n          value: 'value',\n        }],\n        distinguishedNameQualifier: 'distinguishedNameQualifier',\n        generationQualifier: 'generationQualifier',\n        givenName: 'givenName',\n        initials: 'initials',\n        locality: 'locality',\n        organization: 'organization',\n        organizationalUnit: 'organizationalUnit',\n        pseudonym: 'pseudonym',\n        serialNumber: 'serialNumber',\n        state: 'state',\n        surname: 'surname',\n        title: 'title',\n      },\n      dnsName: 'dnsName',\n      ediPartyName: {\n        nameAssigner: 'nameAssigner',\n        partyName: 'partyName',\n      },\n      ipAddress: 'ipAddress',\n      otherName: {\n        typeId: 'typeId',\n        value: 'value',\n      },\n      registeredId: 'registeredId',\n      rfc822Name: 'rfc822Name',\n      uniformResourceIdentifier: 'uniformResourceIdentifier',\n    }],\n  },\n  subject: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":49,"75":77,"91":10,"153":2,"169":1,"192":7,"193":15,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":72,"290":1},"fqnsFingerprint":"6bb79e8b6b15c75b80c20f8c92e0b75caeab60e75ae22d127785f51f37359d57"},"857622afbcffaf8fe6ca83ee6f55bad4c26a5d48778ffa8f767219e0b10ddc31":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncustom_attribute_property = acmpca.CfnCertificate.CustomAttributeProperty(\n    object_identifier=\"objectIdentifier\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar customAttributeProperty = new CustomAttributeProperty {\n    ObjectIdentifier = \"objectIdentifier\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCustomAttributeProperty customAttributeProperty = CustomAttributeProperty.builder()\n        .objectIdentifier(\"objectIdentifier\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncustomAttributeProperty := &CustomAttributeProperty{\n\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst customAttributeProperty: acmpca.CfnCertificate.CustomAttributeProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.CustomAttributeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.CustomAttributeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customAttributeProperty: acmpca.CfnCertificate.CustomAttributeProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"472be916bb8d35ffb0ecf34a22e2dca126f9cb808c904f3f499b84ba804a52c3"},"bc5e6fdc9af34ca2faa6e7f69652bee08844f1e19e30a9fc8fb489e5d2f8b5f6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncustom_extension_property = acmpca.CfnCertificate.CustomExtensionProperty(\n    object_identifier=\"objectIdentifier\",\n    value=\"value\",\n\n    # the properties below are optional\n    critical=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar customExtensionProperty = new CustomExtensionProperty {\n    ObjectIdentifier = \"objectIdentifier\",\n    Value = \"value\",\n\n    // the properties below are optional\n    Critical = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCustomExtensionProperty customExtensionProperty = CustomExtensionProperty.builder()\n        .objectIdentifier(\"objectIdentifier\")\n        .value(\"value\")\n\n        // the properties below are optional\n        .critical(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncustomExtensionProperty := &CustomExtensionProperty{\n\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\tValue: jsii.String(\"value\"),\n\n\t// the properties below are optional\n\tCritical: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst customExtensionProperty: acmpca.CfnCertificate.CustomExtensionProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n\n  // the properties below are optional\n  critical: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.CustomExtensionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.CustomExtensionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customExtensionProperty: acmpca.CfnCertificate.CustomExtensionProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n\n  // the properties below are optional\n  critical: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"114cb4600970a1fbbafefbbedc65d5a7485555e4ac0c442752a17791ed3bb151"},"175fd861df0732247240bdff825089675c8f711c418411fa1680dab66f500079":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nedi_party_name_property = acmpca.CfnCertificate.EdiPartyNameProperty(\n    name_assigner=\"nameAssigner\",\n    party_name=\"partyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar ediPartyNameProperty = new EdiPartyNameProperty {\n    NameAssigner = \"nameAssigner\",\n    PartyName = \"partyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nEdiPartyNameProperty ediPartyNameProperty = EdiPartyNameProperty.builder()\n        .nameAssigner(\"nameAssigner\")\n        .partyName(\"partyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nediPartyNameProperty := &EdiPartyNameProperty{\n\tNameAssigner: jsii.String(\"nameAssigner\"),\n\tPartyName: jsii.String(\"partyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst ediPartyNameProperty: acmpca.CfnCertificate.EdiPartyNameProperty = {\n  nameAssigner: 'nameAssigner',\n  partyName: 'partyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.EdiPartyNameProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.EdiPartyNameProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ediPartyNameProperty: acmpca.CfnCertificate.EdiPartyNameProperty = {\n  nameAssigner: 'nameAssigner',\n  partyName: 'partyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"25287b78e346f06ec2336793446b447371d0221fba0844e33ed844e6b31b8326"},"ce600de4efc5aa22a4bbcfe4922cbc21fafb365599b9e6f0a5f5053c39f4d801":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nextended_key_usage_property = acmpca.CfnCertificate.ExtendedKeyUsageProperty(\n    extended_key_usage_object_identifier=\"extendedKeyUsageObjectIdentifier\",\n    extended_key_usage_type=\"extendedKeyUsageType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar extendedKeyUsageProperty = new ExtendedKeyUsageProperty {\n    ExtendedKeyUsageObjectIdentifier = \"extendedKeyUsageObjectIdentifier\",\n    ExtendedKeyUsageType = \"extendedKeyUsageType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nExtendedKeyUsageProperty extendedKeyUsageProperty = ExtendedKeyUsageProperty.builder()\n        .extendedKeyUsageObjectIdentifier(\"extendedKeyUsageObjectIdentifier\")\n        .extendedKeyUsageType(\"extendedKeyUsageType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nextendedKeyUsageProperty := &ExtendedKeyUsageProperty{\n\tExtendedKeyUsageObjectIdentifier: jsii.String(\"extendedKeyUsageObjectIdentifier\"),\n\tExtendedKeyUsageType: jsii.String(\"extendedKeyUsageType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst extendedKeyUsageProperty: acmpca.CfnCertificate.ExtendedKeyUsageProperty = {\n  extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n  extendedKeyUsageType: 'extendedKeyUsageType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.ExtendedKeyUsageProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.ExtendedKeyUsageProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst extendedKeyUsageProperty: acmpca.CfnCertificate.ExtendedKeyUsageProperty = {\n  extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n  extendedKeyUsageType: 'extendedKeyUsageType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"828ad51e0bbb682db76e53768e9ddf436defb58c4ae7fb3a52ca8d51c929fc68"},"13d3b1a667c7c895b95e441dedffb8a3830643f9fbabb87696802758cde78ec6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nextensions_property = acmpca.CfnCertificate.ExtensionsProperty(\n    certificate_policies=[acmpca.CfnCertificate.PolicyInformationProperty(\n        cert_policy_id=\"certPolicyId\",\n\n        # the properties below are optional\n        policy_qualifiers=[acmpca.CfnCertificate.PolicyQualifierInfoProperty(\n            policy_qualifier_id=\"policyQualifierId\",\n            qualifier=acmpca.CfnCertificate.QualifierProperty(\n                cps_uri=\"cpsUri\"\n            )\n        )]\n    )],\n    custom_extensions=[acmpca.CfnCertificate.CustomExtensionProperty(\n        object_identifier=\"objectIdentifier\",\n        value=\"value\",\n\n        # the properties below are optional\n        critical=False\n    )],\n    extended_key_usage=[acmpca.CfnCertificate.ExtendedKeyUsageProperty(\n        extended_key_usage_object_identifier=\"extendedKeyUsageObjectIdentifier\",\n        extended_key_usage_type=\"extendedKeyUsageType\"\n    )],\n    key_usage=acmpca.CfnCertificate.KeyUsageProperty(\n        crl_sign=False,\n        data_encipherment=False,\n        decipher_only=False,\n        digital_signature=False,\n        encipher_only=False,\n        key_agreement=False,\n        key_cert_sign=False,\n        key_encipherment=False,\n        non_repudiation=False\n    ),\n    subject_alternative_names=[acmpca.CfnCertificate.GeneralNameProperty(\n        directory_name=acmpca.CfnCertificate.SubjectProperty(\n            common_name=\"commonName\",\n            country=\"country\",\n            custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n                object_identifier=\"objectIdentifier\",\n                value=\"value\"\n            )],\n            distinguished_name_qualifier=\"distinguishedNameQualifier\",\n            generation_qualifier=\"generationQualifier\",\n            given_name=\"givenName\",\n            initials=\"initials\",\n            locality=\"locality\",\n            organization=\"organization\",\n            organizational_unit=\"organizationalUnit\",\n            pseudonym=\"pseudonym\",\n            serial_number=\"serialNumber\",\n            state=\"state\",\n            surname=\"surname\",\n            title=\"title\"\n        ),\n        dns_name=\"dnsName\",\n        edi_party_name=acmpca.CfnCertificate.EdiPartyNameProperty(\n            name_assigner=\"nameAssigner\",\n            party_name=\"partyName\"\n        ),\n        ip_address=\"ipAddress\",\n        other_name=acmpca.CfnCertificate.OtherNameProperty(\n            type_id=\"typeId\",\n            value=\"value\"\n        ),\n        registered_id=\"registeredId\",\n        rfc822_name=\"rfc822Name\",\n        uniform_resource_identifier=\"uniformResourceIdentifier\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar extensionsProperty = new ExtensionsProperty {\n    CertificatePolicies = new [] { new PolicyInformationProperty {\n        CertPolicyId = \"certPolicyId\",\n\n        // the properties below are optional\n        PolicyQualifiers = new [] { new PolicyQualifierInfoProperty {\n            PolicyQualifierId = \"policyQualifierId\",\n            Qualifier = new QualifierProperty {\n                CpsUri = \"cpsUri\"\n            }\n        } }\n    } },\n    CustomExtensions = new [] { new CustomExtensionProperty {\n        ObjectIdentifier = \"objectIdentifier\",\n        Value = \"value\",\n\n        // the properties below are optional\n        Critical = false\n    } },\n    ExtendedKeyUsage = new [] { new ExtendedKeyUsageProperty {\n        ExtendedKeyUsageObjectIdentifier = \"extendedKeyUsageObjectIdentifier\",\n        ExtendedKeyUsageType = \"extendedKeyUsageType\"\n    } },\n    KeyUsage = new KeyUsageProperty {\n        CrlSign = false,\n        DataEncipherment = false,\n        DecipherOnly = false,\n        DigitalSignature = false,\n        EncipherOnly = false,\n        KeyAgreement = false,\n        KeyCertSign = false,\n        KeyEncipherment = false,\n        NonRepudiation = false\n    },\n    SubjectAlternativeNames = new [] { new GeneralNameProperty {\n        DirectoryName = new SubjectProperty {\n            CommonName = \"commonName\",\n            Country = \"country\",\n            CustomAttributes = new [] { new CustomAttributeProperty {\n                ObjectIdentifier = \"objectIdentifier\",\n                Value = \"value\"\n            } },\n            DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n            GenerationQualifier = \"generationQualifier\",\n            GivenName = \"givenName\",\n            Initials = \"initials\",\n            Locality = \"locality\",\n            Organization = \"organization\",\n            OrganizationalUnit = \"organizationalUnit\",\n            Pseudonym = \"pseudonym\",\n            SerialNumber = \"serialNumber\",\n            State = \"state\",\n            Surname = \"surname\",\n            Title = \"title\"\n        },\n        DnsName = \"dnsName\",\n        EdiPartyName = new EdiPartyNameProperty {\n            NameAssigner = \"nameAssigner\",\n            PartyName = \"partyName\"\n        },\n        IpAddress = \"ipAddress\",\n        OtherName = new OtherNameProperty {\n            TypeId = \"typeId\",\n            Value = \"value\"\n        },\n        RegisteredId = \"registeredId\",\n        Rfc822Name = \"rfc822Name\",\n        UniformResourceIdentifier = \"uniformResourceIdentifier\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nExtensionsProperty extensionsProperty = ExtensionsProperty.builder()\n        .certificatePolicies(List.of(PolicyInformationProperty.builder()\n                .certPolicyId(\"certPolicyId\")\n\n                // the properties below are optional\n                .policyQualifiers(List.of(PolicyQualifierInfoProperty.builder()\n                        .policyQualifierId(\"policyQualifierId\")\n                        .qualifier(QualifierProperty.builder()\n                                .cpsUri(\"cpsUri\")\n                                .build())\n                        .build()))\n                .build()))\n        .customExtensions(List.of(CustomExtensionProperty.builder()\n                .objectIdentifier(\"objectIdentifier\")\n                .value(\"value\")\n\n                // the properties below are optional\n                .critical(false)\n                .build()))\n        .extendedKeyUsage(List.of(ExtendedKeyUsageProperty.builder()\n                .extendedKeyUsageObjectIdentifier(\"extendedKeyUsageObjectIdentifier\")\n                .extendedKeyUsageType(\"extendedKeyUsageType\")\n                .build()))\n        .keyUsage(KeyUsageProperty.builder()\n                .crlSign(false)\n                .dataEncipherment(false)\n                .decipherOnly(false)\n                .digitalSignature(false)\n                .encipherOnly(false)\n                .keyAgreement(false)\n                .keyCertSign(false)\n                .keyEncipherment(false)\n                .nonRepudiation(false)\n                .build())\n        .subjectAlternativeNames(List.of(GeneralNameProperty.builder()\n                .directoryName(SubjectProperty.builder()\n                        .commonName(\"commonName\")\n                        .country(\"country\")\n                        .customAttributes(List.of(CustomAttributeProperty.builder()\n                                .objectIdentifier(\"objectIdentifier\")\n                                .value(\"value\")\n                                .build()))\n                        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                        .generationQualifier(\"generationQualifier\")\n                        .givenName(\"givenName\")\n                        .initials(\"initials\")\n                        .locality(\"locality\")\n                        .organization(\"organization\")\n                        .organizationalUnit(\"organizationalUnit\")\n                        .pseudonym(\"pseudonym\")\n                        .serialNumber(\"serialNumber\")\n                        .state(\"state\")\n                        .surname(\"surname\")\n                        .title(\"title\")\n                        .build())\n                .dnsName(\"dnsName\")\n                .ediPartyName(EdiPartyNameProperty.builder()\n                        .nameAssigner(\"nameAssigner\")\n                        .partyName(\"partyName\")\n                        .build())\n                .ipAddress(\"ipAddress\")\n                .otherName(OtherNameProperty.builder()\n                        .typeId(\"typeId\")\n                        .value(\"value\")\n                        .build())\n                .registeredId(\"registeredId\")\n                .rfc822Name(\"rfc822Name\")\n                .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nextensionsProperty := &ExtensionsProperty{\n\tCertificatePolicies: []interface{}{\n\t\t&PolicyInformationProperty{\n\t\t\tCertPolicyId: jsii.String(\"certPolicyId\"),\n\n\t\t\t// the properties below are optional\n\t\t\tPolicyQualifiers: []interface{}{\n\t\t\t\t&PolicyQualifierInfoProperty{\n\t\t\t\t\tPolicyQualifierId: jsii.String(\"policyQualifierId\"),\n\t\t\t\t\tQualifier: &QualifierProperty{\n\t\t\t\t\t\tCpsUri: jsii.String(\"cpsUri\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tCustomExtensions: []interface{}{\n\t\t&CustomExtensionProperty{\n\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\tValue: jsii.String(\"value\"),\n\n\t\t\t// the properties below are optional\n\t\t\tCritical: jsii.Boolean(false),\n\t\t},\n\t},\n\tExtendedKeyUsage: []interface{}{\n\t\t&ExtendedKeyUsageProperty{\n\t\t\tExtendedKeyUsageObjectIdentifier: jsii.String(\"extendedKeyUsageObjectIdentifier\"),\n\t\t\tExtendedKeyUsageType: jsii.String(\"extendedKeyUsageType\"),\n\t\t},\n\t},\n\tKeyUsage: &KeyUsageProperty{\n\t\tCrlSign: jsii.Boolean(false),\n\t\tDataEncipherment: jsii.Boolean(false),\n\t\tDecipherOnly: jsii.Boolean(false),\n\t\tDigitalSignature: jsii.Boolean(false),\n\t\tEncipherOnly: jsii.Boolean(false),\n\t\tKeyAgreement: jsii.Boolean(false),\n\t\tKeyCertSign: jsii.Boolean(false),\n\t\tKeyEncipherment: jsii.Boolean(false),\n\t\tNonRepudiation: jsii.Boolean(false),\n\t},\n\tSubjectAlternativeNames: []interface{}{\n\t\t&GeneralNameProperty{\n\t\t\tDirectoryName: &SubjectProperty{\n\t\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\t\tCountry: jsii.String(\"country\"),\n\t\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\t\tState: jsii.String(\"state\"),\n\t\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\t\tTitle: jsii.String(\"title\"),\n\t\t\t},\n\t\t\tDnsName: jsii.String(\"dnsName\"),\n\t\t\tEdiPartyName: &EdiPartyNameProperty{\n\t\t\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\t\t\tPartyName: jsii.String(\"partyName\"),\n\t\t\t},\n\t\t\tIpAddress: jsii.String(\"ipAddress\"),\n\t\t\tOtherName: &OtherNameProperty{\n\t\t\t\tTypeId: jsii.String(\"typeId\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t},\n\t\t\tRegisteredId: jsii.String(\"registeredId\"),\n\t\t\tRfc822Name: jsii.String(\"rfc822Name\"),\n\t\t\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst extensionsProperty: acmpca.CfnCertificate.ExtensionsProperty = {\n  certificatePolicies: [{\n    certPolicyId: 'certPolicyId',\n\n    // the properties below are optional\n    policyQualifiers: [{\n      policyQualifierId: 'policyQualifierId',\n      qualifier: {\n        cpsUri: 'cpsUri',\n      },\n    }],\n  }],\n  customExtensions: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n\n    // the properties below are optional\n    critical: false,\n  }],\n  extendedKeyUsage: [{\n    extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n    extendedKeyUsageType: 'extendedKeyUsageType',\n  }],\n  keyUsage: {\n    crlSign: false,\n    dataEncipherment: false,\n    decipherOnly: false,\n    digitalSignature: false,\n    encipherOnly: false,\n    keyAgreement: false,\n    keyCertSign: false,\n    keyEncipherment: false,\n    nonRepudiation: false,\n  },\n  subjectAlternativeNames: [{\n    directoryName: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n    dnsName: 'dnsName',\n    ediPartyName: {\n      nameAssigner: 'nameAssigner',\n      partyName: 'partyName',\n    },\n    ipAddress: 'ipAddress',\n    otherName: {\n      typeId: 'typeId',\n      value: 'value',\n    },\n    registeredId: 'registeredId',\n    rfc822Name: 'rfc822Name',\n    uniformResourceIdentifier: 'uniformResourceIdentifier',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.ExtensionsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.ExtensionsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst extensionsProperty: acmpca.CfnCertificate.ExtensionsProperty = {\n  certificatePolicies: [{\n    certPolicyId: 'certPolicyId',\n\n    // the properties below are optional\n    policyQualifiers: [{\n      policyQualifierId: 'policyQualifierId',\n      qualifier: {\n        cpsUri: 'cpsUri',\n      },\n    }],\n  }],\n  customExtensions: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n\n    // the properties below are optional\n    critical: false,\n  }],\n  extendedKeyUsage: [{\n    extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n    extendedKeyUsageType: 'extendedKeyUsageType',\n  }],\n  keyUsage: {\n    crlSign: false,\n    dataEncipherment: false,\n    decipherOnly: false,\n    digitalSignature: false,\n    encipherOnly: false,\n    keyAgreement: false,\n    keyCertSign: false,\n    keyEncipherment: false,\n    nonRepudiation: false,\n  },\n  subjectAlternativeNames: [{\n    directoryName: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n    dnsName: 'dnsName',\n    ediPartyName: {\n      nameAssigner: 'nameAssigner',\n      partyName: 'partyName',\n    },\n    ipAddress: 'ipAddress',\n    otherName: {\n      typeId: 'typeId',\n      value: 'value',\n    },\n    registeredId: 'registeredId',\n    rfc822Name: 'rfc822Name',\n    uniformResourceIdentifier: 'uniformResourceIdentifier',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":33,"75":58,"91":10,"153":2,"169":1,"192":6,"193":12,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":53,"290":1},"fqnsFingerprint":"d03319ce782f51450de529e51b112ebc5c2cfdd95367f402a589431e25478465"},"3d2ba604e8513854871f35c2ce30a7391f3263fb08e717426abeb3dbed4d5a49":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ngeneral_name_property = acmpca.CfnCertificate.GeneralNameProperty(\n    directory_name=acmpca.CfnCertificate.SubjectProperty(\n        common_name=\"commonName\",\n        country=\"country\",\n        custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n            object_identifier=\"objectIdentifier\",\n            value=\"value\"\n        )],\n        distinguished_name_qualifier=\"distinguishedNameQualifier\",\n        generation_qualifier=\"generationQualifier\",\n        given_name=\"givenName\",\n        initials=\"initials\",\n        locality=\"locality\",\n        organization=\"organization\",\n        organizational_unit=\"organizationalUnit\",\n        pseudonym=\"pseudonym\",\n        serial_number=\"serialNumber\",\n        state=\"state\",\n        surname=\"surname\",\n        title=\"title\"\n    ),\n    dns_name=\"dnsName\",\n    edi_party_name=acmpca.CfnCertificate.EdiPartyNameProperty(\n        name_assigner=\"nameAssigner\",\n        party_name=\"partyName\"\n    ),\n    ip_address=\"ipAddress\",\n    other_name=acmpca.CfnCertificate.OtherNameProperty(\n        type_id=\"typeId\",\n        value=\"value\"\n    ),\n    registered_id=\"registeredId\",\n    rfc822_name=\"rfc822Name\",\n    uniform_resource_identifier=\"uniformResourceIdentifier\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar generalNameProperty = new GeneralNameProperty {\n    DirectoryName = new SubjectProperty {\n        CommonName = \"commonName\",\n        Country = \"country\",\n        CustomAttributes = new [] { new CustomAttributeProperty {\n            ObjectIdentifier = \"objectIdentifier\",\n            Value = \"value\"\n        } },\n        DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n        GenerationQualifier = \"generationQualifier\",\n        GivenName = \"givenName\",\n        Initials = \"initials\",\n        Locality = \"locality\",\n        Organization = \"organization\",\n        OrganizationalUnit = \"organizationalUnit\",\n        Pseudonym = \"pseudonym\",\n        SerialNumber = \"serialNumber\",\n        State = \"state\",\n        Surname = \"surname\",\n        Title = \"title\"\n    },\n    DnsName = \"dnsName\",\n    EdiPartyName = new EdiPartyNameProperty {\n        NameAssigner = \"nameAssigner\",\n        PartyName = \"partyName\"\n    },\n    IpAddress = \"ipAddress\",\n    OtherName = new OtherNameProperty {\n        TypeId = \"typeId\",\n        Value = \"value\"\n    },\n    RegisteredId = \"registeredId\",\n    Rfc822Name = \"rfc822Name\",\n    UniformResourceIdentifier = \"uniformResourceIdentifier\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nGeneralNameProperty generalNameProperty = GeneralNameProperty.builder()\n        .directoryName(SubjectProperty.builder()\n                .commonName(\"commonName\")\n                .country(\"country\")\n                .customAttributes(List.of(CustomAttributeProperty.builder()\n                        .objectIdentifier(\"objectIdentifier\")\n                        .value(\"value\")\n                        .build()))\n                .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                .generationQualifier(\"generationQualifier\")\n                .givenName(\"givenName\")\n                .initials(\"initials\")\n                .locality(\"locality\")\n                .organization(\"organization\")\n                .organizationalUnit(\"organizationalUnit\")\n                .pseudonym(\"pseudonym\")\n                .serialNumber(\"serialNumber\")\n                .state(\"state\")\n                .surname(\"surname\")\n                .title(\"title\")\n                .build())\n        .dnsName(\"dnsName\")\n        .ediPartyName(EdiPartyNameProperty.builder()\n                .nameAssigner(\"nameAssigner\")\n                .partyName(\"partyName\")\n                .build())\n        .ipAddress(\"ipAddress\")\n        .otherName(OtherNameProperty.builder()\n                .typeId(\"typeId\")\n                .value(\"value\")\n                .build())\n        .registeredId(\"registeredId\")\n        .rfc822Name(\"rfc822Name\")\n        .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ngeneralNameProperty := &GeneralNameProperty{\n\tDirectoryName: &SubjectProperty{\n\t\tCommonName: jsii.String(\"commonName\"),\n\t\tCountry: jsii.String(\"country\"),\n\t\tCustomAttributes: []interface{}{\n\t\t\t&CustomAttributeProperty{\n\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\tGivenName: jsii.String(\"givenName\"),\n\t\tInitials: jsii.String(\"initials\"),\n\t\tLocality: jsii.String(\"locality\"),\n\t\tOrganization: jsii.String(\"organization\"),\n\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\tState: jsii.String(\"state\"),\n\t\tSurname: jsii.String(\"surname\"),\n\t\tTitle: jsii.String(\"title\"),\n\t},\n\tDnsName: jsii.String(\"dnsName\"),\n\tEdiPartyName: &EdiPartyNameProperty{\n\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\tPartyName: jsii.String(\"partyName\"),\n\t},\n\tIpAddress: jsii.String(\"ipAddress\"),\n\tOtherName: &OtherNameProperty{\n\t\tTypeId: jsii.String(\"typeId\"),\n\t\tValue: jsii.String(\"value\"),\n\t},\n\tRegisteredId: jsii.String(\"registeredId\"),\n\tRfc822Name: jsii.String(\"rfc822Name\"),\n\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst generalNameProperty: acmpca.CfnCertificate.GeneralNameProperty = {\n  directoryName: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n  dnsName: 'dnsName',\n  ediPartyName: {\n    nameAssigner: 'nameAssigner',\n    partyName: 'partyName',\n  },\n  ipAddress: 'ipAddress',\n  otherName: {\n    typeId: 'typeId',\n    value: 'value',\n  },\n  registeredId: 'registeredId',\n  rfc822Name: 'rfc822Name',\n  uniformResourceIdentifier: 'uniformResourceIdentifier',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.GeneralNameProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.GeneralNameProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst generalNameProperty: acmpca.CfnCertificate.GeneralNameProperty = {\n  directoryName: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n  dnsName: 'dnsName',\n  ediPartyName: {\n    nameAssigner: 'nameAssigner',\n    partyName: 'partyName',\n  },\n  ipAddress: 'ipAddress',\n  otherName: {\n    typeId: 'typeId',\n    value: 'value',\n  },\n  registeredId: 'registeredId',\n  rfc822Name: 'rfc822Name',\n  uniformResourceIdentifier: 'uniformResourceIdentifier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":26,"75":34,"153":2,"169":1,"192":1,"193":5,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":29,"290":1},"fqnsFingerprint":"647af0161d1ae6aef31bbf2b4fd15f154d2c0a1a893e7e24917826353105b466"},"1b8217f1e24accb60c1683f4aef29df069145e859597eae769c59f1acda2b75b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nkey_usage_property = acmpca.CfnCertificate.KeyUsageProperty(\n    crl_sign=False,\n    data_encipherment=False,\n    decipher_only=False,\n    digital_signature=False,\n    encipher_only=False,\n    key_agreement=False,\n    key_cert_sign=False,\n    key_encipherment=False,\n    non_repudiation=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar keyUsageProperty = new KeyUsageProperty {\n    CrlSign = false,\n    DataEncipherment = false,\n    DecipherOnly = false,\n    DigitalSignature = false,\n    EncipherOnly = false,\n    KeyAgreement = false,\n    KeyCertSign = false,\n    KeyEncipherment = false,\n    NonRepudiation = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nKeyUsageProperty keyUsageProperty = KeyUsageProperty.builder()\n        .crlSign(false)\n        .dataEncipherment(false)\n        .decipherOnly(false)\n        .digitalSignature(false)\n        .encipherOnly(false)\n        .keyAgreement(false)\n        .keyCertSign(false)\n        .keyEncipherment(false)\n        .nonRepudiation(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nkeyUsageProperty := &KeyUsageProperty{\n\tCrlSign: jsii.Boolean(false),\n\tDataEncipherment: jsii.Boolean(false),\n\tDecipherOnly: jsii.Boolean(false),\n\tDigitalSignature: jsii.Boolean(false),\n\tEncipherOnly: jsii.Boolean(false),\n\tKeyAgreement: jsii.Boolean(false),\n\tKeyCertSign: jsii.Boolean(false),\n\tKeyEncipherment: jsii.Boolean(false),\n\tNonRepudiation: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst keyUsageProperty: acmpca.CfnCertificate.KeyUsageProperty = {\n  crlSign: false,\n  dataEncipherment: false,\n  decipherOnly: false,\n  digitalSignature: false,\n  encipherOnly: false,\n  keyAgreement: false,\n  keyCertSign: false,\n  keyEncipherment: false,\n  nonRepudiation: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.KeyUsageProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.KeyUsageProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst keyUsageProperty: acmpca.CfnCertificate.KeyUsageProperty = {\n  crlSign: false,\n  dataEncipherment: false,\n  decipherOnly: false,\n  digitalSignature: false,\n  encipherOnly: false,\n  keyAgreement: false,\n  keyCertSign: false,\n  keyEncipherment: false,\n  nonRepudiation: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":14,"91":9,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"7f53b4b757d5d6fcc9cb9d6bf6d679479cacfdc23039bdc92187f45818b45b53"},"d0d64816f69b79da74170f6a38053a322ae6554cea9f39b6198eec7f717f8477":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nother_name_property = acmpca.CfnCertificate.OtherNameProperty(\n    type_id=\"typeId\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar otherNameProperty = new OtherNameProperty {\n    TypeId = \"typeId\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nOtherNameProperty otherNameProperty = OtherNameProperty.builder()\n        .typeId(\"typeId\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\notherNameProperty := &OtherNameProperty{\n\tTypeId: jsii.String(\"typeId\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst otherNameProperty: acmpca.CfnCertificate.OtherNameProperty = {\n  typeId: 'typeId',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.OtherNameProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.OtherNameProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst otherNameProperty: acmpca.CfnCertificate.OtherNameProperty = {\n  typeId: 'typeId',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"3dc440637633e82d76ade5f9c97f30ca16090624a0a0dfcddd9e2aff477cc9f3"},"47217fd0745fe943cabbf76252595526652e6763a8cc98d9f9c6e792d0e374a2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\npolicy_information_property = acmpca.CfnCertificate.PolicyInformationProperty(\n    cert_policy_id=\"certPolicyId\",\n\n    # the properties below are optional\n    policy_qualifiers=[acmpca.CfnCertificate.PolicyQualifierInfoProperty(\n        policy_qualifier_id=\"policyQualifierId\",\n        qualifier=acmpca.CfnCertificate.QualifierProperty(\n            cps_uri=\"cpsUri\"\n        )\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar policyInformationProperty = new PolicyInformationProperty {\n    CertPolicyId = \"certPolicyId\",\n\n    // the properties below are optional\n    PolicyQualifiers = new [] { new PolicyQualifierInfoProperty {\n        PolicyQualifierId = \"policyQualifierId\",\n        Qualifier = new QualifierProperty {\n            CpsUri = \"cpsUri\"\n        }\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nPolicyInformationProperty policyInformationProperty = PolicyInformationProperty.builder()\n        .certPolicyId(\"certPolicyId\")\n\n        // the properties below are optional\n        .policyQualifiers(List.of(PolicyQualifierInfoProperty.builder()\n                .policyQualifierId(\"policyQualifierId\")\n                .qualifier(QualifierProperty.builder()\n                        .cpsUri(\"cpsUri\")\n                        .build())\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\npolicyInformationProperty := &PolicyInformationProperty{\n\tCertPolicyId: jsii.String(\"certPolicyId\"),\n\n\t// the properties below are optional\n\tPolicyQualifiers: []interface{}{\n\t\t&PolicyQualifierInfoProperty{\n\t\t\tPolicyQualifierId: jsii.String(\"policyQualifierId\"),\n\t\t\tQualifier: &QualifierProperty{\n\t\t\t\tCpsUri: jsii.String(\"cpsUri\"),\n\t\t\t},\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst policyInformationProperty: acmpca.CfnCertificate.PolicyInformationProperty = {\n  certPolicyId: 'certPolicyId',\n\n  // the properties below are optional\n  policyQualifiers: [{\n    policyQualifierId: 'policyQualifierId',\n    qualifier: {\n      cpsUri: 'cpsUri',\n    },\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.PolicyInformationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.PolicyInformationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policyInformationProperty: acmpca.CfnCertificate.PolicyInformationProperty = {\n  certPolicyId: 'certPolicyId',\n\n  // the properties below are optional\n  policyQualifiers: [{\n    policyQualifierId: 'policyQualifierId',\n    qualifier: {\n      cpsUri: 'cpsUri',\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":10,"153":2,"169":1,"192":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"984ac3bbc652c64c3d2747d2a87ac8aac5ba24b5d66ac5f723c3f7732bdbb50a"},"bc1dce5e66383849fc7d6f7d2ec9c9f541eba97afa2561ff25c9a7fd5a9b1eb0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\npolicy_qualifier_info_property = acmpca.CfnCertificate.PolicyQualifierInfoProperty(\n    policy_qualifier_id=\"policyQualifierId\",\n    qualifier=acmpca.CfnCertificate.QualifierProperty(\n        cps_uri=\"cpsUri\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar policyQualifierInfoProperty = new PolicyQualifierInfoProperty {\n    PolicyQualifierId = \"policyQualifierId\",\n    Qualifier = new QualifierProperty {\n        CpsUri = \"cpsUri\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nPolicyQualifierInfoProperty policyQualifierInfoProperty = PolicyQualifierInfoProperty.builder()\n        .policyQualifierId(\"policyQualifierId\")\n        .qualifier(QualifierProperty.builder()\n                .cpsUri(\"cpsUri\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\npolicyQualifierInfoProperty := &PolicyQualifierInfoProperty{\n\tPolicyQualifierId: jsii.String(\"policyQualifierId\"),\n\tQualifier: &QualifierProperty{\n\t\tCpsUri: jsii.String(\"cpsUri\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst policyQualifierInfoProperty: acmpca.CfnCertificate.PolicyQualifierInfoProperty = {\n  policyQualifierId: 'policyQualifierId',\n  qualifier: {\n    cpsUri: 'cpsUri',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.PolicyQualifierInfoProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.PolicyQualifierInfoProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policyQualifierInfoProperty: acmpca.CfnCertificate.PolicyQualifierInfoProperty = {\n  policyQualifierId: 'policyQualifierId',\n  qualifier: {\n    cpsUri: 'cpsUri',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"153":2,"169":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"1f737085d9b0646f37bd89239aafe89b45391aa6642b8d6acde7f11e0f367be1"},"17b907d82f033aef7b7a3c7d58907a6499998d9965a37a2ba2fce67672861479":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nqualifier_property = acmpca.CfnCertificate.QualifierProperty(\n    cps_uri=\"cpsUri\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar qualifierProperty = new QualifierProperty {\n    CpsUri = \"cpsUri\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nQualifierProperty qualifierProperty = QualifierProperty.builder()\n        .cpsUri(\"cpsUri\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nqualifierProperty := &QualifierProperty{\n\tCpsUri: jsii.String(\"cpsUri\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst qualifierProperty: acmpca.CfnCertificate.QualifierProperty = {\n  cpsUri: 'cpsUri',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.QualifierProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.QualifierProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst qualifierProperty: acmpca.CfnCertificate.QualifierProperty = {\n  cpsUri: 'cpsUri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"4da894880fd6195cbbb20f1a981708b4e8f4e6f2c7447826ea5e51013396e3b3"},"efa79c57373f68598517b8cc05744c4221265e1b8d63da68887e80007c6ac0dc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nsubject_property = acmpca.CfnCertificate.SubjectProperty(\n    common_name=\"commonName\",\n    country=\"country\",\n    custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n        object_identifier=\"objectIdentifier\",\n        value=\"value\"\n    )],\n    distinguished_name_qualifier=\"distinguishedNameQualifier\",\n    generation_qualifier=\"generationQualifier\",\n    given_name=\"givenName\",\n    initials=\"initials\",\n    locality=\"locality\",\n    organization=\"organization\",\n    organizational_unit=\"organizationalUnit\",\n    pseudonym=\"pseudonym\",\n    serial_number=\"serialNumber\",\n    state=\"state\",\n    surname=\"surname\",\n    title=\"title\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar subjectProperty = new SubjectProperty {\n    CommonName = \"commonName\",\n    Country = \"country\",\n    CustomAttributes = new [] { new CustomAttributeProperty {\n        ObjectIdentifier = \"objectIdentifier\",\n        Value = \"value\"\n    } },\n    DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n    GenerationQualifier = \"generationQualifier\",\n    GivenName = \"givenName\",\n    Initials = \"initials\",\n    Locality = \"locality\",\n    Organization = \"organization\",\n    OrganizationalUnit = \"organizationalUnit\",\n    Pseudonym = \"pseudonym\",\n    SerialNumber = \"serialNumber\",\n    State = \"state\",\n    Surname = \"surname\",\n    Title = \"title\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nSubjectProperty subjectProperty = SubjectProperty.builder()\n        .commonName(\"commonName\")\n        .country(\"country\")\n        .customAttributes(List.of(CustomAttributeProperty.builder()\n                .objectIdentifier(\"objectIdentifier\")\n                .value(\"value\")\n                .build()))\n        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n        .generationQualifier(\"generationQualifier\")\n        .givenName(\"givenName\")\n        .initials(\"initials\")\n        .locality(\"locality\")\n        .organization(\"organization\")\n        .organizationalUnit(\"organizationalUnit\")\n        .pseudonym(\"pseudonym\")\n        .serialNumber(\"serialNumber\")\n        .state(\"state\")\n        .surname(\"surname\")\n        .title(\"title\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nsubjectProperty := &SubjectProperty{\n\tCommonName: jsii.String(\"commonName\"),\n\tCountry: jsii.String(\"country\"),\n\tCustomAttributes: []interface{}{\n\t\t&CustomAttributeProperty{\n\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\tGivenName: jsii.String(\"givenName\"),\n\tInitials: jsii.String(\"initials\"),\n\tLocality: jsii.String(\"locality\"),\n\tOrganization: jsii.String(\"organization\"),\n\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\tPseudonym: jsii.String(\"pseudonym\"),\n\tSerialNumber: jsii.String(\"serialNumber\"),\n\tState: jsii.String(\"state\"),\n\tSurname: jsii.String(\"surname\"),\n\tTitle: jsii.String(\"title\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst subjectProperty: acmpca.CfnCertificate.SubjectProperty = {\n  commonName: 'commonName',\n  country: 'country',\n  customAttributes: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n  }],\n  distinguishedNameQualifier: 'distinguishedNameQualifier',\n  generationQualifier: 'generationQualifier',\n  givenName: 'givenName',\n  initials: 'initials',\n  locality: 'locality',\n  organization: 'organization',\n  organizationalUnit: 'organizationalUnit',\n  pseudonym: 'pseudonym',\n  serialNumber: 'serialNumber',\n  state: 'state',\n  surname: 'surname',\n  title: 'title',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.SubjectProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.SubjectProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst subjectProperty: acmpca.CfnCertificate.SubjectProperty = {\n  commonName: 'commonName',\n  country: 'country',\n  customAttributes: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n  }],\n  distinguishedNameQualifier: 'distinguishedNameQualifier',\n  generationQualifier: 'generationQualifier',\n  givenName: 'givenName',\n  initials: 'initials',\n  locality: 'locality',\n  organization: 'organization',\n  organizationalUnit: 'organizationalUnit',\n  pseudonym: 'pseudonym',\n  serialNumber: 'serialNumber',\n  state: 'state',\n  surname: 'surname',\n  title: 'title',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":17,"75":22,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":17,"290":1},"fqnsFingerprint":"44e74af950f03177ae5c11cd6fd2649d194da82176c00d6dfb30ca95d0059d91"},"f502ee95af663b28717326aceffdc79928a6f16275eb856461d4951655e91603":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nvalidity_property = acmpca.CfnCertificate.ValidityProperty(\n    type=\"type\",\n    value=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar validityProperty = new ValidityProperty {\n    Type = \"type\",\n    Value = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nValidityProperty validityProperty = ValidityProperty.builder()\n        .type(\"type\")\n        .value(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nvalidityProperty := &ValidityProperty{\n\tType: jsii.String(\"type\"),\n\tValue: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst validityProperty: acmpca.CfnCertificate.ValidityProperty = {\n  type: 'type',\n  value: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificate.ValidityProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst validityProperty: acmpca.CfnCertificate.ValidityProperty = {\n  type: 'type',\n  value: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":2,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"66527eec2b711629d999d6eb0234628383e3bc04d64acdacaab7c6f5cb6c8f83"},"6a59fb7a93616a89faa8630d633612eb1c8d205d19fd7d517f48bbe3cc0992c6":{"translations":{"python":{"source":"cfn_certificate_authority = acmpca.CfnCertificateAuthority(self, \"CA\",\n    type=\"ROOT\",\n    key_algorithm=\"RSA_2048\",\n    signing_algorithm=\"SHA256WITHRSA\",\n    subject=acmpca.CfnCertificateAuthority.SubjectProperty(\n        country=\"US\",\n        organization=\"string\",\n        organizational_unit=\"string\",\n        distinguished_name_qualifier=\"string\",\n        state=\"string\",\n        common_name=\"123\",\n        serial_number=\"string\",\n        locality=\"string\",\n        title=\"string\",\n        surname=\"string\",\n        given_name=\"string\",\n        initials=\"DG\",\n        pseudonym=\"string\",\n        generation_qualifier=\"DBG\"\n    )\n)","version":"2"},"csharp":{"source":"var cfnCertificateAuthority = new CfnCertificateAuthority(this, \"CA\", new CfnCertificateAuthorityProps {\n    Type = \"ROOT\",\n    KeyAlgorithm = \"RSA_2048\",\n    SigningAlgorithm = \"SHA256WITHRSA\",\n    Subject = new SubjectProperty {\n        Country = \"US\",\n        Organization = \"string\",\n        OrganizationalUnit = \"string\",\n        DistinguishedNameQualifier = \"string\",\n        State = \"string\",\n        CommonName = \"123\",\n        SerialNumber = \"string\",\n        Locality = \"string\",\n        Title = \"string\",\n        Surname = \"string\",\n        GivenName = \"string\",\n        Initials = \"DG\",\n        Pseudonym = \"string\",\n        GenerationQualifier = \"DBG\"\n    }\n});","version":"1"},"java":{"source":"CfnCertificateAuthority cfnCertificateAuthority = CfnCertificateAuthority.Builder.create(this, \"CA\")\n        .type(\"ROOT\")\n        .keyAlgorithm(\"RSA_2048\")\n        .signingAlgorithm(\"SHA256WITHRSA\")\n        .subject(SubjectProperty.builder()\n                .country(\"US\")\n                .organization(\"string\")\n                .organizationalUnit(\"string\")\n                .distinguishedNameQualifier(\"string\")\n                .state(\"string\")\n                .commonName(\"123\")\n                .serialNumber(\"string\")\n                .locality(\"string\")\n                .title(\"string\")\n                .surname(\"string\")\n                .givenName(\"string\")\n                .initials(\"DG\")\n                .pseudonym(\"string\")\n                .generationQualifier(\"DBG\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cfnCertificateAuthority := acmpca.NewCfnCertificateAuthority(this, jsii.String(\"CA\"), &CfnCertificateAuthorityProps{\n\tType: jsii.String(\"ROOT\"),\n\tKeyAlgorithm: jsii.String(\"RSA_2048\"),\n\tSigningAlgorithm: jsii.String(\"SHA256WITHRSA\"),\n\tSubject: &SubjectProperty{\n\t\tCountry: jsii.String(\"US\"),\n\t\tOrganization: jsii.String(\"string\"),\n\t\tOrganizationalUnit: jsii.String(\"string\"),\n\t\tDistinguishedNameQualifier: jsii.String(\"string\"),\n\t\tState: jsii.String(\"string\"),\n\t\tCommonName: jsii.String(\"123\"),\n\t\tSerialNumber: jsii.String(\"string\"),\n\t\tLocality: jsii.String(\"string\"),\n\t\tTitle: jsii.String(\"string\"),\n\t\tSurname: jsii.String(\"string\"),\n\t\tGivenName: jsii.String(\"string\"),\n\t\tInitials: jsii.String(\"DG\"),\n\t\tPseudonym: jsii.String(\"string\"),\n\t\tGenerationQualifier: jsii.String(\"DBG\"),\n\t},\n})","version":"1"},"$":{"source":"const cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority","@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps","@aws-cdk/core.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":18,"75":21,"104":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"281":18},"fqnsFingerprint":"1f7cc2dc0b6551da8efb2712c191847b5cbd6fe3bf1b4cab304c613812bc9e23"},"57460309de5c8668bb1283518912f2da212d598d76aa317d541d4487ee32c53e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\naccess_description_property = acmpca.CfnCertificateAuthority.AccessDescriptionProperty(\n    access_location=acmpca.CfnCertificateAuthority.GeneralNameProperty(\n        directory_name=acmpca.CfnCertificateAuthority.SubjectProperty(\n            common_name=\"commonName\",\n            country=\"country\",\n            custom_attributes=[acmpca.CfnCertificateAuthority.CustomAttributeProperty(\n                object_identifier=\"objectIdentifier\",\n                value=\"value\"\n            )],\n            distinguished_name_qualifier=\"distinguishedNameQualifier\",\n            generation_qualifier=\"generationQualifier\",\n            given_name=\"givenName\",\n            initials=\"initials\",\n            locality=\"locality\",\n            organization=\"organization\",\n            organizational_unit=\"organizationalUnit\",\n            pseudonym=\"pseudonym\",\n            serial_number=\"serialNumber\",\n            state=\"state\",\n            surname=\"surname\",\n            title=\"title\"\n        ),\n        dns_name=\"dnsName\",\n        edi_party_name=acmpca.CfnCertificateAuthority.EdiPartyNameProperty(\n            name_assigner=\"nameAssigner\",\n            party_name=\"partyName\"\n        ),\n        ip_address=\"ipAddress\",\n        other_name=acmpca.CfnCertificateAuthority.OtherNameProperty(\n            type_id=\"typeId\",\n            value=\"value\"\n        ),\n        registered_id=\"registeredId\",\n        rfc822_name=\"rfc822Name\",\n        uniform_resource_identifier=\"uniformResourceIdentifier\"\n    ),\n    access_method=acmpca.CfnCertificateAuthority.AccessMethodProperty(\n        access_method_type=\"accessMethodType\",\n        custom_object_identifier=\"customObjectIdentifier\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar accessDescriptionProperty = new AccessDescriptionProperty {\n    AccessLocation = new GeneralNameProperty {\n        DirectoryName = new SubjectProperty {\n            CommonName = \"commonName\",\n            Country = \"country\",\n            CustomAttributes = new [] { new CustomAttributeProperty {\n                ObjectIdentifier = \"objectIdentifier\",\n                Value = \"value\"\n            } },\n            DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n            GenerationQualifier = \"generationQualifier\",\n            GivenName = \"givenName\",\n            Initials = \"initials\",\n            Locality = \"locality\",\n            Organization = \"organization\",\n            OrganizationalUnit = \"organizationalUnit\",\n            Pseudonym = \"pseudonym\",\n            SerialNumber = \"serialNumber\",\n            State = \"state\",\n            Surname = \"surname\",\n            Title = \"title\"\n        },\n        DnsName = \"dnsName\",\n        EdiPartyName = new EdiPartyNameProperty {\n            NameAssigner = \"nameAssigner\",\n            PartyName = \"partyName\"\n        },\n        IpAddress = \"ipAddress\",\n        OtherName = new OtherNameProperty {\n            TypeId = \"typeId\",\n            Value = \"value\"\n        },\n        RegisteredId = \"registeredId\",\n        Rfc822Name = \"rfc822Name\",\n        UniformResourceIdentifier = \"uniformResourceIdentifier\"\n    },\n    AccessMethod = new AccessMethodProperty {\n        AccessMethodType = \"accessMethodType\",\n        CustomObjectIdentifier = \"customObjectIdentifier\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nAccessDescriptionProperty accessDescriptionProperty = AccessDescriptionProperty.builder()\n        .accessLocation(GeneralNameProperty.builder()\n                .directoryName(SubjectProperty.builder()\n                        .commonName(\"commonName\")\n                        .country(\"country\")\n                        .customAttributes(List.of(CustomAttributeProperty.builder()\n                                .objectIdentifier(\"objectIdentifier\")\n                                .value(\"value\")\n                                .build()))\n                        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                        .generationQualifier(\"generationQualifier\")\n                        .givenName(\"givenName\")\n                        .initials(\"initials\")\n                        .locality(\"locality\")\n                        .organization(\"organization\")\n                        .organizationalUnit(\"organizationalUnit\")\n                        .pseudonym(\"pseudonym\")\n                        .serialNumber(\"serialNumber\")\n                        .state(\"state\")\n                        .surname(\"surname\")\n                        .title(\"title\")\n                        .build())\n                .dnsName(\"dnsName\")\n                .ediPartyName(EdiPartyNameProperty.builder()\n                        .nameAssigner(\"nameAssigner\")\n                        .partyName(\"partyName\")\n                        .build())\n                .ipAddress(\"ipAddress\")\n                .otherName(OtherNameProperty.builder()\n                        .typeId(\"typeId\")\n                        .value(\"value\")\n                        .build())\n                .registeredId(\"registeredId\")\n                .rfc822Name(\"rfc822Name\")\n                .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n                .build())\n        .accessMethod(AccessMethodProperty.builder()\n                .accessMethodType(\"accessMethodType\")\n                .customObjectIdentifier(\"customObjectIdentifier\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\naccessDescriptionProperty := &AccessDescriptionProperty{\n\tAccessLocation: &GeneralNameProperty{\n\t\tDirectoryName: &SubjectProperty{\n\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\tCountry: jsii.String(\"country\"),\n\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\tState: jsii.String(\"state\"),\n\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\tTitle: jsii.String(\"title\"),\n\t\t},\n\t\tDnsName: jsii.String(\"dnsName\"),\n\t\tEdiPartyName: &EdiPartyNameProperty{\n\t\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\t\tPartyName: jsii.String(\"partyName\"),\n\t\t},\n\t\tIpAddress: jsii.String(\"ipAddress\"),\n\t\tOtherName: &OtherNameProperty{\n\t\t\tTypeId: jsii.String(\"typeId\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t\tRegisteredId: jsii.String(\"registeredId\"),\n\t\tRfc822Name: jsii.String(\"rfc822Name\"),\n\t\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n\t},\n\tAccessMethod: &AccessMethodProperty{\n\t\tAccessMethodType: jsii.String(\"accessMethodType\"),\n\t\tCustomObjectIdentifier: jsii.String(\"customObjectIdentifier\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst accessDescriptionProperty: acmpca.CfnCertificateAuthority.AccessDescriptionProperty = {\n  accessLocation: {\n    directoryName: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n    dnsName: 'dnsName',\n    ediPartyName: {\n      nameAssigner: 'nameAssigner',\n      partyName: 'partyName',\n    },\n    ipAddress: 'ipAddress',\n    otherName: {\n      typeId: 'typeId',\n      value: 'value',\n    },\n    registeredId: 'registeredId',\n    rfc822Name: 'rfc822Name',\n    uniformResourceIdentifier: 'uniformResourceIdentifier',\n  },\n  accessMethod: {\n    accessMethodType: 'accessMethodType',\n    customObjectIdentifier: 'customObjectIdentifier',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessDescriptionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessDescriptionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accessDescriptionProperty: acmpca.CfnCertificateAuthority.AccessDescriptionProperty = {\n  accessLocation: {\n    directoryName: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n    dnsName: 'dnsName',\n    ediPartyName: {\n      nameAssigner: 'nameAssigner',\n      partyName: 'partyName',\n    },\n    ipAddress: 'ipAddress',\n    otherName: {\n      typeId: 'typeId',\n      value: 'value',\n    },\n    registeredId: 'registeredId',\n    rfc822Name: 'rfc822Name',\n    uniformResourceIdentifier: 'uniformResourceIdentifier',\n  },\n  accessMethod: {\n    accessMethodType: 'accessMethodType',\n    customObjectIdentifier: 'customObjectIdentifier',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":28,"75":38,"153":2,"169":1,"192":1,"193":7,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":33,"290":1},"fqnsFingerprint":"209c539050ceeb8c5f60f20ec8cf40a37c9b34720aa0577c35e19b724e7921bf"},"e2ae064af78b4fa3b8e092fc41194571f9d3548aa390025196298ff634587b94":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\naccess_method_property = acmpca.CfnCertificateAuthority.AccessMethodProperty(\n    access_method_type=\"accessMethodType\",\n    custom_object_identifier=\"customObjectIdentifier\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar accessMethodProperty = new AccessMethodProperty {\n    AccessMethodType = \"accessMethodType\",\n    CustomObjectIdentifier = \"customObjectIdentifier\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nAccessMethodProperty accessMethodProperty = AccessMethodProperty.builder()\n        .accessMethodType(\"accessMethodType\")\n        .customObjectIdentifier(\"customObjectIdentifier\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\naccessMethodProperty := &AccessMethodProperty{\n\tAccessMethodType: jsii.String(\"accessMethodType\"),\n\tCustomObjectIdentifier: jsii.String(\"customObjectIdentifier\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst accessMethodProperty: acmpca.CfnCertificateAuthority.AccessMethodProperty = {\n  accessMethodType: 'accessMethodType',\n  customObjectIdentifier: 'customObjectIdentifier',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessMethodProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.AccessMethodProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accessMethodProperty: acmpca.CfnCertificateAuthority.AccessMethodProperty = {\n  accessMethodType: 'accessMethodType',\n  customObjectIdentifier: 'customObjectIdentifier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"e05862fdbf550a474f4d4069e7b914f6aa94fe4d2f7a1f77bcb4ae2708b20cfc"},"964f205e735daafca78f54f06836d924ece15d30efdfaa2c076b7ace53565d6f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncrl_configuration_property = acmpca.CfnCertificateAuthority.CrlConfigurationProperty(\n    custom_cname=\"customCname\",\n    enabled=False,\n    expiration_in_days=123,\n    s3_bucket_name=\"s3BucketName\",\n    s3_object_acl=\"s3ObjectAcl\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar crlConfigurationProperty = new CrlConfigurationProperty {\n    CustomCname = \"customCname\",\n    Enabled = false,\n    ExpirationInDays = 123,\n    S3BucketName = \"s3BucketName\",\n    S3ObjectAcl = \"s3ObjectAcl\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCrlConfigurationProperty crlConfigurationProperty = CrlConfigurationProperty.builder()\n        .customCname(\"customCname\")\n        .enabled(false)\n        .expirationInDays(123)\n        .s3BucketName(\"s3BucketName\")\n        .s3ObjectAcl(\"s3ObjectAcl\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncrlConfigurationProperty := &CrlConfigurationProperty{\n\tCustomCname: jsii.String(\"customCname\"),\n\tEnabled: jsii.Boolean(false),\n\tExpirationInDays: jsii.Number(123),\n\tS3BucketName: jsii.String(\"s3BucketName\"),\n\tS3ObjectAcl: jsii.String(\"s3ObjectAcl\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst crlConfigurationProperty: acmpca.CfnCertificateAuthority.CrlConfigurationProperty = {\n  customCname: 'customCname',\n  enabled: false,\n  expirationInDays: 123,\n  s3BucketName: 's3BucketName',\n  s3ObjectAcl: 's3ObjectAcl',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.CrlConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.CrlConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst crlConfigurationProperty: acmpca.CfnCertificateAuthority.CrlConfigurationProperty = {\n  customCname: 'customCname',\n  enabled: false,\n  expirationInDays: 123,\n  s3BucketName: 's3BucketName',\n  s3ObjectAcl: 's3ObjectAcl',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":10,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"a73e72f9ce90e0ac4674d755524be8ff5357c9fde9c02c7b3f5991f50505aab3"},"bf7d617a5d3cde48633890b9e41a8981c431f62eea8f0f69710aa3f62874097f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncsr_extensions_property = acmpca.CfnCertificateAuthority.CsrExtensionsProperty(\n    key_usage=acmpca.CfnCertificateAuthority.KeyUsageProperty(\n        crl_sign=False,\n        data_encipherment=False,\n        decipher_only=False,\n        digital_signature=False,\n        encipher_only=False,\n        key_agreement=False,\n        key_cert_sign=False,\n        key_encipherment=False,\n        non_repudiation=False\n    ),\n    subject_information_access=[acmpca.CfnCertificateAuthority.AccessDescriptionProperty(\n        access_location=acmpca.CfnCertificateAuthority.GeneralNameProperty(\n            directory_name=acmpca.CfnCertificateAuthority.SubjectProperty(\n                common_name=\"commonName\",\n                country=\"country\",\n                custom_attributes=[acmpca.CfnCertificateAuthority.CustomAttributeProperty(\n                    object_identifier=\"objectIdentifier\",\n                    value=\"value\"\n                )],\n                distinguished_name_qualifier=\"distinguishedNameQualifier\",\n                generation_qualifier=\"generationQualifier\",\n                given_name=\"givenName\",\n                initials=\"initials\",\n                locality=\"locality\",\n                organization=\"organization\",\n                organizational_unit=\"organizationalUnit\",\n                pseudonym=\"pseudonym\",\n                serial_number=\"serialNumber\",\n                state=\"state\",\n                surname=\"surname\",\n                title=\"title\"\n            ),\n            dns_name=\"dnsName\",\n            edi_party_name=acmpca.CfnCertificateAuthority.EdiPartyNameProperty(\n                name_assigner=\"nameAssigner\",\n                party_name=\"partyName\"\n            ),\n            ip_address=\"ipAddress\",\n            other_name=acmpca.CfnCertificateAuthority.OtherNameProperty(\n                type_id=\"typeId\",\n                value=\"value\"\n            ),\n            registered_id=\"registeredId\",\n            rfc822_name=\"rfc822Name\",\n            uniform_resource_identifier=\"uniformResourceIdentifier\"\n        ),\n        access_method=acmpca.CfnCertificateAuthority.AccessMethodProperty(\n            access_method_type=\"accessMethodType\",\n            custom_object_identifier=\"customObjectIdentifier\"\n        )\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar csrExtensionsProperty = new CsrExtensionsProperty {\n    KeyUsage = new KeyUsageProperty {\n        CrlSign = false,\n        DataEncipherment = false,\n        DecipherOnly = false,\n        DigitalSignature = false,\n        EncipherOnly = false,\n        KeyAgreement = false,\n        KeyCertSign = false,\n        KeyEncipherment = false,\n        NonRepudiation = false\n    },\n    SubjectInformationAccess = new [] { new AccessDescriptionProperty {\n        AccessLocation = new GeneralNameProperty {\n            DirectoryName = new SubjectProperty {\n                CommonName = \"commonName\",\n                Country = \"country\",\n                CustomAttributes = new [] { new CustomAttributeProperty {\n                    ObjectIdentifier = \"objectIdentifier\",\n                    Value = \"value\"\n                } },\n                DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n                GenerationQualifier = \"generationQualifier\",\n                GivenName = \"givenName\",\n                Initials = \"initials\",\n                Locality = \"locality\",\n                Organization = \"organization\",\n                OrganizationalUnit = \"organizationalUnit\",\n                Pseudonym = \"pseudonym\",\n                SerialNumber = \"serialNumber\",\n                State = \"state\",\n                Surname = \"surname\",\n                Title = \"title\"\n            },\n            DnsName = \"dnsName\",\n            EdiPartyName = new EdiPartyNameProperty {\n                NameAssigner = \"nameAssigner\",\n                PartyName = \"partyName\"\n            },\n            IpAddress = \"ipAddress\",\n            OtherName = new OtherNameProperty {\n                TypeId = \"typeId\",\n                Value = \"value\"\n            },\n            RegisteredId = \"registeredId\",\n            Rfc822Name = \"rfc822Name\",\n            UniformResourceIdentifier = \"uniformResourceIdentifier\"\n        },\n        AccessMethod = new AccessMethodProperty {\n            AccessMethodType = \"accessMethodType\",\n            CustomObjectIdentifier = \"customObjectIdentifier\"\n        }\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCsrExtensionsProperty csrExtensionsProperty = CsrExtensionsProperty.builder()\n        .keyUsage(KeyUsageProperty.builder()\n                .crlSign(false)\n                .dataEncipherment(false)\n                .decipherOnly(false)\n                .digitalSignature(false)\n                .encipherOnly(false)\n                .keyAgreement(false)\n                .keyCertSign(false)\n                .keyEncipherment(false)\n                .nonRepudiation(false)\n                .build())\n        .subjectInformationAccess(List.of(AccessDescriptionProperty.builder()\n                .accessLocation(GeneralNameProperty.builder()\n                        .directoryName(SubjectProperty.builder()\n                                .commonName(\"commonName\")\n                                .country(\"country\")\n                                .customAttributes(List.of(CustomAttributeProperty.builder()\n                                        .objectIdentifier(\"objectIdentifier\")\n                                        .value(\"value\")\n                                        .build()))\n                                .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                                .generationQualifier(\"generationQualifier\")\n                                .givenName(\"givenName\")\n                                .initials(\"initials\")\n                                .locality(\"locality\")\n                                .organization(\"organization\")\n                                .organizationalUnit(\"organizationalUnit\")\n                                .pseudonym(\"pseudonym\")\n                                .serialNumber(\"serialNumber\")\n                                .state(\"state\")\n                                .surname(\"surname\")\n                                .title(\"title\")\n                                .build())\n                        .dnsName(\"dnsName\")\n                        .ediPartyName(EdiPartyNameProperty.builder()\n                                .nameAssigner(\"nameAssigner\")\n                                .partyName(\"partyName\")\n                                .build())\n                        .ipAddress(\"ipAddress\")\n                        .otherName(OtherNameProperty.builder()\n                                .typeId(\"typeId\")\n                                .value(\"value\")\n                                .build())\n                        .registeredId(\"registeredId\")\n                        .rfc822Name(\"rfc822Name\")\n                        .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n                        .build())\n                .accessMethod(AccessMethodProperty.builder()\n                        .accessMethodType(\"accessMethodType\")\n                        .customObjectIdentifier(\"customObjectIdentifier\")\n                        .build())\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncsrExtensionsProperty := &CsrExtensionsProperty{\n\tKeyUsage: &KeyUsageProperty{\n\t\tCrlSign: jsii.Boolean(false),\n\t\tDataEncipherment: jsii.Boolean(false),\n\t\tDecipherOnly: jsii.Boolean(false),\n\t\tDigitalSignature: jsii.Boolean(false),\n\t\tEncipherOnly: jsii.Boolean(false),\n\t\tKeyAgreement: jsii.Boolean(false),\n\t\tKeyCertSign: jsii.Boolean(false),\n\t\tKeyEncipherment: jsii.Boolean(false),\n\t\tNonRepudiation: jsii.Boolean(false),\n\t},\n\tSubjectInformationAccess: []interface{}{\n\t\t&AccessDescriptionProperty{\n\t\t\tAccessLocation: &GeneralNameProperty{\n\t\t\t\tDirectoryName: &SubjectProperty{\n\t\t\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\t\t\tCountry: jsii.String(\"country\"),\n\t\t\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\t\t\tState: jsii.String(\"state\"),\n\t\t\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\t\t\tTitle: jsii.String(\"title\"),\n\t\t\t\t},\n\t\t\t\tDnsName: jsii.String(\"dnsName\"),\n\t\t\t\tEdiPartyName: &EdiPartyNameProperty{\n\t\t\t\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\t\t\t\tPartyName: jsii.String(\"partyName\"),\n\t\t\t\t},\n\t\t\t\tIpAddress: jsii.String(\"ipAddress\"),\n\t\t\t\tOtherName: &OtherNameProperty{\n\t\t\t\t\tTypeId: jsii.String(\"typeId\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t\tRegisteredId: jsii.String(\"registeredId\"),\n\t\t\t\tRfc822Name: jsii.String(\"rfc822Name\"),\n\t\t\t\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n\t\t\t},\n\t\t\tAccessMethod: &AccessMethodProperty{\n\t\t\t\tAccessMethodType: jsii.String(\"accessMethodType\"),\n\t\t\t\tCustomObjectIdentifier: jsii.String(\"customObjectIdentifier\"),\n\t\t\t},\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst csrExtensionsProperty: acmpca.CfnCertificateAuthority.CsrExtensionsProperty = {\n  keyUsage: {\n    crlSign: false,\n    dataEncipherment: false,\n    decipherOnly: false,\n    digitalSignature: false,\n    encipherOnly: false,\n    keyAgreement: false,\n    keyCertSign: false,\n    keyEncipherment: false,\n    nonRepudiation: false,\n  },\n  subjectInformationAccess: [{\n    accessLocation: {\n      directoryName: {\n        commonName: 'commonName',\n        country: 'country',\n        customAttributes: [{\n          objectIdentifier: 'objectIdentifier',\n          value: 'value',\n        }],\n        distinguishedNameQualifier: 'distinguishedNameQualifier',\n        generationQualifier: 'generationQualifier',\n        givenName: 'givenName',\n        initials: 'initials',\n        locality: 'locality',\n        organization: 'organization',\n        organizationalUnit: 'organizationalUnit',\n        pseudonym: 'pseudonym',\n        serialNumber: 'serialNumber',\n        state: 'state',\n        surname: 'surname',\n        title: 'title',\n      },\n      dnsName: 'dnsName',\n      ediPartyName: {\n        nameAssigner: 'nameAssigner',\n        partyName: 'partyName',\n      },\n      ipAddress: 'ipAddress',\n      otherName: {\n        typeId: 'typeId',\n        value: 'value',\n      },\n      registeredId: 'registeredId',\n      rfc822Name: 'rfc822Name',\n      uniformResourceIdentifier: 'uniformResourceIdentifier',\n    },\n    accessMethod: {\n      accessMethodType: 'accessMethodType',\n      customObjectIdentifier: 'customObjectIdentifier',\n    },\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.CsrExtensionsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.CsrExtensionsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst csrExtensionsProperty: acmpca.CfnCertificateAuthority.CsrExtensionsProperty = {\n  keyUsage: {\n    crlSign: false,\n    dataEncipherment: false,\n    decipherOnly: false,\n    digitalSignature: false,\n    encipherOnly: false,\n    keyAgreement: false,\n    keyCertSign: false,\n    keyEncipherment: false,\n    nonRepudiation: false,\n  },\n  subjectInformationAccess: [{\n    accessLocation: {\n      directoryName: {\n        commonName: 'commonName',\n        country: 'country',\n        customAttributes: [{\n          objectIdentifier: 'objectIdentifier',\n          value: 'value',\n        }],\n        distinguishedNameQualifier: 'distinguishedNameQualifier',\n        generationQualifier: 'generationQualifier',\n        givenName: 'givenName',\n        initials: 'initials',\n        locality: 'locality',\n        organization: 'organization',\n        organizationalUnit: 'organizationalUnit',\n        pseudonym: 'pseudonym',\n        serialNumber: 'serialNumber',\n        state: 'state',\n        surname: 'surname',\n        title: 'title',\n      },\n      dnsName: 'dnsName',\n      ediPartyName: {\n        nameAssigner: 'nameAssigner',\n        partyName: 'partyName',\n      },\n      ipAddress: 'ipAddress',\n      otherName: {\n        typeId: 'typeId',\n        value: 'value',\n      },\n      registeredId: 'registeredId',\n      rfc822Name: 'rfc822Name',\n      uniformResourceIdentifier: 'uniformResourceIdentifier',\n    },\n    accessMethod: {\n      accessMethodType: 'accessMethodType',\n      customObjectIdentifier: 'customObjectIdentifier',\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":28,"75":49,"91":9,"153":2,"169":1,"192":2,"193":9,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":44,"290":1},"fqnsFingerprint":"35ff9b32208781208aca68707483c94d004ae651ad7c50d595216d279a65826e"},"3ac46068838ef958223a7d49b8c2c95c486593ab995d8d75a67e070a676125ce":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncustom_attribute_property = acmpca.CfnCertificateAuthority.CustomAttributeProperty(\n    object_identifier=\"objectIdentifier\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar customAttributeProperty = new CustomAttributeProperty {\n    ObjectIdentifier = \"objectIdentifier\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCustomAttributeProperty customAttributeProperty = CustomAttributeProperty.builder()\n        .objectIdentifier(\"objectIdentifier\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncustomAttributeProperty := &CustomAttributeProperty{\n\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst customAttributeProperty: acmpca.CfnCertificateAuthority.CustomAttributeProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.CustomAttributeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.CustomAttributeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customAttributeProperty: acmpca.CfnCertificateAuthority.CustomAttributeProperty = {\n  objectIdentifier: 'objectIdentifier',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b376a5339ff72594cf70e3c3806825bdf92a2e417c83d8208a8a7335d0be130c"},"bd84bbb794c30804b30b15aca006b28088347192ee5570d443417b87379f2373":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nedi_party_name_property = acmpca.CfnCertificateAuthority.EdiPartyNameProperty(\n    name_assigner=\"nameAssigner\",\n    party_name=\"partyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar ediPartyNameProperty = new EdiPartyNameProperty {\n    NameAssigner = \"nameAssigner\",\n    PartyName = \"partyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nEdiPartyNameProperty ediPartyNameProperty = EdiPartyNameProperty.builder()\n        .nameAssigner(\"nameAssigner\")\n        .partyName(\"partyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nediPartyNameProperty := &EdiPartyNameProperty{\n\tNameAssigner: jsii.String(\"nameAssigner\"),\n\tPartyName: jsii.String(\"partyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst ediPartyNameProperty: acmpca.CfnCertificateAuthority.EdiPartyNameProperty = {\n  nameAssigner: 'nameAssigner',\n  partyName: 'partyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.EdiPartyNameProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.EdiPartyNameProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ediPartyNameProperty: acmpca.CfnCertificateAuthority.EdiPartyNameProperty = {\n  nameAssigner: 'nameAssigner',\n  partyName: 'partyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"1a6c8013625052046047ee67f259a4abc1ce7a11b91c2643485a6a24c491a3cd"},"4bbf6af7f0e2d16b4624ff1e2b36c22fbfce032eecb596d3ba4efc62ad75c53a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ngeneral_name_property = acmpca.CfnCertificateAuthority.GeneralNameProperty(\n    directory_name=acmpca.CfnCertificateAuthority.SubjectProperty(\n        common_name=\"commonName\",\n        country=\"country\",\n        custom_attributes=[acmpca.CfnCertificateAuthority.CustomAttributeProperty(\n            object_identifier=\"objectIdentifier\",\n            value=\"value\"\n        )],\n        distinguished_name_qualifier=\"distinguishedNameQualifier\",\n        generation_qualifier=\"generationQualifier\",\n        given_name=\"givenName\",\n        initials=\"initials\",\n        locality=\"locality\",\n        organization=\"organization\",\n        organizational_unit=\"organizationalUnit\",\n        pseudonym=\"pseudonym\",\n        serial_number=\"serialNumber\",\n        state=\"state\",\n        surname=\"surname\",\n        title=\"title\"\n    ),\n    dns_name=\"dnsName\",\n    edi_party_name=acmpca.CfnCertificateAuthority.EdiPartyNameProperty(\n        name_assigner=\"nameAssigner\",\n        party_name=\"partyName\"\n    ),\n    ip_address=\"ipAddress\",\n    other_name=acmpca.CfnCertificateAuthority.OtherNameProperty(\n        type_id=\"typeId\",\n        value=\"value\"\n    ),\n    registered_id=\"registeredId\",\n    rfc822_name=\"rfc822Name\",\n    uniform_resource_identifier=\"uniformResourceIdentifier\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar generalNameProperty = new GeneralNameProperty {\n    DirectoryName = new SubjectProperty {\n        CommonName = \"commonName\",\n        Country = \"country\",\n        CustomAttributes = new [] { new CustomAttributeProperty {\n            ObjectIdentifier = \"objectIdentifier\",\n            Value = \"value\"\n        } },\n        DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n        GenerationQualifier = \"generationQualifier\",\n        GivenName = \"givenName\",\n        Initials = \"initials\",\n        Locality = \"locality\",\n        Organization = \"organization\",\n        OrganizationalUnit = \"organizationalUnit\",\n        Pseudonym = \"pseudonym\",\n        SerialNumber = \"serialNumber\",\n        State = \"state\",\n        Surname = \"surname\",\n        Title = \"title\"\n    },\n    DnsName = \"dnsName\",\n    EdiPartyName = new EdiPartyNameProperty {\n        NameAssigner = \"nameAssigner\",\n        PartyName = \"partyName\"\n    },\n    IpAddress = \"ipAddress\",\n    OtherName = new OtherNameProperty {\n        TypeId = \"typeId\",\n        Value = \"value\"\n    },\n    RegisteredId = \"registeredId\",\n    Rfc822Name = \"rfc822Name\",\n    UniformResourceIdentifier = \"uniformResourceIdentifier\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nGeneralNameProperty generalNameProperty = GeneralNameProperty.builder()\n        .directoryName(SubjectProperty.builder()\n                .commonName(\"commonName\")\n                .country(\"country\")\n                .customAttributes(List.of(CustomAttributeProperty.builder()\n                        .objectIdentifier(\"objectIdentifier\")\n                        .value(\"value\")\n                        .build()))\n                .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                .generationQualifier(\"generationQualifier\")\n                .givenName(\"givenName\")\n                .initials(\"initials\")\n                .locality(\"locality\")\n                .organization(\"organization\")\n                .organizationalUnit(\"organizationalUnit\")\n                .pseudonym(\"pseudonym\")\n                .serialNumber(\"serialNumber\")\n                .state(\"state\")\n                .surname(\"surname\")\n                .title(\"title\")\n                .build())\n        .dnsName(\"dnsName\")\n        .ediPartyName(EdiPartyNameProperty.builder()\n                .nameAssigner(\"nameAssigner\")\n                .partyName(\"partyName\")\n                .build())\n        .ipAddress(\"ipAddress\")\n        .otherName(OtherNameProperty.builder()\n                .typeId(\"typeId\")\n                .value(\"value\")\n                .build())\n        .registeredId(\"registeredId\")\n        .rfc822Name(\"rfc822Name\")\n        .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ngeneralNameProperty := &GeneralNameProperty{\n\tDirectoryName: &SubjectProperty{\n\t\tCommonName: jsii.String(\"commonName\"),\n\t\tCountry: jsii.String(\"country\"),\n\t\tCustomAttributes: []interface{}{\n\t\t\t&CustomAttributeProperty{\n\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\tGivenName: jsii.String(\"givenName\"),\n\t\tInitials: jsii.String(\"initials\"),\n\t\tLocality: jsii.String(\"locality\"),\n\t\tOrganization: jsii.String(\"organization\"),\n\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\tState: jsii.String(\"state\"),\n\t\tSurname: jsii.String(\"surname\"),\n\t\tTitle: jsii.String(\"title\"),\n\t},\n\tDnsName: jsii.String(\"dnsName\"),\n\tEdiPartyName: &EdiPartyNameProperty{\n\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\tPartyName: jsii.String(\"partyName\"),\n\t},\n\tIpAddress: jsii.String(\"ipAddress\"),\n\tOtherName: &OtherNameProperty{\n\t\tTypeId: jsii.String(\"typeId\"),\n\t\tValue: jsii.String(\"value\"),\n\t},\n\tRegisteredId: jsii.String(\"registeredId\"),\n\tRfc822Name: jsii.String(\"rfc822Name\"),\n\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst generalNameProperty: acmpca.CfnCertificateAuthority.GeneralNameProperty = {\n  directoryName: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n  dnsName: 'dnsName',\n  ediPartyName: {\n    nameAssigner: 'nameAssigner',\n    partyName: 'partyName',\n  },\n  ipAddress: 'ipAddress',\n  otherName: {\n    typeId: 'typeId',\n    value: 'value',\n  },\n  registeredId: 'registeredId',\n  rfc822Name: 'rfc822Name',\n  uniformResourceIdentifier: 'uniformResourceIdentifier',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.GeneralNameProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.GeneralNameProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst generalNameProperty: acmpca.CfnCertificateAuthority.GeneralNameProperty = {\n  directoryName: {\n    commonName: 'commonName',\n    country: 'country',\n    customAttributes: [{\n      objectIdentifier: 'objectIdentifier',\n      value: 'value',\n    }],\n    distinguishedNameQualifier: 'distinguishedNameQualifier',\n    generationQualifier: 'generationQualifier',\n    givenName: 'givenName',\n    initials: 'initials',\n    locality: 'locality',\n    organization: 'organization',\n    organizationalUnit: 'organizationalUnit',\n    pseudonym: 'pseudonym',\n    serialNumber: 'serialNumber',\n    state: 'state',\n    surname: 'surname',\n    title: 'title',\n  },\n  dnsName: 'dnsName',\n  ediPartyName: {\n    nameAssigner: 'nameAssigner',\n    partyName: 'partyName',\n  },\n  ipAddress: 'ipAddress',\n  otherName: {\n    typeId: 'typeId',\n    value: 'value',\n  },\n  registeredId: 'registeredId',\n  rfc822Name: 'rfc822Name',\n  uniformResourceIdentifier: 'uniformResourceIdentifier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":26,"75":34,"153":2,"169":1,"192":1,"193":5,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":29,"290":1},"fqnsFingerprint":"ad1dc642cfa1c0303dd4790974361bf63d9fac2dfea26bfcb29fdcc6243a9741"},"059c68486b18453659677e5b73ad85a951d08f0a2efa1bdde6ae00d73da80878":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nkey_usage_property = acmpca.CfnCertificateAuthority.KeyUsageProperty(\n    crl_sign=False,\n    data_encipherment=False,\n    decipher_only=False,\n    digital_signature=False,\n    encipher_only=False,\n    key_agreement=False,\n    key_cert_sign=False,\n    key_encipherment=False,\n    non_repudiation=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar keyUsageProperty = new KeyUsageProperty {\n    CrlSign = false,\n    DataEncipherment = false,\n    DecipherOnly = false,\n    DigitalSignature = false,\n    EncipherOnly = false,\n    KeyAgreement = false,\n    KeyCertSign = false,\n    KeyEncipherment = false,\n    NonRepudiation = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nKeyUsageProperty keyUsageProperty = KeyUsageProperty.builder()\n        .crlSign(false)\n        .dataEncipherment(false)\n        .decipherOnly(false)\n        .digitalSignature(false)\n        .encipherOnly(false)\n        .keyAgreement(false)\n        .keyCertSign(false)\n        .keyEncipherment(false)\n        .nonRepudiation(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nkeyUsageProperty := &KeyUsageProperty{\n\tCrlSign: jsii.Boolean(false),\n\tDataEncipherment: jsii.Boolean(false),\n\tDecipherOnly: jsii.Boolean(false),\n\tDigitalSignature: jsii.Boolean(false),\n\tEncipherOnly: jsii.Boolean(false),\n\tKeyAgreement: jsii.Boolean(false),\n\tKeyCertSign: jsii.Boolean(false),\n\tKeyEncipherment: jsii.Boolean(false),\n\tNonRepudiation: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst keyUsageProperty: acmpca.CfnCertificateAuthority.KeyUsageProperty = {\n  crlSign: false,\n  dataEncipherment: false,\n  decipherOnly: false,\n  digitalSignature: false,\n  encipherOnly: false,\n  keyAgreement: false,\n  keyCertSign: false,\n  keyEncipherment: false,\n  nonRepudiation: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.KeyUsageProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.KeyUsageProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst keyUsageProperty: acmpca.CfnCertificateAuthority.KeyUsageProperty = {\n  crlSign: false,\n  dataEncipherment: false,\n  decipherOnly: false,\n  digitalSignature: false,\n  encipherOnly: false,\n  keyAgreement: false,\n  keyCertSign: false,\n  keyEncipherment: false,\n  nonRepudiation: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":14,"91":9,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"ed6668b5b684dd6e849ea839fa9e67bc2ed9d51077b7bfd29d2c204b0fd331e1"},"497f489a4c06fabf58d1560f36a0bbb1034f08d162f2c1e289e32613559efa02":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nocsp_configuration_property = acmpca.CfnCertificateAuthority.OcspConfigurationProperty(\n    enabled=False,\n    ocsp_custom_cname=\"ocspCustomCname\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar ocspConfigurationProperty = new OcspConfigurationProperty {\n    Enabled = false,\n    OcspCustomCname = \"ocspCustomCname\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nOcspConfigurationProperty ocspConfigurationProperty = OcspConfigurationProperty.builder()\n        .enabled(false)\n        .ocspCustomCname(\"ocspCustomCname\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nocspConfigurationProperty := &OcspConfigurationProperty{\n\tEnabled: jsii.Boolean(false),\n\tOcspCustomCname: jsii.String(\"ocspCustomCname\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst ocspConfigurationProperty: acmpca.CfnCertificateAuthority.OcspConfigurationProperty = {\n  enabled: false,\n  ocspCustomCname: 'ocspCustomCname',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.OcspConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.OcspConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ocspConfigurationProperty: acmpca.CfnCertificateAuthority.OcspConfigurationProperty = {\n  enabled: false,\n  ocspCustomCname: 'ocspCustomCname',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b61bbd996ae1e180871afdce2361dc0ec517c557c6474aa45932297fa752bd23"},"0106f1f1fbea6324a16d60697766b2824a9fe647ac7f7825b3397c5809d1286a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nother_name_property = acmpca.CfnCertificateAuthority.OtherNameProperty(\n    type_id=\"typeId\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar otherNameProperty = new OtherNameProperty {\n    TypeId = \"typeId\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nOtherNameProperty otherNameProperty = OtherNameProperty.builder()\n        .typeId(\"typeId\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\notherNameProperty := &OtherNameProperty{\n\tTypeId: jsii.String(\"typeId\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst otherNameProperty: acmpca.CfnCertificateAuthority.OtherNameProperty = {\n  typeId: 'typeId',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.OtherNameProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.OtherNameProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst otherNameProperty: acmpca.CfnCertificateAuthority.OtherNameProperty = {\n  typeId: 'typeId',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"1a5e32babe716ccf90bce27b425eb60c93e0f2ada6436d48975e8ab7b47ca277"},"cb3fa688ae52b750df5e7590901a873e923b256b99eb54ce36dcde424b1b9318":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nrevocation_configuration_property = acmpca.CfnCertificateAuthority.RevocationConfigurationProperty(\n    crl_configuration=acmpca.CfnCertificateAuthority.CrlConfigurationProperty(\n        custom_cname=\"customCname\",\n        enabled=False,\n        expiration_in_days=123,\n        s3_bucket_name=\"s3BucketName\",\n        s3_object_acl=\"s3ObjectAcl\"\n    ),\n    ocsp_configuration=acmpca.CfnCertificateAuthority.OcspConfigurationProperty(\n        enabled=False,\n        ocsp_custom_cname=\"ocspCustomCname\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar revocationConfigurationProperty = new RevocationConfigurationProperty {\n    CrlConfiguration = new CrlConfigurationProperty {\n        CustomCname = \"customCname\",\n        Enabled = false,\n        ExpirationInDays = 123,\n        S3BucketName = \"s3BucketName\",\n        S3ObjectAcl = \"s3ObjectAcl\"\n    },\n    OcspConfiguration = new OcspConfigurationProperty {\n        Enabled = false,\n        OcspCustomCname = \"ocspCustomCname\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nRevocationConfigurationProperty revocationConfigurationProperty = RevocationConfigurationProperty.builder()\n        .crlConfiguration(CrlConfigurationProperty.builder()\n                .customCname(\"customCname\")\n                .enabled(false)\n                .expirationInDays(123)\n                .s3BucketName(\"s3BucketName\")\n                .s3ObjectAcl(\"s3ObjectAcl\")\n                .build())\n        .ocspConfiguration(OcspConfigurationProperty.builder()\n                .enabled(false)\n                .ocspCustomCname(\"ocspCustomCname\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nrevocationConfigurationProperty := &RevocationConfigurationProperty{\n\tCrlConfiguration: &CrlConfigurationProperty{\n\t\tCustomCname: jsii.String(\"customCname\"),\n\t\tEnabled: jsii.Boolean(false),\n\t\tExpirationInDays: jsii.Number(123),\n\t\tS3BucketName: jsii.String(\"s3BucketName\"),\n\t\tS3ObjectAcl: jsii.String(\"s3ObjectAcl\"),\n\t},\n\tOcspConfiguration: &OcspConfigurationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\t\tOcspCustomCname: jsii.String(\"ocspCustomCname\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst revocationConfigurationProperty: acmpca.CfnCertificateAuthority.RevocationConfigurationProperty = {\n  crlConfiguration: {\n    customCname: 'customCname',\n    enabled: false,\n    expirationInDays: 123,\n    s3BucketName: 's3BucketName',\n    s3ObjectAcl: 's3ObjectAcl',\n  },\n  ocspConfiguration: {\n    enabled: false,\n    ocspCustomCname: 'ocspCustomCname',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.RevocationConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.RevocationConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst revocationConfigurationProperty: acmpca.CfnCertificateAuthority.RevocationConfigurationProperty = {\n  crlConfiguration: {\n    customCname: 'customCname',\n    enabled: false,\n    expirationInDays: 123,\n    s3BucketName: 's3BucketName',\n    s3ObjectAcl: 's3ObjectAcl',\n  },\n  ocspConfiguration: {\n    enabled: false,\n    ocspCustomCname: 'ocspCustomCname',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":5,"75":14,"91":2,"153":2,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"44b0f3e1e082707804227fcc6f76f12f06a76232eb6a64efc44aaf0192e4c602"},"a21b6883f291d590a92dbbd099a52ca58e01852864f295435b8bf604731233e2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\nsubject_property = acmpca.CfnCertificateAuthority.SubjectProperty(\n    common_name=\"commonName\",\n    country=\"country\",\n    custom_attributes=[acmpca.CfnCertificateAuthority.CustomAttributeProperty(\n        object_identifier=\"objectIdentifier\",\n        value=\"value\"\n    )],\n    distinguished_name_qualifier=\"distinguishedNameQualifier\",\n    generation_qualifier=\"generationQualifier\",\n    given_name=\"givenName\",\n    initials=\"initials\",\n    locality=\"locality\",\n    organization=\"organization\",\n    organizational_unit=\"organizationalUnit\",\n    pseudonym=\"pseudonym\",\n    serial_number=\"serialNumber\",\n    state=\"state\",\n    surname=\"surname\",\n    title=\"title\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar subjectProperty = new SubjectProperty {\n    CommonName = \"commonName\",\n    Country = \"country\",\n    CustomAttributes = new [] { new CustomAttributeProperty {\n        ObjectIdentifier = \"objectIdentifier\",\n        Value = \"value\"\n    } },\n    DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n    GenerationQualifier = \"generationQualifier\",\n    GivenName = \"givenName\",\n    Initials = \"initials\",\n    Locality = \"locality\",\n    Organization = \"organization\",\n    OrganizationalUnit = \"organizationalUnit\",\n    Pseudonym = \"pseudonym\",\n    SerialNumber = \"serialNumber\",\n    State = \"state\",\n    Surname = \"surname\",\n    Title = \"title\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nSubjectProperty subjectProperty = SubjectProperty.builder()\n        .commonName(\"commonName\")\n        .country(\"country\")\n        .customAttributes(List.of(CustomAttributeProperty.builder()\n                .objectIdentifier(\"objectIdentifier\")\n                .value(\"value\")\n                .build()))\n        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n        .generationQualifier(\"generationQualifier\")\n        .givenName(\"givenName\")\n        .initials(\"initials\")\n        .locality(\"locality\")\n        .organization(\"organization\")\n        .organizationalUnit(\"organizationalUnit\")\n        .pseudonym(\"pseudonym\")\n        .serialNumber(\"serialNumber\")\n        .state(\"state\")\n        .surname(\"surname\")\n        .title(\"title\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\nsubjectProperty := &SubjectProperty{\n\tCommonName: jsii.String(\"commonName\"),\n\tCountry: jsii.String(\"country\"),\n\tCustomAttributes: []interface{}{\n\t\t&CustomAttributeProperty{\n\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\tGivenName: jsii.String(\"givenName\"),\n\tInitials: jsii.String(\"initials\"),\n\tLocality: jsii.String(\"locality\"),\n\tOrganization: jsii.String(\"organization\"),\n\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\tPseudonym: jsii.String(\"pseudonym\"),\n\tSerialNumber: jsii.String(\"serialNumber\"),\n\tState: jsii.String(\"state\"),\n\tSurname: jsii.String(\"surname\"),\n\tTitle: jsii.String(\"title\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst subjectProperty: acmpca.CfnCertificateAuthority.SubjectProperty = {\n  commonName: 'commonName',\n  country: 'country',\n  customAttributes: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n  }],\n  distinguishedNameQualifier: 'distinguishedNameQualifier',\n  generationQualifier: 'generationQualifier',\n  givenName: 'givenName',\n  initials: 'initials',\n  locality: 'locality',\n  organization: 'organization',\n  organizationalUnit: 'organizationalUnit',\n  pseudonym: 'pseudonym',\n  serialNumber: 'serialNumber',\n  state: 'state',\n  surname: 'surname',\n  title: 'title',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority.SubjectProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst subjectProperty: acmpca.CfnCertificateAuthority.SubjectProperty = {\n  commonName: 'commonName',\n  country: 'country',\n  customAttributes: [{\n    objectIdentifier: 'objectIdentifier',\n    value: 'value',\n  }],\n  distinguishedNameQualifier: 'distinguishedNameQualifier',\n  generationQualifier: 'generationQualifier',\n  givenName: 'givenName',\n  initials: 'initials',\n  locality: 'locality',\n  organization: 'organization',\n  organizationalUnit: 'organizationalUnit',\n  pseudonym: 'pseudonym',\n  serialNumber: 'serialNumber',\n  state: 'state',\n  surname: 'surname',\n  title: 'title',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":17,"75":22,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":17,"290":1},"fqnsFingerprint":"185bfad04faa7e0b094e7837320b19401f7a0340a629af8b4ca1b0e0d79e9dd8"},"1e0055ebdd077528c054097e3fe461351be362b666a99f8da31c00fd968e4ac1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncfn_certificate_authority_activation = acmpca.CfnCertificateAuthorityActivation(self, \"MyCfnCertificateAuthorityActivation\",\n    certificate=\"certificate\",\n    certificate_authority_arn=\"certificateAuthorityArn\",\n\n    # the properties below are optional\n    certificate_chain=\"certificateChain\",\n    status=\"status\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar cfnCertificateAuthorityActivation = new CfnCertificateAuthorityActivation(this, \"MyCfnCertificateAuthorityActivation\", new CfnCertificateAuthorityActivationProps {\n    Certificate = \"certificate\",\n    CertificateAuthorityArn = \"certificateAuthorityArn\",\n\n    // the properties below are optional\n    CertificateChain = \"certificateChain\",\n    Status = \"status\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCfnCertificateAuthorityActivation cfnCertificateAuthorityActivation = CfnCertificateAuthorityActivation.Builder.create(this, \"MyCfnCertificateAuthorityActivation\")\n        .certificate(\"certificate\")\n        .certificateAuthorityArn(\"certificateAuthorityArn\")\n\n        // the properties below are optional\n        .certificateChain(\"certificateChain\")\n        .status(\"status\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncfnCertificateAuthorityActivation := acmpca.NewCfnCertificateAuthorityActivation(this, jsii.String(\"MyCfnCertificateAuthorityActivation\"), &CfnCertificateAuthorityActivationProps{\n\tCertificate: jsii.String(\"certificate\"),\n\tCertificateAuthorityArn: jsii.String(\"certificateAuthorityArn\"),\n\n\t// the properties below are optional\n\tCertificateChain: jsii.String(\"certificateChain\"),\n\tStatus: jsii.String(\"status\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificateAuthorityActivation = new acmpca.CfnCertificateAuthorityActivation(this, 'MyCfnCertificateAuthorityActivation', {\n  certificate: 'certificate',\n  certificateAuthorityArn: 'certificateAuthorityArn',\n\n  // the properties below are optional\n  certificateChain: 'certificateChain',\n  status: 'status',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivation","@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificateAuthorityActivation = new acmpca.CfnCertificateAuthorityActivation(this, 'MyCfnCertificateAuthorityActivation', {\n  certificate: 'certificate',\n  certificateAuthorityArn: 'certificateAuthorityArn',\n\n  // the properties below are optional\n  certificateChain: 'certificateChain',\n  status: 'status',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":8,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"67bba26f19a0ca1a0de1ecb3ee044ed09fe966129715510e8b76a295239b9d67"},"5eb2d37d1346e2abb289ed197306940890a28d38d8be11f1be01c4abb73490df":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncfn_certificate_authority_activation_props = acmpca.CfnCertificateAuthorityActivationProps(\n    certificate=\"certificate\",\n    certificate_authority_arn=\"certificateAuthorityArn\",\n\n    # the properties below are optional\n    certificate_chain=\"certificateChain\",\n    status=\"status\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar cfnCertificateAuthorityActivationProps = new CfnCertificateAuthorityActivationProps {\n    Certificate = \"certificate\",\n    CertificateAuthorityArn = \"certificateAuthorityArn\",\n\n    // the properties below are optional\n    CertificateChain = \"certificateChain\",\n    Status = \"status\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCfnCertificateAuthorityActivationProps cfnCertificateAuthorityActivationProps = CfnCertificateAuthorityActivationProps.builder()\n        .certificate(\"certificate\")\n        .certificateAuthorityArn(\"certificateAuthorityArn\")\n\n        // the properties below are optional\n        .certificateChain(\"certificateChain\")\n        .status(\"status\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncfnCertificateAuthorityActivationProps := &CfnCertificateAuthorityActivationProps{\n\tCertificate: jsii.String(\"certificate\"),\n\tCertificateAuthorityArn: jsii.String(\"certificateAuthorityArn\"),\n\n\t// the properties below are optional\n\tCertificateChain: jsii.String(\"certificateChain\"),\n\tStatus: jsii.String(\"status\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificateAuthorityActivationProps: acmpca.CfnCertificateAuthorityActivationProps = {\n  certificate: 'certificate',\n  certificateAuthorityArn: 'certificateAuthorityArn',\n\n  // the properties below are optional\n  certificateChain: 'certificateChain',\n  status: 'status',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthorityActivationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificateAuthorityActivationProps: acmpca.CfnCertificateAuthorityActivationProps = {\n  certificate: 'certificate',\n  certificateAuthorityArn: 'certificateAuthorityArn',\n\n  // the properties below are optional\n  certificateChain: 'certificateChain',\n  status: 'status',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":8,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"70cf0cf6ce93254f4a8110d3d627e1c69782d6acacf99a9b4eb08d830ecf3c93"},"e411edd66ac40091bac57880a4bcc7a5cecc07128708a5c6ee59e36c744500b1":{"translations":{"python":{"source":"cfn_certificate_authority = acmpca.CfnCertificateAuthority(self, \"CA\",\n    type=\"ROOT\",\n    key_algorithm=\"RSA_2048\",\n    signing_algorithm=\"SHA256WITHRSA\",\n    subject=acmpca.CfnCertificateAuthority.SubjectProperty(\n        country=\"US\",\n        organization=\"string\",\n        organizational_unit=\"string\",\n        distinguished_name_qualifier=\"string\",\n        state=\"string\",\n        common_name=\"123\",\n        serial_number=\"string\",\n        locality=\"string\",\n        title=\"string\",\n        surname=\"string\",\n        given_name=\"string\",\n        initials=\"DG\",\n        pseudonym=\"string\",\n        generation_qualifier=\"DBG\"\n    )\n)","version":"2"},"csharp":{"source":"var cfnCertificateAuthority = new CfnCertificateAuthority(this, \"CA\", new CfnCertificateAuthorityProps {\n    Type = \"ROOT\",\n    KeyAlgorithm = \"RSA_2048\",\n    SigningAlgorithm = \"SHA256WITHRSA\",\n    Subject = new SubjectProperty {\n        Country = \"US\",\n        Organization = \"string\",\n        OrganizationalUnit = \"string\",\n        DistinguishedNameQualifier = \"string\",\n        State = \"string\",\n        CommonName = \"123\",\n        SerialNumber = \"string\",\n        Locality = \"string\",\n        Title = \"string\",\n        Surname = \"string\",\n        GivenName = \"string\",\n        Initials = \"DG\",\n        Pseudonym = \"string\",\n        GenerationQualifier = \"DBG\"\n    }\n});","version":"1"},"java":{"source":"CfnCertificateAuthority cfnCertificateAuthority = CfnCertificateAuthority.Builder.create(this, \"CA\")\n        .type(\"ROOT\")\n        .keyAlgorithm(\"RSA_2048\")\n        .signingAlgorithm(\"SHA256WITHRSA\")\n        .subject(SubjectProperty.builder()\n                .country(\"US\")\n                .organization(\"string\")\n                .organizationalUnit(\"string\")\n                .distinguishedNameQualifier(\"string\")\n                .state(\"string\")\n                .commonName(\"123\")\n                .serialNumber(\"string\")\n                .locality(\"string\")\n                .title(\"string\")\n                .surname(\"string\")\n                .givenName(\"string\")\n                .initials(\"DG\")\n                .pseudonym(\"string\")\n                .generationQualifier(\"DBG\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cfnCertificateAuthority := acmpca.NewCfnCertificateAuthority(this, jsii.String(\"CA\"), &CfnCertificateAuthorityProps{\n\tType: jsii.String(\"ROOT\"),\n\tKeyAlgorithm: jsii.String(\"RSA_2048\"),\n\tSigningAlgorithm: jsii.String(\"SHA256WITHRSA\"),\n\tSubject: &SubjectProperty{\n\t\tCountry: jsii.String(\"US\"),\n\t\tOrganization: jsii.String(\"string\"),\n\t\tOrganizationalUnit: jsii.String(\"string\"),\n\t\tDistinguishedNameQualifier: jsii.String(\"string\"),\n\t\tState: jsii.String(\"string\"),\n\t\tCommonName: jsii.String(\"123\"),\n\t\tSerialNumber: jsii.String(\"string\"),\n\t\tLocality: jsii.String(\"string\"),\n\t\tTitle: jsii.String(\"string\"),\n\t\tSurname: jsii.String(\"string\"),\n\t\tGivenName: jsii.String(\"string\"),\n\t\tInitials: jsii.String(\"DG\"),\n\t\tPseudonym: jsii.String(\"string\"),\n\t\tGenerationQualifier: jsii.String(\"DBG\"),\n\t},\n})","version":"1"},"$":{"source":"const cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateAuthority","@aws-cdk/aws-acmpca.CfnCertificateAuthorityProps","@aws-cdk/core.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst cfnCertificateAuthority = new acmpca.CfnCertificateAuthority(this, 'CA', {\n  type: 'ROOT',\n  keyAlgorithm: 'RSA_2048',\n  signingAlgorithm: 'SHA256WITHRSA',\n  subject: {\n    country: 'US',\n    organization: 'string',\n    organizationalUnit: 'string',\n    distinguishedNameQualifier: 'string',\n    state: 'string',\n    commonName: '123',\n    serialNumber: 'string',\n    locality: 'string',\n    title: 'string',\n    surname: 'string',\n    givenName: 'string',\n    initials: 'DG',\n    pseudonym: 'string',\n    generationQualifier: 'DBG',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":18,"75":21,"104":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"281":18},"fqnsFingerprint":"1f7cc2dc0b6551da8efb2712c191847b5cbd6fe3bf1b4cab304c613812bc9e23"},"48cac82ac5011ec9c6207f0744b397fabf417c341e23a11250b9861ad2a6030f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncfn_certificate_props = acmpca.CfnCertificateProps(\n    certificate_authority_arn=\"certificateAuthorityArn\",\n    certificate_signing_request=\"certificateSigningRequest\",\n    signing_algorithm=\"signingAlgorithm\",\n    validity=acmpca.CfnCertificate.ValidityProperty(\n        type=\"type\",\n        value=123\n    ),\n\n    # the properties below are optional\n    api_passthrough=acmpca.CfnCertificate.ApiPassthroughProperty(\n        extensions=acmpca.CfnCertificate.ExtensionsProperty(\n            certificate_policies=[acmpca.CfnCertificate.PolicyInformationProperty(\n                cert_policy_id=\"certPolicyId\",\n\n                # the properties below are optional\n                policy_qualifiers=[acmpca.CfnCertificate.PolicyQualifierInfoProperty(\n                    policy_qualifier_id=\"policyQualifierId\",\n                    qualifier=acmpca.CfnCertificate.QualifierProperty(\n                        cps_uri=\"cpsUri\"\n                    )\n                )]\n            )],\n            custom_extensions=[acmpca.CfnCertificate.CustomExtensionProperty(\n                object_identifier=\"objectIdentifier\",\n                value=\"value\",\n\n                # the properties below are optional\n                critical=False\n            )],\n            extended_key_usage=[acmpca.CfnCertificate.ExtendedKeyUsageProperty(\n                extended_key_usage_object_identifier=\"extendedKeyUsageObjectIdentifier\",\n                extended_key_usage_type=\"extendedKeyUsageType\"\n            )],\n            key_usage=acmpca.CfnCertificate.KeyUsageProperty(\n                crl_sign=False,\n                data_encipherment=False,\n                decipher_only=False,\n                digital_signature=False,\n                encipher_only=False,\n                key_agreement=False,\n                key_cert_sign=False,\n                key_encipherment=False,\n                non_repudiation=False\n            ),\n            subject_alternative_names=[acmpca.CfnCertificate.GeneralNameProperty(\n                directory_name=acmpca.CfnCertificate.SubjectProperty(\n                    common_name=\"commonName\",\n                    country=\"country\",\n                    custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n                        object_identifier=\"objectIdentifier\",\n                        value=\"value\"\n                    )],\n                    distinguished_name_qualifier=\"distinguishedNameQualifier\",\n                    generation_qualifier=\"generationQualifier\",\n                    given_name=\"givenName\",\n                    initials=\"initials\",\n                    locality=\"locality\",\n                    organization=\"organization\",\n                    organizational_unit=\"organizationalUnit\",\n                    pseudonym=\"pseudonym\",\n                    serial_number=\"serialNumber\",\n                    state=\"state\",\n                    surname=\"surname\",\n                    title=\"title\"\n                ),\n                dns_name=\"dnsName\",\n                edi_party_name=acmpca.CfnCertificate.EdiPartyNameProperty(\n                    name_assigner=\"nameAssigner\",\n                    party_name=\"partyName\"\n                ),\n                ip_address=\"ipAddress\",\n                other_name=acmpca.CfnCertificate.OtherNameProperty(\n                    type_id=\"typeId\",\n                    value=\"value\"\n                ),\n                registered_id=\"registeredId\",\n                rfc822_name=\"rfc822Name\",\n                uniform_resource_identifier=\"uniformResourceIdentifier\"\n            )]\n        ),\n        subject=acmpca.CfnCertificate.SubjectProperty(\n            common_name=\"commonName\",\n            country=\"country\",\n            custom_attributes=[acmpca.CfnCertificate.CustomAttributeProperty(\n                object_identifier=\"objectIdentifier\",\n                value=\"value\"\n            )],\n            distinguished_name_qualifier=\"distinguishedNameQualifier\",\n            generation_qualifier=\"generationQualifier\",\n            given_name=\"givenName\",\n            initials=\"initials\",\n            locality=\"locality\",\n            organization=\"organization\",\n            organizational_unit=\"organizationalUnit\",\n            pseudonym=\"pseudonym\",\n            serial_number=\"serialNumber\",\n            state=\"state\",\n            surname=\"surname\",\n            title=\"title\"\n        )\n    ),\n    template_arn=\"templateArn\",\n    validity_not_before=acmpca.CfnCertificate.ValidityProperty(\n        type=\"type\",\n        value=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar cfnCertificateProps = new CfnCertificateProps {\n    CertificateAuthorityArn = \"certificateAuthorityArn\",\n    CertificateSigningRequest = \"certificateSigningRequest\",\n    SigningAlgorithm = \"signingAlgorithm\",\n    Validity = new ValidityProperty {\n        Type = \"type\",\n        Value = 123\n    },\n\n    // the properties below are optional\n    ApiPassthrough = new ApiPassthroughProperty {\n        Extensions = new ExtensionsProperty {\n            CertificatePolicies = new [] { new PolicyInformationProperty {\n                CertPolicyId = \"certPolicyId\",\n\n                // the properties below are optional\n                PolicyQualifiers = new [] { new PolicyQualifierInfoProperty {\n                    PolicyQualifierId = \"policyQualifierId\",\n                    Qualifier = new QualifierProperty {\n                        CpsUri = \"cpsUri\"\n                    }\n                } }\n            } },\n            CustomExtensions = new [] { new CustomExtensionProperty {\n                ObjectIdentifier = \"objectIdentifier\",\n                Value = \"value\",\n\n                // the properties below are optional\n                Critical = false\n            } },\n            ExtendedKeyUsage = new [] { new ExtendedKeyUsageProperty {\n                ExtendedKeyUsageObjectIdentifier = \"extendedKeyUsageObjectIdentifier\",\n                ExtendedKeyUsageType = \"extendedKeyUsageType\"\n            } },\n            KeyUsage = new KeyUsageProperty {\n                CrlSign = false,\n                DataEncipherment = false,\n                DecipherOnly = false,\n                DigitalSignature = false,\n                EncipherOnly = false,\n                KeyAgreement = false,\n                KeyCertSign = false,\n                KeyEncipherment = false,\n                NonRepudiation = false\n            },\n            SubjectAlternativeNames = new [] { new GeneralNameProperty {\n                DirectoryName = new SubjectProperty {\n                    CommonName = \"commonName\",\n                    Country = \"country\",\n                    CustomAttributes = new [] { new CustomAttributeProperty {\n                        ObjectIdentifier = \"objectIdentifier\",\n                        Value = \"value\"\n                    } },\n                    DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n                    GenerationQualifier = \"generationQualifier\",\n                    GivenName = \"givenName\",\n                    Initials = \"initials\",\n                    Locality = \"locality\",\n                    Organization = \"organization\",\n                    OrganizationalUnit = \"organizationalUnit\",\n                    Pseudonym = \"pseudonym\",\n                    SerialNumber = \"serialNumber\",\n                    State = \"state\",\n                    Surname = \"surname\",\n                    Title = \"title\"\n                },\n                DnsName = \"dnsName\",\n                EdiPartyName = new EdiPartyNameProperty {\n                    NameAssigner = \"nameAssigner\",\n                    PartyName = \"partyName\"\n                },\n                IpAddress = \"ipAddress\",\n                OtherName = new OtherNameProperty {\n                    TypeId = \"typeId\",\n                    Value = \"value\"\n                },\n                RegisteredId = \"registeredId\",\n                Rfc822Name = \"rfc822Name\",\n                UniformResourceIdentifier = \"uniformResourceIdentifier\"\n            } }\n        },\n        Subject = new SubjectProperty {\n            CommonName = \"commonName\",\n            Country = \"country\",\n            CustomAttributes = new [] { new CustomAttributeProperty {\n                ObjectIdentifier = \"objectIdentifier\",\n                Value = \"value\"\n            } },\n            DistinguishedNameQualifier = \"distinguishedNameQualifier\",\n            GenerationQualifier = \"generationQualifier\",\n            GivenName = \"givenName\",\n            Initials = \"initials\",\n            Locality = \"locality\",\n            Organization = \"organization\",\n            OrganizationalUnit = \"organizationalUnit\",\n            Pseudonym = \"pseudonym\",\n            SerialNumber = \"serialNumber\",\n            State = \"state\",\n            Surname = \"surname\",\n            Title = \"title\"\n        }\n    },\n    TemplateArn = \"templateArn\",\n    ValidityNotBefore = new ValidityProperty {\n        Type = \"type\",\n        Value = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCfnCertificateProps cfnCertificateProps = CfnCertificateProps.builder()\n        .certificateAuthorityArn(\"certificateAuthorityArn\")\n        .certificateSigningRequest(\"certificateSigningRequest\")\n        .signingAlgorithm(\"signingAlgorithm\")\n        .validity(ValidityProperty.builder()\n                .type(\"type\")\n                .value(123)\n                .build())\n\n        // the properties below are optional\n        .apiPassthrough(ApiPassthroughProperty.builder()\n                .extensions(ExtensionsProperty.builder()\n                        .certificatePolicies(List.of(PolicyInformationProperty.builder()\n                                .certPolicyId(\"certPolicyId\")\n\n                                // the properties below are optional\n                                .policyQualifiers(List.of(PolicyQualifierInfoProperty.builder()\n                                        .policyQualifierId(\"policyQualifierId\")\n                                        .qualifier(QualifierProperty.builder()\n                                                .cpsUri(\"cpsUri\")\n                                                .build())\n                                        .build()))\n                                .build()))\n                        .customExtensions(List.of(CustomExtensionProperty.builder()\n                                .objectIdentifier(\"objectIdentifier\")\n                                .value(\"value\")\n\n                                // the properties below are optional\n                                .critical(false)\n                                .build()))\n                        .extendedKeyUsage(List.of(ExtendedKeyUsageProperty.builder()\n                                .extendedKeyUsageObjectIdentifier(\"extendedKeyUsageObjectIdentifier\")\n                                .extendedKeyUsageType(\"extendedKeyUsageType\")\n                                .build()))\n                        .keyUsage(KeyUsageProperty.builder()\n                                .crlSign(false)\n                                .dataEncipherment(false)\n                                .decipherOnly(false)\n                                .digitalSignature(false)\n                                .encipherOnly(false)\n                                .keyAgreement(false)\n                                .keyCertSign(false)\n                                .keyEncipherment(false)\n                                .nonRepudiation(false)\n                                .build())\n                        .subjectAlternativeNames(List.of(GeneralNameProperty.builder()\n                                .directoryName(SubjectProperty.builder()\n                                        .commonName(\"commonName\")\n                                        .country(\"country\")\n                                        .customAttributes(List.of(CustomAttributeProperty.builder()\n                                                .objectIdentifier(\"objectIdentifier\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                                        .generationQualifier(\"generationQualifier\")\n                                        .givenName(\"givenName\")\n                                        .initials(\"initials\")\n                                        .locality(\"locality\")\n                                        .organization(\"organization\")\n                                        .organizationalUnit(\"organizationalUnit\")\n                                        .pseudonym(\"pseudonym\")\n                                        .serialNumber(\"serialNumber\")\n                                        .state(\"state\")\n                                        .surname(\"surname\")\n                                        .title(\"title\")\n                                        .build())\n                                .dnsName(\"dnsName\")\n                                .ediPartyName(EdiPartyNameProperty.builder()\n                                        .nameAssigner(\"nameAssigner\")\n                                        .partyName(\"partyName\")\n                                        .build())\n                                .ipAddress(\"ipAddress\")\n                                .otherName(OtherNameProperty.builder()\n                                        .typeId(\"typeId\")\n                                        .value(\"value\")\n                                        .build())\n                                .registeredId(\"registeredId\")\n                                .rfc822Name(\"rfc822Name\")\n                                .uniformResourceIdentifier(\"uniformResourceIdentifier\")\n                                .build()))\n                        .build())\n                .subject(SubjectProperty.builder()\n                        .commonName(\"commonName\")\n                        .country(\"country\")\n                        .customAttributes(List.of(CustomAttributeProperty.builder()\n                                .objectIdentifier(\"objectIdentifier\")\n                                .value(\"value\")\n                                .build()))\n                        .distinguishedNameQualifier(\"distinguishedNameQualifier\")\n                        .generationQualifier(\"generationQualifier\")\n                        .givenName(\"givenName\")\n                        .initials(\"initials\")\n                        .locality(\"locality\")\n                        .organization(\"organization\")\n                        .organizationalUnit(\"organizationalUnit\")\n                        .pseudonym(\"pseudonym\")\n                        .serialNumber(\"serialNumber\")\n                        .state(\"state\")\n                        .surname(\"surname\")\n                        .title(\"title\")\n                        .build())\n                .build())\n        .templateArn(\"templateArn\")\n        .validityNotBefore(ValidityProperty.builder()\n                .type(\"type\")\n                .value(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncfnCertificateProps := &CfnCertificateProps{\n\tCertificateAuthorityArn: jsii.String(\"certificateAuthorityArn\"),\n\tCertificateSigningRequest: jsii.String(\"certificateSigningRequest\"),\n\tSigningAlgorithm: jsii.String(\"signingAlgorithm\"),\n\tValidity: &ValidityProperty{\n\t\tType: jsii.String(\"type\"),\n\t\tValue: jsii.Number(123),\n\t},\n\n\t// the properties below are optional\n\tApiPassthrough: &ApiPassthroughProperty{\n\t\tExtensions: &ExtensionsProperty{\n\t\t\tCertificatePolicies: []interface{}{\n\t\t\t\t&PolicyInformationProperty{\n\t\t\t\t\tCertPolicyId: jsii.String(\"certPolicyId\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tPolicyQualifiers: []interface{}{\n\t\t\t\t\t\t&PolicyQualifierInfoProperty{\n\t\t\t\t\t\t\tPolicyQualifierId: jsii.String(\"policyQualifierId\"),\n\t\t\t\t\t\t\tQualifier: &QualifierProperty{\n\t\t\t\t\t\t\t\tCpsUri: jsii.String(\"cpsUri\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tCustomExtensions: []interface{}{\n\t\t\t\t&CustomExtensionProperty{\n\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tCritical: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\tExtendedKeyUsage: []interface{}{\n\t\t\t\t&ExtendedKeyUsageProperty{\n\t\t\t\t\tExtendedKeyUsageObjectIdentifier: jsii.String(\"extendedKeyUsageObjectIdentifier\"),\n\t\t\t\t\tExtendedKeyUsageType: jsii.String(\"extendedKeyUsageType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tKeyUsage: &KeyUsageProperty{\n\t\t\t\tCrlSign: jsii.Boolean(false),\n\t\t\t\tDataEncipherment: jsii.Boolean(false),\n\t\t\t\tDecipherOnly: jsii.Boolean(false),\n\t\t\t\tDigitalSignature: jsii.Boolean(false),\n\t\t\t\tEncipherOnly: jsii.Boolean(false),\n\t\t\t\tKeyAgreement: jsii.Boolean(false),\n\t\t\t\tKeyCertSign: jsii.Boolean(false),\n\t\t\t\tKeyEncipherment: jsii.Boolean(false),\n\t\t\t\tNonRepudiation: jsii.Boolean(false),\n\t\t\t},\n\t\t\tSubjectAlternativeNames: []interface{}{\n\t\t\t\t&GeneralNameProperty{\n\t\t\t\t\tDirectoryName: &SubjectProperty{\n\t\t\t\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\t\t\t\tCountry: jsii.String(\"country\"),\n\t\t\t\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\t\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\t\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\t\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\t\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\t\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\t\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\t\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\t\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\t\t\t\tState: jsii.String(\"state\"),\n\t\t\t\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\t\t\t\tTitle: jsii.String(\"title\"),\n\t\t\t\t\t},\n\t\t\t\t\tDnsName: jsii.String(\"dnsName\"),\n\t\t\t\t\tEdiPartyName: &EdiPartyNameProperty{\n\t\t\t\t\t\tNameAssigner: jsii.String(\"nameAssigner\"),\n\t\t\t\t\t\tPartyName: jsii.String(\"partyName\"),\n\t\t\t\t\t},\n\t\t\t\t\tIpAddress: jsii.String(\"ipAddress\"),\n\t\t\t\t\tOtherName: &OtherNameProperty{\n\t\t\t\t\t\tTypeId: jsii.String(\"typeId\"),\n\t\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t\tRegisteredId: jsii.String(\"registeredId\"),\n\t\t\t\t\tRfc822Name: jsii.String(\"rfc822Name\"),\n\t\t\t\t\tUniformResourceIdentifier: jsii.String(\"uniformResourceIdentifier\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tSubject: &SubjectProperty{\n\t\t\tCommonName: jsii.String(\"commonName\"),\n\t\t\tCountry: jsii.String(\"country\"),\n\t\t\tCustomAttributes: []interface{}{\n\t\t\t\t&CustomAttributeProperty{\n\t\t\t\t\tObjectIdentifier: jsii.String(\"objectIdentifier\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDistinguishedNameQualifier: jsii.String(\"distinguishedNameQualifier\"),\n\t\t\tGenerationQualifier: jsii.String(\"generationQualifier\"),\n\t\t\tGivenName: jsii.String(\"givenName\"),\n\t\t\tInitials: jsii.String(\"initials\"),\n\t\t\tLocality: jsii.String(\"locality\"),\n\t\t\tOrganization: jsii.String(\"organization\"),\n\t\t\tOrganizationalUnit: jsii.String(\"organizationalUnit\"),\n\t\t\tPseudonym: jsii.String(\"pseudonym\"),\n\t\t\tSerialNumber: jsii.String(\"serialNumber\"),\n\t\t\tState: jsii.String(\"state\"),\n\t\t\tSurname: jsii.String(\"surname\"),\n\t\t\tTitle: jsii.String(\"title\"),\n\t\t},\n\t},\n\tTemplateArn: jsii.String(\"templateArn\"),\n\tValidityNotBefore: &ValidityProperty{\n\t\tType: jsii.String(\"type\"),\n\t\tValue: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnCertificateProps: acmpca.CfnCertificateProps = {\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  certificateSigningRequest: 'certificateSigningRequest',\n  signingAlgorithm: 'signingAlgorithm',\n  validity: {\n    type: 'type',\n    value: 123,\n  },\n\n  // the properties below are optional\n  apiPassthrough: {\n    extensions: {\n      certificatePolicies: [{\n        certPolicyId: 'certPolicyId',\n\n        // the properties below are optional\n        policyQualifiers: [{\n          policyQualifierId: 'policyQualifierId',\n          qualifier: {\n            cpsUri: 'cpsUri',\n          },\n        }],\n      }],\n      customExtensions: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n\n        // the properties below are optional\n        critical: false,\n      }],\n      extendedKeyUsage: [{\n        extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n        extendedKeyUsageType: 'extendedKeyUsageType',\n      }],\n      keyUsage: {\n        crlSign: false,\n        dataEncipherment: false,\n        decipherOnly: false,\n        digitalSignature: false,\n        encipherOnly: false,\n        keyAgreement: false,\n        keyCertSign: false,\n        keyEncipherment: false,\n        nonRepudiation: false,\n      },\n      subjectAlternativeNames: [{\n        directoryName: {\n          commonName: 'commonName',\n          country: 'country',\n          customAttributes: [{\n            objectIdentifier: 'objectIdentifier',\n            value: 'value',\n          }],\n          distinguishedNameQualifier: 'distinguishedNameQualifier',\n          generationQualifier: 'generationQualifier',\n          givenName: 'givenName',\n          initials: 'initials',\n          locality: 'locality',\n          organization: 'organization',\n          organizationalUnit: 'organizationalUnit',\n          pseudonym: 'pseudonym',\n          serialNumber: 'serialNumber',\n          state: 'state',\n          surname: 'surname',\n          title: 'title',\n        },\n        dnsName: 'dnsName',\n        ediPartyName: {\n          nameAssigner: 'nameAssigner',\n          partyName: 'partyName',\n        },\n        ipAddress: 'ipAddress',\n        otherName: {\n          typeId: 'typeId',\n          value: 'value',\n        },\n        registeredId: 'registeredId',\n        rfc822Name: 'rfc822Name',\n        uniformResourceIdentifier: 'uniformResourceIdentifier',\n      }],\n    },\n    subject: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n  },\n  templateArn: 'templateArn',\n  validityNotBefore: {\n    type: 'type',\n    value: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnCertificateProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnCertificateProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificateProps: acmpca.CfnCertificateProps = {\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  certificateSigningRequest: 'certificateSigningRequest',\n  signingAlgorithm: 'signingAlgorithm',\n  validity: {\n    type: 'type',\n    value: 123,\n  },\n\n  // the properties below are optional\n  apiPassthrough: {\n    extensions: {\n      certificatePolicies: [{\n        certPolicyId: 'certPolicyId',\n\n        // the properties below are optional\n        policyQualifiers: [{\n          policyQualifierId: 'policyQualifierId',\n          qualifier: {\n            cpsUri: 'cpsUri',\n          },\n        }],\n      }],\n      customExtensions: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n\n        // the properties below are optional\n        critical: false,\n      }],\n      extendedKeyUsage: [{\n        extendedKeyUsageObjectIdentifier: 'extendedKeyUsageObjectIdentifier',\n        extendedKeyUsageType: 'extendedKeyUsageType',\n      }],\n      keyUsage: {\n        crlSign: false,\n        dataEncipherment: false,\n        decipherOnly: false,\n        digitalSignature: false,\n        encipherOnly: false,\n        keyAgreement: false,\n        keyCertSign: false,\n        keyEncipherment: false,\n        nonRepudiation: false,\n      },\n      subjectAlternativeNames: [{\n        directoryName: {\n          commonName: 'commonName',\n          country: 'country',\n          customAttributes: [{\n            objectIdentifier: 'objectIdentifier',\n            value: 'value',\n          }],\n          distinguishedNameQualifier: 'distinguishedNameQualifier',\n          generationQualifier: 'generationQualifier',\n          givenName: 'givenName',\n          initials: 'initials',\n          locality: 'locality',\n          organization: 'organization',\n          organizationalUnit: 'organizationalUnit',\n          pseudonym: 'pseudonym',\n          serialNumber: 'serialNumber',\n          state: 'state',\n          surname: 'surname',\n          title: 'title',\n        },\n        dnsName: 'dnsName',\n        ediPartyName: {\n          nameAssigner: 'nameAssigner',\n          partyName: 'partyName',\n        },\n        ipAddress: 'ipAddress',\n        otherName: {\n          typeId: 'typeId',\n          value: 'value',\n        },\n        registeredId: 'registeredId',\n        rfc822Name: 'rfc822Name',\n        uniformResourceIdentifier: 'uniformResourceIdentifier',\n      }],\n    },\n    subject: {\n      commonName: 'commonName',\n      country: 'country',\n      customAttributes: [{\n        objectIdentifier: 'objectIdentifier',\n        value: 'value',\n      }],\n      distinguishedNameQualifier: 'distinguishedNameQualifier',\n      generationQualifier: 'generationQualifier',\n      givenName: 'givenName',\n      initials: 'initials',\n      locality: 'locality',\n      organization: 'organization',\n      organizationalUnit: 'organizationalUnit',\n      pseudonym: 'pseudonym',\n      serialNumber: 'serialNumber',\n      state: 'state',\n      surname: 'surname',\n      title: 'title',\n    },\n  },\n  templateArn: 'templateArn',\n  validityNotBefore: {\n    type: 'type',\n    value: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":55,"75":87,"91":10,"153":1,"169":1,"192":7,"193":18,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":83,"290":1},"fqnsFingerprint":"98462fd69def54c0fd74dc0acfbd48a7d20ae5bda3367808707b57890e307477"},"58cdb6fb75ff47dbdb5c79aebd38693b2e21347bb6115dfa9ec37bd08d934e66":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncfn_permission = acmpca.CfnPermission(self, \"MyCfnPermission\",\n    actions=[\"actions\"],\n    certificate_authority_arn=\"certificateAuthorityArn\",\n    principal=\"principal\",\n\n    # the properties below are optional\n    source_account=\"sourceAccount\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar cfnPermission = new CfnPermission(this, \"MyCfnPermission\", new CfnPermissionProps {\n    Actions = new [] { \"actions\" },\n    CertificateAuthorityArn = \"certificateAuthorityArn\",\n    Principal = \"principal\",\n\n    // the properties below are optional\n    SourceAccount = \"sourceAccount\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCfnPermission cfnPermission = CfnPermission.Builder.create(this, \"MyCfnPermission\")\n        .actions(List.of(\"actions\"))\n        .certificateAuthorityArn(\"certificateAuthorityArn\")\n        .principal(\"principal\")\n\n        // the properties below are optional\n        .sourceAccount(\"sourceAccount\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncfnPermission := acmpca.NewCfnPermission(this, jsii.String(\"MyCfnPermission\"), &CfnPermissionProps{\n\tActions: []*string{\n\t\tjsii.String(\"actions\"),\n\t},\n\tCertificateAuthorityArn: jsii.String(\"certificateAuthorityArn\"),\n\tPrincipal: jsii.String(\"principal\"),\n\n\t// the properties below are optional\n\tSourceAccount: jsii.String(\"sourceAccount\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnPermission = new acmpca.CfnPermission(this, 'MyCfnPermission', {\n  actions: ['actions'],\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  sourceAccount: 'sourceAccount',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnPermission"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnPermission","@aws-cdk/aws-acmpca.CfnPermissionProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPermission = new acmpca.CfnPermission(this, 'MyCfnPermission', {\n  actions: ['actions'],\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  sourceAccount: 'sourceAccount',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":8,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"338f907fa5bf7798dc6e644b7339e434ead63141ecc0b2b6b696fc345f62c0cb"},"7b810c692608a0231aa805c49e563a22fc3faf8819b685d4fe1d25444290280c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_acmpca as acmpca\n\ncfn_permission_props = acmpca.CfnPermissionProps(\n    actions=[\"actions\"],\n    certificate_authority_arn=\"certificateAuthorityArn\",\n    principal=\"principal\",\n\n    # the properties below are optional\n    source_account=\"sourceAccount\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ACMPCA;\n\nvar cfnPermissionProps = new CfnPermissionProps {\n    Actions = new [] { \"actions\" },\n    CertificateAuthorityArn = \"certificateAuthorityArn\",\n    Principal = \"principal\",\n\n    // the properties below are optional\n    SourceAccount = \"sourceAccount\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.acmpca.*;\n\nCfnPermissionProps cfnPermissionProps = CfnPermissionProps.builder()\n        .actions(List.of(\"actions\"))\n        .certificateAuthorityArn(\"certificateAuthorityArn\")\n        .principal(\"principal\")\n\n        // the properties below are optional\n        .sourceAccount(\"sourceAccount\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport acmpca \"github.com/aws-samples/dummy/awscdkawsacmpca\"\n\ncfnPermissionProps := &CfnPermissionProps{\n\tActions: []*string{\n\t\tjsii.String(\"actions\"),\n\t},\n\tCertificateAuthorityArn: jsii.String(\"certificateAuthorityArn\"),\n\tPrincipal: jsii.String(\"principal\"),\n\n\t// the properties below are optional\n\tSourceAccount: jsii.String(\"sourceAccount\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\nconst cfnPermissionProps: acmpca.CfnPermissionProps = {\n  actions: ['actions'],\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  sourceAccount: 'sourceAccount',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-acmpca.CfnPermissionProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-acmpca.CfnPermissionProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as acmpca from '@aws-cdk/aws-acmpca';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPermissionProps: acmpca.CfnPermissionProps = {\n  actions: ['actions'],\n  certificateAuthorityArn: 'certificateAuthorityArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  sourceAccount: 'sourceAccount',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":8,"153":1,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"221909500f972f94ae9ee5573f8ca2b493f1335351e7aa85177e1bfecda8e5d4"}}}