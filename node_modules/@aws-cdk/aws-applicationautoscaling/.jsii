{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling-common": "1.199.0",
    "@aws-cdk/aws-cloudwatch": "1.199.0",
    "@aws-cdk/aws-iam": "1.199.0",
    "@aws-cdk/core": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::ApplicationAutoScaling",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "applicationautoscaling"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-applicationautoscaling",
  "readme": {
    "markdown": "# AWS Auto Scaling Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n**Application AutoScaling** is used to configure autoscaling for all\nservices other than scaling EC2 instances. For example, you will use this to\nscale ECS tasks, DynamoDB capacity, Spot Fleet sizes, Comprehend document classification endpoints, Lambda function provisioned concurrency and more.\n\nAs a CDK user, you will probably not have to interact with this library\ndirectly; instead, it will be used by other construct libraries to\noffer AutoScaling features for their own constructs.\n\nThis document will describe the general autoscaling features and concepts;\nyour particular service may offer only a subset of these.\n\n## AutoScaling basics\n\nResources can offer one or more **attributes** to autoscale, typically\nrepresenting some capacity dimension of the underlying service. For example,\na DynamoDB Table offers autoscaling of the read and write capacity of the\ntable proper and its Global Secondary Indexes, an ECS Service offers\nautoscaling of its task count, an RDS Aurora cluster offers scaling of its\nreplica count, and so on.\n\nWhen you enable autoscaling for an attribute, you specify a minimum and a\nmaximum value for the capacity. AutoScaling policies that respond to metrics\nwill never go higher or lower than the indicated capacity (but scheduled\nscaling actions might, see below).\n\nThere are three ways to scale your capacity:\n\n* **In response to a metric** (also known as step scaling); for example, you\n  might want to scale out if the CPU usage across your cluster starts to rise,\n  and scale in when it drops again.\n* **By trying to keep a certain metric around a given value** (also known as\n  target tracking scaling); you might want to automatically scale out an in to\n  keep your CPU usage around 50%.\n* **On a schedule**; you might want to organize your scaling around traffic\n  flows you expect, by scaling out in the morning and scaling in in the\n  evening.\n\nThe general pattern of autoscaling will look like this:\n\n```ts\ndeclare const resource: SomeScalableResource;\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 5,\n  maxCapacity: 100\n});\n\n// Then call a method to enable metric scaling and/or schedule scaling\n// (explained below):\n//\n// capacity.scaleOnMetric(...);\n// capacity.scaleToTrackMetric(...);\n// capacity.scaleOnSchedule(...);\n```\n\n## Step Scaling\n\nThis type of scaling scales in and out in deterministic steps that you\nconfigure, in response to metric values. For example, your scaling strategy\nto scale in response to CPU usage might look like this:\n\n```plaintext\n Scaling        -1          (no change)          +1       +3\n            │        │                       │        │        │\n            ├────────┼───────────────────────┼────────┼────────┤\n            │        │                       │        │        │\nCPU usage   0%      10%                     50%       70%     100%\n```\n\n(Note that this is not necessarily a recommended scaling strategy, but it's\na possible one. You will have to determine what thresholds are right for you).\n\nYou would configure it like this:\n\n```ts\ndeclare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n```\n\nThe AutoScaling construct library will create the required CloudWatch alarms and\nAutoScaling policies for you.\n\n### Scaling based on multiple datapoints\n\nThe Step Scaling configuration above will initiate a scaling event when a single\ndatapoint of the scaling metric is breaching a scaling step breakpoint. In cases\nwhere you might want to initiate scaling actions on a larger number of datapoints\n(ie in order to smooth out randomness in the metric data), you can use the\noptional `evaluationPeriods` and `datapointsToAlarm` properties:\n\n```ts\ndeclare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPUWithMultipleDatapoints', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // if the cpuUtilization metric has a period of 1 minute, then data points\n  // in the last 10 minutes will be evaluated\n  evaluationPeriods: 10,\n\n  // Only trigger a scaling action when 6 datapoints out of the last 10 are\n  // breaching. If this is left unspecified, then ALL datapoints in the\n  // evaluation period must be breaching to trigger a scaling action\n  datapointsToAlarm: 6\n});\n```\n\n## Target Tracking Scaling\n\nThis type of scaling scales in and out in order to keep a metric (typically\nrepresenting utilization) around a value you prefer. This type of scaling is\ntypically heavily service-dependent in what metric you can use, and so\ndifferent services will have different methods here to set up target tracking\nscaling.\n\nThe following example configures the read capacity of a DynamoDB table\nto be around 60% utilization:\n\n```ts\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n\ndeclare const table: dynamodb.Table;\n\nconst readCapacity = table.autoScaleReadCapacity({\n  minCapacity: 10,\n  maxCapacity: 1000\n});\nreadCapacity.scaleOnUtilization({\n  targetUtilizationPercent: 60\n});\n```\n\n## Scheduled Scaling\n\nThis type of scaling is used to change capacities based on time. It works\nby changing the `minCapacity` and `maxCapacity` of the attribute, and so\ncan be used for two purposes:\n\n* Scale in and out on a schedule by setting the `minCapacity` high or\n  the `maxCapacity` low.\n* Still allow the regular scaling actions to do their job, but restrict\n  the range they can scale over (by setting both `minCapacity` and\n  `maxCapacity` but changing their range over time).\n\nThe following schedule expressions can be used:\n\n* `at(yyyy-mm-ddThh:mm:ss)` -- scale at a particular moment in time\n* `rate(value unit)` -- scale every minute/hour/day\n* `cron(mm hh dd mm dow)` -- scale on arbitrary schedules\n\nOf these, the cron expression is the most useful but also the most\ncomplicated. A schedule is expressed as a cron expression. The `Schedule` class has a `cron` method to help build cron expressions.\n\nThe following example scales the fleet out in the morning, and lets natural\nscaling take over at night:\n\n```ts\ndeclare const resource: SomeScalableResource;\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n```\n\n## Examples\n\n### Lambda Provisioned Concurrency Auto Scaling\n\n```ts\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n```\n\n### ElastiCache Redis shards scaling with target value\n\n```ts\nconst shardsScalableTarget = new appscaling.ScalableTarget(this, 'ElastiCacheRedisShardsScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.ELASTICACHE,\n  scalableDimension: 'elasticache:replication-group:NodeGroups',\n  minCapacity: 2,\n  maxCapacity: 10,\n  resourceId: 'replication-group/main-cluster',\n});\n\nshardsScalableTarget.scaleToTrackMetric('ElastiCacheRedisShardsCPUUtilization', {\n  targetValue: 20,\n  predefinedMetric: appscaling.PredefinedMetric.ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-applicationautoscaling",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
      "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
    },
    "java": {
      "maven": {
        "artifactId": "applicationautoscaling",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.applicationautoscaling"
    },
    "js": {
      "npm": "@aws-cdk/aws-applicationautoscaling"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-applicationautoscaling",
      "module": "aws_cdk.aws_applicationautoscaling"
    }
  },
  "types": {
    "@aws-cdk/aws-applicationautoscaling.AdjustmentTier": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An adjustment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst adjustmentTier: appscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentTier",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 167
      },
      "name": "AdjustmentTier",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpeted as an added capacity, a new fixed capacity or an\nadded percentage depending on the AdjustmentType value of the\nStepScalingPolicy.\n\nCan be positive or negative.",
            "stability": "stable",
            "summary": "What number to adjust the capacity with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 177
          },
          "name": "adjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "-Infinity if this is the first tier, otherwise the upperBound of the previous tier",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is higher than this value.",
            "stability": "stable",
            "summary": "Lower bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 187
          },
          "name": "lowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "+Infinity",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is lower than this value.",
            "stability": "stable",
            "summary": "Upper bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 197
          },
          "name": "upperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:AdjustmentTier"
    },
    "@aws-cdk/aws-applicationautoscaling.AdjustmentType": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How adjustment numbers are interpreted.",
        "example": "declare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 122
      },
      "members": [
        {
          "docs": {
            "remarks": "A positive number increases capacity, a negative number decreases capacity.",
            "stability": "stable",
            "summary": "Add the adjustment number to the current capacity."
          },
          "name": "CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "remarks": "The number must be between -100 and 100; a positive number increases\ncapacity and a negative number decreases it.",
            "stability": "stable",
            "summary": "Add this percentage of the current capacity to itself."
          },
          "name": "PERCENT_CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make the capacity equal to the exact number given."
          },
          "name": "EXACT_CAPACITY"
        }
      ],
      "name": "AdjustmentType",
      "symbolId": "lib/step-scaling-action:AdjustmentType"
    },
    "@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "This class is basically a light wrapper around ScalableTarget, but with\nall methods protected instead of public so they can be selectively\nexposed and/or more specific versions of them can be exposed by derived\nclasses for individual services support autoscaling.\n\nTypical use cases:\n\n- Hide away the PredefinedMetric enum for target tracking policies.\n- Don't expose all scaling methods (for example Dynamo tables don't support\n   Step Scaling, so the Dynamo subclass won't expose this method).",
        "stability": "stable",
        "summary": "Represent an attribute for which autoscaling can be configured."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/base-scalable-attribute.ts",
          "line": 53
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base-scalable-attribute.ts",
        "line": 50
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on a metric value."
          },
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 76
          },
          "name": "doScaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 69
          },
          "name": "doScaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 83
          },
          "name": "doScaleToTrackMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "BaseScalableAttribute",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 53
          },
          "name": "props",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"
          }
        }
      ],
      "symbolId": "lib/base-scalable-attribute:BaseScalableAttribute"
    },
    "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a ScalableTableAttribute.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst baseScalableAttributeProps: appscaling.BaseScalableAttributeProps = {\n  dimension: 'dimension',\n  maxCapacity: 123,\n  resourceId: 'resourceId',\n  role: role,\n  serviceNamespace: appscaling.ServiceNamespace.ECS,\n\n  // the properties below are optional\n  minCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.EnableScalingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base-scalable-attribute.ts",
        "line": 14
      },
      "name": "BaseScalableAttributeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scalable dimension of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 28
          },
          "name": "dimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource ID of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 23
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Role to use for scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 33
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Service namespace of the scalable attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 18
          },
          "name": "serviceNamespace",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.ServiceNamespace"
          }
        }
      ],
      "symbolId": "lib/base-scalable-attribute:BaseScalableAttributeProps"
    },
    "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Contains the attributes that are common to target tracking policies,\nexcept the ones relating to the metric and to the scalable target.\n\nThis interface is reused by more specific target tracking props objects\nin other services.",
        "stability": "stable",
        "summary": "Base interface for target tracking props.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst baseTargetTrackingProps: appscaling.BaseTargetTrackingProps = {\n  disableScaleIn: false,\n  policyName: 'policyName',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 20
      },
      "name": "BaseTargetTrackingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If the value is true, scale in is disabled and the target tracking policy\nwon't remove capacity from the scalable resource. Otherwise, scale in is\nenabled and the target tracking policy can remove capacity from the\nscalable resource.",
            "stability": "stable",
            "summary": "Indicates whether scale in by the target tracking policy is disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 38
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "stability": "stable",
            "summary": "A name for the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 26
          },
          "name": "policyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(300) for the following scalable targets: ECS services,\nSpot Fleet requests, EMR clusters, AppStream 2.0 fleets, Aurora DB clusters,\nAmazon SageMaker endpoint variants, Custom resources. For all other scalable\ntargets, the default value is Duration.seconds(0): DynamoDB tables, DynamoDB\nglobal secondary indexes, Amazon Comprehend document classification endpoints,\nLambda provisioned concurrency",
            "stability": "stable",
            "summary": "Period after a scale in activity completes before another scale in activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 50
          },
          "name": "scaleInCooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(300) for the following scalable targets: ECS services,\nSpot Fleet requests, EMR clusters, AppStream 2.0 fleets, Aurora DB clusters,\nAmazon SageMaker endpoint variants, Custom resources. For all other scalable\ntargets, the default value is Duration.seconds(0): DynamoDB tables, DynamoDB\nglobal secondary indexes, Amazon Comprehend document classification endpoints,\nLambda provisioned concurrency",
            "stability": "stable",
            "summary": "Period after a scale out activity completes before another scale out activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 62
          },
          "name": "scaleOutCooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:BaseTargetTrackingProps"
    },
    "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "declare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 12
      },
      "name": "BasicStepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metric to scale on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 16
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Maps a range of metric values to a particular scaling behavior.",
            "stability": "stable",
            "summary": "The intervals for scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 23
          },
          "name": "scalingSteps",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingInterval"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "stable",
            "summary": "How the adjustment numbers inside 'intervals' are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 30
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No cooldown period",
            "remarks": "Subsequent scale outs during the cooldown period are squashed so that only\nthe biggest scale out happens.\n\nSubsequent scale ins during the cooldown period are ignored.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html",
            "stability": "stable",
            "summary": "Grace period after scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 43
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "`evaluationPeriods`",
            "remarks": "Creates an \"M out of N\" alarm, where this property is the M and the value set for\n`evaluationPeriods` is the N value.\n\nOnly has meaning if `evaluationPeriods != 1`.",
            "stability": "stable",
            "summary": "The number of data points out of the evaluation periods that must be breaching to trigger a scaling action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 79
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Raising this value can be used to smooth out the metric, at the expense\nof slower response times.\n\nIf `datapointsToAlarm` is not set, then all data points in the evaluation period\nmust meet the criteria to trigger a scaling action.",
            "stability": "stable",
            "summary": "How many evaluation periods of the metric to wait before triggering a scaling action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 66
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The statistic from the metric if applicable (MIN, MAX, AVERAGE), otherwise AVERAGE.",
            "remarks": "Only has meaning if `evaluationPeriods != 1`.",
            "stability": "stable",
            "summary": "Aggregation to apply to all data points over the evaluation periods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 88
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "stable",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 53
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:BasicStepScalingPolicyProps"
    },
    "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Target Tracking policy that include the metric but exclude the target.",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 68
      },
      "name": "BasicTargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 72
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom metric.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "stable",
            "summary": "A custom metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 107
          },
          "name": "customMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No predefined metrics.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "stable",
            "summary": "A predefined metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 84
          },
          "name": "predefinedMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.PredefinedMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No resource label.",
            "remarks": "Only used for predefined metric ALBRequestCountPerTarget.\n\nExample value: `app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>`",
            "stability": "stable",
            "summary": "Identify the resource associated with the metric type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 95
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:BasicTargetTrackingScalingPolicyProps"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ApplicationAutoScaling::ScalableTarget",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::ApplicationAutoScaling::ScalableTarget` resource specifies a resource that Application Auto Scaling can scale, such as an AWS::DynamoDB::Table or AWS::ECS::Service resource.\n\nFor more information, see [Getting started](https://docs.aws.amazon.com/autoscaling/application/userguide/getting-started.html) in the *Application Auto Scaling User Guide* .\n\n> If the resource that you want Application Auto Scaling to scale is not yet created in your account, add a dependency on the resource when registering it as a scalable target using the [DependsOn](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) attribute.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ApplicationAutoScaling::ScalableTarget`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalableTarget = new appscaling.CfnScalableTarget(this, 'MyCfnScalableTarget', {\n  maxCapacity: 123,\n  minCapacity: 123,\n  resourceId: 'resourceId',\n  roleArn: 'roleArn',\n  scalableDimension: 'scalableDimension',\n  serviceNamespace: 'serviceNamespace',\n\n  // the properties below are optional\n  scheduledActions: [{\n    schedule: 'schedule',\n    scheduledActionName: 'scheduledActionName',\n\n    // the properties below are optional\n    endTime: new Date(),\n    scalableTargetAction: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    startTime: new Date(),\n    timezone: 'timezone',\n  }],\n  suspendedState: {\n    dynamicScalingInSuspended: false,\n    dynamicScalingOutSuspended: false,\n    scheduledScalingSuspended: false,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ApplicationAutoScaling::ScalableTarget`."
        },
        "locationInModule": {
          "filename": "lib/applicationautoscaling.generated.ts",
          "line": 344
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 210
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 369
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 387
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScalableTarget",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 214
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 374
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-maxcapacity"
            },
            "remarks": "When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand.",
            "stability": "external",
            "summary": "The maximum value that you plan to scale out to."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 240
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-mincapacity"
            },
            "remarks": "When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand.",
            "stability": "external",
            "summary": "The minimum value that you plan to scale in to."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 247
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-resourceid"
            },
            "remarks": "This string consists of the resource type and unique identifier.\n\n- ECS service - The resource type is `service` and the unique identifier is the cluster name and service name. Example: `service/default/sample-webapp` .\n- Spot Fleet - The resource type is `spot-fleet-request` and the unique identifier is the Spot Fleet request ID. Example: `spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE` .\n- EMR cluster - The resource type is `instancegroup` and the unique identifier is the cluster ID and instance group ID. Example: `instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0` .\n- AppStream 2.0 fleet - The resource type is `fleet` and the unique identifier is the fleet name. Example: `fleet/sample-fleet` .\n- DynamoDB table - The resource type is `table` and the unique identifier is the table name. Example: `table/my-table` .\n- DynamoDB global secondary index - The resource type is `index` and the unique identifier is the index name. Example: `table/my-table/index/my-table-index` .\n- Aurora DB cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:my-db-cluster` .\n- SageMaker endpoint variant - The resource type is `variant` and the unique identifier is the resource ID. Example: `endpoint/my-end-point/variant/KMeansClustering` .\n- Custom resources are not supported with a resource type. This parameter must specify the `OutputValue` from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource) .\n- Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE` .\n- Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE` .\n- Lambda provisioned concurrency - The resource type is `function` and the unique identifier is the function name with a function version or alias name suffix that is not `$LATEST` . Example: `function:my-function:prod` or `function:my-function:1` .\n- Amazon Keyspaces table - The resource type is `table` and the unique identifier is the table name. Example: `keyspace/mykeyspace/table/mytable` .\n- Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: `arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5` .\n- Amazon ElastiCache replication group - The resource type is `replication-group` and the unique identifier is the replication group name. Example: `replication-group/mycluster` .\n- Neptune cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:mycluster` .",
            "stability": "external",
            "summary": "The identifier of the resource associated with the scalable target."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 271
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-rolearn"
            },
            "remarks": "This can be either an IAM service role that Application Auto Scaling can assume to make calls to other AWS resources on your behalf, or a service-linked role for the specified service. For more information, see [How Application Auto Scaling works with IAM](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html) in the *Application Auto Scaling User Guide* .\n\nTo automatically create a service-linked role (recommended), specify the full ARN of the service-linked role in your stack template. To find the exact ARN of the service-linked role for your AWS or custom resource, see the [Service-linked roles](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-service-linked-roles.html) topic in the *Application Auto Scaling User Guide* . Look for the ARN in the table at the bottom of the page.",
            "stability": "external",
            "summary": "Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 280
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scalabledimension"
            },
            "remarks": "This string consists of the service namespace, resource type, and scaling property.\n\n- `ecs:service:DesiredCount` - The desired task count of an ECS service.\n- `elasticmapreduce:instancegroup:InstanceCount` - The instance count of an EMR Instance Group.\n- `ec2:spot-fleet-request:TargetCapacity` - The target capacity of a Spot Fleet.\n- `appstream:fleet:DesiredCapacity` - The desired capacity of an AppStream 2.0 fleet.\n- `dynamodb:table:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB table.\n- `dynamodb:table:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB table.\n- `dynamodb:index:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB global secondary index.\n- `dynamodb:index:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB global secondary index.\n- `rds:cluster:ReadReplicaCount` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n- `sagemaker:variant:DesiredInstanceCount` - The number of EC2 instances for a SageMaker model endpoint variant.\n- `custom-resource:ResourceType:Property` - The scalable dimension for a custom resource provided by your own application or service.\n- `comprehend:document-classifier-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend document classification endpoint.\n- `comprehend:entity-recognizer-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend entity recognizer endpoint.\n- `lambda:function:ProvisionedConcurrency` - The provisioned concurrency for a Lambda function.\n- `cassandra:table:ReadCapacityUnits` - The provisioned read capacity for an Amazon Keyspaces table.\n- `cassandra:table:WriteCapacityUnits` - The provisioned write capacity for an Amazon Keyspaces table.\n- `kafka:broker-storage:VolumeSize` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.\n- `elasticache:replication-group:NodeGroups` - The number of node groups for an Amazon ElastiCache replication group.\n- `elasticache:replication-group:Replicas` - The number of replicas per node group for an Amazon ElastiCache replication group.\n- `neptune:cluster:ReadReplicaCount` - The count of read replicas in an Amazon Neptune DB cluster.",
            "stability": "external",
            "summary": "The scalable dimension associated with the scalable target."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 308
          },
          "name": "scalableDimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-servicenamespace"
            },
            "stability": "external",
            "summary": "The namespace of the AWS service that provides the resource, or a `custom-resource` ."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 315
          },
          "name": "serviceNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scheduledactions"
            },
            "remarks": "Duplicates aren't allowed.",
            "stability": "external",
            "summary": "The scheduled actions for the scalable target."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 322
          },
          "name": "scheduledActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-suspendedstate"
            },
            "remarks": "Setting the value of an attribute to `true` suspends the specified scaling activities. Setting it to `false` (default) resumes the specified scaling activities.\n\n*Suspension Outcomes*\n\n- For `DynamicScalingInSuspended` , while a suspension is in effect, all scale-in activities that are triggered by a scaling policy are suspended.\n- For `DynamicScalingOutSuspended` , while a suspension is in effect, all scale-out activities that are triggered by a scaling policy are suspended.\n- For `ScheduledScalingSuspended` , while a suspension is in effect, all scaling activities that involve scheduled actions are suspended.",
            "stability": "external",
            "summary": "An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 335
          },
          "name": "suspendedState",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.SuspendedStateProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalableTarget"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`ScalableTargetAction` specifies the minimum and maximum capacity for the `ScalableTargetAction` property of the [AWS::ApplicationAutoScaling::ScalableTarget ScheduledAction](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst scalableTargetActionProperty: appscaling.CfnScalableTarget.ScalableTargetActionProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 401
      },
      "name": "ScalableTargetActionProperty",
      "namespace": "CfnScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html#cfn-applicationautoscaling-scalabletarget-scalabletargetaction-maxcapacity"
            },
            "stability": "external",
            "summary": "The maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 407
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html#cfn-applicationautoscaling-scalabletarget-scalabletargetaction-mincapacity"
            },
            "stability": "external",
            "summary": "The minimum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 413
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalableTarget.ScalableTargetActionProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Scheduled scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html) in the *Application Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`ScheduledAction` is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies a scheduled action for a scalable target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst scheduledActionProperty: appscaling.CfnScalableTarget.ScheduledActionProperty = {\n  schedule: 'schedule',\n  scheduledActionName: 'scheduledActionName',\n\n  // the properties below are optional\n  endTime: new Date(),\n  scalableTargetAction: {\n    maxCapacity: 123,\n    minCapacity: 123,\n  },\n  startTime: new Date(),\n  timezone: 'timezone',\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 479
      },
      "name": "ScheduledActionProperty",
      "namespace": "CfnScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-schedule"
            },
            "remarks": "- At expressions - \" `at( *yyyy* - *mm* - *dd* T *hh* : *mm* : *ss* )` \"\n- Rate expressions - \" `rate( *value* *unit* )` \"\n- Cron expressions - \" `cron( *fields* )` \"\n\nAt expressions are useful for one-time schedules. Cron expressions are useful for scheduled actions that run periodically at a specified date and time, and rate expressions are useful for scheduled actions that run at a regular interval.\n\nAt and cron expressions use Universal Coordinated Time (UTC) by default.\n\nThe cron format consists of six fields separated by white spaces: [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].\n\nFor rate expressions, *value* is a positive integer and *unit* is `minute` | `minutes` | `hour` | `hours` | `day` | `days` .",
            "stability": "external",
            "summary": "The schedule for this action. The following formats are supported:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 509
          },
          "name": "schedule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-scheduledactionname"
            },
            "remarks": "This name must be unique among all other scheduled actions on the specified scalable target.",
            "stability": "external",
            "summary": "The name of the scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 515
          },
          "name": "scheduledActionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-endtime"
            },
            "stability": "external",
            "summary": "The date and time that the action is scheduled to end, in UTC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 485
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-scalabletargetaction"
            },
            "remarks": "You can set both values or just one. At the scheduled time, if the current capacity is below the minimum capacity, Application Auto Scaling scales out to the minimum capacity. If the current capacity is above the maximum capacity, Application Auto Scaling scales in to the maximum capacity.",
            "stability": "external",
            "summary": "The new minimum and maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 491
          },
          "name": "scalableTargetAction",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-starttime"
            },
            "stability": "external",
            "summary": "The date and time that the action is scheduled to begin, in UTC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 521
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-timezone"
            },
            "stability": "external",
            "summary": "The time zone used when referring to the date and time of a scheduled action, when the scheduled action uses an at or cron expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 527
          },
          "name": "timezone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalableTarget.ScheduledActionProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.SuspendedStateProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-suspendedstate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Suspending and resuming scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the *Application Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`SuspendedState` is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies whether the scaling activities for a scalable target are in a suspended state.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst suspendedStateProperty: appscaling.CfnScalableTarget.SuspendedStateProperty = {\n  dynamicScalingInSuspended: false,\n  dynamicScalingOutSuspended: false,\n  scheduledScalingSuspended: false,\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.SuspendedStateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 607
      },
      "name": "SuspendedStateProperty",
      "namespace": "CfnScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-suspendedstate.html#cfn-applicationautoscaling-scalabletarget-suspendedstate-dynamicscalinginsuspended"
            },
            "remarks": "Set the value to `true` if you don't want Application Auto Scaling to remove capacity when a scaling policy is triggered. The default is `false` .",
            "stability": "external",
            "summary": "Whether scale in by a target tracking scaling policy or a step scaling policy is suspended."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 613
          },
          "name": "dynamicScalingInSuspended",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-suspendedstate.html#cfn-applicationautoscaling-scalabletarget-suspendedstate-dynamicscalingoutsuspended"
            },
            "remarks": "Set the value to `true` if you don't want Application Auto Scaling to add capacity when a scaling policy is triggered. The default is `false` .",
            "stability": "external",
            "summary": "Whether scale out by a target tracking scaling policy or a step scaling policy is suspended."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 619
          },
          "name": "dynamicScalingOutSuspended",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-suspendedstate.html#cfn-applicationautoscaling-scalabletarget-suspendedstate-scheduledscalingsuspended"
            },
            "remarks": "Set the value to `true` if you don't want Application Auto Scaling to add or remove capacity by initiating scheduled actions. The default is `false` .",
            "stability": "external",
            "summary": "Whether scheduled scaling is suspended."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 625
          },
          "name": "scheduledScalingSuspended",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalableTarget.SuspendedStateProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnScalableTarget`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalableTargetProps: appscaling.CfnScalableTargetProps = {\n  maxCapacity: 123,\n  minCapacity: 123,\n  resourceId: 'resourceId',\n  roleArn: 'roleArn',\n  scalableDimension: 'scalableDimension',\n  serviceNamespace: 'serviceNamespace',\n\n  // the properties below are optional\n  scheduledActions: [{\n    schedule: 'schedule',\n    scheduledActionName: 'scheduledActionName',\n\n    // the properties below are optional\n    endTime: new Date(),\n    scalableTargetAction: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    startTime: new Date(),\n    timezone: 'timezone',\n  }],\n  suspendedState: {\n    dynamicScalingInSuspended: false,\n    dynamicScalingOutSuspended: false,\n    scheduledScalingSuspended: false,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 19
      },
      "name": "CfnScalableTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-maxcapacity"
            },
            "remarks": "When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand.",
            "stability": "external",
            "summary": "The maximum value that you plan to scale out to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 26
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-mincapacity"
            },
            "remarks": "When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand.",
            "stability": "external",
            "summary": "The minimum value that you plan to scale in to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 33
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-resourceid"
            },
            "remarks": "This string consists of the resource type and unique identifier.\n\n- ECS service - The resource type is `service` and the unique identifier is the cluster name and service name. Example: `service/default/sample-webapp` .\n- Spot Fleet - The resource type is `spot-fleet-request` and the unique identifier is the Spot Fleet request ID. Example: `spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE` .\n- EMR cluster - The resource type is `instancegroup` and the unique identifier is the cluster ID and instance group ID. Example: `instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0` .\n- AppStream 2.0 fleet - The resource type is `fleet` and the unique identifier is the fleet name. Example: `fleet/sample-fleet` .\n- DynamoDB table - The resource type is `table` and the unique identifier is the table name. Example: `table/my-table` .\n- DynamoDB global secondary index - The resource type is `index` and the unique identifier is the index name. Example: `table/my-table/index/my-table-index` .\n- Aurora DB cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:my-db-cluster` .\n- SageMaker endpoint variant - The resource type is `variant` and the unique identifier is the resource ID. Example: `endpoint/my-end-point/variant/KMeansClustering` .\n- Custom resources are not supported with a resource type. This parameter must specify the `OutputValue` from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource) .\n- Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE` .\n- Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE` .\n- Lambda provisioned concurrency - The resource type is `function` and the unique identifier is the function name with a function version or alias name suffix that is not `$LATEST` . Example: `function:my-function:prod` or `function:my-function:1` .\n- Amazon Keyspaces table - The resource type is `table` and the unique identifier is the table name. Example: `keyspace/mykeyspace/table/mytable` .\n- Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: `arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5` .\n- Amazon ElastiCache replication group - The resource type is `replication-group` and the unique identifier is the replication group name. Example: `replication-group/mycluster` .\n- Neptune cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:mycluster` .",
            "stability": "external",
            "summary": "The identifier of the resource associated with the scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 57
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-rolearn"
            },
            "remarks": "This can be either an IAM service role that Application Auto Scaling can assume to make calls to other AWS resources on your behalf, or a service-linked role for the specified service. For more information, see [How Application Auto Scaling works with IAM](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html) in the *Application Auto Scaling User Guide* .\n\nTo automatically create a service-linked role (recommended), specify the full ARN of the service-linked role in your stack template. To find the exact ARN of the service-linked role for your AWS or custom resource, see the [Service-linked roles](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-service-linked-roles.html) topic in the *Application Auto Scaling User Guide* . Look for the ARN in the table at the bottom of the page.",
            "stability": "external",
            "summary": "Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 66
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scalabledimension"
            },
            "remarks": "This string consists of the service namespace, resource type, and scaling property.\n\n- `ecs:service:DesiredCount` - The desired task count of an ECS service.\n- `elasticmapreduce:instancegroup:InstanceCount` - The instance count of an EMR Instance Group.\n- `ec2:spot-fleet-request:TargetCapacity` - The target capacity of a Spot Fleet.\n- `appstream:fleet:DesiredCapacity` - The desired capacity of an AppStream 2.0 fleet.\n- `dynamodb:table:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB table.\n- `dynamodb:table:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB table.\n- `dynamodb:index:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB global secondary index.\n- `dynamodb:index:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB global secondary index.\n- `rds:cluster:ReadReplicaCount` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n- `sagemaker:variant:DesiredInstanceCount` - The number of EC2 instances for a SageMaker model endpoint variant.\n- `custom-resource:ResourceType:Property` - The scalable dimension for a custom resource provided by your own application or service.\n- `comprehend:document-classifier-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend document classification endpoint.\n- `comprehend:entity-recognizer-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend entity recognizer endpoint.\n- `lambda:function:ProvisionedConcurrency` - The provisioned concurrency for a Lambda function.\n- `cassandra:table:ReadCapacityUnits` - The provisioned read capacity for an Amazon Keyspaces table.\n- `cassandra:table:WriteCapacityUnits` - The provisioned write capacity for an Amazon Keyspaces table.\n- `kafka:broker-storage:VolumeSize` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.\n- `elasticache:replication-group:NodeGroups` - The number of node groups for an Amazon ElastiCache replication group.\n- `elasticache:replication-group:Replicas` - The number of replicas per node group for an Amazon ElastiCache replication group.\n- `neptune:cluster:ReadReplicaCount` - The count of read replicas in an Amazon Neptune DB cluster.",
            "stability": "external",
            "summary": "The scalable dimension associated with the scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 94
          },
          "name": "scalableDimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-servicenamespace"
            },
            "stability": "external",
            "summary": "The namespace of the AWS service that provides the resource, or a `custom-resource` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 101
          },
          "name": "serviceNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scheduledactions"
            },
            "remarks": "Duplicates aren't allowed.",
            "stability": "external",
            "summary": "The scheduled actions for the scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 108
          },
          "name": "scheduledActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-suspendedstate"
            },
            "remarks": "Setting the value of an attribute to `true` suspends the specified scaling activities. Setting it to `false` (default) resumes the specified scaling activities.\n\n*Suspension Outcomes*\n\n- For `DynamicScalingInSuspended` , while a suspension is in effect, all scale-in activities that are triggered by a scaling policy are suspended.\n- For `DynamicScalingOutSuspended` , while a suspension is in effect, all scale-out activities that are triggered by a scaling policy are suspended.\n- For `ScheduledScalingSuspended` , while a suspension is in effect, all scaling activities that involve scheduled actions are suspended.",
            "stability": "external",
            "summary": "An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 121
          },
          "name": "suspendedState",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.SuspendedStateProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalableTargetProps"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ApplicationAutoScaling::ScalingPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::ApplicationAutoScaling::ScalingPolicy` resource defines a scaling policy that Application Auto Scaling uses to adjust the capacity of a scalable target.\n\nFor more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) and [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ApplicationAutoScaling::ScalingPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalingPolicy = new appscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  policyName: 'policyName',\n  policyType: 'policyType',\n\n  // the properties below are optional\n  resourceId: 'resourceId',\n  scalableDimension: 'scalableDimension',\n  scalingTargetId: 'scalingTargetId',\n  serviceNamespace: 'serviceNamespace',\n  stepScalingPolicyConfiguration: {\n    adjustmentType: 'adjustmentType',\n    cooldown: 123,\n    metricAggregationType: 'metricAggregationType',\n    minAdjustmentMagnitude: 123,\n    stepAdjustments: [{\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      metricIntervalLowerBound: 123,\n      metricIntervalUpperBound: 123,\n    }],\n  },\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ApplicationAutoScaling::ScalingPolicy`."
        },
        "locationInModule": {
          "filename": "lib/applicationautoscaling.generated.ts",
          "line": 1014
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 878
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1035
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1053
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScalingPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 882
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1040
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policyname"
            },
            "remarks": "Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing `AWS::ApplicationAutoScaling::ScalingPolicy` resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.",
            "stability": "external",
            "summary": "The name of the scaling policy."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 910
          },
          "name": "policyName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policytype"
            },
            "remarks": "The following policy types are supported:\n\n`TargetTrackingScaling` —Not supported for Amazon EMR\n\n`StepScaling` —Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.",
            "stability": "external",
            "summary": "The scaling policy type."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 923
          },
          "name": "policyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-resourceid"
            },
            "remarks": "This string consists of the resource type and unique identifier.\n\n- ECS service - The resource type is `service` and the unique identifier is the cluster name and service name. Example: `service/default/sample-webapp` .\n- Spot Fleet - The resource type is `spot-fleet-request` and the unique identifier is the Spot Fleet request ID. Example: `spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE` .\n- EMR cluster - The resource type is `instancegroup` and the unique identifier is the cluster ID and instance group ID. Example: `instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0` .\n- AppStream 2.0 fleet - The resource type is `fleet` and the unique identifier is the fleet name. Example: `fleet/sample-fleet` .\n- DynamoDB table - The resource type is `table` and the unique identifier is the table name. Example: `table/my-table` .\n- DynamoDB global secondary index - The resource type is `index` and the unique identifier is the index name. Example: `table/my-table/index/my-table-index` .\n- Aurora DB cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:my-db-cluster` .\n- SageMaker endpoint variant - The resource type is `variant` and the unique identifier is the resource ID. Example: `endpoint/my-end-point/variant/KMeansClustering` .\n- Custom resources are not supported with a resource type. This parameter must specify the `OutputValue` from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource) .\n- Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE` .\n- Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE` .\n- Lambda provisioned concurrency - The resource type is `function` and the unique identifier is the function name with a function version or alias name suffix that is not `$LATEST` . Example: `function:my-function:prod` or `function:my-function:1` .\n- Amazon Keyspaces table - The resource type is `table` and the unique identifier is the table name. Example: `keyspace/mykeyspace/table/mytable` .\n- Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: `arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5` .\n- Amazon ElastiCache replication group - The resource type is `replication-group` and the unique identifier is the replication group name. Example: `replication-group/mycluster` .\n- Neptune cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:mycluster` .",
            "stability": "external",
            "summary": "The identifier of the resource associated with the scaling policy."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 947
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalabledimension"
            },
            "remarks": "- `ecs:service:DesiredCount` - The desired task count of an ECS service.\n- `elasticmapreduce:instancegroup:InstanceCount` - The instance count of an EMR Instance Group.\n- `ec2:spot-fleet-request:TargetCapacity` - The target capacity of a Spot Fleet.\n- `appstream:fleet:DesiredCapacity` - The desired capacity of an AppStream 2.0 fleet.\n- `dynamodb:table:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB table.\n- `dynamodb:table:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB table.\n- `dynamodb:index:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB global secondary index.\n- `dynamodb:index:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB global secondary index.\n- `rds:cluster:ReadReplicaCount` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n- `sagemaker:variant:DesiredInstanceCount` - The number of EC2 instances for a SageMaker model endpoint variant.\n- `custom-resource:ResourceType:Property` - The scalable dimension for a custom resource provided by your own application or service.\n- `comprehend:document-classifier-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend document classification endpoint.\n- `comprehend:entity-recognizer-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend entity recognizer endpoint.\n- `lambda:function:ProvisionedConcurrency` - The provisioned concurrency for a Lambda function.\n- `cassandra:table:ReadCapacityUnits` - The provisioned read capacity for an Amazon Keyspaces table.\n- `cassandra:table:WriteCapacityUnits` - The provisioned write capacity for an Amazon Keyspaces table.\n- `kafka:broker-storage:VolumeSize` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.\n- `elasticache:replication-group:NodeGroups` - The number of node groups for an Amazon ElastiCache replication group.\n- `elasticache:replication-group:Replicas` - The number of replicas per node group for an Amazon ElastiCache replication group.\n- `neptune:cluster:ReadReplicaCount` - The count of read replicas in an Amazon Neptune DB cluster.",
            "stability": "external",
            "summary": "The scalable dimension. This string consists of the service namespace, resource type, and scaling property."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 975
          },
          "name": "scalableDimension",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalingtargetid"
            },
            "remarks": "For more information about the ID, see the Return Value section of the `AWS::ApplicationAutoScaling::ScalableTarget` resource.\n\n> You must specify either the `ScalingTargetId` property, or the `ResourceId` , `ScalableDimension` , and `ServiceNamespace` properties, but not both.",
            "stability": "external",
            "summary": "The CloudFormation-generated ID of an Application Auto Scaling scalable target."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 984
          },
          "name": "scalingTargetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-servicenamespace"
            },
            "stability": "external",
            "summary": "The namespace of the AWS service that provides the resource, or a `custom-resource` ."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 991
          },
          "name": "serviceNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration"
            },
            "stability": "external",
            "summary": "A step scaling policy."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 998
          },
          "name": "stepScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration"
            },
            "stability": "external",
            "summary": "A target tracking scaling policy."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1005
          },
          "name": "targetTrackingScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For information about the available metrics for a service, see [AWS services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide* .\n\nTo create your customized metric specification:\n\n- Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide* .\n- Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases.\n\nFor an example of how creating new metrics can be useful, see [Scaling based on Amazon SQS](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-using-sqs-queue.html) in the *Amazon EC2 Auto Scaling User Guide* . This topic mentions Auto Scaling groups, but the same scenario for Amazon SQS can apply to the target tracking scaling policies that you create for a Spot Fleet by using Application Auto Scaling.\n\nFor more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) .\n\n`CustomizedMetricSpecification` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.",
        "stability": "external",
        "summary": "Contains customized metric specification information for a target tracking scaling policy for Application Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst customizedMetricSpecificationProperty: appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 1080
      },
      "name": "CustomizedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-metricname"
            },
            "remarks": "To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that's returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html) .",
            "stability": "external",
            "summary": "The name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1094
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-namespace"
            },
            "stability": "external",
            "summary": "The namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1100
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-statistic"
            },
            "stability": "external",
            "summary": "The statistic of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1106
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-dimensions"
            },
            "remarks": "Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.",
            "stability": "external",
            "summary": "The dimensions of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1088
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-unit"
            },
            "remarks": "For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference* .",
            "stability": "external",
            "summary": "The unit of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1112
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy.CustomizedMetricSpecificationProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`MetricDimension` specifies a name/value pair that is part of the identity of a CloudWatch metric for the `Dimensions` property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type. Duplicate dimensions are not allowed.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst metricDimensionProperty: appscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 1188
      },
      "name": "MetricDimensionProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html#cfn-applicationautoscaling-scalingpolicy-metricdimension-name"
            },
            "stability": "external",
            "summary": "The name of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1194
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html#cfn-applicationautoscaling-scalingpolicy-metricdimension-value"
            },
            "stability": "external",
            "summary": "The value of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1200
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy.MetricDimensionProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`PredefinedMetricSpecification` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.",
        "stability": "external",
        "summary": "Contains predefined metric specification information for a target tracking scaling policy for Application Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst predefinedMetricSpecificationProperty: appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 1268
      },
      "name": "PredefinedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-predefinedmetricspecification-predefinedmetrictype"
            },
            "remarks": "The `ALBRequestCountPerTarget` metric type applies only to Spot fleet requests and ECS services.",
            "stability": "external",
            "summary": "The metric type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1274
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-predefinedmetricspecification-resourcelabel"
            },
            "remarks": "You can't specify a resource label unless the metric type is `ALBRequestCountPerTarget` and there is a target group attached to the Spot Fleet or ECS service.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:\n\n`app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff` .\n\nWhere:\n\n- app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n- targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nTo find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.",
            "stability": "external",
            "summary": "Identifies the resource associated with the metric type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1291
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy.PredefinedMetricSpecificationProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For the following examples, suppose that you have an alarm with a breach threshold of 50:\n\n- To trigger a step adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.\n- To trigger a step adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.\n\nFor more information, see [Step adjustments](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#as-scaling-steps) in the *Application Auto Scaling User Guide* .\n\nYou can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#aws-resource-applicationautoscaling-scalingpolicy--examples) section of the `AWS::ApplicationAutoScaling::ScalingPolicy` documentation.",
        "stability": "external",
        "summary": "`StepAdjustment` specifies a step adjustment for the `StepAdjustments` property of the [AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst stepAdjustmentProperty: appscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 1365
      },
      "name": "StepAdjustmentProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-scalingadjustment"
            },
            "remarks": "The adjustment is based on the value that you specified in the `AdjustmentType` property (either an absolute number or a percentage). A positive value adds to the current capacity and a negative number subtracts from the current capacity.",
            "stability": "external",
            "summary": "The amount by which to scale."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1387
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-metricintervallowerbound"
            },
            "remarks": "If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.\n\nYou must specify at least one upper or lower bound.",
            "stability": "external",
            "summary": "The lower bound for the difference between the alarm threshold and the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1373
          },
          "name": "metricIntervalLowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-metricintervalupperbound"
            },
            "remarks": "If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.\n\nYou must specify at least one upper or lower bound.",
            "stability": "external",
            "summary": "The upper bound for the difference between the alarm threshold and the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1381
          },
          "name": "metricIntervalUpperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy.StepAdjustmentProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`StepScalingPolicyConfiguration` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a step scaling policy configuration for Application Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst stepScalingPolicyConfigurationProperty: appscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty = {\n  adjustmentType: 'adjustmentType',\n  cooldown: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 1457
      },
      "name": "StepScalingPolicyConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-adjustmenttype"
            },
            "stability": "external",
            "summary": "Specifies whether the `ScalingAdjustment` value in the `StepAdjustment` property is an absolute number or a percentage of the current capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1463
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-cooldown"
            },
            "remarks": "With scale-out policies, the intention is to continuously (but not excessively) scale out. After Application Auto Scaling successfully scales out using a step scaling policy, it starts to calculate the cooldown time. The scaling policy won't increase the desired capacity again unless either a larger scale out is triggered or the cooldown period ends. While the cooldown period is in effect, capacity added by the initiating scale-out activity is calculated as part of the desired capacity for the next scale-out activity. For example, when an alarm triggers a step scaling policy to increase the capacity by 2, the scaling activity completes successfully, and a cooldown period starts. If the alarm triggers again during the cooldown period but at a more aggressive step adjustment of 3, the previous increase of 2 is considered part of the current capacity. Therefore, only 1 is added to the capacity.\n\nWith scale-in policies, the intention is to scale in conservatively to protect your application’s availability, so scale-in activities are blocked until the cooldown period has expired. However, if another alarm triggers a scale-out activity during the cooldown period after a scale-in activity, Application Auto Scaling scales out the target immediately. In this case, the cooldown period for the scale-in activity stops and doesn't complete.\n\nApplication Auto Scaling provides a default value of 600 for Amazon ElastiCache replication groups and a default value of 300 for the following scalable targets:\n\n- AppStream 2.0 fleets\n- Aurora DB clusters\n- ECS services\n- EMR clusters\n- Neptune clusters\n- SageMaker endpoint variants\n- Spot Fleets\n- Custom resources\n\nFor all other scalable targets, the default value is 0:\n\n- Amazon Comprehend document classification and entity recognizer endpoints\n- DynamoDB tables and global secondary indexes\n- Amazon Keyspaces tables\n- Lambda provisioned concurrency\n- Amazon MSK broker storage",
            "stability": "external",
            "summary": "The amount of time, in seconds, to wait for a previous scaling activity to take effect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1492
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-metricaggregationtype"
            },
            "remarks": "Valid values are `Minimum` , `Maximum` , and `Average` . If the aggregation type is null, the value is treated as `Average` .",
            "stability": "external",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1498
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-minadjustmentmagnitude"
            },
            "remarks": "For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a `MinAdjustmentMagnitude` of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a `MinAdjustmentMagnitude` of 2, Application Auto Scaling scales out the service by 2 tasks.",
            "stability": "external",
            "summary": "The minimum value to scale by when the adjustment type is `PercentChangeInCapacity` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1504
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustments"
            },
            "remarks": "At least one step adjustment is required if you are adding a new step scaling policy configuration.",
            "stability": "external",
            "summary": "A set of adjustments that enable you to scale based on the size of the alarm breach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1512
          },
          "name": "stepAdjustments",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy.StepScalingPolicyConfigurationProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) in the *Application Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`TargetTrackingScalingPolicyConfiguration` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a target tracking scaling policy configuration for Application Auto Scaling. Use a target tracking scaling policy to adjust the capacity of the specified scalable target in response to actual workloads, so that resource utilization remains at or near the target utilization value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst targetTrackingScalingPolicyConfigurationProperty: appscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  scaleInCooldown: 123,\n  scaleOutCooldown: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 1587
      },
      "name": "TargetTrackingScalingPolicyConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-targetvalue"
            },
            "remarks": "Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.",
            "stability": "external",
            "summary": "The target value for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1665
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-customizedmetricspecification"
            },
            "remarks": "You can specify either a predefined metric or a customized metric.",
            "stability": "external",
            "summary": "A customized metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1593
          },
          "name": "customizedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-disablescalein"
            },
            "remarks": "If the value is `true` , scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is `false` .",
            "stability": "external",
            "summary": "Indicates whether scale in by the target tracking scaling policy is disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1599
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-predefinedmetricspecification"
            },
            "remarks": "You can specify either a predefined metric or a customized metric.",
            "stability": "external",
            "summary": "A predefined metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1605
          },
          "name": "predefinedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-scaleincooldown"
            },
            "remarks": "With the *scale-in cooldown period* , the intention is to scale in conservatively to protect your application’s availability, so scale-in activities are blocked until the cooldown period has expired. However, if another alarm triggers a scale-out activity during the scale-in cooldown period, Application Auto Scaling scales out the target immediately. In this case, the scale-in cooldown period stops and doesn't complete.\n\nApplication Auto Scaling provides a default value of 600 for Amazon ElastiCache replication groups and a default value of 300 for the following scalable targets:\n\n- AppStream 2.0 fleets\n- Aurora DB clusters\n- ECS services\n- EMR clusters\n- Neptune clusters\n- SageMaker endpoint variants\n- Spot Fleets\n- Custom resources\n\nFor all other scalable targets, the default value is 0:\n\n- Amazon Comprehend document classification and entity recognizer endpoints\n- DynamoDB tables and global secondary indexes\n- Amazon Keyspaces tables\n- Lambda provisioned concurrency\n- Amazon MSK broker storage",
            "stability": "external",
            "summary": "The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1632
          },
          "name": "scaleInCooldown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-scaleoutcooldown"
            },
            "remarks": "With the *scale-out cooldown period* , the intention is to continuously (but not excessively) scale out. After Application Auto Scaling successfully scales out using a target tracking scaling policy, it starts to calculate the cooldown time. The scaling policy won't increase the desired capacity again unless either a larger scale out is triggered or the cooldown period ends. While the cooldown period is in effect, the capacity added by the initiating scale-out activity is calculated as part of the desired capacity for the next scale-out activity.\n\nApplication Auto Scaling provides a default value of 600 for Amazon ElastiCache replication groups and a default value of 300 for the following scalable targets:\n\n- AppStream 2.0 fleets\n- Aurora DB clusters\n- ECS services\n- EMR clusters\n- Neptune clusters\n- SageMaker endpoint variants\n- Spot Fleets\n- Custom resources\n\nFor all other scalable targets, the default value is 0:\n\n- Amazon Comprehend document classification and entity recognizer endpoints\n- DynamoDB tables and global secondary indexes\n- Amazon Keyspaces tables\n- Lambda provisioned concurrency\n- Amazon MSK broker storage",
            "stability": "external",
            "summary": "The amount of time, in seconds, to wait for a previous scale-out activity to take effect."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 1659
          },
          "name": "scaleOutCooldown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnScalingPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalingPolicyProps: appscaling.CfnScalingPolicyProps = {\n  policyName: 'policyName',\n  policyType: 'policyType',\n\n  // the properties below are optional\n  resourceId: 'resourceId',\n  scalableDimension: 'scalableDimension',\n  scalingTargetId: 'scalingTargetId',\n  serviceNamespace: 'serviceNamespace',\n  stepScalingPolicyConfiguration: {\n    adjustmentType: 'adjustmentType',\n    cooldown: 123,\n    metricAggregationType: 'metricAggregationType',\n    minAdjustmentMagnitude: 123,\n    stepAdjustments: [{\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      metricIntervalLowerBound: 123,\n      metricIntervalUpperBound: 123,\n    }],\n  },\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 691
      },
      "name": "CfnScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policyname"
            },
            "remarks": "Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing `AWS::ApplicationAutoScaling::ScalingPolicy` resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.",
            "stability": "external",
            "summary": "The name of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 700
          },
          "name": "policyName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policytype"
            },
            "remarks": "The following policy types are supported:\n\n`TargetTrackingScaling` —Not supported for Amazon EMR\n\n`StepScaling` —Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.",
            "stability": "external",
            "summary": "The scaling policy type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 713
          },
          "name": "policyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-resourceid"
            },
            "remarks": "This string consists of the resource type and unique identifier.\n\n- ECS service - The resource type is `service` and the unique identifier is the cluster name and service name. Example: `service/default/sample-webapp` .\n- Spot Fleet - The resource type is `spot-fleet-request` and the unique identifier is the Spot Fleet request ID. Example: `spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE` .\n- EMR cluster - The resource type is `instancegroup` and the unique identifier is the cluster ID and instance group ID. Example: `instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0` .\n- AppStream 2.0 fleet - The resource type is `fleet` and the unique identifier is the fleet name. Example: `fleet/sample-fleet` .\n- DynamoDB table - The resource type is `table` and the unique identifier is the table name. Example: `table/my-table` .\n- DynamoDB global secondary index - The resource type is `index` and the unique identifier is the index name. Example: `table/my-table/index/my-table-index` .\n- Aurora DB cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:my-db-cluster` .\n- SageMaker endpoint variant - The resource type is `variant` and the unique identifier is the resource ID. Example: `endpoint/my-end-point/variant/KMeansClustering` .\n- Custom resources are not supported with a resource type. This parameter must specify the `OutputValue` from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource) .\n- Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE` .\n- Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: `arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE` .\n- Lambda provisioned concurrency - The resource type is `function` and the unique identifier is the function name with a function version or alias name suffix that is not `$LATEST` . Example: `function:my-function:prod` or `function:my-function:1` .\n- Amazon Keyspaces table - The resource type is `table` and the unique identifier is the table name. Example: `keyspace/mykeyspace/table/mytable` .\n- Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: `arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5` .\n- Amazon ElastiCache replication group - The resource type is `replication-group` and the unique identifier is the replication group name. Example: `replication-group/mycluster` .\n- Neptune cluster - The resource type is `cluster` and the unique identifier is the cluster name. Example: `cluster:mycluster` .",
            "stability": "external",
            "summary": "The identifier of the resource associated with the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 737
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalabledimension"
            },
            "remarks": "- `ecs:service:DesiredCount` - The desired task count of an ECS service.\n- `elasticmapreduce:instancegroup:InstanceCount` - The instance count of an EMR Instance Group.\n- `ec2:spot-fleet-request:TargetCapacity` - The target capacity of a Spot Fleet.\n- `appstream:fleet:DesiredCapacity` - The desired capacity of an AppStream 2.0 fleet.\n- `dynamodb:table:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB table.\n- `dynamodb:table:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB table.\n- `dynamodb:index:ReadCapacityUnits` - The provisioned read capacity for a DynamoDB global secondary index.\n- `dynamodb:index:WriteCapacityUnits` - The provisioned write capacity for a DynamoDB global secondary index.\n- `rds:cluster:ReadReplicaCount` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n- `sagemaker:variant:DesiredInstanceCount` - The number of EC2 instances for a SageMaker model endpoint variant.\n- `custom-resource:ResourceType:Property` - The scalable dimension for a custom resource provided by your own application or service.\n- `comprehend:document-classifier-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend document classification endpoint.\n- `comprehend:entity-recognizer-endpoint:DesiredInferenceUnits` - The number of inference units for an Amazon Comprehend entity recognizer endpoint.\n- `lambda:function:ProvisionedConcurrency` - The provisioned concurrency for a Lambda function.\n- `cassandra:table:ReadCapacityUnits` - The provisioned read capacity for an Amazon Keyspaces table.\n- `cassandra:table:WriteCapacityUnits` - The provisioned write capacity for an Amazon Keyspaces table.\n- `kafka:broker-storage:VolumeSize` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.\n- `elasticache:replication-group:NodeGroups` - The number of node groups for an Amazon ElastiCache replication group.\n- `elasticache:replication-group:Replicas` - The number of replicas per node group for an Amazon ElastiCache replication group.\n- `neptune:cluster:ReadReplicaCount` - The count of read replicas in an Amazon Neptune DB cluster.",
            "stability": "external",
            "summary": "The scalable dimension. This string consists of the service namespace, resource type, and scaling property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 765
          },
          "name": "scalableDimension",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalingtargetid"
            },
            "remarks": "For more information about the ID, see the Return Value section of the `AWS::ApplicationAutoScaling::ScalableTarget` resource.\n\n> You must specify either the `ScalingTargetId` property, or the `ResourceId` , `ScalableDimension` , and `ServiceNamespace` properties, but not both.",
            "stability": "external",
            "summary": "The CloudFormation-generated ID of an Application Auto Scaling scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 774
          },
          "name": "scalingTargetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-servicenamespace"
            },
            "stability": "external",
            "summary": "The namespace of the AWS service that provides the resource, or a `custom-resource` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 781
          },
          "name": "serviceNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration"
            },
            "stability": "external",
            "summary": "A step scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 788
          },
          "name": "stepScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration"
            },
            "stability": "external",
            "summary": "A target tracking scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 795
          },
          "name": "targetTrackingScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/applicationautoscaling.generated:CfnScalingPolicyProps"
    },
    "@aws-cdk/aws-applicationautoscaling.CronOptions": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "remarks": "All fields are strings so you can use complex expressions. Absence of\na field implies '*' or '?', whichever one is appropriate.",
        "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions",
        "stability": "stable",
        "summary": "Options to configure a cron expression.",
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 5,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnSchedule('DaytimeScaleDown', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 1,\n});\n\nscalableTarget.scaleOnSchedule('EveningRushScaleUp', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0'}),\n  minCapacity: 10,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CronOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 95
      },
      "name": "CronOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Every day of the month",
            "stability": "stable",
            "summary": "The day of the month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 115
          },
          "name": "day",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every hour",
            "stability": "stable",
            "summary": "The hour to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 108
          },
          "name": "hour",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every minute",
            "stability": "stable",
            "summary": "The minute to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 101
          },
          "name": "minute",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every month",
            "stability": "stable",
            "summary": "The month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 122
          },
          "name": "month",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Any day of the week",
            "stability": "stable",
            "summary": "The day of the week to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 136
          },
          "name": "weekDay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every year",
            "stability": "stable",
            "summary": "The year to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 129
          },
          "name": "year",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schedule:CronOptions"
    },
    "@aws-cdk/aws-applicationautoscaling.EnableScalingProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling Application Auto Scaling.",
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 1,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnCpuUtilization('CpuScaling', {\n  targetUtilizationPercent: 50,\n});\n\nscalableTarget.scaleOnMemoryUtilization('MemoryScaling', {\n  targetUtilizationPercent: 50,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.EnableScalingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base-scalable-attribute.ts",
        "line": 91
      },
      "name": "EnableScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Maximum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 102
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Minimum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 97
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/base-scalable-attribute:EnableScalingProps"
    },
    "@aws-cdk/aws-applicationautoscaling.IScalableTarget": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 9
      },
      "name": "IScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 13
          },
          "name": "scalableTargetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/scalable-target:IScalableTarget"
    },
    "@aws-cdk/aws-applicationautoscaling.MetricAggregationType": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How the scaling metric is going to be aggregated."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.MetricAggregationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 147
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Average."
          },
          "name": "AVERAGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimum."
          },
          "name": "MINIMUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Maximum."
          },
          "name": "MAXIMUM"
        }
      ],
      "name": "MetricAggregationType",
      "symbolId": "lib/step-scaling-action:MetricAggregationType"
    },
    "@aws-cdk/aws-applicationautoscaling.PredefinedMetric": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "stable",
        "summary": "One of the predefined autoscaling metrics.",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.PredefinedMetric",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 185
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Average percentage of instances in an AppStream fleet that are being used."
          },
          "name": "APPSTREAM_AVERAGE_CAPACITY_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Percentage of provisioned read capacity units utilized by a Keyspaces table."
          },
          "name": "CASSANDRA_READ_CAPACITY_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Percentage of provisioned write capacity units utilized by a Keyspaces table."
          },
          "name": "CASSANDRA_WRITE_CAPACITY_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Percentage of provisioned inference units utilized by a Comprehend endpoint."
          },
          "name": "COMPREHEND_INFERENCE_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Average CPU Utilization of read replica instances in a Neptune DB cluster."
          },
          "name": "NEPTURE_READER_AVERAGE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Percentage of provisioned read capacity units consumed by a DynamoDB table."
          },
          "name": "DYNAMODB_READ_CAPACITY_UTILIZATION"
        },
        {
          "docs": {
            "remarks": "Suffix `dummy` is necessary due to jsii bug (https://github.com/aws/jsii/issues/2782).\nDuplicate values will be dropped, so this suffix is added as a workaround.\nThe value will be replaced when this enum is used.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "Percentage of provisioned write capacity units consumed by a DynamoDB table."
          },
          "name": "DYNAMODB_WRITE_CAPACITY_UTILIZATION"
        },
        {
          "docs": {
            "deprecated": "use `PredefinedMetric.DYNAMODB_WRITE_CAPACITY_UTILIZATION`",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "deprecated",
            "summary": "DYANMODB_WRITE_CAPACITY_UTILIZATION."
          },
          "name": "DYANMODB_WRITE_CAPACITY_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "ALB_REQUEST_COUNT_PER_TARGET."
          },
          "name": "ALB_REQUEST_COUNT_PER_TARGET"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "RDS_READER_AVERAGE_CPU_UTILIZATION."
          },
          "name": "RDS_READER_AVERAGE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "RDS_READER_AVERAGE_DATABASE_CONNECTIONS."
          },
          "name": "RDS_READER_AVERAGE_DATABASE_CONNECTIONS"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION."
          },
          "name": "EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN."
          },
          "name": "EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT."
          },
          "name": "EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE."
          },
          "name": "SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "ECS_SERVICE_AVERAGE_CPU_UTILIZATION."
          },
          "name": "ECS_SERVICE_AVERAGE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION."
          },
          "name": "ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics.html#monitoring-metrics-concurrency",
            "stability": "stable",
            "summary": "LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION."
          },
          "name": "LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "KAFKA_BROKER_STORAGE_UTILIZATION."
          },
          "name": "KAFKA_BROKER_STORAGE_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "ELASTIC_CACHE_PRIMARY_ENGINE_CPU_UTILIZATION."
          },
          "name": "ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "ELASTIC_CACHE_REPLICA_ENGINE_CPU_UTILIZATION."
          },
          "name": "ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PredefinedMetricSpecification.html",
            "stability": "stable",
            "summary": "ELASTIC_CACHE_REPLICA_ENGINE_CPU_UTILIZATION."
          },
          "name": "ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE"
        }
      ],
      "name": "PredefinedMetric",
      "symbolId": "lib/target-tracking-scaling-policy:PredefinedMetric"
    },
    "@aws-cdk/aws-applicationautoscaling.ScalableTarget": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a scalable target.",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalableTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/scalable-target.ts",
          "line": 99
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.ScalableTargetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 74
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 76
          },
          "name": "fromScalableTargetId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "scalableTargetId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a policy statement to the role's policy."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 140
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in, in response to a metric."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 170
          },
          "name": "scaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 147
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "action",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 177
          },
          "name": "scaleToTrackMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy"
            }
          }
        }
      ],
      "name": "ScalableTarget",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The role used to give AutoScaling permissions to your resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 95
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `service/ecsStack-MyECSCluster-AB12CDE3F4GH/ecsStack-MyECSService-AB12CDE3F4GH|ecs:service:DesiredCount|ecs`",
            "stability": "stable",
            "summary": "ID of the Scalable Target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 90
          },
          "name": "scalableTargetId",
          "overrides": "@aws-cdk/aws-applicationautoscaling.IScalableTarget",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/scalable-target:ScalableTarget"
    },
    "@aws-cdk/aws-applicationautoscaling.ScalableTargetProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scalable target.",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalableTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 19
      },
      "name": "ScalableTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The maximum value that Application Auto Scaling can use to scale a target during a scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 28
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The minimum value that Application Auto Scaling can use to scale a target during a scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 23
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This string consists of the resource type and unique identifier.\n\nExample value: `service/ecsStack-MyECSCluster-AB12CDE3F4GH/ecsStack-MyECSService-AB12CDE3F4GH`",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html",
            "stability": "stable",
            "summary": "The resource identifier to associate with this scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 46
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Specify the service namespace, resource type, and scaling property.\n\nExample value: `ecs:service:DesiredCount`",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_ScalingPolicy.html",
            "stability": "stable",
            "summary": "The scalable dimension that's associated with the scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 56
          },
          "name": "scalableDimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For valid AWS service namespace values, see the RegisterScalableTarget\naction in the Application Auto Scaling API Reference.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html",
            "stability": "stable",
            "summary": "The namespace of the AWS service that provides the resource or custom-resource for a resource provided by your own application or service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 68
          },
          "name": "serviceNamespace",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.ServiceNamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A role is automatically created",
            "stability": "stable",
            "summary": "Role that allows Application Auto Scaling to modify your scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 35
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/scalable-target:ScalableTargetProps"
    },
    "@aws-cdk/aws-applicationautoscaling.ScalingInterval": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A range of metric values in which to apply a certain scaling operation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst scalingInterval: appscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingInterval",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 195
      },
      "name": "ScalingInterval",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpreted differently based on AdjustmentType:\n\n- ChangeInCapacity: add the adjustment to the current capacity.\n  The number can be positive or negative.\n- PercentChangeInCapacity: add or remove the given percentage of the current\n   capacity to itself. The number can be in the range [-100..100].\n- ExactCapacity: set the capacity to this number. The number must\n   be positive.",
            "stability": "stable",
            "summary": "The capacity adjustment to apply in this interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 226
          },
          "name": "change",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is higher than this value.",
            "stability": "stable",
            "summary": "The lower bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 203
          },
          "name": "lower",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is lower than this value.",
            "stability": "stable",
            "summary": "The upper bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 212
          },
          "name": "upper",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:ScalingInterval"
    },
    "@aws-cdk/aws-applicationautoscaling.ScalingSchedule": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A scheduled scaling action.",
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 5,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnSchedule('DaytimeScaleDown', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 1,\n});\n\nscalableTarget.scaleOnSchedule('EveningRushScaleUp', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0'}),\n  minCapacity: 10,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 185
      },
      "name": "ScalingSchedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "When to perform this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 189
          },
          "name": "schedule",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The rule never expires.",
            "stability": "stable",
            "summary": "When this scheduled action expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 203
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No new maximum capacity",
            "remarks": "During the scheduled time, the current capacity is above the maximum\ncapacity, Application Auto Scaling scales in to the maximum capacity.\n\nAt least one of maxCapacity and minCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 227
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No new minimum capacity",
            "remarks": "During the scheduled time, if the current capacity is below the minimum\ncapacity, Application Auto Scaling scales out to the minimum capacity.\n\nAt least one of maxCapacity and minCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new minimum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 215
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The rule is activate immediately",
            "stability": "stable",
            "summary": "When this scheduled action becomes active."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 196
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        }
      ],
      "symbolId": "lib/scalable-target:ScalingSchedule"
    },
    "@aws-cdk/aws-applicationautoscaling.Schedule": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Schedule for scheduled scaling actions.",
        "example": "declare const resource: SomeScalableResource;\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/schedule.ts",
          "line": 78
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct a Schedule from a moment in time."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 41
          },
          "name": "at",
          "parameters": [
            {
              "name": "moment",
              "type": {
                "primitive": "date"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a schedule from a set of cron fields."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 48
          },
          "name": "cron",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.CronOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct a schedule from a literal schedule expression."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 13
          },
          "name": "expression",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be in a format that Application AutoScaling will recognize",
                "summary": "The expression to use."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct a schedule from an interval and a time unit."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 20
          },
          "name": "rate",
          "parameters": [
            {
              "name": "duration",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        }
      ],
      "name": "Schedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the expression for this schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 76
          },
          "name": "expressionString",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schedule:Schedule"
    },
    "@aws-cdk/aws-applicationautoscaling.ServiceNamespace": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "stable",
        "summary": "The service that supports Application AutoScaling.",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ServiceNamespace",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 233
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Elastic Container Service."
          },
          "name": "ECS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Elastic Map Reduce."
          },
          "name": "ELASTIC_MAP_REDUCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Elastic Compute Cloud."
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "App Stream."
          },
          "name": "APPSTREAM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dynamo DB."
          },
          "name": "DYNAMODB"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Relational Database Service."
          },
          "name": "RDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SageMaker."
          },
          "name": "SAGEMAKER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Custom Resource."
          },
          "name": "CUSTOM_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Lambda."
          },
          "name": "LAMBDA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Comprehend."
          },
          "name": "COMPREHEND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Kafka."
          },
          "name": "KAFKA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ElastiCache."
          },
          "name": "ELASTICACHE"
        }
      ],
      "name": "ServiceNamespace",
      "symbolId": "lib/scalable-target:ServiceNamespace"
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingAction": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "This kind of scaling policy adjusts the target capacity in configurable\nsteps. The size of the step is configurable based on the metric's distance\nto its alarm threshold.\n\nThis Action must be used as the target of a CloudWatch alarm to take effect.",
        "stability": "stable",
        "summary": "Define a step scaling action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingAction = new appscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n  policyName: 'policyName',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/step-scaling-action.ts",
          "line": 82
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 74
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an adjusment interval to the ScalingAction."
          },
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 107
          },
          "name": "addAdjustment",
          "parameters": [
            {
              "name": "adjustment",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentTier"
              }
            }
          ]
        }
      ],
      "name": "StepScalingAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 78
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:StepScalingAction"
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingActionProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scaling policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingActionProps: appscaling.StepScalingActionProps = {\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n  policyName: 'policyName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 13
      },
      "name": "StepScalingActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 17
          },
          "name": "scalingTarget",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "stable",
            "summary": "How the adjustment numbers are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 31
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No cooldown period",
            "remarks": "For scale out policies, multiple scale outs during the cooldown period are\nsquashed so that only the biggest scale out happens.\n\nFor scale in policies, subsequent scale ins during the cooldown period are\nignored.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html",
            "stability": "stable",
            "summary": "Grace period after scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 45
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "stability": "stable",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 62
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "stable",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 55
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "stable",
            "summary": "A name for the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 24
          },
          "name": "policyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:StepScalingActionProps"
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingPolicy": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "You can specify the scaling behavior for various values of the metric.\n\nImplemented using one or more CloudWatch alarms and Step Scaling Policies.",
        "stability": "stable",
        "summary": "Define a scaling strategy which scales depending on absolute values of some metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingPolicy = new appscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  datapointsToAlarm: 123,\n  evaluationPeriods: 123,\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/step-scaling-policy.ts",
          "line": 111
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 105
      },
      "name": "StepScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 107
          },
          "name": "lowerAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 106
          },
          "name": "lowerAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 109
          },
          "name": "upperAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 108
          },
          "name": "upperAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:StepScalingPolicy"
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingPolicyProps: appscaling.StepScalingPolicyProps = {\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  datapointsToAlarm: 123,\n  evaluationPeriods: 123,\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 91
      },
      "name": "StepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scaling target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 95
          },
          "name": "scalingTarget",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:StepScalingPolicyProps"
    },
    "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst targetTrackingScalingPolicy = new appscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  scalingTarget: scalableTarget,\n  targetValue: 123,\n\n  // the properties below are optional\n  customMetric: metric,\n  disableScaleIn: false,\n  policyName: 'policyName',\n  predefinedMetric: appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/target-tracking-scaling-policy.ts",
          "line": 128
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 122
      },
      "name": "TargetTrackingScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 126
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:TargetTrackingScalingPolicy"
    },
    "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Adds the scalingTarget.",
        "stability": "stable",
        "summary": "Properties for a concrete TargetTrackingPolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst targetTrackingScalingPolicyProps: appscaling.TargetTrackingScalingPolicyProps = {\n  scalingTarget: scalableTarget,\n  targetValue: 123,\n\n  // the properties below are optional\n  customMetric: metric,\n  disableScaleIn: false,\n  policyName: 'policyName',\n  predefinedMetric: appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 115
      },
      "name": "TargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 119
          },
          "name": "scalingTarget",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:TargetTrackingScalingPolicyProps"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}