{"version":"2","toolVersion":"1.80.0","snippets":{"36fcf4215fe315a16574129d5f119f79c47c17abcb757a8731673fd29845f682":{"translations":{"python":{"source":"# resource: SomeScalableResource\n\n\ncapacity = resource.auto_scale_capacity(\n    min_capacity=5,\n    max_capacity=100\n)","version":"2"},"csharp":{"source":"SomeScalableResource resource;\n\n\nvar capacity = resource.AutoScaleCapacity(new Caps {\n    MinCapacity = 5,\n    MaxCapacity = 100\n});","version":"1"},"java":{"source":"SomeScalableResource resource;\n\n\nScalableAttribute capacity = resource.autoScaleCapacity(new Caps()\n        .minCapacity(5)\n        .maxCapacity(100)\n        );","version":"1"},"go":{"source":"var resource someScalableResource\n\n\ncapacity := resource.autoScaleCapacity(&caps{\n\tminCapacity: jsii.Number(5),\n\tmaxCapacity: jsii.Number(100),\n})","version":"1"},"$":{"source":"declare const resource: SomeScalableResource;\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 5,\n  maxCapacity: 100\n});\n\n// Then call a method to enable metric scaling and/or schedule scaling\n// (explained below):\n//\n// capacity.scaleOnMetric(...);\n// capacity.scaleToTrackMetric(...);\n// capacity.scaleOnSchedule(...);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":53}},"didCompile":true,"fqnsReferenced":[],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const resource: SomeScalableResource;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 5,\n  maxCapacity: 100\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":2,"75":7,"130":1,"169":1,"193":1,"194":1,"196":1,"225":2,"242":2,"243":2,"281":2,"290":1},"fqnsFingerprint":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"b2e5fa01f71ed6fc855039cdf65a429aa79b026106dea60d35f8a36d10aa157e":{"translations":{"python":{"source":"# capacity: ScalableAttribute\n# cpu_utilization: cloudwatch.Metric\n\n\ncapacity.scale_on_metric(\"ScaleToCPU\",\n    metric=cpu_utilization,\n    scaling_steps=[appscaling.ScalingInterval(upper=10, change=-1), appscaling.ScalingInterval(lower=50, change=+1), appscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY\n)","version":"2"},"csharp":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.ScaleOnMetric(\"ScaleToCPU\", new BasicStepScalingPolicyProps {\n    Metric = cpuUtilization,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n    // 'change' numbers before as percentages instead of capacity counts.\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY\n});","version":"1"},"java":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.scaleOnMetric(\"ScaleToCPU\", BasicStepScalingPolicyProps.builder()\n        .metric(cpuUtilization)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n        // 'change' numbers before as percentages instead of capacity counts.\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .build());","version":"1"},"go":{"source":"var capacity scalableAttribute\nvar cpuUtilization metric\n\n\ncapacity.scaleOnMetric(jsii.String(\"ScaleToCPU\"), &basicStepScalingPolicyProps{\n\tMetric: cpuUtilization,\n\tScalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tUpper: jsii.Number(10),\n\t\t\tChange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(50),\n\t\t\tChange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(70),\n\t\t\tChange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n\t// 'change' numbers before as percentages instead of capacity counts.\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n})","version":"1"},"$":{"source":"declare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":88}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":6,"10":1,"75":20,"130":2,"153":1,"169":2,"192":1,"193":4,"194":3,"196":1,"207":3,"225":2,"226":1,"242":2,"243":2,"281":9,"290":1},"fqnsFingerprint":"11e08ae994abf8f2e83e44e90c8c2f1b6e85396e5e60dc067cfea18917b15212"},"b1fed4169494d18e2f041d3b5ae9bef2120d18165a3ca1b842756d6da4e1bd35":{"translations":{"python":{"source":"# capacity: ScalableAttribute\n# cpu_utilization: cloudwatch.Metric\n\n\ncapacity.scale_on_metric(\"ScaleToCPUWithMultipleDatapoints\",\n    metric=cpu_utilization,\n    scaling_steps=[appscaling.ScalingInterval(upper=10, change=-1), appscaling.ScalingInterval(lower=50, change=+1), appscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # if the cpuUtilization metric has a period of 1 minute, then data points\n    # in the last 10 minutes will be evaluated\n    evaluation_periods=10,\n\n    # Only trigger a scaling action when 6 datapoints out of the last 10 are\n    # breaching. If this is left unspecified, then ALL datapoints in the\n    # evaluation period must be breaching to trigger a scaling action\n    datapoints_to_alarm=6\n)","version":"2"},"csharp":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.ScaleOnMetric(\"ScaleToCPUWithMultipleDatapoints\", new BasicStepScalingPolicyProps {\n    Metric = cpuUtilization,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // if the cpuUtilization metric has a period of 1 minute, then data points\n    // in the last 10 minutes will be evaluated\n    EvaluationPeriods = 10,\n\n    // Only trigger a scaling action when 6 datapoints out of the last 10 are\n    // breaching. If this is left unspecified, then ALL datapoints in the\n    // evaluation period must be breaching to trigger a scaling action\n    DatapointsToAlarm = 6\n});","version":"1"},"java":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.scaleOnMetric(\"ScaleToCPUWithMultipleDatapoints\", BasicStepScalingPolicyProps.builder()\n        .metric(cpuUtilization)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // if the cpuUtilization metric has a period of 1 minute, then data points\n        // in the last 10 minutes will be evaluated\n        .evaluationPeriods(10)\n\n        // Only trigger a scaling action when 6 datapoints out of the last 10 are\n        // breaching. If this is left unspecified, then ALL datapoints in the\n        // evaluation period must be breaching to trigger a scaling action\n        .datapointsToAlarm(6)\n        .build());","version":"1"},"go":{"source":"var capacity scalableAttribute\nvar cpuUtilization metric\n\n\ncapacity.scaleOnMetric(jsii.String(\"ScaleToCPUWithMultipleDatapoints\"), &basicStepScalingPolicyProps{\n\tMetric: cpuUtilization,\n\tScalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tUpper: jsii.Number(10),\n\t\t\tChange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(50),\n\t\t\tChange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(70),\n\t\t\tChange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// if the cpuUtilization metric has a period of 1 minute, then data points\n\t// in the last 10 minutes will be evaluated\n\tEvaluationPeriods: jsii.Number(10),\n\n\t// Only trigger a scaling action when 6 datapoints out of the last 10 are\n\t// breaching. If this is left unspecified, then ALL datapoints in the\n\t// evaluation period must be breaching to trigger a scaling action\n\tDatapointsToAlarm: jsii.Number(6),\n})","version":"1"},"$":{"source":"declare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPUWithMultipleDatapoints', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // if the cpuUtilization metric has a period of 1 minute, then data points\n  // in the last 10 minutes will be evaluated\n  evaluationPeriods: 10,\n\n  // Only trigger a scaling action when 6 datapoints out of the last 10 are\n  // breaching. If this is left unspecified, then ALL datapoints in the\n  // evaluation period must be breaching to trigger a scaling action\n  datapointsToAlarm: 6\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":117}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\ncapacity.scaleOnMetric('ScaleToCPUWithMultipleDatapoints', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // if the cpuUtilization metric has a period of 1 minute, then data points\n  // in the last 10 minutes will be evaluated\n  evaluationPeriods: 10,\n\n  // Only trigger a scaling action when 6 datapoints out of the last 10 are\n  // breaching. If this is left unspecified, then ALL datapoints in the\n  // evaluation period must be breaching to trigger a scaling action\n  datapointsToAlarm: 6\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":8,"10":1,"75":18,"130":2,"153":1,"169":2,"192":1,"193":4,"194":1,"196":1,"207":3,"225":2,"226":1,"242":2,"243":2,"281":10,"290":1},"fqnsFingerprint":"24366991b417287fdb96f6c77795eef13c546913dba95d7b7287af954fbbc7f9"},"96f2743a64468804531ba1ec1251c291544362e8ab746b8cc1e4bdde2b39f452":{"translations":{"python":{"source":"import aws_cdk.aws_dynamodb as dynamodb\n\n# table: dynamodb.Table\n\n\nread_capacity = table.auto_scale_read_capacity(\n    min_capacity=10,\n    max_capacity=1000\n)\nread_capacity.scale_on_utilization(\n    target_utilization_percent=60\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.DynamoDB;\n\nTable table;\n\n\nvar readCapacity = table.AutoScaleReadCapacity(new EnableScalingProps {\n    MinCapacity = 10,\n    MaxCapacity = 1000\n});\nreadCapacity.ScaleOnUtilization(new UtilizationScalingProps {\n    TargetUtilizationPercent = 60\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.dynamodb.*;\n\nTable table;\n\n\nIScalableTableAttribute readCapacity = table.autoScaleReadCapacity(EnableScalingProps.builder()\n        .minCapacity(10)\n        .maxCapacity(1000)\n        .build());\nreadCapacity.scaleOnUtilization(UtilizationScalingProps.builder()\n        .targetUtilizationPercent(60)\n        .build());","version":"1"},"go":{"source":"import dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nvar table table\n\n\nreadCapacity := table.AutoScaleReadCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(10),\n\tMaxCapacity: jsii.Number(1000),\n})\nreadCapacity.ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(60),\n})","version":"1"},"$":{"source":"import * as dynamodb from '@aws-cdk/aws-dynamodb';\n\ndeclare const table: dynamodb.Table;\n\nconst readCapacity = table.autoScaleReadCapacity({\n  minCapacity: 10,\n  maxCapacity: 1000\n});\nreadCapacity.scaleOnUtilization({\n  targetUtilizationPercent: 60\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":151}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table#autoScaleReadCapacity","@aws-cdk/aws-dynamodb.UtilizationScalingProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n\ndeclare const table: dynamodb.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst readCapacity = table.autoScaleReadCapacity({\n  minCapacity: 10,\n  maxCapacity: 1000\n});\nreadCapacity.scaleOnUtilization({\n  targetUtilizationPercent: 60\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":3,"10":1,"75":12,"130":1,"153":1,"169":1,"193":2,"194":2,"196":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"407c72a0108582390f79061e98e333ecef33a6197890f447c7dd8fff2587c9ea"},"4d5068d0886590720dc490bb6909dbd1cef0efebb7a1c62b008aaef0815699e2":{"translations":{"python":{"source":"# resource: SomeScalableResource\n\n\ncapacity = resource.auto_scale_capacity(\n    min_capacity=1,\n    max_capacity=50\n)\n\ncapacity.scale_on_schedule(\"PrescaleInTheMorning\",\n    schedule=appscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)\n\ncapacity.scale_on_schedule(\"AllowDownscalingAtNight\",\n    schedule=appscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=1\n)","version":"2"},"csharp":{"source":"SomeScalableResource resource;\n\n\nvar capacity = resource.AutoScaleCapacity(new Caps {\n    MinCapacity = 1,\n    MaxCapacity = 50\n});\n\ncapacity.ScaleOnSchedule(\"PrescaleInTheMorning\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});\n\ncapacity.ScaleOnSchedule(\"AllowDownscalingAtNight\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MinCapacity = 1\n});","version":"1"},"java":{"source":"SomeScalableResource resource;\n\n\nScalableAttribute capacity = resource.autoScaleCapacity(new Caps()\n        .minCapacity(1)\n        .maxCapacity(50)\n        );\n\ncapacity.scaleOnSchedule(\"PrescaleInTheMorning\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());\n\ncapacity.scaleOnSchedule(\"AllowDownscalingAtNight\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .minCapacity(1)\n        .build());","version":"1"},"go":{"source":"var resource someScalableResource\n\n\ncapacity := resource.autoScaleCapacity(&caps{\n\tminCapacity: jsii.Number(1),\n\tmaxCapacity: jsii.Number(50),\n})\n\ncapacity.scaleOnSchedule(jsii.String(\"PrescaleInTheMorning\"), &scalingSchedule{\n\tSchedule: appscaling.Schedule_Cron(&CronOptions{\n\t\tHour: jsii.String(\"8\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(20),\n})\n\ncapacity.scaleOnSchedule(jsii.String(\"AllowDownscalingAtNight\"), &scalingSchedule{\n\tSchedule: appscaling.Schedule_*Cron(&CronOptions{\n\t\tHour: jsii.String(\"20\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(1),\n})","version":"1"},"$":{"source":"declare const resource: SomeScalableResource;\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":189}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CronOptions","@aws-cdk/aws-applicationautoscaling.ScalingSchedule","@aws-cdk/aws-applicationautoscaling.Schedule","@aws-cdk/aws-applicationautoscaling.Schedule#cron"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const resource: SomeScalableResource;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"75":25,"130":1,"169":1,"193":5,"194":7,"196":5,"225":2,"226":2,"242":2,"243":2,"281":10,"290":1},"fqnsFingerprint":"1e3736a063d9417070f26aab36f5b6de16096da0bef8bdf1f46e7809a466b2cc"},"31a65ba896fe3feaf2358af27ccab1051cbd17904377a3b5da6f58dee2511762":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# code: lambda.Code\n\n\nhandler = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.PYTHON_3_7,\n    handler=\"index.handler\",\n    code=code,\n\n    reserved_concurrent_executions=2\n)\n\nfn_ver = handler.current_version\n\ntarget = appscaling.ScalableTarget(self, \"ScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.LAMBDA,\n    max_capacity=100,\n    min_capacity=10,\n    resource_id=f\"function:{handler.functionName}:{fnVer.version}\",\n    scalable_dimension=\"lambda:function:ProvisionedConcurrency\"\n)\n\ntarget.scale_to_track_metric(\"PceTracking\",\n    target_value=0.9,\n    predefined_metric=appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nCode code;\n\n\nvar handler = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.PYTHON_3_7,\n    Handler = \"index.handler\",\n    Code = code,\n\n    ReservedConcurrentExecutions = 2\n});\n\nvar fnVer = handler.CurrentVersion;\n\nvar target = new ScalableTarget(this, \"ScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.LAMBDA,\n    MaxCapacity = 100,\n    MinCapacity = 10,\n    ResourceId = $\"function:{handler.functionName}:{fnVer.version}\",\n    ScalableDimension = \"lambda:function:ProvisionedConcurrency\"\n});\n\ntarget.ScaleToTrackMetric(\"PceTracking\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 0.9,\n    PredefinedMetric = PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nCode code;\n\n\nFunction handler = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.PYTHON_3_7)\n        .handler(\"index.handler\")\n        .code(code)\n\n        .reservedConcurrentExecutions(2)\n        .build();\n\nVersion fnVer = handler.getCurrentVersion();\n\nScalableTarget target = ScalableTarget.Builder.create(this, \"ScalableTarget\")\n        .serviceNamespace(ServiceNamespace.LAMBDA)\n        .maxCapacity(100)\n        .minCapacity(10)\n        .resourceId(String.format(\"function:%s:%s\", handler.getFunctionName(), fnVer.getVersion()))\n        .scalableDimension(\"lambda:function:ProvisionedConcurrency\")\n        .build();\n\ntarget.scaleToTrackMetric(\"PceTracking\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(0.9)\n        .predefinedMetric(PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar code code\n\n\nhandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_PYTHON_3_7(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: Code,\n\n\tReservedConcurrentExecutions: jsii.Number(2),\n})\n\nfnVer := handler.currentVersion\n\ntarget := appscaling.NewScalableTarget(this, jsii.String(\"ScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_LAMBDA,\n\tMaxCapacity: jsii.Number(100),\n\tMinCapacity: jsii.Number(10),\n\tResourceId: fmt.Sprintf(\"function:%v:%v\", handler.FunctionName, fnVer.Version),\n\tScalableDimension: jsii.String(\"lambda:function:ProvisionedConcurrency\"),\n})\n\ntarget.ScaleToTrackMetric(jsii.String(\"PceTracking\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(0.9),\n\tPredefinedMetric: appscaling.PredefinedMetric_LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":212}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#LAMBDA","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#PYTHON_3_7","@aws-cdk/aws-lambda.Version","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"15":1,"16":1,"17":1,"75":39,"104":2,"130":1,"153":1,"169":1,"193":3,"194":12,"196":1,"197":2,"211":1,"221":2,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"8f91bfd7afcf311ccfca2c2a2cf851e0de18617156466bbfbb8f849c8772752d"},"e551307e70675900cfec59454dbbd261d8da83fda3399c8e36c49c41dfb9e334":{"translations":{"python":{"source":"shards_scalable_target = appscaling.ScalableTarget(self, \"ElastiCacheRedisShardsScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.ELASTICACHE,\n    scalable_dimension=\"elasticache:replication-group:NodeGroups\",\n    min_capacity=2,\n    max_capacity=10,\n    resource_id=\"replication-group/main-cluster\"\n)\n\nshards_scalable_target.scale_to_track_metric(\"ElastiCacheRedisShardsCPUUtilization\",\n    target_value=20,\n    predefined_metric=appscaling.PredefinedMetric.ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION\n)","version":"2"},"csharp":{"source":"var shardsScalableTarget = new ScalableTarget(this, \"ElastiCacheRedisShardsScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.ELASTICACHE,\n    ScalableDimension = \"elasticache:replication-group:NodeGroups\",\n    MinCapacity = 2,\n    MaxCapacity = 10,\n    ResourceId = \"replication-group/main-cluster\"\n});\n\nshardsScalableTarget.ScaleToTrackMetric(\"ElastiCacheRedisShardsCPUUtilization\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 20,\n    PredefinedMetric = PredefinedMetric.ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION\n});","version":"1"},"java":{"source":"ScalableTarget shardsScalableTarget = ScalableTarget.Builder.create(this, \"ElastiCacheRedisShardsScalableTarget\")\n        .serviceNamespace(ServiceNamespace.ELASTICACHE)\n        .scalableDimension(\"elasticache:replication-group:NodeGroups\")\n        .minCapacity(2)\n        .maxCapacity(10)\n        .resourceId(\"replication-group/main-cluster\")\n        .build();\n\nshardsScalableTarget.scaleToTrackMetric(\"ElastiCacheRedisShardsCPUUtilization\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(20)\n        .predefinedMetric(PredefinedMetric.ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"shardsScalableTarget := appscaling.NewScalableTarget(this, jsii.String(\"ElastiCacheRedisShardsScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_ELASTICACHE,\n\tScalableDimension: jsii.String(\"elasticache:replication-group:NodeGroups\"),\n\tMinCapacity: jsii.Number(2),\n\tMaxCapacity: jsii.Number(10),\n\tResourceId: jsii.String(\"replication-group/main-cluster\"),\n})\n\nshardsScalableTarget.ScaleToTrackMetric(jsii.String(\"ElastiCacheRedisShardsCPUUtilization\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(20),\n\tPredefinedMetric: appscaling.PredefinedMetric_ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION,\n})","version":"1"},"$":{"source":"const shardsScalableTarget = new appscaling.ScalableTarget(this, 'ElastiCacheRedisShardsScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.ELASTICACHE,\n  scalableDimension: 'elasticache:replication-group:NodeGroups',\n  minCapacity: 2,\n  maxCapacity: 10,\n  resourceId: 'replication-group/main-cluster',\n});\n\nshardsScalableTarget.scaleToTrackMetric('ElastiCacheRedisShardsCPUUtilization', {\n  targetValue: 20,\n  predefinedMetric: appscaling.PredefinedMetric.ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-applicationautoscaling"},"field":{"field":"markdown","line":243}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#ELASTICACHE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst shardsScalableTarget = new appscaling.ScalableTarget(this, 'ElastiCacheRedisShardsScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.ELASTICACHE,\n  scalableDimension: 'elasticache:replication-group:NodeGroups',\n  minCapacity: 2,\n  maxCapacity: 10,\n  resourceId: 'replication-group/main-cluster',\n});\n\nshardsScalableTarget.scaleToTrackMetric('ElastiCacheRedisShardsCPUUtilization', {\n  targetValue: 20,\n  predefinedMetric: appscaling.PredefinedMetric.ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":3,"10":4,"75":18,"104":1,"193":2,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":7},"fqnsFingerprint":"775ec96f086668df143e7ec02a3007231b633bf8e76625b41f7b05f3e2f8d23a"},"c3a05fce6d5798ea666fbc267e5a978fb1c0bc594a3ff1e3cba849b888657310":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nadjustment_tier = appscaling.AdjustmentTier(\n    adjustment=123,\n\n    # the properties below are optional\n    lower_bound=123,\n    upper_bound=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar adjustmentTier = new AdjustmentTier {\n    Adjustment = 123,\n\n    // the properties below are optional\n    LowerBound = 123,\n    UpperBound = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nAdjustmentTier adjustmentTier = AdjustmentTier.builder()\n        .adjustment(123)\n\n        // the properties below are optional\n        .lowerBound(123)\n        .upperBound(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nadjustmentTier := &AdjustmentTier{\n\tAdjustment: jsii.Number(123),\n\n\t// the properties below are optional\n\tLowerBound: jsii.Number(123),\n\tUpperBound: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst adjustmentTier: appscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.AdjustmentTier"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentTier"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst adjustmentTier: appscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":1,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"c429ed3155dc798b2a99dd0d1c357856c5f44201ffddffe74835eb0e68b1855d"},"4021bca7fe9f1bf22ff2706a0226df24ff237c766902673d93de1bce385d73f2":{"translations":{"python":{"source":"# capacity: ScalableAttribute\n# cpu_utilization: cloudwatch.Metric\n\n\ncapacity.scale_on_metric(\"ScaleToCPU\",\n    metric=cpu_utilization,\n    scaling_steps=[appscaling.ScalingInterval(upper=10, change=-1), appscaling.ScalingInterval(lower=50, change=+1), appscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY\n)","version":"2"},"csharp":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.ScaleOnMetric(\"ScaleToCPU\", new BasicStepScalingPolicyProps {\n    Metric = cpuUtilization,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n    // 'change' numbers before as percentages instead of capacity counts.\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY\n});","version":"1"},"java":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.scaleOnMetric(\"ScaleToCPU\", BasicStepScalingPolicyProps.builder()\n        .metric(cpuUtilization)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n        // 'change' numbers before as percentages instead of capacity counts.\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .build());","version":"1"},"go":{"source":"var capacity scalableAttribute\nvar cpuUtilization metric\n\n\ncapacity.scaleOnMetric(jsii.String(\"ScaleToCPU\"), &basicStepScalingPolicyProps{\n\tMetric: cpuUtilization,\n\tScalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tUpper: jsii.Number(10),\n\t\t\tChange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(50),\n\t\t\tChange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(70),\n\t\t\tChange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n\t// 'change' numbers before as percentages instead of capacity counts.\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n})","version":"1"},"$":{"source":"declare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.AdjustmentType"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":6,"10":1,"75":20,"130":2,"153":1,"169":2,"192":1,"193":4,"194":3,"196":1,"207":3,"225":2,"226":1,"242":2,"243":2,"281":9,"290":1},"fqnsFingerprint":"11e08ae994abf8f2e83e44e90c8c2f1b6e85396e5e60dc067cfea18917b15212"},"e2c4308e0b09d9886cadf0b1abe12e5fd353412c6f766066cf09ddfb5460a19c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.aws_iam as iam\n\n# role: iam.Role\n\nbase_scalable_attribute_props = appscaling.BaseScalableAttributeProps(\n    dimension=\"dimension\",\n    max_capacity=123,\n    resource_id=\"resourceId\",\n    role=role,\n    service_namespace=appscaling.ServiceNamespace.ECS,\n\n    # the properties below are optional\n    min_capacity=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK.AWS.IAM;\n\nRole role;\n\nvar baseScalableAttributeProps = new BaseScalableAttributeProps {\n    Dimension = \"dimension\",\n    MaxCapacity = 123,\n    ResourceId = \"resourceId\",\n    Role = role,\n    ServiceNamespace = ServiceNamespace.ECS,\n\n    // the properties below are optional\n    MinCapacity = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.services.iam.*;\n\nRole role;\n\nBaseScalableAttributeProps baseScalableAttributeProps = BaseScalableAttributeProps.builder()\n        .dimension(\"dimension\")\n        .maxCapacity(123)\n        .resourceId(\"resourceId\")\n        .role(role)\n        .serviceNamespace(ServiceNamespace.ECS)\n\n        // the properties below are optional\n        .minCapacity(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar role role\n\nbaseScalableAttributeProps := &BaseScalableAttributeProps{\n\tDimension: jsii.String(\"dimension\"),\n\tMaxCapacity: jsii.Number(123),\n\tResourceId: jsii.String(\"resourceId\"),\n\tRole: role,\n\tServiceNamespace: appscaling.ServiceNamespace_ECS,\n\n\t// the properties below are optional\n\tMinCapacity: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst baseScalableAttributeProps: appscaling.BaseScalableAttributeProps = {\n  dimension: 'dimension',\n  maxCapacity: 123,\n  resourceId: 'resourceId',\n  role: role,\n  serviceNamespace: appscaling.ServiceNamespace.ECS,\n\n  // the properties below are optional\n  minCapacity: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#ECS","@aws-cdk/aws-iam.IRole"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseScalableAttributeProps: appscaling.BaseScalableAttributeProps = {\n  dimension: 'dimension',\n  maxCapacity: 123,\n  resourceId: 'resourceId',\n  role: role,\n  serviceNamespace: appscaling.ServiceNamespace.ECS,\n\n  // the properties below are optional\n  minCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":4,"75":18,"130":1,"153":2,"169":2,"193":1,"194":2,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":6,"290":1},"fqnsFingerprint":"a51159d44ba939157bbd75fb9ff68a15a4cd9b8c20a7bc3c0e75090caaecc983"},"09a2ef3e138d86fb8bf74b3a1218ed647b888c29f54e98cd220156233ccc1bb2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.core as cdk\n\nbase_target_tracking_props = appscaling.BaseTargetTrackingProps(\n    disable_scale_in=False,\n    policy_name=\"policyName\",\n    scale_in_cooldown=cdk.Duration.minutes(30),\n    scale_out_cooldown=cdk.Duration.minutes(30)\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK;\nvar baseTargetTrackingProps = new BaseTargetTrackingProps {\n    DisableScaleIn = false,\n    PolicyName = \"policyName\",\n    ScaleInCooldown = Duration.Minutes(30),\n    ScaleOutCooldown = Duration.Minutes(30)\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nBaseTargetTrackingProps baseTargetTrackingProps = BaseTargetTrackingProps.builder()\n        .disableScaleIn(false)\n        .policyName(\"policyName\")\n        .scaleInCooldown(Duration.minutes(30))\n        .scaleOutCooldown(Duration.minutes(30))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\n\nbaseTargetTrackingProps := &BaseTargetTrackingProps{\n\tDisableScaleIn: jsii.Boolean(false),\n\tPolicyName: jsii.String(\"policyName\"),\n\tScaleInCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tScaleOutCooldown: cdk.Duration_*Minutes(jsii.Number(30)),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst baseTargetTrackingProps: appscaling.BaseTargetTrackingProps = {\n  disableScaleIn: false,\n  policyName: 'policyName',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseTargetTrackingProps: appscaling.BaseTargetTrackingProps = {\n  disableScaleIn: false,\n  policyName: 'policyName',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":3,"75":15,"91":1,"153":1,"169":1,"193":1,"194":4,"196":2,"225":1,"242":1,"243":1,"254":2,"255":2,"256":2,"281":4,"290":1},"fqnsFingerprint":"1b907fe9fbd525fc3c12f20de05cac056efd2715ad8e7a92e21baeced739c897"},"8d88467c368db2b60226028c774ccfb24f670fb7aaf0913932eebf0f998a0729":{"translations":{"python":{"source":"# capacity: ScalableAttribute\n# cpu_utilization: cloudwatch.Metric\n\n\ncapacity.scale_on_metric(\"ScaleToCPU\",\n    metric=cpu_utilization,\n    scaling_steps=[appscaling.ScalingInterval(upper=10, change=-1), appscaling.ScalingInterval(lower=50, change=+1), appscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY\n)","version":"2"},"csharp":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.ScaleOnMetric(\"ScaleToCPU\", new BasicStepScalingPolicyProps {\n    Metric = cpuUtilization,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n    // 'change' numbers before as percentages instead of capacity counts.\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY\n});","version":"1"},"java":{"source":"ScalableAttribute capacity;\nMetric cpuUtilization;\n\n\ncapacity.scaleOnMetric(\"ScaleToCPU\", BasicStepScalingPolicyProps.builder()\n        .metric(cpuUtilization)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n        // 'change' numbers before as percentages instead of capacity counts.\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .build());","version":"1"},"go":{"source":"var capacity scalableAttribute\nvar cpuUtilization metric\n\n\ncapacity.scaleOnMetric(jsii.String(\"ScaleToCPU\"), &basicStepScalingPolicyProps{\n\tMetric: cpuUtilization,\n\tScalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tUpper: jsii.Number(10),\n\t\t\tChange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(50),\n\t\t\tChange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tLower: jsii.Number(70),\n\t\t\tChange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n\t// 'change' numbers before as percentages instead of capacity counts.\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n})","version":"1"},"$":{"source":"declare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const capacity: ScalableAttribute;\ndeclare const cpuUtilization: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: cpuUtilization,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":6,"10":1,"75":20,"130":2,"153":1,"169":2,"192":1,"193":4,"194":3,"196":1,"207":3,"225":2,"226":1,"242":2,"243":2,"281":9,"290":1},"fqnsFingerprint":"11e08ae994abf8f2e83e44e90c8c2f1b6e85396e5e60dc067cfea18917b15212"},"00b156fc9ede27c71512593581321e96dc3729a8e23712472e1005a64098b041":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# code: lambda.Code\n\n\nhandler = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.PYTHON_3_7,\n    handler=\"index.handler\",\n    code=code,\n\n    reserved_concurrent_executions=2\n)\n\nfn_ver = handler.current_version\n\ntarget = appscaling.ScalableTarget(self, \"ScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.LAMBDA,\n    max_capacity=100,\n    min_capacity=10,\n    resource_id=f\"function:{handler.functionName}:{fnVer.version}\",\n    scalable_dimension=\"lambda:function:ProvisionedConcurrency\"\n)\n\ntarget.scale_to_track_metric(\"PceTracking\",\n    target_value=0.9,\n    predefined_metric=appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nCode code;\n\n\nvar handler = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.PYTHON_3_7,\n    Handler = \"index.handler\",\n    Code = code,\n\n    ReservedConcurrentExecutions = 2\n});\n\nvar fnVer = handler.CurrentVersion;\n\nvar target = new ScalableTarget(this, \"ScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.LAMBDA,\n    MaxCapacity = 100,\n    MinCapacity = 10,\n    ResourceId = $\"function:{handler.functionName}:{fnVer.version}\",\n    ScalableDimension = \"lambda:function:ProvisionedConcurrency\"\n});\n\ntarget.ScaleToTrackMetric(\"PceTracking\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 0.9,\n    PredefinedMetric = PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nCode code;\n\n\nFunction handler = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.PYTHON_3_7)\n        .handler(\"index.handler\")\n        .code(code)\n\n        .reservedConcurrentExecutions(2)\n        .build();\n\nVersion fnVer = handler.getCurrentVersion();\n\nScalableTarget target = ScalableTarget.Builder.create(this, \"ScalableTarget\")\n        .serviceNamespace(ServiceNamespace.LAMBDA)\n        .maxCapacity(100)\n        .minCapacity(10)\n        .resourceId(String.format(\"function:%s:%s\", handler.getFunctionName(), fnVer.getVersion()))\n        .scalableDimension(\"lambda:function:ProvisionedConcurrency\")\n        .build();\n\ntarget.scaleToTrackMetric(\"PceTracking\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(0.9)\n        .predefinedMetric(PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar code code\n\n\nhandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_PYTHON_3_7(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: Code,\n\n\tReservedConcurrentExecutions: jsii.Number(2),\n})\n\nfnVer := handler.currentVersion\n\ntarget := appscaling.NewScalableTarget(this, jsii.String(\"ScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_LAMBDA,\n\tMaxCapacity: jsii.Number(100),\n\tMinCapacity: jsii.Number(10),\n\tResourceId: fmt.Sprintf(\"function:%v:%v\", handler.FunctionName, fnVer.Version),\n\tScalableDimension: jsii.String(\"lambda:function:ProvisionedConcurrency\"),\n})\n\ntarget.ScaleToTrackMetric(jsii.String(\"PceTracking\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(0.9),\n\tPredefinedMetric: appscaling.PredefinedMetric_LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#LAMBDA","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#PYTHON_3_7","@aws-cdk/aws-lambda.Version","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"15":1,"16":1,"17":1,"75":39,"104":2,"130":1,"153":1,"169":1,"193":3,"194":12,"196":1,"197":2,"211":1,"221":2,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"8f91bfd7afcf311ccfca2c2a2cf851e0de18617156466bbfbb8f849c8772752d"},"e074a056aff93002ddba1f84ebba73b4b815496e1c14b5c2c1506429d97fa33d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\ncfn_scalable_target = appscaling.CfnScalableTarget(self, \"MyCfnScalableTarget\",\n    max_capacity=123,\n    min_capacity=123,\n    resource_id=\"resourceId\",\n    role_arn=\"roleArn\",\n    scalable_dimension=\"scalableDimension\",\n    service_namespace=\"serviceNamespace\",\n\n    # the properties below are optional\n    scheduled_actions=[appscaling.CfnScalableTarget.ScheduledActionProperty(\n        schedule=\"schedule\",\n        scheduled_action_name=\"scheduledActionName\",\n\n        # the properties below are optional\n        end_time=Date(),\n        scalable_target_action=appscaling.CfnScalableTarget.ScalableTargetActionProperty(\n            max_capacity=123,\n            min_capacity=123\n        ),\n        start_time=Date(),\n        timezone=\"timezone\"\n    )],\n    suspended_state=appscaling.CfnScalableTarget.SuspendedStateProperty(\n        dynamic_scaling_in_suspended=False,\n        dynamic_scaling_out_suspended=False,\n        scheduled_scaling_suspended=False\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar cfnScalableTarget = new CfnScalableTarget(this, \"MyCfnScalableTarget\", new CfnScalableTargetProps {\n    MaxCapacity = 123,\n    MinCapacity = 123,\n    ResourceId = \"resourceId\",\n    RoleArn = \"roleArn\",\n    ScalableDimension = \"scalableDimension\",\n    ServiceNamespace = \"serviceNamespace\",\n\n    // the properties below are optional\n    ScheduledActions = new [] { new ScheduledActionProperty {\n        Schedule = \"schedule\",\n        ScheduledActionName = \"scheduledActionName\",\n\n        // the properties below are optional\n        EndTime = new Date(),\n        ScalableTargetAction = new ScalableTargetActionProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123\n        },\n        StartTime = new Date(),\n        Timezone = \"timezone\"\n    } },\n    SuspendedState = new SuspendedStateProperty {\n        DynamicScalingInSuspended = false,\n        DynamicScalingOutSuspended = false,\n        ScheduledScalingSuspended = false\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nCfnScalableTarget cfnScalableTarget = CfnScalableTarget.Builder.create(this, \"MyCfnScalableTarget\")\n        .maxCapacity(123)\n        .minCapacity(123)\n        .resourceId(\"resourceId\")\n        .roleArn(\"roleArn\")\n        .scalableDimension(\"scalableDimension\")\n        .serviceNamespace(\"serviceNamespace\")\n\n        // the properties below are optional\n        .scheduledActions(List.of(ScheduledActionProperty.builder()\n                .schedule(\"schedule\")\n                .scheduledActionName(\"scheduledActionName\")\n\n                // the properties below are optional\n                .endTime(new Date())\n                .scalableTargetAction(ScalableTargetActionProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .build())\n                .startTime(new Date())\n                .timezone(\"timezone\")\n                .build()))\n        .suspendedState(SuspendedStateProperty.builder()\n                .dynamicScalingInSuspended(false)\n                .dynamicScalingOutSuspended(false)\n                .scheduledScalingSuspended(false)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\ncfnScalableTarget := appscaling.NewCfnScalableTarget(this, jsii.String(\"MyCfnScalableTarget\"), &CfnScalableTargetProps{\n\tMaxCapacity: jsii.Number(123),\n\tMinCapacity: jsii.Number(123),\n\tResourceId: jsii.String(\"resourceId\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n\tScalableDimension: jsii.String(\"scalableDimension\"),\n\tServiceNamespace: jsii.String(\"serviceNamespace\"),\n\n\t// the properties below are optional\n\tScheduledActions: []interface{}{\n\t\t&ScheduledActionProperty{\n\t\t\tSchedule: jsii.String(\"schedule\"),\n\t\t\tScheduledActionName: jsii.String(\"scheduledActionName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tEndTime: NewDate(),\n\t\t\tScalableTargetAction: &ScalableTargetActionProperty{\n\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t},\n\t\t\tStartTime: NewDate(),\n\t\t\tTimezone: jsii.String(\"timezone\"),\n\t\t},\n\t},\n\tSuspendedState: &SuspendedStateProperty{\n\t\tDynamicScalingInSuspended: jsii.Boolean(false),\n\t\tDynamicScalingOutSuspended: jsii.Boolean(false),\n\t\tScheduledScalingSuspended: jsii.Boolean(false),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalableTarget = new appscaling.CfnScalableTarget(this, 'MyCfnScalableTarget', {\n  maxCapacity: 123,\n  minCapacity: 123,\n  resourceId: 'resourceId',\n  roleArn: 'roleArn',\n  scalableDimension: 'scalableDimension',\n  serviceNamespace: 'serviceNamespace',\n\n  // the properties below are optional\n  scheduledActions: [{\n    schedule: 'schedule',\n    scheduledActionName: 'scheduledActionName',\n\n    // the properties below are optional\n    endTime: new Date(),\n    scalableTargetAction: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    startTime: new Date(),\n    timezone: 'timezone',\n  }],\n  suspendedState: {\n    dynamicScalingInSuspended: false,\n    dynamicScalingOutSuspended: false,\n    scheduledScalingSuspended: false,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalableTarget"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalableTarget","@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScalableTarget = new appscaling.CfnScalableTarget(this, 'MyCfnScalableTarget', {\n  maxCapacity: 123,\n  minCapacity: 123,\n  resourceId: 'resourceId',\n  roleArn: 'roleArn',\n  scalableDimension: 'scalableDimension',\n  serviceNamespace: 'serviceNamespace',\n\n  // the properties below are optional\n  scheduledActions: [{\n    schedule: 'schedule',\n    scheduledActionName: 'scheduledActionName',\n\n    // the properties below are optional\n    endTime: new Date(),\n    scalableTargetAction: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    startTime: new Date(),\n    timezone: 'timezone',\n  }],\n  suspendedState: {\n    dynamicScalingInSuspended: false,\n    dynamicScalingOutSuspended: false,\n    scheduledScalingSuspended: false,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":9,"75":25,"91":3,"104":1,"192":1,"193":4,"194":1,"197":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"f4edac4181bc203f05621422edc23454a1b83ea27630e59c20a93a29944dcc25"},"2f5d674ebb86ef15849f3faecd320bd8f8e4ccb08e07ca35a7ff73a20d1b0e0a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nscalable_target_action_property = appscaling.CfnScalableTarget.ScalableTargetActionProperty(\n    max_capacity=123,\n    min_capacity=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar scalableTargetActionProperty = new ScalableTargetActionProperty {\n    MaxCapacity = 123,\n    MinCapacity = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nScalableTargetActionProperty scalableTargetActionProperty = ScalableTargetActionProperty.builder()\n        .maxCapacity(123)\n        .minCapacity(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nscalableTargetActionProperty := &ScalableTargetActionProperty{\n\tMaxCapacity: jsii.Number(123),\n\tMinCapacity: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst scalableTargetActionProperty: appscaling.CfnScalableTarget.ScalableTargetActionProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scalableTargetActionProperty: appscaling.CfnScalableTarget.ScalableTargetActionProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b182f659e8cb2abc3e4ba27c23bfae871e9a07d682d97df5cfdb379969941699"},"11ead4502305328af1d6122ba72610a63ff6230fc81a9722a5d24584af3178b7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nscheduled_action_property = appscaling.CfnScalableTarget.ScheduledActionProperty(\n    schedule=\"schedule\",\n    scheduled_action_name=\"scheduledActionName\",\n\n    # the properties below are optional\n    end_time=Date(),\n    scalable_target_action=appscaling.CfnScalableTarget.ScalableTargetActionProperty(\n        max_capacity=123,\n        min_capacity=123\n    ),\n    start_time=Date(),\n    timezone=\"timezone\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar scheduledActionProperty = new ScheduledActionProperty {\n    Schedule = \"schedule\",\n    ScheduledActionName = \"scheduledActionName\",\n\n    // the properties below are optional\n    EndTime = new Date(),\n    ScalableTargetAction = new ScalableTargetActionProperty {\n        MaxCapacity = 123,\n        MinCapacity = 123\n    },\n    StartTime = new Date(),\n    Timezone = \"timezone\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nScheduledActionProperty scheduledActionProperty = ScheduledActionProperty.builder()\n        .schedule(\"schedule\")\n        .scheduledActionName(\"scheduledActionName\")\n\n        // the properties below are optional\n        .endTime(new Date())\n        .scalableTargetAction(ScalableTargetActionProperty.builder()\n                .maxCapacity(123)\n                .minCapacity(123)\n                .build())\n        .startTime(new Date())\n        .timezone(\"timezone\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nscheduledActionProperty := &ScheduledActionProperty{\n\tSchedule: jsii.String(\"schedule\"),\n\tScheduledActionName: jsii.String(\"scheduledActionName\"),\n\n\t// the properties below are optional\n\tEndTime: NewDate(),\n\tScalableTargetAction: &ScalableTargetActionProperty{\n\t\tMaxCapacity: jsii.Number(123),\n\t\tMinCapacity: jsii.Number(123),\n\t},\n\tStartTime: NewDate(),\n\tTimezone: jsii.String(\"timezone\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst scheduledActionProperty: appscaling.CfnScalableTarget.ScheduledActionProperty = {\n  schedule: 'schedule',\n  scheduledActionName: 'scheduledActionName',\n\n  // the properties below are optional\n  endTime: new Date(),\n  scalableTargetAction: {\n    maxCapacity: 123,\n    minCapacity: 123,\n  },\n  startTime: new Date(),\n  timezone: 'timezone',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scheduledActionProperty: appscaling.CfnScalableTarget.ScheduledActionProperty = {\n  schedule: 'schedule',\n  scheduledActionName: 'scheduledActionName',\n\n  // the properties below are optional\n  endTime: new Date(),\n  scalableTargetAction: {\n    maxCapacity: 123,\n    minCapacity: 123,\n  },\n  startTime: new Date(),\n  timezone: 'timezone',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":4,"75":15,"153":2,"169":1,"193":2,"197":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"18eefd3e5c30c09d6ed62aa10118370895632c42fa6f11a7c0b80bea43d7ced8"},"2e90ad61ad60651e200e5334bcf5812610ff574e9cfa91b1cae6a48b1e7e09a4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nsuspended_state_property = appscaling.CfnScalableTarget.SuspendedStateProperty(\n    dynamic_scaling_in_suspended=False,\n    dynamic_scaling_out_suspended=False,\n    scheduled_scaling_suspended=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar suspendedStateProperty = new SuspendedStateProperty {\n    DynamicScalingInSuspended = false,\n    DynamicScalingOutSuspended = false,\n    ScheduledScalingSuspended = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nSuspendedStateProperty suspendedStateProperty = SuspendedStateProperty.builder()\n        .dynamicScalingInSuspended(false)\n        .dynamicScalingOutSuspended(false)\n        .scheduledScalingSuspended(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nsuspendedStateProperty := &SuspendedStateProperty{\n\tDynamicScalingInSuspended: jsii.Boolean(false),\n\tDynamicScalingOutSuspended: jsii.Boolean(false),\n\tScheduledScalingSuspended: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst suspendedStateProperty: appscaling.CfnScalableTarget.SuspendedStateProperty = {\n  dynamicScalingInSuspended: false,\n  dynamicScalingOutSuspended: false,\n  scheduledScalingSuspended: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.SuspendedStateProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.SuspendedStateProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst suspendedStateProperty: appscaling.CfnScalableTarget.SuspendedStateProperty = {\n  dynamicScalingInSuspended: false,\n  dynamicScalingOutSuspended: false,\n  scheduledScalingSuspended: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":8,"91":3,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"04938bd01e4db0537d8233f77012728d983f14346ec05487c483fa310b7ca812"},"838f5c61c575051092a50ad43b10deb6f1ad1bb6b167f168bf119fb2e0f1b154":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\ncfn_scalable_target_props = appscaling.CfnScalableTargetProps(\n    max_capacity=123,\n    min_capacity=123,\n    resource_id=\"resourceId\",\n    role_arn=\"roleArn\",\n    scalable_dimension=\"scalableDimension\",\n    service_namespace=\"serviceNamespace\",\n\n    # the properties below are optional\n    scheduled_actions=[appscaling.CfnScalableTarget.ScheduledActionProperty(\n        schedule=\"schedule\",\n        scheduled_action_name=\"scheduledActionName\",\n\n        # the properties below are optional\n        end_time=Date(),\n        scalable_target_action=appscaling.CfnScalableTarget.ScalableTargetActionProperty(\n            max_capacity=123,\n            min_capacity=123\n        ),\n        start_time=Date(),\n        timezone=\"timezone\"\n    )],\n    suspended_state=appscaling.CfnScalableTarget.SuspendedStateProperty(\n        dynamic_scaling_in_suspended=False,\n        dynamic_scaling_out_suspended=False,\n        scheduled_scaling_suspended=False\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar cfnScalableTargetProps = new CfnScalableTargetProps {\n    MaxCapacity = 123,\n    MinCapacity = 123,\n    ResourceId = \"resourceId\",\n    RoleArn = \"roleArn\",\n    ScalableDimension = \"scalableDimension\",\n    ServiceNamespace = \"serviceNamespace\",\n\n    // the properties below are optional\n    ScheduledActions = new [] { new ScheduledActionProperty {\n        Schedule = \"schedule\",\n        ScheduledActionName = \"scheduledActionName\",\n\n        // the properties below are optional\n        EndTime = new Date(),\n        ScalableTargetAction = new ScalableTargetActionProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123\n        },\n        StartTime = new Date(),\n        Timezone = \"timezone\"\n    } },\n    SuspendedState = new SuspendedStateProperty {\n        DynamicScalingInSuspended = false,\n        DynamicScalingOutSuspended = false,\n        ScheduledScalingSuspended = false\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nCfnScalableTargetProps cfnScalableTargetProps = CfnScalableTargetProps.builder()\n        .maxCapacity(123)\n        .minCapacity(123)\n        .resourceId(\"resourceId\")\n        .roleArn(\"roleArn\")\n        .scalableDimension(\"scalableDimension\")\n        .serviceNamespace(\"serviceNamespace\")\n\n        // the properties below are optional\n        .scheduledActions(List.of(ScheduledActionProperty.builder()\n                .schedule(\"schedule\")\n                .scheduledActionName(\"scheduledActionName\")\n\n                // the properties below are optional\n                .endTime(new Date())\n                .scalableTargetAction(ScalableTargetActionProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .build())\n                .startTime(new Date())\n                .timezone(\"timezone\")\n                .build()))\n        .suspendedState(SuspendedStateProperty.builder()\n                .dynamicScalingInSuspended(false)\n                .dynamicScalingOutSuspended(false)\n                .scheduledScalingSuspended(false)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\ncfnScalableTargetProps := &CfnScalableTargetProps{\n\tMaxCapacity: jsii.Number(123),\n\tMinCapacity: jsii.Number(123),\n\tResourceId: jsii.String(\"resourceId\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n\tScalableDimension: jsii.String(\"scalableDimension\"),\n\tServiceNamespace: jsii.String(\"serviceNamespace\"),\n\n\t// the properties below are optional\n\tScheduledActions: []interface{}{\n\t\t&ScheduledActionProperty{\n\t\t\tSchedule: jsii.String(\"schedule\"),\n\t\t\tScheduledActionName: jsii.String(\"scheduledActionName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tEndTime: NewDate(),\n\t\t\tScalableTargetAction: &ScalableTargetActionProperty{\n\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t},\n\t\t\tStartTime: NewDate(),\n\t\t\tTimezone: jsii.String(\"timezone\"),\n\t\t},\n\t},\n\tSuspendedState: &SuspendedStateProperty{\n\t\tDynamicScalingInSuspended: jsii.Boolean(false),\n\t\tDynamicScalingOutSuspended: jsii.Boolean(false),\n\t\tScheduledScalingSuspended: jsii.Boolean(false),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalableTargetProps: appscaling.CfnScalableTargetProps = {\n  maxCapacity: 123,\n  minCapacity: 123,\n  resourceId: 'resourceId',\n  roleArn: 'roleArn',\n  scalableDimension: 'scalableDimension',\n  serviceNamespace: 'serviceNamespace',\n\n  // the properties below are optional\n  scheduledActions: [{\n    schedule: 'schedule',\n    scheduledActionName: 'scheduledActionName',\n\n    // the properties below are optional\n    endTime: new Date(),\n    scalableTargetAction: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    startTime: new Date(),\n    timezone: 'timezone',\n  }],\n  suspendedState: {\n    dynamicScalingInSuspended: false,\n    dynamicScalingOutSuspended: false,\n    scheduledScalingSuspended: false,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScalableTargetProps: appscaling.CfnScalableTargetProps = {\n  maxCapacity: 123,\n  minCapacity: 123,\n  resourceId: 'resourceId',\n  roleArn: 'roleArn',\n  scalableDimension: 'scalableDimension',\n  serviceNamespace: 'serviceNamespace',\n\n  // the properties below are optional\n  scheduledActions: [{\n    schedule: 'schedule',\n    scheduledActionName: 'scheduledActionName',\n\n    // the properties below are optional\n    endTime: new Date(),\n    scalableTargetAction: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    startTime: new Date(),\n    timezone: 'timezone',\n  }],\n  suspendedState: {\n    dynamicScalingInSuspended: false,\n    dynamicScalingOutSuspended: false,\n    scheduledScalingSuspended: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":8,"75":25,"91":3,"153":1,"169":1,"192":1,"193":4,"197":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"8eb2bbcf4b8ee4e8dc99f8255ea00a957495e8cae2f711af8528d2047e5940f3"},"9e0c580eecb74d10f8e1a792dbc32777ef267e8d2ca72335016362cf63280b32":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\ncfn_scaling_policy = appscaling.CfnScalingPolicy(self, \"MyCfnScalingPolicy\",\n    policy_name=\"policyName\",\n    policy_type=\"policyType\",\n\n    # the properties below are optional\n    resource_id=\"resourceId\",\n    scalable_dimension=\"scalableDimension\",\n    scaling_target_id=\"scalingTargetId\",\n    service_namespace=\"serviceNamespace\",\n    step_scaling_policy_configuration=appscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty(\n        adjustment_type=\"adjustmentType\",\n        cooldown=123,\n        metric_aggregation_type=\"metricAggregationType\",\n        min_adjustment_magnitude=123,\n        step_adjustments=[appscaling.CfnScalingPolicy.StepAdjustmentProperty(\n            scaling_adjustment=123,\n\n            # the properties below are optional\n            metric_interval_lower_bound=123,\n            metric_interval_upper_bound=123\n        )]\n    ),\n    target_tracking_scaling_policy_configuration=appscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty(\n        target_value=123,\n\n        # the properties below are optional\n        customized_metric_specification=appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n            metric_name=\"metricName\",\n            namespace=\"namespace\",\n            statistic=\"statistic\",\n\n            # the properties below are optional\n            dimensions=[appscaling.CfnScalingPolicy.MetricDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            unit=\"unit\"\n        ),\n        disable_scale_in=False,\n        predefined_metric_specification=appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        ),\n        scale_in_cooldown=123,\n        scale_out_cooldown=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar cfnScalingPolicy = new CfnScalingPolicy(this, \"MyCfnScalingPolicy\", new CfnScalingPolicyProps {\n    PolicyName = \"policyName\",\n    PolicyType = \"policyType\",\n\n    // the properties below are optional\n    ResourceId = \"resourceId\",\n    ScalableDimension = \"scalableDimension\",\n    ScalingTargetId = \"scalingTargetId\",\n    ServiceNamespace = \"serviceNamespace\",\n    StepScalingPolicyConfiguration = new StepScalingPolicyConfigurationProperty {\n        AdjustmentType = \"adjustmentType\",\n        Cooldown = 123,\n        MetricAggregationType = \"metricAggregationType\",\n        MinAdjustmentMagnitude = 123,\n        StepAdjustments = new [] { new StepAdjustmentProperty {\n            ScalingAdjustment = 123,\n\n            // the properties below are optional\n            MetricIntervalLowerBound = 123,\n            MetricIntervalUpperBound = 123\n        } }\n    },\n    TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n        TargetValue = 123,\n\n        // the properties below are optional\n        CustomizedMetricSpecification = new CustomizedMetricSpecificationProperty {\n            MetricName = \"metricName\",\n            Namespace = \"namespace\",\n            Statistic = \"statistic\",\n\n            // the properties below are optional\n            Dimensions = new [] { new MetricDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            Unit = \"unit\"\n        },\n        DisableScaleIn = false,\n        PredefinedMetricSpecification = new PredefinedMetricSpecificationProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        },\n        ScaleInCooldown = 123,\n        ScaleOutCooldown = 123\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nCfnScalingPolicy cfnScalingPolicy = CfnScalingPolicy.Builder.create(this, \"MyCfnScalingPolicy\")\n        .policyName(\"policyName\")\n        .policyType(\"policyType\")\n\n        // the properties below are optional\n        .resourceId(\"resourceId\")\n        .scalableDimension(\"scalableDimension\")\n        .scalingTargetId(\"scalingTargetId\")\n        .serviceNamespace(\"serviceNamespace\")\n        .stepScalingPolicyConfiguration(StepScalingPolicyConfigurationProperty.builder()\n                .adjustmentType(\"adjustmentType\")\n                .cooldown(123)\n                .metricAggregationType(\"metricAggregationType\")\n                .minAdjustmentMagnitude(123)\n                .stepAdjustments(List.of(StepAdjustmentProperty.builder()\n                        .scalingAdjustment(123)\n\n                        // the properties below are optional\n                        .metricIntervalLowerBound(123)\n                        .metricIntervalUpperBound(123)\n                        .build()))\n                .build())\n        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                .targetValue(123)\n\n                // the properties below are optional\n                .customizedMetricSpecification(CustomizedMetricSpecificationProperty.builder()\n                        .metricName(\"metricName\")\n                        .namespace(\"namespace\")\n                        .statistic(\"statistic\")\n\n                        // the properties below are optional\n                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .unit(\"unit\")\n                        .build())\n                .disableScaleIn(false)\n                .predefinedMetricSpecification(PredefinedMetricSpecificationProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .scaleInCooldown(123)\n                .scaleOutCooldown(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\ncfnScalingPolicy := appscaling.NewCfnScalingPolicy(this, jsii.String(\"MyCfnScalingPolicy\"), &CfnScalingPolicyProps{\n\tPolicyName: jsii.String(\"policyName\"),\n\tPolicyType: jsii.String(\"policyType\"),\n\n\t// the properties below are optional\n\tResourceId: jsii.String(\"resourceId\"),\n\tScalableDimension: jsii.String(\"scalableDimension\"),\n\tScalingTargetId: jsii.String(\"scalingTargetId\"),\n\tServiceNamespace: jsii.String(\"serviceNamespace\"),\n\tStepScalingPolicyConfiguration: &StepScalingPolicyConfigurationProperty{\n\t\tAdjustmentType: jsii.String(\"adjustmentType\"),\n\t\tCooldown: jsii.Number(123),\n\t\tMetricAggregationType: jsii.String(\"metricAggregationType\"),\n\t\tMinAdjustmentMagnitude: jsii.Number(123),\n\t\tStepAdjustments: []interface{}{\n\t\t\t&StepAdjustmentProperty{\n\t\t\t\tScalingAdjustment: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tMetricIntervalLowerBound: jsii.Number(123),\n\t\t\t\tMetricIntervalUpperBound: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\tTargetValue: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tCustomizedMetricSpecification: &CustomizedMetricSpecificationProperty{\n\t\t\tMetricName: jsii.String(\"metricName\"),\n\t\t\tNamespace: jsii.String(\"namespace\"),\n\t\t\tStatistic: jsii.String(\"statistic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tDimensions: []interface{}{\n\t\t\t\t&MetricDimensionProperty{\n\t\t\t\t\tName: jsii.String(\"name\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUnit: jsii.String(\"unit\"),\n\t\t},\n\t\tDisableScaleIn: jsii.Boolean(false),\n\t\tPredefinedMetricSpecification: &PredefinedMetricSpecificationProperty{\n\t\t\tPredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tResourceLabel: jsii.String(\"resourceLabel\"),\n\t\t},\n\t\tScaleInCooldown: jsii.Number(123),\n\t\tScaleOutCooldown: jsii.Number(123),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalingPolicy = new appscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  policyName: 'policyName',\n  policyType: 'policyType',\n\n  // the properties below are optional\n  resourceId: 'resourceId',\n  scalableDimension: 'scalableDimension',\n  scalingTargetId: 'scalingTargetId',\n  serviceNamespace: 'serviceNamespace',\n  stepScalingPolicyConfiguration: {\n    adjustmentType: 'adjustmentType',\n    cooldown: 123,\n    metricAggregationType: 'metricAggregationType',\n    minAdjustmentMagnitude: 123,\n    stepAdjustments: [{\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      metricIntervalLowerBound: 123,\n      metricIntervalUpperBound: 123,\n    }],\n  },\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy","@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScalingPolicy = new appscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  policyName: 'policyName',\n  policyType: 'policyType',\n\n  // the properties below are optional\n  resourceId: 'resourceId',\n  scalableDimension: 'scalableDimension',\n  scalingTargetId: 'scalingTargetId',\n  serviceNamespace: 'serviceNamespace',\n  stepScalingPolicyConfiguration: {\n    adjustmentType: 'adjustmentType',\n    cooldown: 123,\n    metricAggregationType: 'metricAggregationType',\n    minAdjustmentMagnitude: 123,\n    stepAdjustments: [{\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      metricIntervalLowerBound: 123,\n      metricIntervalUpperBound: 123,\n    }],\n  },\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":8,"10":18,"75":35,"91":1,"104":1,"192":2,"193":7,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":31,"290":1},"fqnsFingerprint":"be99c4b38d04f17cc45f0a1a859ac9d947410417e2e0b5e7b97f622bf44480b0"},"34fa89e4e5406438b9d1b6e09752d04beeec51396be86526dc4a2d409d9939b5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\ncustomized_metric_specification_property = appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n    metric_name=\"metricName\",\n    namespace=\"namespace\",\n    statistic=\"statistic\",\n\n    # the properties below are optional\n    dimensions=[appscaling.CfnScalingPolicy.MetricDimensionProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    unit=\"unit\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar customizedMetricSpecificationProperty = new CustomizedMetricSpecificationProperty {\n    MetricName = \"metricName\",\n    Namespace = \"namespace\",\n    Statistic = \"statistic\",\n\n    // the properties below are optional\n    Dimensions = new [] { new MetricDimensionProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    Unit = \"unit\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nCustomizedMetricSpecificationProperty customizedMetricSpecificationProperty = CustomizedMetricSpecificationProperty.builder()\n        .metricName(\"metricName\")\n        .namespace(\"namespace\")\n        .statistic(\"statistic\")\n\n        // the properties below are optional\n        .dimensions(List.of(MetricDimensionProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .unit(\"unit\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\ncustomizedMetricSpecificationProperty := &CustomizedMetricSpecificationProperty{\n\tMetricName: jsii.String(\"metricName\"),\n\tNamespace: jsii.String(\"namespace\"),\n\tStatistic: jsii.String(\"statistic\"),\n\n\t// the properties below are optional\n\tDimensions: []interface{}{\n\t\t&MetricDimensionProperty{\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUnit: jsii.String(\"unit\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst customizedMetricSpecificationProperty: appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customizedMetricSpecificationProperty: appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":12,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"c9be5280d77c7cee8463ac34f393b20212bdd45707b0c40bb3c65609cdbe18d6"},"717e662d7935c235f3c5100550b3295540895e58eab1d92750bc8a1905781de6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nmetric_dimension_property = appscaling.CfnScalingPolicy.MetricDimensionProperty(\n    name=\"name\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar metricDimensionProperty = new MetricDimensionProperty {\n    Name = \"name\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nMetricDimensionProperty metricDimensionProperty = MetricDimensionProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nmetricDimensionProperty := &MetricDimensionProperty{\n\tName: jsii.String(\"name\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst metricDimensionProperty: appscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricDimensionProperty: appscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"ec5de1b04a0e3fddfdfbb9562a675e4bb2e163aeb6b163d6381ef7dd1ea3b8c9"},"6ffd843721fa1fe5a2c1e568910644ecb10db37a7cb7736148dbd1c64cc2f6e9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\npredefined_metric_specification_property = appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n    predefined_metric_type=\"predefinedMetricType\",\n\n    # the properties below are optional\n    resource_label=\"resourceLabel\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar predefinedMetricSpecificationProperty = new PredefinedMetricSpecificationProperty {\n    PredefinedMetricType = \"predefinedMetricType\",\n\n    // the properties below are optional\n    ResourceLabel = \"resourceLabel\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nPredefinedMetricSpecificationProperty predefinedMetricSpecificationProperty = PredefinedMetricSpecificationProperty.builder()\n        .predefinedMetricType(\"predefinedMetricType\")\n\n        // the properties below are optional\n        .resourceLabel(\"resourceLabel\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\npredefinedMetricSpecificationProperty := &PredefinedMetricSpecificationProperty{\n\tPredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t// the properties below are optional\n\tResourceLabel: jsii.String(\"resourceLabel\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst predefinedMetricSpecificationProperty: appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predefinedMetricSpecificationProperty: appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"9e43954548d0fa81fcab142f0eed9f678dae169946775aef0993b91fa35c423a"},"2b852f8a6742caabffa40662054c90cb2ec347369298c1e86a535f00eaa88ba4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nstep_adjustment_property = appscaling.CfnScalingPolicy.StepAdjustmentProperty(\n    scaling_adjustment=123,\n\n    # the properties below are optional\n    metric_interval_lower_bound=123,\n    metric_interval_upper_bound=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar stepAdjustmentProperty = new StepAdjustmentProperty {\n    ScalingAdjustment = 123,\n\n    // the properties below are optional\n    MetricIntervalLowerBound = 123,\n    MetricIntervalUpperBound = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nStepAdjustmentProperty stepAdjustmentProperty = StepAdjustmentProperty.builder()\n        .scalingAdjustment(123)\n\n        // the properties below are optional\n        .metricIntervalLowerBound(123)\n        .metricIntervalUpperBound(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nstepAdjustmentProperty := &StepAdjustmentProperty{\n\tScalingAdjustment: jsii.Number(123),\n\n\t// the properties below are optional\n\tMetricIntervalLowerBound: jsii.Number(123),\n\tMetricIntervalUpperBound: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst stepAdjustmentProperty: appscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepAdjustmentProperty: appscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":1,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"664de5f511e65457d47d7a9654ac3f35984ae03ac5cf2d6558180079b6367ced"},"eb728a1325d9baf3afa0c8a02c37f068da677f2146a9621f7e9077e8a8484041":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nstep_scaling_policy_configuration_property = appscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty(\n    adjustment_type=\"adjustmentType\",\n    cooldown=123,\n    metric_aggregation_type=\"metricAggregationType\",\n    min_adjustment_magnitude=123,\n    step_adjustments=[appscaling.CfnScalingPolicy.StepAdjustmentProperty(\n        scaling_adjustment=123,\n\n        # the properties below are optional\n        metric_interval_lower_bound=123,\n        metric_interval_upper_bound=123\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar stepScalingPolicyConfigurationProperty = new StepScalingPolicyConfigurationProperty {\n    AdjustmentType = \"adjustmentType\",\n    Cooldown = 123,\n    MetricAggregationType = \"metricAggregationType\",\n    MinAdjustmentMagnitude = 123,\n    StepAdjustments = new [] { new StepAdjustmentProperty {\n        ScalingAdjustment = 123,\n\n        // the properties below are optional\n        MetricIntervalLowerBound = 123,\n        MetricIntervalUpperBound = 123\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nStepScalingPolicyConfigurationProperty stepScalingPolicyConfigurationProperty = StepScalingPolicyConfigurationProperty.builder()\n        .adjustmentType(\"adjustmentType\")\n        .cooldown(123)\n        .metricAggregationType(\"metricAggregationType\")\n        .minAdjustmentMagnitude(123)\n        .stepAdjustments(List.of(StepAdjustmentProperty.builder()\n                .scalingAdjustment(123)\n\n                // the properties below are optional\n                .metricIntervalLowerBound(123)\n                .metricIntervalUpperBound(123)\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nstepScalingPolicyConfigurationProperty := &StepScalingPolicyConfigurationProperty{\n\tAdjustmentType: jsii.String(\"adjustmentType\"),\n\tCooldown: jsii.Number(123),\n\tMetricAggregationType: jsii.String(\"metricAggregationType\"),\n\tMinAdjustmentMagnitude: jsii.Number(123),\n\tStepAdjustments: []interface{}{\n\t\t&StepAdjustmentProperty{\n\t\t\tScalingAdjustment: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tMetricIntervalLowerBound: jsii.Number(123),\n\t\t\tMetricIntervalUpperBound: jsii.Number(123),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst stepScalingPolicyConfigurationProperty: appscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty = {\n  adjustmentType: 'adjustmentType',\n  cooldown: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingPolicyConfigurationProperty: appscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty = {\n  adjustmentType: 'adjustmentType',\n  cooldown: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":5,"10":3,"75":13,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"b9be89118d6cd7c98ea07184e9cfb85b3a9579659f4a291df26c11fecd170bf2"},"3dd20c34739ef5b0dad07f54f8d10f6aa30aa1dc4c16d287ecf9aa709c04dc18":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\ntarget_tracking_scaling_policy_configuration_property = appscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty(\n    target_value=123,\n\n    # the properties below are optional\n    customized_metric_specification=appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n        metric_name=\"metricName\",\n        namespace=\"namespace\",\n        statistic=\"statistic\",\n\n        # the properties below are optional\n        dimensions=[appscaling.CfnScalingPolicy.MetricDimensionProperty(\n            name=\"name\",\n            value=\"value\"\n        )],\n        unit=\"unit\"\n    ),\n    disable_scale_in=False,\n    predefined_metric_specification=appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n        predefined_metric_type=\"predefinedMetricType\",\n\n        # the properties below are optional\n        resource_label=\"resourceLabel\"\n    ),\n    scale_in_cooldown=123,\n    scale_out_cooldown=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar targetTrackingScalingPolicyConfigurationProperty = new TargetTrackingScalingPolicyConfigurationProperty {\n    TargetValue = 123,\n\n    // the properties below are optional\n    CustomizedMetricSpecification = new CustomizedMetricSpecificationProperty {\n        MetricName = \"metricName\",\n        Namespace = \"namespace\",\n        Statistic = \"statistic\",\n\n        // the properties below are optional\n        Dimensions = new [] { new MetricDimensionProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } },\n        Unit = \"unit\"\n    },\n    DisableScaleIn = false,\n    PredefinedMetricSpecification = new PredefinedMetricSpecificationProperty {\n        PredefinedMetricType = \"predefinedMetricType\",\n\n        // the properties below are optional\n        ResourceLabel = \"resourceLabel\"\n    },\n    ScaleInCooldown = 123,\n    ScaleOutCooldown = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nTargetTrackingScalingPolicyConfigurationProperty targetTrackingScalingPolicyConfigurationProperty = TargetTrackingScalingPolicyConfigurationProperty.builder()\n        .targetValue(123)\n\n        // the properties below are optional\n        .customizedMetricSpecification(CustomizedMetricSpecificationProperty.builder()\n                .metricName(\"metricName\")\n                .namespace(\"namespace\")\n                .statistic(\"statistic\")\n\n                // the properties below are optional\n                .dimensions(List.of(MetricDimensionProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .unit(\"unit\")\n                .build())\n        .disableScaleIn(false)\n        .predefinedMetricSpecification(PredefinedMetricSpecificationProperty.builder()\n                .predefinedMetricType(\"predefinedMetricType\")\n\n                // the properties below are optional\n                .resourceLabel(\"resourceLabel\")\n                .build())\n        .scaleInCooldown(123)\n        .scaleOutCooldown(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\ntargetTrackingScalingPolicyConfigurationProperty := &TargetTrackingScalingPolicyConfigurationProperty{\n\tTargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tCustomizedMetricSpecification: &CustomizedMetricSpecificationProperty{\n\t\tMetricName: jsii.String(\"metricName\"),\n\t\tNamespace: jsii.String(\"namespace\"),\n\t\tStatistic: jsii.String(\"statistic\"),\n\n\t\t// the properties below are optional\n\t\tDimensions: []interface{}{\n\t\t\t&MetricDimensionProperty{\n\t\t\t\tName: jsii.String(\"name\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t\tUnit: jsii.String(\"unit\"),\n\t},\n\tDisableScaleIn: jsii.Boolean(false),\n\tPredefinedMetricSpecification: &PredefinedMetricSpecificationProperty{\n\t\tPredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t// the properties below are optional\n\t\tResourceLabel: jsii.String(\"resourceLabel\"),\n\t},\n\tScaleInCooldown: jsii.Number(123),\n\tScaleOutCooldown: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst targetTrackingScalingPolicyConfigurationProperty: appscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  scaleInCooldown: 123,\n  scaleOutCooldown: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingScalingPolicyConfigurationProperty: appscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  scaleInCooldown: 123,\n  scaleOutCooldown: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":9,"75":20,"91":1,"153":2,"169":1,"192":1,"193":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":15,"290":1},"fqnsFingerprint":"5b2715af27e8edbd338b4869e7a49f5f249d3c3b79a88744517a25a72694c2da"},"7f6ec5243fa3982ed6f3b5517c7280a8402cf7547eac84c56d4f052df8a2bc6a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\ncfn_scaling_policy_props = appscaling.CfnScalingPolicyProps(\n    policy_name=\"policyName\",\n    policy_type=\"policyType\",\n\n    # the properties below are optional\n    resource_id=\"resourceId\",\n    scalable_dimension=\"scalableDimension\",\n    scaling_target_id=\"scalingTargetId\",\n    service_namespace=\"serviceNamespace\",\n    step_scaling_policy_configuration=appscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty(\n        adjustment_type=\"adjustmentType\",\n        cooldown=123,\n        metric_aggregation_type=\"metricAggregationType\",\n        min_adjustment_magnitude=123,\n        step_adjustments=[appscaling.CfnScalingPolicy.StepAdjustmentProperty(\n            scaling_adjustment=123,\n\n            # the properties below are optional\n            metric_interval_lower_bound=123,\n            metric_interval_upper_bound=123\n        )]\n    ),\n    target_tracking_scaling_policy_configuration=appscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty(\n        target_value=123,\n\n        # the properties below are optional\n        customized_metric_specification=appscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n            metric_name=\"metricName\",\n            namespace=\"namespace\",\n            statistic=\"statistic\",\n\n            # the properties below are optional\n            dimensions=[appscaling.CfnScalingPolicy.MetricDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            unit=\"unit\"\n        ),\n        disable_scale_in=False,\n        predefined_metric_specification=appscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        ),\n        scale_in_cooldown=123,\n        scale_out_cooldown=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar cfnScalingPolicyProps = new CfnScalingPolicyProps {\n    PolicyName = \"policyName\",\n    PolicyType = \"policyType\",\n\n    // the properties below are optional\n    ResourceId = \"resourceId\",\n    ScalableDimension = \"scalableDimension\",\n    ScalingTargetId = \"scalingTargetId\",\n    ServiceNamespace = \"serviceNamespace\",\n    StepScalingPolicyConfiguration = new StepScalingPolicyConfigurationProperty {\n        AdjustmentType = \"adjustmentType\",\n        Cooldown = 123,\n        MetricAggregationType = \"metricAggregationType\",\n        MinAdjustmentMagnitude = 123,\n        StepAdjustments = new [] { new StepAdjustmentProperty {\n            ScalingAdjustment = 123,\n\n            // the properties below are optional\n            MetricIntervalLowerBound = 123,\n            MetricIntervalUpperBound = 123\n        } }\n    },\n    TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n        TargetValue = 123,\n\n        // the properties below are optional\n        CustomizedMetricSpecification = new CustomizedMetricSpecificationProperty {\n            MetricName = \"metricName\",\n            Namespace = \"namespace\",\n            Statistic = \"statistic\",\n\n            // the properties below are optional\n            Dimensions = new [] { new MetricDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            Unit = \"unit\"\n        },\n        DisableScaleIn = false,\n        PredefinedMetricSpecification = new PredefinedMetricSpecificationProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        },\n        ScaleInCooldown = 123,\n        ScaleOutCooldown = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nCfnScalingPolicyProps cfnScalingPolicyProps = CfnScalingPolicyProps.builder()\n        .policyName(\"policyName\")\n        .policyType(\"policyType\")\n\n        // the properties below are optional\n        .resourceId(\"resourceId\")\n        .scalableDimension(\"scalableDimension\")\n        .scalingTargetId(\"scalingTargetId\")\n        .serviceNamespace(\"serviceNamespace\")\n        .stepScalingPolicyConfiguration(StepScalingPolicyConfigurationProperty.builder()\n                .adjustmentType(\"adjustmentType\")\n                .cooldown(123)\n                .metricAggregationType(\"metricAggregationType\")\n                .minAdjustmentMagnitude(123)\n                .stepAdjustments(List.of(StepAdjustmentProperty.builder()\n                        .scalingAdjustment(123)\n\n                        // the properties below are optional\n                        .metricIntervalLowerBound(123)\n                        .metricIntervalUpperBound(123)\n                        .build()))\n                .build())\n        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                .targetValue(123)\n\n                // the properties below are optional\n                .customizedMetricSpecification(CustomizedMetricSpecificationProperty.builder()\n                        .metricName(\"metricName\")\n                        .namespace(\"namespace\")\n                        .statistic(\"statistic\")\n\n                        // the properties below are optional\n                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .unit(\"unit\")\n                        .build())\n                .disableScaleIn(false)\n                .predefinedMetricSpecification(PredefinedMetricSpecificationProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .scaleInCooldown(123)\n                .scaleOutCooldown(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\ncfnScalingPolicyProps := &CfnScalingPolicyProps{\n\tPolicyName: jsii.String(\"policyName\"),\n\tPolicyType: jsii.String(\"policyType\"),\n\n\t// the properties below are optional\n\tResourceId: jsii.String(\"resourceId\"),\n\tScalableDimension: jsii.String(\"scalableDimension\"),\n\tScalingTargetId: jsii.String(\"scalingTargetId\"),\n\tServiceNamespace: jsii.String(\"serviceNamespace\"),\n\tStepScalingPolicyConfiguration: &StepScalingPolicyConfigurationProperty{\n\t\tAdjustmentType: jsii.String(\"adjustmentType\"),\n\t\tCooldown: jsii.Number(123),\n\t\tMetricAggregationType: jsii.String(\"metricAggregationType\"),\n\t\tMinAdjustmentMagnitude: jsii.Number(123),\n\t\tStepAdjustments: []interface{}{\n\t\t\t&StepAdjustmentProperty{\n\t\t\t\tScalingAdjustment: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tMetricIntervalLowerBound: jsii.Number(123),\n\t\t\t\tMetricIntervalUpperBound: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\tTargetValue: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tCustomizedMetricSpecification: &CustomizedMetricSpecificationProperty{\n\t\t\tMetricName: jsii.String(\"metricName\"),\n\t\t\tNamespace: jsii.String(\"namespace\"),\n\t\t\tStatistic: jsii.String(\"statistic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tDimensions: []interface{}{\n\t\t\t\t&MetricDimensionProperty{\n\t\t\t\t\tName: jsii.String(\"name\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUnit: jsii.String(\"unit\"),\n\t\t},\n\t\tDisableScaleIn: jsii.Boolean(false),\n\t\tPredefinedMetricSpecification: &PredefinedMetricSpecificationProperty{\n\t\t\tPredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tResourceLabel: jsii.String(\"resourceLabel\"),\n\t\t},\n\t\tScaleInCooldown: jsii.Number(123),\n\t\tScaleOutCooldown: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst cfnScalingPolicyProps: appscaling.CfnScalingPolicyProps = {\n  policyName: 'policyName',\n  policyType: 'policyType',\n\n  // the properties below are optional\n  resourceId: 'resourceId',\n  scalableDimension: 'scalableDimension',\n  scalingTargetId: 'scalingTargetId',\n  serviceNamespace: 'serviceNamespace',\n  stepScalingPolicyConfiguration: {\n    adjustmentType: 'adjustmentType',\n    cooldown: 123,\n    metricAggregationType: 'metricAggregationType',\n    minAdjustmentMagnitude: 123,\n    stepAdjustments: [{\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      metricIntervalLowerBound: 123,\n      metricIntervalUpperBound: 123,\n    }],\n  },\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScalingPolicyProps: appscaling.CfnScalingPolicyProps = {\n  policyName: 'policyName',\n  policyType: 'policyType',\n\n  // the properties below are optional\n  resourceId: 'resourceId',\n  scalableDimension: 'scalableDimension',\n  scalingTargetId: 'scalingTargetId',\n  serviceNamespace: 'serviceNamespace',\n  stepScalingPolicyConfiguration: {\n    adjustmentType: 'adjustmentType',\n    cooldown: 123,\n    metricAggregationType: 'metricAggregationType',\n    minAdjustmentMagnitude: 123,\n    stepAdjustments: [{\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      metricIntervalLowerBound: 123,\n      metricIntervalUpperBound: 123,\n    }],\n  },\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":8,"10":17,"75":35,"91":1,"153":1,"169":1,"192":2,"193":7,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":31,"290":1},"fqnsFingerprint":"2a19ab8920ac9ac4618659ea79834a4e128aead8c482930ed207c3bdc3aace26"},"9ce0925b157e65c968181ab4c15f18d50588b0374c27f51eab3f72c5fbe36e60":{"translations":{"python":{"source":"# cluster: ecs.Cluster\n\nload_balanced_fargate_service = ecs_patterns.ApplicationLoadBalancedFargateService(self, \"Service\",\n    cluster=cluster,\n    memory_limit_mi_b=1024,\n    desired_count=1,\n    cpu=512,\n    task_image_options=ecsPatterns.ApplicationLoadBalancedTaskImageOptions(\n        image=ecs.ContainerImage.from_registry(\"amazon/amazon-ecs-sample\")\n    )\n)\n\nscalable_target = load_balanced_fargate_service.service.auto_scale_task_count(\n    min_capacity=5,\n    max_capacity=20\n)\n\nscalable_target.scale_on_schedule(\"DaytimeScaleDown\",\n    schedule=appscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=1\n)\n\nscalable_target.scale_on_schedule(\"EveningRushScaleUp\",\n    schedule=appscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=10\n)","version":"2"},"csharp":{"source":"Cluster cluster;\n\nvar loadBalancedFargateService = new ApplicationLoadBalancedFargateService(this, \"Service\", new ApplicationLoadBalancedFargateServiceProps {\n    Cluster = cluster,\n    MemoryLimitMiB = 1024,\n    DesiredCount = 1,\n    Cpu = 512,\n    TaskImageOptions = new ApplicationLoadBalancedTaskImageOptions {\n        Image = ContainerImage.FromRegistry(\"amazon/amazon-ecs-sample\")\n    }\n});\n\nvar scalableTarget = loadBalancedFargateService.Service.AutoScaleTaskCount(new EnableScalingProps {\n    MinCapacity = 5,\n    MaxCapacity = 20\n});\n\nscalableTarget.ScaleOnSchedule(\"DaytimeScaleDown\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 1\n});\n\nscalableTarget.ScaleOnSchedule(\"EveningRushScaleUp\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MinCapacity = 10\n});","version":"1"},"java":{"source":"Cluster cluster;\n\nApplicationLoadBalancedFargateService loadBalancedFargateService = ApplicationLoadBalancedFargateService.Builder.create(this, \"Service\")\n        .cluster(cluster)\n        .memoryLimitMiB(1024)\n        .desiredCount(1)\n        .cpu(512)\n        .taskImageOptions(ApplicationLoadBalancedTaskImageOptions.builder()\n                .image(ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"))\n                .build())\n        .build();\n\nScalableTaskCount scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount(EnableScalingProps.builder()\n        .minCapacity(5)\n        .maxCapacity(20)\n        .build());\n\nscalableTarget.scaleOnSchedule(\"DaytimeScaleDown\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(1)\n        .build());\n\nscalableTarget.scaleOnSchedule(\"EveningRushScaleUp\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .minCapacity(10)\n        .build());","version":"1"},"go":{"source":"var cluster cluster\n\nloadBalancedFargateService := ecsPatterns.NewApplicationLoadBalancedFargateService(this, jsii.String(\"Service\"), &ApplicationLoadBalancedFargateServiceProps{\n\tCluster: Cluster,\n\tMemoryLimitMiB: jsii.Number(1024),\n\tDesiredCount: jsii.Number(1),\n\tCpu: jsii.Number(512),\n\tTaskImageOptions: &ApplicationLoadBalancedTaskImageOptions{\n\t\tImage: ecs.ContainerImage_FromRegistry(jsii.String(\"amazon/amazon-ecs-sample\")),\n\t},\n})\n\nscalableTarget := loadBalancedFargateService.Service.AutoScaleTaskCount(&EnableScalingProps{\n\tMinCapacity: jsii.Number(5),\n\tMaxCapacity: jsii.Number(20),\n})\n\nscalableTarget.ScaleOnSchedule(jsii.String(\"DaytimeScaleDown\"), &ScalingSchedule{\n\tSchedule: appscaling.Schedule_Cron(&CronOptions{\n\t\tHour: jsii.String(\"8\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(1),\n})\n\nscalableTarget.ScaleOnSchedule(jsii.String(\"EveningRushScaleUp\"), &ScalingSchedule{\n\tSchedule: appscaling.Schedule_*Cron(&CronOptions{\n\t\tHour: jsii.String(\"20\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(10),\n})","version":"1"},"$":{"source":"declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 5,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnSchedule('DaytimeScaleDown', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 1,\n});\n\nscalableTarget.scaleOnSchedule('EveningRushScaleUp', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0'}),\n  minCapacity: 10,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.CronOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CronOptions","@aws-cdk/aws-applicationautoscaling.EnableScalingProps","@aws-cdk/aws-applicationautoscaling.ScalingSchedule","@aws-cdk/aws-applicationautoscaling.Schedule","@aws-cdk/aws-applicationautoscaling.Schedule#cron","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService#service","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateServiceProps","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedTaskImageOptions","@aws-cdk/aws-ecs.BaseService#autoScaleTaskCount","@aws-cdk/aws-ecs.ContainerImage","@aws-cdk/aws-ecs.ContainerImage#fromRegistry","@aws-cdk/aws-ecs.ICluster","@aws-cdk/aws-ecs.ScalableTaskCount","@aws-cdk/aws-ecs.ScalableTaskCount#scaleOnSchedule","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cluster: ecs.Cluster;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as ecsPatterns from '@aws-cdk/aws-ecs-patterns';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cxapi from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    \n    // Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 5,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnSchedule('DaytimeScaleDown', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 1,\n});\n\nscalableTarget.scaleOnSchedule('EveningRushScaleUp', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0'}),\n  minCapacity: 10,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":7,"10":8,"75":39,"104":1,"130":1,"153":1,"169":1,"193":7,"194":11,"196":6,"197":1,"225":3,"226":2,"242":3,"243":3,"281":15,"282":1,"290":1},"fqnsFingerprint":"06039635e2514d8bd403863320be1a032381f1804045a3c9d3779cc0bcb93dcc"},"fba40961d32c8072fe242224a1e7ea635497dfa7b4c18f205e18f058a72e558f":{"translations":{"python":{"source":"# cluster: ecs.Cluster\n\nload_balanced_fargate_service = ecs_patterns.ApplicationLoadBalancedFargateService(self, \"Service\",\n    cluster=cluster,\n    memory_limit_mi_b=1024,\n    desired_count=1,\n    cpu=512,\n    task_image_options=ecsPatterns.ApplicationLoadBalancedTaskImageOptions(\n        image=ecs.ContainerImage.from_registry(\"amazon/amazon-ecs-sample\")\n    )\n)\n\nscalable_target = load_balanced_fargate_service.service.auto_scale_task_count(\n    min_capacity=1,\n    max_capacity=20\n)\n\nscalable_target.scale_on_cpu_utilization(\"CpuScaling\",\n    target_utilization_percent=50\n)\n\nscalable_target.scale_on_memory_utilization(\"MemoryScaling\",\n    target_utilization_percent=50\n)","version":"2"},"csharp":{"source":"Cluster cluster;\n\nvar loadBalancedFargateService = new ApplicationLoadBalancedFargateService(this, \"Service\", new ApplicationLoadBalancedFargateServiceProps {\n    Cluster = cluster,\n    MemoryLimitMiB = 1024,\n    DesiredCount = 1,\n    Cpu = 512,\n    TaskImageOptions = new ApplicationLoadBalancedTaskImageOptions {\n        Image = ContainerImage.FromRegistry(\"amazon/amazon-ecs-sample\")\n    }\n});\n\nvar scalableTarget = loadBalancedFargateService.Service.AutoScaleTaskCount(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 20\n});\n\nscalableTarget.ScaleOnCpuUtilization(\"CpuScaling\", new CpuUtilizationScalingProps {\n    TargetUtilizationPercent = 50\n});\n\nscalableTarget.ScaleOnMemoryUtilization(\"MemoryScaling\", new MemoryUtilizationScalingProps {\n    TargetUtilizationPercent = 50\n});","version":"1"},"java":{"source":"Cluster cluster;\n\nApplicationLoadBalancedFargateService loadBalancedFargateService = ApplicationLoadBalancedFargateService.Builder.create(this, \"Service\")\n        .cluster(cluster)\n        .memoryLimitMiB(1024)\n        .desiredCount(1)\n        .cpu(512)\n        .taskImageOptions(ApplicationLoadBalancedTaskImageOptions.builder()\n                .image(ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"))\n                .build())\n        .build();\n\nScalableTaskCount scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(20)\n        .build());\n\nscalableTarget.scaleOnCpuUtilization(\"CpuScaling\", CpuUtilizationScalingProps.builder()\n        .targetUtilizationPercent(50)\n        .build());\n\nscalableTarget.scaleOnMemoryUtilization(\"MemoryScaling\", MemoryUtilizationScalingProps.builder()\n        .targetUtilizationPercent(50)\n        .build());","version":"1"},"go":{"source":"var cluster cluster\n\nloadBalancedFargateService := ecsPatterns.NewApplicationLoadBalancedFargateService(this, jsii.String(\"Service\"), &ApplicationLoadBalancedFargateServiceProps{\n\tCluster: Cluster,\n\tMemoryLimitMiB: jsii.Number(1024),\n\tDesiredCount: jsii.Number(1),\n\tCpu: jsii.Number(512),\n\tTaskImageOptions: &ApplicationLoadBalancedTaskImageOptions{\n\t\tImage: ecs.ContainerImage_FromRegistry(jsii.String(\"amazon/amazon-ecs-sample\")),\n\t},\n})\n\nscalableTarget := loadBalancedFargateService.Service.AutoScaleTaskCount(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(20),\n})\n\nscalableTarget.ScaleOnCpuUtilization(jsii.String(\"CpuScaling\"), &CpuUtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(50),\n})\n\nscalableTarget.ScaleOnMemoryUtilization(jsii.String(\"MemoryScaling\"), &MemoryUtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(50),\n})","version":"1"},"$":{"source":"declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 1,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnCpuUtilization('CpuScaling', {\n  targetUtilizationPercent: 50,\n});\n\nscalableTarget.scaleOnMemoryUtilization('MemoryScaling', {\n  targetUtilizationPercent: 50,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.EnableScalingProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.EnableScalingProps","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService#service","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateServiceProps","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedTaskImageOptions","@aws-cdk/aws-ecs.BaseService#autoScaleTaskCount","@aws-cdk/aws-ecs.ContainerImage","@aws-cdk/aws-ecs.ContainerImage#fromRegistry","@aws-cdk/aws-ecs.CpuUtilizationScalingProps","@aws-cdk/aws-ecs.ICluster","@aws-cdk/aws-ecs.MemoryUtilizationScalingProps","@aws-cdk/aws-ecs.ScalableTaskCount","@aws-cdk/aws-ecs.ScalableTaskCount#scaleOnCpuUtilization","@aws-cdk/aws-ecs.ScalableTaskCount#scaleOnMemoryUtilization","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cluster: ecs.Cluster;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as ecsPatterns from '@aws-cdk/aws-ecs-patterns';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cxapi from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    \n    // Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 1,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnCpuUtilization('CpuScaling', {\n  targetUtilizationPercent: 50,\n});\n\nscalableTarget.scaleOnMemoryUtilization('MemoryScaling', {\n  targetUtilizationPercent: 50,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":7,"10":4,"75":27,"104":1,"130":1,"153":1,"169":1,"193":5,"194":7,"196":4,"197":1,"225":3,"226":2,"242":3,"243":3,"281":9,"282":1,"290":1},"fqnsFingerprint":"e1a965afda5622e59488e32126883c809164c96c5f3cbf09de4a64af45f0e6d8"},"12718d12c6b3e5fb0484af64b83af128ce18db6b2955aff788b9c27bf5ed95ec":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# code: lambda.Code\n\n\nhandler = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.PYTHON_3_7,\n    handler=\"index.handler\",\n    code=code,\n\n    reserved_concurrent_executions=2\n)\n\nfn_ver = handler.current_version\n\ntarget = appscaling.ScalableTarget(self, \"ScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.LAMBDA,\n    max_capacity=100,\n    min_capacity=10,\n    resource_id=f\"function:{handler.functionName}:{fnVer.version}\",\n    scalable_dimension=\"lambda:function:ProvisionedConcurrency\"\n)\n\ntarget.scale_to_track_metric(\"PceTracking\",\n    target_value=0.9,\n    predefined_metric=appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nCode code;\n\n\nvar handler = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.PYTHON_3_7,\n    Handler = \"index.handler\",\n    Code = code,\n\n    ReservedConcurrentExecutions = 2\n});\n\nvar fnVer = handler.CurrentVersion;\n\nvar target = new ScalableTarget(this, \"ScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.LAMBDA,\n    MaxCapacity = 100,\n    MinCapacity = 10,\n    ResourceId = $\"function:{handler.functionName}:{fnVer.version}\",\n    ScalableDimension = \"lambda:function:ProvisionedConcurrency\"\n});\n\ntarget.ScaleToTrackMetric(\"PceTracking\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 0.9,\n    PredefinedMetric = PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nCode code;\n\n\nFunction handler = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.PYTHON_3_7)\n        .handler(\"index.handler\")\n        .code(code)\n\n        .reservedConcurrentExecutions(2)\n        .build();\n\nVersion fnVer = handler.getCurrentVersion();\n\nScalableTarget target = ScalableTarget.Builder.create(this, \"ScalableTarget\")\n        .serviceNamespace(ServiceNamespace.LAMBDA)\n        .maxCapacity(100)\n        .minCapacity(10)\n        .resourceId(String.format(\"function:%s:%s\", handler.getFunctionName(), fnVer.getVersion()))\n        .scalableDimension(\"lambda:function:ProvisionedConcurrency\")\n        .build();\n\ntarget.scaleToTrackMetric(\"PceTracking\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(0.9)\n        .predefinedMetric(PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar code code\n\n\nhandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_PYTHON_3_7(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: Code,\n\n\tReservedConcurrentExecutions: jsii.Number(2),\n})\n\nfnVer := handler.currentVersion\n\ntarget := appscaling.NewScalableTarget(this, jsii.String(\"ScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_LAMBDA,\n\tMaxCapacity: jsii.Number(100),\n\tMinCapacity: jsii.Number(10),\n\tResourceId: fmt.Sprintf(\"function:%v:%v\", handler.FunctionName, fnVer.Version),\n\tScalableDimension: jsii.String(\"lambda:function:ProvisionedConcurrency\"),\n})\n\ntarget.ScaleToTrackMetric(jsii.String(\"PceTracking\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(0.9),\n\tPredefinedMetric: appscaling.PredefinedMetric_LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.PredefinedMetric"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#LAMBDA","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#PYTHON_3_7","@aws-cdk/aws-lambda.Version","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"15":1,"16":1,"17":1,"75":39,"104":2,"130":1,"153":1,"169":1,"193":3,"194":12,"196":1,"197":2,"211":1,"221":2,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"8f91bfd7afcf311ccfca2c2a2cf851e0de18617156466bbfbb8f849c8772752d"},"1e68ad1e48abbd3683228093381911886e5840b3082c97ed495621634bedd8b0":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# code: lambda.Code\n\n\nhandler = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.PYTHON_3_7,\n    handler=\"index.handler\",\n    code=code,\n\n    reserved_concurrent_executions=2\n)\n\nfn_ver = handler.current_version\n\ntarget = appscaling.ScalableTarget(self, \"ScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.LAMBDA,\n    max_capacity=100,\n    min_capacity=10,\n    resource_id=f\"function:{handler.functionName}:{fnVer.version}\",\n    scalable_dimension=\"lambda:function:ProvisionedConcurrency\"\n)\n\ntarget.scale_to_track_metric(\"PceTracking\",\n    target_value=0.9,\n    predefined_metric=appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nCode code;\n\n\nvar handler = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.PYTHON_3_7,\n    Handler = \"index.handler\",\n    Code = code,\n\n    ReservedConcurrentExecutions = 2\n});\n\nvar fnVer = handler.CurrentVersion;\n\nvar target = new ScalableTarget(this, \"ScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.LAMBDA,\n    MaxCapacity = 100,\n    MinCapacity = 10,\n    ResourceId = $\"function:{handler.functionName}:{fnVer.version}\",\n    ScalableDimension = \"lambda:function:ProvisionedConcurrency\"\n});\n\ntarget.ScaleToTrackMetric(\"PceTracking\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 0.9,\n    PredefinedMetric = PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nCode code;\n\n\nFunction handler = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.PYTHON_3_7)\n        .handler(\"index.handler\")\n        .code(code)\n\n        .reservedConcurrentExecutions(2)\n        .build();\n\nVersion fnVer = handler.getCurrentVersion();\n\nScalableTarget target = ScalableTarget.Builder.create(this, \"ScalableTarget\")\n        .serviceNamespace(ServiceNamespace.LAMBDA)\n        .maxCapacity(100)\n        .minCapacity(10)\n        .resourceId(String.format(\"function:%s:%s\", handler.getFunctionName(), fnVer.getVersion()))\n        .scalableDimension(\"lambda:function:ProvisionedConcurrency\")\n        .build();\n\ntarget.scaleToTrackMetric(\"PceTracking\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(0.9)\n        .predefinedMetric(PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar code code\n\n\nhandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_PYTHON_3_7(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: Code,\n\n\tReservedConcurrentExecutions: jsii.Number(2),\n})\n\nfnVer := handler.currentVersion\n\ntarget := appscaling.NewScalableTarget(this, jsii.String(\"ScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_LAMBDA,\n\tMaxCapacity: jsii.Number(100),\n\tMinCapacity: jsii.Number(10),\n\tResourceId: fmt.Sprintf(\"function:%v:%v\", handler.FunctionName, fnVer.Version),\n\tScalableDimension: jsii.String(\"lambda:function:ProvisionedConcurrency\"),\n})\n\ntarget.ScaleToTrackMetric(jsii.String(\"PceTracking\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(0.9),\n\tPredefinedMetric: appscaling.PredefinedMetric_LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.ScalableTarget"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#LAMBDA","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#PYTHON_3_7","@aws-cdk/aws-lambda.Version","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"15":1,"16":1,"17":1,"75":39,"104":2,"130":1,"153":1,"169":1,"193":3,"194":12,"196":1,"197":2,"211":1,"221":2,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"8f91bfd7afcf311ccfca2c2a2cf851e0de18617156466bbfbb8f849c8772752d"},"33a73647a21053549f059add13ce3bcdbeacaab0d895618f3f26e6f37f62b10c":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# code: lambda.Code\n\n\nhandler = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.PYTHON_3_7,\n    handler=\"index.handler\",\n    code=code,\n\n    reserved_concurrent_executions=2\n)\n\nfn_ver = handler.current_version\n\ntarget = appscaling.ScalableTarget(self, \"ScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.LAMBDA,\n    max_capacity=100,\n    min_capacity=10,\n    resource_id=f\"function:{handler.functionName}:{fnVer.version}\",\n    scalable_dimension=\"lambda:function:ProvisionedConcurrency\"\n)\n\ntarget.scale_to_track_metric(\"PceTracking\",\n    target_value=0.9,\n    predefined_metric=appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nCode code;\n\n\nvar handler = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.PYTHON_3_7,\n    Handler = \"index.handler\",\n    Code = code,\n\n    ReservedConcurrentExecutions = 2\n});\n\nvar fnVer = handler.CurrentVersion;\n\nvar target = new ScalableTarget(this, \"ScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.LAMBDA,\n    MaxCapacity = 100,\n    MinCapacity = 10,\n    ResourceId = $\"function:{handler.functionName}:{fnVer.version}\",\n    ScalableDimension = \"lambda:function:ProvisionedConcurrency\"\n});\n\ntarget.ScaleToTrackMetric(\"PceTracking\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 0.9,\n    PredefinedMetric = PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nCode code;\n\n\nFunction handler = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.PYTHON_3_7)\n        .handler(\"index.handler\")\n        .code(code)\n\n        .reservedConcurrentExecutions(2)\n        .build();\n\nVersion fnVer = handler.getCurrentVersion();\n\nScalableTarget target = ScalableTarget.Builder.create(this, \"ScalableTarget\")\n        .serviceNamespace(ServiceNamespace.LAMBDA)\n        .maxCapacity(100)\n        .minCapacity(10)\n        .resourceId(String.format(\"function:%s:%s\", handler.getFunctionName(), fnVer.getVersion()))\n        .scalableDimension(\"lambda:function:ProvisionedConcurrency\")\n        .build();\n\ntarget.scaleToTrackMetric(\"PceTracking\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(0.9)\n        .predefinedMetric(PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar code code\n\n\nhandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_PYTHON_3_7(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: Code,\n\n\tReservedConcurrentExecutions: jsii.Number(2),\n})\n\nfnVer := handler.currentVersion\n\ntarget := appscaling.NewScalableTarget(this, jsii.String(\"ScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_LAMBDA,\n\tMaxCapacity: jsii.Number(100),\n\tMinCapacity: jsii.Number(10),\n\tResourceId: fmt.Sprintf(\"function:%v:%v\", handler.FunctionName, fnVer.Version),\n\tScalableDimension: jsii.String(\"lambda:function:ProvisionedConcurrency\"),\n})\n\ntarget.ScaleToTrackMetric(jsii.String(\"PceTracking\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(0.9),\n\tPredefinedMetric: appscaling.PredefinedMetric_LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.ScalableTargetProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#LAMBDA","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#PYTHON_3_7","@aws-cdk/aws-lambda.Version","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"15":1,"16":1,"17":1,"75":39,"104":2,"130":1,"153":1,"169":1,"193":3,"194":12,"196":1,"197":2,"211":1,"221":2,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"8f91bfd7afcf311ccfca2c2a2cf851e0de18617156466bbfbb8f849c8772752d"},"3a99de384b9e944dfb0f6d9792dfb4a45900d524d03c6750373208c8aa412da3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\n\nscaling_interval = appscaling.ScalingInterval(\n    change=123,\n\n    # the properties below are optional\n    lower=123,\n    upper=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\n\nvar scalingInterval = new ScalingInterval {\n    Change = 123,\n\n    // the properties below are optional\n    Lower = 123,\n    Upper = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\n\nScalingInterval scalingInterval = ScalingInterval.builder()\n        .change(123)\n\n        // the properties below are optional\n        .lower(123)\n        .upper(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\n\nscalingInterval := &ScalingInterval{\n\tChange: jsii.Number(123),\n\n\t// the properties below are optional\n\tLower: jsii.Number(123),\n\tUpper: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nconst scalingInterval: appscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.ScalingInterval"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.ScalingInterval"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scalingInterval: appscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":1,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"2276049e4437bed6201c186b412ec60905ba0466770d6fcb6cf5ede872df7d40"},"6a205661010f55f4c26427c3da44634229b7e880158588c2f7b83d79270f53f5":{"translations":{"python":{"source":"# cluster: ecs.Cluster\n\nload_balanced_fargate_service = ecs_patterns.ApplicationLoadBalancedFargateService(self, \"Service\",\n    cluster=cluster,\n    memory_limit_mi_b=1024,\n    desired_count=1,\n    cpu=512,\n    task_image_options=ecsPatterns.ApplicationLoadBalancedTaskImageOptions(\n        image=ecs.ContainerImage.from_registry(\"amazon/amazon-ecs-sample\")\n    )\n)\n\nscalable_target = load_balanced_fargate_service.service.auto_scale_task_count(\n    min_capacity=5,\n    max_capacity=20\n)\n\nscalable_target.scale_on_schedule(\"DaytimeScaleDown\",\n    schedule=appscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=1\n)\n\nscalable_target.scale_on_schedule(\"EveningRushScaleUp\",\n    schedule=appscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=10\n)","version":"2"},"csharp":{"source":"Cluster cluster;\n\nvar loadBalancedFargateService = new ApplicationLoadBalancedFargateService(this, \"Service\", new ApplicationLoadBalancedFargateServiceProps {\n    Cluster = cluster,\n    MemoryLimitMiB = 1024,\n    DesiredCount = 1,\n    Cpu = 512,\n    TaskImageOptions = new ApplicationLoadBalancedTaskImageOptions {\n        Image = ContainerImage.FromRegistry(\"amazon/amazon-ecs-sample\")\n    }\n});\n\nvar scalableTarget = loadBalancedFargateService.Service.AutoScaleTaskCount(new EnableScalingProps {\n    MinCapacity = 5,\n    MaxCapacity = 20\n});\n\nscalableTarget.ScaleOnSchedule(\"DaytimeScaleDown\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 1\n});\n\nscalableTarget.ScaleOnSchedule(\"EveningRushScaleUp\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MinCapacity = 10\n});","version":"1"},"java":{"source":"Cluster cluster;\n\nApplicationLoadBalancedFargateService loadBalancedFargateService = ApplicationLoadBalancedFargateService.Builder.create(this, \"Service\")\n        .cluster(cluster)\n        .memoryLimitMiB(1024)\n        .desiredCount(1)\n        .cpu(512)\n        .taskImageOptions(ApplicationLoadBalancedTaskImageOptions.builder()\n                .image(ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"))\n                .build())\n        .build();\n\nScalableTaskCount scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount(EnableScalingProps.builder()\n        .minCapacity(5)\n        .maxCapacity(20)\n        .build());\n\nscalableTarget.scaleOnSchedule(\"DaytimeScaleDown\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(1)\n        .build());\n\nscalableTarget.scaleOnSchedule(\"EveningRushScaleUp\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .minCapacity(10)\n        .build());","version":"1"},"go":{"source":"var cluster cluster\n\nloadBalancedFargateService := ecsPatterns.NewApplicationLoadBalancedFargateService(this, jsii.String(\"Service\"), &ApplicationLoadBalancedFargateServiceProps{\n\tCluster: Cluster,\n\tMemoryLimitMiB: jsii.Number(1024),\n\tDesiredCount: jsii.Number(1),\n\tCpu: jsii.Number(512),\n\tTaskImageOptions: &ApplicationLoadBalancedTaskImageOptions{\n\t\tImage: ecs.ContainerImage_FromRegistry(jsii.String(\"amazon/amazon-ecs-sample\")),\n\t},\n})\n\nscalableTarget := loadBalancedFargateService.Service.AutoScaleTaskCount(&EnableScalingProps{\n\tMinCapacity: jsii.Number(5),\n\tMaxCapacity: jsii.Number(20),\n})\n\nscalableTarget.ScaleOnSchedule(jsii.String(\"DaytimeScaleDown\"), &ScalingSchedule{\n\tSchedule: appscaling.Schedule_Cron(&CronOptions{\n\t\tHour: jsii.String(\"8\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(1),\n})\n\nscalableTarget.ScaleOnSchedule(jsii.String(\"EveningRushScaleUp\"), &ScalingSchedule{\n\tSchedule: appscaling.Schedule_*Cron(&CronOptions{\n\t\tHour: jsii.String(\"20\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(10),\n})","version":"1"},"$":{"source":"declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 5,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnSchedule('DaytimeScaleDown', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 1,\n});\n\nscalableTarget.scaleOnSchedule('EveningRushScaleUp', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0'}),\n  minCapacity: 10,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.ScalingSchedule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CronOptions","@aws-cdk/aws-applicationautoscaling.EnableScalingProps","@aws-cdk/aws-applicationautoscaling.ScalingSchedule","@aws-cdk/aws-applicationautoscaling.Schedule","@aws-cdk/aws-applicationautoscaling.Schedule#cron","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateService#service","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedFargateServiceProps","@aws-cdk/aws-ecs-patterns.ApplicationLoadBalancedTaskImageOptions","@aws-cdk/aws-ecs.BaseService#autoScaleTaskCount","@aws-cdk/aws-ecs.ContainerImage","@aws-cdk/aws-ecs.ContainerImage#fromRegistry","@aws-cdk/aws-ecs.ICluster","@aws-cdk/aws-ecs.ScalableTaskCount","@aws-cdk/aws-ecs.ScalableTaskCount#scaleOnSchedule","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cluster: ecs.Cluster;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as ecsPatterns from '@aws-cdk/aws-ecs-patterns';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cxapi from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    \n    // Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nconst scalableTarget = loadBalancedFargateService.service.autoScaleTaskCount({\n  minCapacity: 5,\n  maxCapacity: 20,\n});\n\nscalableTarget.scaleOnSchedule('DaytimeScaleDown', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 1,\n});\n\nscalableTarget.scaleOnSchedule('EveningRushScaleUp', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0'}),\n  minCapacity: 10,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":7,"10":8,"75":39,"104":1,"130":1,"153":1,"169":1,"193":7,"194":11,"196":6,"197":1,"225":3,"226":2,"242":3,"243":3,"281":15,"282":1,"290":1},"fqnsFingerprint":"06039635e2514d8bd403863320be1a032381f1804045a3c9d3779cc0bcb93dcc"},"9d81245fdf787486814aa872a4f511d161c948d19981fed882158b67823f79e2":{"translations":{"python":{"source":"# resource: SomeScalableResource\n\n\ncapacity = resource.auto_scale_capacity(\n    min_capacity=1,\n    max_capacity=50\n)\n\ncapacity.scale_on_schedule(\"PrescaleInTheMorning\",\n    schedule=appscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)\n\ncapacity.scale_on_schedule(\"AllowDownscalingAtNight\",\n    schedule=appscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=1\n)","version":"2"},"csharp":{"source":"SomeScalableResource resource;\n\n\nvar capacity = resource.AutoScaleCapacity(new Caps {\n    MinCapacity = 1,\n    MaxCapacity = 50\n});\n\ncapacity.ScaleOnSchedule(\"PrescaleInTheMorning\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});\n\ncapacity.ScaleOnSchedule(\"AllowDownscalingAtNight\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MinCapacity = 1\n});","version":"1"},"java":{"source":"SomeScalableResource resource;\n\n\nScalableAttribute capacity = resource.autoScaleCapacity(new Caps()\n        .minCapacity(1)\n        .maxCapacity(50)\n        );\n\ncapacity.scaleOnSchedule(\"PrescaleInTheMorning\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());\n\ncapacity.scaleOnSchedule(\"AllowDownscalingAtNight\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .minCapacity(1)\n        .build());","version":"1"},"go":{"source":"var resource someScalableResource\n\n\ncapacity := resource.autoScaleCapacity(&caps{\n\tminCapacity: jsii.Number(1),\n\tmaxCapacity: jsii.Number(50),\n})\n\ncapacity.scaleOnSchedule(jsii.String(\"PrescaleInTheMorning\"), &scalingSchedule{\n\tSchedule: appscaling.Schedule_Cron(&CronOptions{\n\t\tHour: jsii.String(\"8\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(20),\n})\n\ncapacity.scaleOnSchedule(jsii.String(\"AllowDownscalingAtNight\"), &scalingSchedule{\n\tSchedule: appscaling.Schedule_*Cron(&CronOptions{\n\t\tHour: jsii.String(\"20\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(1),\n})","version":"1"},"$":{"source":"declare const resource: SomeScalableResource;\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.Schedule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CronOptions","@aws-cdk/aws-applicationautoscaling.ScalingSchedule","@aws-cdk/aws-applicationautoscaling.Schedule","@aws-cdk/aws-applicationautoscaling.Schedule#cron"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const resource: SomeScalableResource;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"75":25,"130":1,"169":1,"193":5,"194":7,"196":5,"225":2,"226":2,"242":2,"243":2,"281":10,"290":1},"fqnsFingerprint":"1e3736a063d9417070f26aab36f5b6de16096da0bef8bdf1f46e7809a466b2cc"},"37664132488485d8ff7f595482b1480919df6bc1208f372b23aea7b769f4e94e":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# code: lambda.Code\n\n\nhandler = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.PYTHON_3_7,\n    handler=\"index.handler\",\n    code=code,\n\n    reserved_concurrent_executions=2\n)\n\nfn_ver = handler.current_version\n\ntarget = appscaling.ScalableTarget(self, \"ScalableTarget\",\n    service_namespace=appscaling.ServiceNamespace.LAMBDA,\n    max_capacity=100,\n    min_capacity=10,\n    resource_id=f\"function:{handler.functionName}:{fnVer.version}\",\n    scalable_dimension=\"lambda:function:ProvisionedConcurrency\"\n)\n\ntarget.scale_to_track_metric(\"PceTracking\",\n    target_value=0.9,\n    predefined_metric=appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nCode code;\n\n\nvar handler = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.PYTHON_3_7,\n    Handler = \"index.handler\",\n    Code = code,\n\n    ReservedConcurrentExecutions = 2\n});\n\nvar fnVer = handler.CurrentVersion;\n\nvar target = new ScalableTarget(this, \"ScalableTarget\", new ScalableTargetProps {\n    ServiceNamespace = ServiceNamespace.LAMBDA,\n    MaxCapacity = 100,\n    MinCapacity = 10,\n    ResourceId = $\"function:{handler.functionName}:{fnVer.version}\",\n    ScalableDimension = \"lambda:function:ProvisionedConcurrency\"\n});\n\ntarget.ScaleToTrackMetric(\"PceTracking\", new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 0.9,\n    PredefinedMetric = PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nCode code;\n\n\nFunction handler = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.PYTHON_3_7)\n        .handler(\"index.handler\")\n        .code(code)\n\n        .reservedConcurrentExecutions(2)\n        .build();\n\nVersion fnVer = handler.getCurrentVersion();\n\nScalableTarget target = ScalableTarget.Builder.create(this, \"ScalableTarget\")\n        .serviceNamespace(ServiceNamespace.LAMBDA)\n        .maxCapacity(100)\n        .minCapacity(10)\n        .resourceId(String.format(\"function:%s:%s\", handler.getFunctionName(), fnVer.getVersion()))\n        .scalableDimension(\"lambda:function:ProvisionedConcurrency\")\n        .build();\n\ntarget.scaleToTrackMetric(\"PceTracking\", BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(0.9)\n        .predefinedMetric(PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar code code\n\n\nhandler := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_PYTHON_3_7(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: Code,\n\n\tReservedConcurrentExecutions: jsii.Number(2),\n})\n\nfnVer := handler.currentVersion\n\ntarget := appscaling.NewScalableTarget(this, jsii.String(\"ScalableTarget\"), &ScalableTargetProps{\n\tServiceNamespace: appscaling.ServiceNamespace_LAMBDA,\n\tMaxCapacity: jsii.Number(100),\n\tMinCapacity: jsii.Number(10),\n\tResourceId: fmt.Sprintf(\"function:%v:%v\", handler.FunctionName, fnVer.Version),\n\tScalableDimension: jsii.String(\"lambda:function:ProvisionedConcurrency\"),\n})\n\ntarget.ScaleToTrackMetric(jsii.String(\"PceTracking\"), &BasicTargetTrackingScalingPolicyProps{\n\tTargetValue: jsii.Number(0.9),\n\tPredefinedMetric: appscaling.PredefinedMetric_LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.ServiceNamespace"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.ScalableTarget","@aws-cdk/aws-applicationautoscaling.ScalableTarget#scaleToTrackMetric","@aws-cdk/aws-applicationautoscaling.ScalableTargetProps","@aws-cdk/aws-applicationautoscaling.ServiceNamespace","@aws-cdk/aws-applicationautoscaling.ServiceNamespace#LAMBDA","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#PYTHON_3_7","@aws-cdk/aws-lambda.Version","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const code: lambda.Code;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\n\ninterface UtilizationScalingProps {\n  readonly targetUtilizationPercent: number;\n}\n\nclass ScalableAttribute {\n  public scaleOnSchedule(id: string, action: appscaling.ScalingSchedule) {\n    Array.isArray(id);\n    Array.isArray(action);\n  }\n  public scaleOnUtilization(props: UtilizationScalingProps) {\n    Array.isArray(props);\n  }\n  public scaleOnMetric(id: string, props: appscaling.BasicStepScalingPolicyProps) {\n    Array.isArray(id);\n    Array.isArray(props);\n  }\n}\n\ninterface Caps {\n  readonly minCapacity: number;\n  readonly maxCapacity: number;\n}\n\nclass SomeScalableResource {\n  public autoScaleCapacity(caps: Caps) {\n    return new ScalableAttribute();\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst handler = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_7,\n  handler: 'index.handler',\n  code,\n\n  reservedConcurrentExecutions: 2,\n});\n\nconst fnVer = handler.currentVersion;\n\nconst target = new appscaling.ScalableTarget(this, 'ScalableTarget', {\n  serviceNamespace: appscaling.ServiceNamespace.LAMBDA,\n  maxCapacity: 100,\n  minCapacity: 10,\n  resourceId: `function:${handler.functionName}:${fnVer.version}`,\n  scalableDimension: 'lambda:function:ProvisionedConcurrency',\n})\n\ntarget.scaleToTrackMetric('PceTracking', {\n  targetValue: 0.9,\n  predefinedMetric: appscaling.PredefinedMetric.LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n","syntaxKindCounter":{"8":4,"10":6,"15":1,"16":1,"17":1,"75":39,"104":2,"130":1,"153":1,"169":1,"193":3,"194":12,"196":1,"197":2,"211":1,"221":2,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"8f91bfd7afcf311ccfca2c2a2cf851e0de18617156466bbfbb8f849c8772752d"},"f844047970138bcb0d5f8a2fcf02cf2eb9b48d1543da38025fef10727803ada6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.core as cdk\n\n# scalable_target: appscaling.ScalableTarget\n\nstep_scaling_action = appscaling.StepScalingAction(self, \"MyStepScalingAction\",\n    scaling_target=scalable_target,\n\n    # the properties below are optional\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    metric_aggregation_type=appscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123,\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK;\n\nScalableTarget scalableTarget;\nvar stepScalingAction = new StepScalingAction(this, \"MyStepScalingAction\", new StepScalingActionProps {\n    ScalingTarget = scalableTarget,\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123,\n    PolicyName = \"policyName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nScalableTarget scalableTarget;\n\nStepScalingAction stepScalingAction = StepScalingAction.Builder.create(this, \"MyStepScalingAction\")\n        .scalingTarget(scalableTarget)\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar scalableTarget scalableTarget\n\nstepScalingAction := appscaling.NewStepScalingAction(this, jsii.String(\"MyStepScalingAction\"), &StepScalingActionProps{\n\tScalingTarget: scalableTarget,\n\n\t// the properties below are optional\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n\tCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tMetricAggregationType: appscaling.MetricAggregationType_AVERAGE,\n\tMinAdjustmentMagnitude: jsii.Number(123),\n\tPolicyName: jsii.String(\"policyName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingAction = new appscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n  policyName: 'policyName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.StepScalingAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.IScalableTarget","@aws-cdk/aws-applicationautoscaling.MetricAggregationType","@aws-cdk/aws-applicationautoscaling.MetricAggregationType#AVERAGE","@aws-cdk/aws-applicationautoscaling.StepScalingAction","@aws-cdk/aws-applicationautoscaling.StepScalingActionProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const scalableTarget: appscaling.ScalableTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingAction = new appscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n  policyName: 'policyName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":4,"75":24,"104":1,"130":1,"153":1,"169":1,"193":1,"194":7,"196":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":6,"290":1},"fqnsFingerprint":"e05f6351189c7b3a24fce3550293268fab03e309aa6895248e633852e185fa4e"},"2a83de3941946faa137330e46952e722bdcf3de87b2dbbcbe303d3c184d03599":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.core as cdk\n\n# scalable_target: appscaling.ScalableTarget\n\nstep_scaling_action_props = appscaling.StepScalingActionProps(\n    scaling_target=scalable_target,\n\n    # the properties below are optional\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    metric_aggregation_type=appscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123,\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK;\n\nScalableTarget scalableTarget;\nvar stepScalingActionProps = new StepScalingActionProps {\n    ScalingTarget = scalableTarget,\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123,\n    PolicyName = \"policyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nScalableTarget scalableTarget;\n\nStepScalingActionProps stepScalingActionProps = StepScalingActionProps.builder()\n        .scalingTarget(scalableTarget)\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar scalableTarget scalableTarget\n\nstepScalingActionProps := &StepScalingActionProps{\n\tScalingTarget: scalableTarget,\n\n\t// the properties below are optional\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n\tCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tMetricAggregationType: appscaling.MetricAggregationType_AVERAGE,\n\tMinAdjustmentMagnitude: jsii.Number(123),\n\tPolicyName: jsii.String(\"policyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingActionProps: appscaling.StepScalingActionProps = {\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n  policyName: 'policyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.StepScalingActionProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.IScalableTarget","@aws-cdk/aws-applicationautoscaling.MetricAggregationType","@aws-cdk/aws-applicationautoscaling.MetricAggregationType#AVERAGE","@aws-cdk/aws-applicationautoscaling.StepScalingActionProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const scalableTarget: appscaling.ScalableTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingActionProps: appscaling.StepScalingActionProps = {\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n  policyName: 'policyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":3,"75":24,"130":1,"153":2,"169":2,"193":1,"194":6,"196":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":6,"290":1},"fqnsFingerprint":"edfa154250aa95f0e4725db1c3148e5f3d26741d632b2c4654f1cbf535f09e64"},"eef2571fb3186dbc827586247f7df50a72fbdc721017fb191d1ce7cac67ef144":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# metric: cloudwatch.Metric\n# scalable_target: appscaling.ScalableTarget\n\nstep_scaling_policy = appscaling.StepScalingPolicy(self, \"MyStepScalingPolicy\",\n    metric=metric,\n    scaling_steps=[appscaling.ScalingInterval(\n        change=123,\n\n        # the properties below are optional\n        lower=123,\n        upper=123\n    )],\n    scaling_target=scalable_target,\n\n    # the properties below are optional\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    datapoints_to_alarm=123,\n    evaluation_periods=123,\n    metric_aggregation_type=appscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nMetric metric;\nScalableTarget scalableTarget;\nvar stepScalingPolicy = new StepScalingPolicy(this, \"MyStepScalingPolicy\", new StepScalingPolicyProps {\n    Metric = metric,\n    ScalingSteps = new [] { new ScalingInterval {\n        Change = 123,\n\n        // the properties below are optional\n        Lower = 123,\n        Upper = 123\n    } },\n    ScalingTarget = scalableTarget,\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    DatapointsToAlarm = 123,\n    EvaluationPeriods = 123,\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nMetric metric;\nScalableTarget scalableTarget;\n\nStepScalingPolicy stepScalingPolicy = StepScalingPolicy.Builder.create(this, \"MyStepScalingPolicy\")\n        .metric(metric)\n        .scalingSteps(List.of(ScalingInterval.builder()\n                .change(123)\n\n                // the properties below are optional\n                .lower(123)\n                .upper(123)\n                .build()))\n        .scalingTarget(scalableTarget)\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .datapointsToAlarm(123)\n        .evaluationPeriods(123)\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar metric metric\nvar scalableTarget scalableTarget\n\nstepScalingPolicy := appscaling.NewStepScalingPolicy(this, jsii.String(\"MyStepScalingPolicy\"), &StepScalingPolicyProps{\n\tMetric: metric,\n\tScalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tChange: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tLower: jsii.Number(123),\n\t\t\tUpper: jsii.Number(123),\n\t\t},\n\t},\n\tScalingTarget: scalableTarget,\n\n\t// the properties below are optional\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n\tCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tDatapointsToAlarm: jsii.Number(123),\n\tEvaluationPeriods: jsii.Number(123),\n\tMetricAggregationType: appscaling.MetricAggregationType_AVERAGE,\n\tMinAdjustmentMagnitude: jsii.Number(123),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingPolicy = new appscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  datapointsToAlarm: 123,\n  evaluationPeriods: 123,\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.StepScalingPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.IScalableTarget","@aws-cdk/aws-applicationautoscaling.MetricAggregationType","@aws-cdk/aws-applicationautoscaling.MetricAggregationType#AVERAGE","@aws-cdk/aws-applicationautoscaling.StepScalingPolicy","@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingPolicy = new appscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  datapointsToAlarm: 123,\n  evaluationPeriods: 123,\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":7,"10":4,"75":35,"104":1,"130":2,"153":2,"169":2,"192":1,"193":2,"194":7,"196":1,"197":1,"225":3,"242":3,"243":3,"254":3,"255":3,"256":3,"281":12,"290":1},"fqnsFingerprint":"01ca87e226193f51757af1dfe3ddf69f996005889b99e01f33121106e5341717"},"e373f147756133d97fbbb52d518a3e8bb7fb9875dd57cdd2de0e5cce8e60d4b4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# metric: cloudwatch.Metric\n# scalable_target: appscaling.ScalableTarget\n\nstep_scaling_policy_props = appscaling.StepScalingPolicyProps(\n    metric=metric,\n    scaling_steps=[appscaling.ScalingInterval(\n        change=123,\n\n        # the properties below are optional\n        lower=123,\n        upper=123\n    )],\n    scaling_target=scalable_target,\n\n    # the properties below are optional\n    adjustment_type=appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    datapoints_to_alarm=123,\n    evaluation_periods=123,\n    metric_aggregation_type=appscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nMetric metric;\nScalableTarget scalableTarget;\nvar stepScalingPolicyProps = new StepScalingPolicyProps {\n    Metric = metric,\n    ScalingSteps = new [] { new ScalingInterval {\n        Change = 123,\n\n        // the properties below are optional\n        Lower = 123,\n        Upper = 123\n    } },\n    ScalingTarget = scalableTarget,\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    DatapointsToAlarm = 123,\n    EvaluationPeriods = 123,\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nMetric metric;\nScalableTarget scalableTarget;\n\nStepScalingPolicyProps stepScalingPolicyProps = StepScalingPolicyProps.builder()\n        .metric(metric)\n        .scalingSteps(List.of(ScalingInterval.builder()\n                .change(123)\n\n                // the properties below are optional\n                .lower(123)\n                .upper(123)\n                .build()))\n        .scalingTarget(scalableTarget)\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .datapointsToAlarm(123)\n        .evaluationPeriods(123)\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar metric metric\nvar scalableTarget scalableTarget\n\nstepScalingPolicyProps := &StepScalingPolicyProps{\n\tMetric: metric,\n\tScalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tChange: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tLower: jsii.Number(123),\n\t\t\tUpper: jsii.Number(123),\n\t\t},\n\t},\n\tScalingTarget: scalableTarget,\n\n\t// the properties below are optional\n\tAdjustmentType: appscaling.AdjustmentType_CHANGE_IN_CAPACITY,\n\tCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tDatapointsToAlarm: jsii.Number(123),\n\tEvaluationPeriods: jsii.Number(123),\n\tMetricAggregationType: appscaling.MetricAggregationType_AVERAGE,\n\tMinAdjustmentMagnitude: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst stepScalingPolicyProps: appscaling.StepScalingPolicyProps = {\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  datapointsToAlarm: 123,\n  evaluationPeriods: 123,\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.AdjustmentType","@aws-cdk/aws-applicationautoscaling.AdjustmentType#CHANGE_IN_CAPACITY","@aws-cdk/aws-applicationautoscaling.IScalableTarget","@aws-cdk/aws-applicationautoscaling.MetricAggregationType","@aws-cdk/aws-applicationautoscaling.MetricAggregationType#AVERAGE","@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingPolicyProps: appscaling.StepScalingPolicyProps = {\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n  scalingTarget: scalableTarget,\n\n  // the properties below are optional\n  adjustmentType: appscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  datapointsToAlarm: 123,\n  evaluationPeriods: 123,\n  metricAggregationType: appscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":7,"10":3,"75":35,"130":2,"153":3,"169":3,"192":1,"193":2,"194":6,"196":1,"225":3,"242":3,"243":3,"254":3,"255":3,"256":3,"281":12,"290":1},"fqnsFingerprint":"bc970a1489aa2f43aec672d7c53ca268881ed12419808c0cb48ffb362515cb19"},"dbabc54962b020975534cbc0930b081a55a4406a16f41208002caf159f8679d3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# metric: cloudwatch.Metric\n# scalable_target: appscaling.ScalableTarget\n\ntarget_tracking_scaling_policy = appscaling.TargetTrackingScalingPolicy(self, \"MyTargetTrackingScalingPolicy\",\n    scaling_target=scalable_target,\n    target_value=123,\n\n    # the properties below are optional\n    custom_metric=metric,\n    disable_scale_in=False,\n    policy_name=\"policyName\",\n    predefined_metric=appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n    resource_label=\"resourceLabel\",\n    scale_in_cooldown=cdk.Duration.minutes(30),\n    scale_out_cooldown=cdk.Duration.minutes(30)\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nMetric metric;\nScalableTarget scalableTarget;\nvar targetTrackingScalingPolicy = new TargetTrackingScalingPolicy(this, \"MyTargetTrackingScalingPolicy\", new TargetTrackingScalingPolicyProps {\n    ScalingTarget = scalableTarget,\n    TargetValue = 123,\n\n    // the properties below are optional\n    CustomMetric = metric,\n    DisableScaleIn = false,\n    PolicyName = \"policyName\",\n    PredefinedMetric = PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n    ResourceLabel = \"resourceLabel\",\n    ScaleInCooldown = Duration.Minutes(30),\n    ScaleOutCooldown = Duration.Minutes(30)\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nMetric metric;\nScalableTarget scalableTarget;\n\nTargetTrackingScalingPolicy targetTrackingScalingPolicy = TargetTrackingScalingPolicy.Builder.create(this, \"MyTargetTrackingScalingPolicy\")\n        .scalingTarget(scalableTarget)\n        .targetValue(123)\n\n        // the properties below are optional\n        .customMetric(metric)\n        .disableScaleIn(false)\n        .policyName(\"policyName\")\n        .predefinedMetric(PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION)\n        .resourceLabel(\"resourceLabel\")\n        .scaleInCooldown(Duration.minutes(30))\n        .scaleOutCooldown(Duration.minutes(30))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar metric metric\nvar scalableTarget scalableTarget\n\ntargetTrackingScalingPolicy := appscaling.NewTargetTrackingScalingPolicy(this, jsii.String(\"MyTargetTrackingScalingPolicy\"), &TargetTrackingScalingPolicyProps{\n\tScalingTarget: scalableTarget,\n\tTargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tCustomMetric: metric,\n\tDisableScaleIn: jsii.Boolean(false),\n\tPolicyName: jsii.String(\"policyName\"),\n\tPredefinedMetric: appscaling.PredefinedMetric_APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n\tResourceLabel: jsii.String(\"resourceLabel\"),\n\tScaleInCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tScaleOutCooldown: cdk.Duration_*Minutes(jsii.Number(30)),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst targetTrackingScalingPolicy = new appscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  scalingTarget: scalableTarget,\n  targetValue: 123,\n\n  // the properties below are optional\n  customMetric: metric,\n  disableScaleIn: false,\n  policyName: 'policyName',\n  predefinedMetric: appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.IScalableTarget","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#APPSTREAM_AVERAGE_CAPACITY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy","@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingScalingPolicy = new appscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  scalingTarget: scalableTarget,\n  targetValue: 123,\n\n  // the properties below are optional\n  customMetric: metric,\n  disableScaleIn: false,\n  policyName: 'policyName',\n  predefinedMetric: appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":6,"75":32,"91":1,"104":1,"130":2,"153":2,"169":2,"193":1,"194":7,"196":2,"197":1,"225":3,"242":3,"243":3,"254":3,"255":3,"256":3,"281":9,"290":1},"fqnsFingerprint":"a4743db2f5ac22cb45d3ad32c55f46df69de5a55c7d552f090ccece4382c2b4a"},"4cc81b4922bbbbbc0b149772cacf7f1e810bdaae751e8df2d8ef355924fde3ca":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# metric: cloudwatch.Metric\n# scalable_target: appscaling.ScalableTarget\n\ntarget_tracking_scaling_policy_props = appscaling.TargetTrackingScalingPolicyProps(\n    scaling_target=scalable_target,\n    target_value=123,\n\n    # the properties below are optional\n    custom_metric=metric,\n    disable_scale_in=False,\n    policy_name=\"policyName\",\n    predefined_metric=appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n    resource_label=\"resourceLabel\",\n    scale_in_cooldown=cdk.Duration.minutes(30),\n    scale_out_cooldown=cdk.Duration.minutes(30)\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nMetric metric;\nScalableTarget scalableTarget;\nvar targetTrackingScalingPolicyProps = new TargetTrackingScalingPolicyProps {\n    ScalingTarget = scalableTarget,\n    TargetValue = 123,\n\n    // the properties below are optional\n    CustomMetric = metric,\n    DisableScaleIn = false,\n    PolicyName = \"policyName\",\n    PredefinedMetric = PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n    ResourceLabel = \"resourceLabel\",\n    ScaleInCooldown = Duration.Minutes(30),\n    ScaleOutCooldown = Duration.Minutes(30)\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nMetric metric;\nScalableTarget scalableTarget;\n\nTargetTrackingScalingPolicyProps targetTrackingScalingPolicyProps = TargetTrackingScalingPolicyProps.builder()\n        .scalingTarget(scalableTarget)\n        .targetValue(123)\n\n        // the properties below are optional\n        .customMetric(metric)\n        .disableScaleIn(false)\n        .policyName(\"policyName\")\n        .predefinedMetric(PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION)\n        .resourceLabel(\"resourceLabel\")\n        .scaleInCooldown(Duration.minutes(30))\n        .scaleOutCooldown(Duration.minutes(30))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar metric metric\nvar scalableTarget scalableTarget\n\ntargetTrackingScalingPolicyProps := &TargetTrackingScalingPolicyProps{\n\tScalingTarget: scalableTarget,\n\tTargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tCustomMetric: metric,\n\tDisableScaleIn: jsii.Boolean(false),\n\tPolicyName: jsii.String(\"policyName\"),\n\tPredefinedMetric: appscaling.PredefinedMetric_APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n\tResourceLabel: jsii.String(\"resourceLabel\"),\n\tScaleInCooldown: cdk.Duration_Minutes(jsii.Number(30)),\n\tScaleOutCooldown: cdk.Duration_*Minutes(jsii.Number(30)),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\nconst targetTrackingScalingPolicyProps: appscaling.TargetTrackingScalingPolicyProps = {\n  scalingTarget: scalableTarget,\n  targetValue: 123,\n\n  // the properties below are optional\n  customMetric: metric,\n  disableScaleIn: false,\n  policyName: 'policyName',\n  predefinedMetric: appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.IScalableTarget","@aws-cdk/aws-applicationautoscaling.PredefinedMetric","@aws-cdk/aws-applicationautoscaling.PredefinedMetric#APPSTREAM_AVERAGE_CAPACITY_UTILIZATION","@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps","@aws-cdk/aws-cloudwatch.IMetric","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\ndeclare const scalableTarget: appscaling.ScalableTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingScalingPolicyProps: appscaling.TargetTrackingScalingPolicyProps = {\n  scalingTarget: scalableTarget,\n  targetValue: 123,\n\n  // the properties below are optional\n  customMetric: metric,\n  disableScaleIn: false,\n  policyName: 'policyName',\n  predefinedMetric: appscaling.PredefinedMetric.APPSTREAM_AVERAGE_CAPACITY_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n  scaleInCooldown: cdk.Duration.minutes(30),\n  scaleOutCooldown: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":5,"75":32,"91":1,"130":2,"153":3,"169":3,"193":1,"194":6,"196":2,"225":3,"242":3,"243":3,"254":3,"255":3,"256":3,"281":9,"290":1},"fqnsFingerprint":"ca36ac70ec0c53df4d317581e92725e62a1a66d5df2dde55fc662e3141eaab5c"}}}