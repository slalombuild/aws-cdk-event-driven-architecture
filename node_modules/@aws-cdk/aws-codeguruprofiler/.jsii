{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": "1.199.0",
    "@aws-cdk/core": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::CodeGuruProfiler",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::CodeGuruProfiler",
    "aws-codeguruprofiler"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-codeguruprofiler",
  "readme": {
    "markdown": "# AWS::CodeGuruProfiler Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nAmazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance.\n\n## Installation\n\nImport to your project:\n\n```ts nofixture\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\n```\n\n## Basic usage\n\nHere's how to setup a profiling group and give your compute role permissions to publish to the profiling group to the profiling agent can publish profiling information:\n\n```ts\n// The execution role of your application that publishes to the ProfilingGroup via CodeGuru Profiler Profiling Agent. (the following is merely an example)\nconst publishAppRole = new iam.Role(this, 'PublishAppRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\nconst profilingGroup = new codeguruprofiler.ProfilingGroup(this, 'MyProfilingGroup');\nprofilingGroup.grantPublish(publishAppRole);\n```\n\n## Compute Platform configuration\n\nCode Guru Profiler supports multiple compute environments.\nThey can be configured when creating a Profiling Group by using the `computePlatform` property:\n\n```ts\nconst profilingGroup = new codeguruprofiler.ProfilingGroup(this, 'MyProfilingGroup', {\n  computePlatform: codeguruprofiler.ComputePlatform.AWS_LAMBDA,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-codeguruprofiler",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
      "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
    },
    "java": {
      "maven": {
        "artifactId": "codeguruprofiler",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.codeguruprofiler"
    },
    "js": {
      "npm": "@aws-cdk/aws-codeguruprofiler"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-codeguruprofiler",
      "module": "aws_cdk.aws_codeguruprofiler"
    }
  },
  "types": {
    "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeGuruProfiler::ProfilingGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a profiling group.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeGuruProfiler::ProfilingGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\n\ndeclare const agentPermissions: any;\nconst cfnProfilingGroup = new codeguruprofiler.CfnProfilingGroup(this, 'MyCfnProfilingGroup', {\n  profilingGroupName: 'profilingGroupName',\n\n  // the properties below are optional\n  agentPermissions: agentPermissions,\n  anomalyDetectionNotificationConfiguration: [{\n    channelUri: 'channelUri',\n\n    // the properties below are optional\n    channelId: 'channelId',\n  }],\n  computePlatform: 'computePlatform',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeGuruProfiler::ProfilingGroup`."
        },
        "locationInModule": {
          "filename": "lib/codeguruprofiler.generated.ts",
          "line": 206
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codeguruprofiler.generated.ts",
        "line": 129
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 224
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 239
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnProfilingGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 133
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The full Amazon Resource Name (ARN) for that profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 158
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 229
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-tags"
            },
            "stability": "external",
            "summary": "A list of tags to add to the created profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 197
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-agentpermissions"
            },
            "remarks": "This action group grants `ConfigureAgent` and `PostAgentProfile` permissions to perform actions required by the profiling agent. The Json consists of key `Principals` .\n\n*Principals* : A list of string ARNs for the roles and users you want to grant access to the profiling group. Wildcards are not supported in the ARNs. You are allowed to provide up to 50 ARNs. An empty list is not permitted. This is a required key.\n\nFor more information, see [Resource-based policies in CodeGuru Profiler](https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html) in the *Amazon CodeGuru Profiler user guide* , [ConfigureAgent](https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html) , and [PostAgentProfile](https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html) .",
            "stability": "external",
            "summary": "The agent permissions attached to this profiling group."
          },
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 176
          },
          "name": "agentPermissions",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-profilinggroupname"
            },
            "stability": "external",
            "summary": "The name of the profiling group."
          },
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 165
          },
          "name": "profilingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-anomalydetectionnotificationconfiguration"
            },
            "stability": "external",
            "summary": "Adds anomaly notifications for a profiling group."
          },
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 183
          },
          "name": "anomalyDetectionNotificationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup.ChannelProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-computeplatform"
            },
            "remarks": "Use `AWSLambda` if your application runs on AWS Lambda. Use `Default` if your application runs on a compute platform that is not AWS Lambda , such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, `Default` is used. This property is immutable.",
            "stability": "external",
            "summary": "The compute platform of the profiling group."
          },
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 190
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codeguruprofiler.generated:CfnProfilingGroup"
    },
    "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup.AgentPermissionsProperty": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codeguruprofiler-profilinggroup-agentpermissions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\nconst agentPermissionsProperty: codeguruprofiler.CfnProfilingGroup.AgentPermissionsProperty = {\n  principals: ['principals'],\n};"
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup.AgentPermissionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codeguruprofiler.generated.ts",
        "line": 253
      },
      "name": "AgentPermissionsProperty",
      "namespace": "CfnProfilingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codeguruprofiler-profilinggroup-agentpermissions.html#cfn-codeguruprofiler-profilinggroup-agentpermissions-principals"
            },
            "stability": "external",
            "summary": "`CfnProfilingGroup.AgentPermissionsProperty.Principals`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 259
          },
          "name": "principals",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codeguruprofiler.generated:CfnProfilingGroup.AgentPermissionsProperty"
    },
    "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup.ChannelProperty": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codeguruprofiler-profilinggroup-channel.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "We support SNS topic as a notification channel.",
        "stability": "external",
        "summary": "Notification medium for users to get alerted for events that occur in application profile.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\nconst channelProperty: codeguruprofiler.CfnProfilingGroup.ChannelProperty = {\n  channelUri: 'channelUri',\n\n  // the properties below are optional\n  channelId: 'channelId',\n};"
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup.ChannelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codeguruprofiler.generated.ts",
        "line": 321
      },
      "name": "ChannelProperty",
      "namespace": "CfnProfilingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codeguruprofiler-profilinggroup-channel.html#cfn-codeguruprofiler-profilinggroup-channel-channeluri"
            },
            "stability": "external",
            "summary": "The channel URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 333
          },
          "name": "channelUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codeguruprofiler-profilinggroup-channel.html#cfn-codeguruprofiler-profilinggroup-channel-channelid"
            },
            "stability": "external",
            "summary": "The channel ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 327
          },
          "name": "channelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codeguruprofiler.generated:CfnProfilingGroup.ChannelProperty"
    },
    "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroupProps": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnProfilingGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\n\ndeclare const agentPermissions: any;\nconst cfnProfilingGroupProps: codeguruprofiler.CfnProfilingGroupProps = {\n  profilingGroupName: 'profilingGroupName',\n\n  // the properties below are optional\n  agentPermissions: agentPermissions,\n  anomalyDetectionNotificationConfiguration: [{\n    channelUri: 'channelUri',\n\n    // the properties below are optional\n    channelId: 'channelId',\n  }],\n  computePlatform: 'computePlatform',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codeguruprofiler.generated.ts",
        "line": 19
      },
      "name": "CfnProfilingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-profilinggroupname"
            },
            "stability": "external",
            "summary": "The name of the profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 26
          },
          "name": "profilingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-agentpermissions"
            },
            "remarks": "This action group grants `ConfigureAgent` and `PostAgentProfile` permissions to perform actions required by the profiling agent. The Json consists of key `Principals` .\n\n*Principals* : A list of string ARNs for the roles and users you want to grant access to the profiling group. Wildcards are not supported in the ARNs. You are allowed to provide up to 50 ARNs. An empty list is not permitted. This is a required key.\n\nFor more information, see [Resource-based policies in CodeGuru Profiler](https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html) in the *Amazon CodeGuru Profiler user guide* , [ConfigureAgent](https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html) , and [PostAgentProfile](https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html) .",
            "stability": "external",
            "summary": "The agent permissions attached to this profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 37
          },
          "name": "agentPermissions",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-anomalydetectionnotificationconfiguration"
            },
            "stability": "external",
            "summary": "Adds anomaly notifications for a profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 44
          },
          "name": "anomalyDetectionNotificationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codeguruprofiler.CfnProfilingGroup.ChannelProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-computeplatform"
            },
            "remarks": "Use `AWSLambda` if your application runs on AWS Lambda. Use `Default` if your application runs on a compute platform that is not AWS Lambda , such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, `Default` is used. This property is immutable.",
            "stability": "external",
            "summary": "The compute platform of the profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 51
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-tags"
            },
            "stability": "external",
            "summary": "A list of tags to add to the created profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codeguruprofiler.generated.ts",
            "line": 58
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codeguruprofiler.generated:CfnProfilingGroupProps"
    },
    "@aws-cdk/aws-codeguruprofiler.ComputePlatform": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "docs": {
        "stability": "stable",
        "summary": "The compute platform of the profiling group.",
        "example": "const profilingGroup = new codeguruprofiler.ProfilingGroup(this, 'MyProfilingGroup', {\n  computePlatform: codeguruprofiler.ComputePlatform.AWS_LAMBDA,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.ComputePlatform",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/profiling-group.ts",
        "line": 9
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use AWS_LAMBDA if your application runs on AWS Lambda."
          },
          "name": "AWS_LAMBDA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use Default if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform."
          },
          "name": "DEFAULT"
        }
      ],
      "name": "ComputePlatform",
      "symbolId": "lib/profiling-group:ComputePlatform"
    },
    "@aws-cdk/aws-codeguruprofiler.IProfilingGroup": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "docs": {
        "stability": "stable",
        "summary": "IResource represents a Profiling Group."
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/profiling-group.ts",
        "line": 25
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This will grant the following permissions:\n\n  - codeguru-profiler:ConfigureAgent\n  - codeguru-profiler:PostAgentProfile",
            "stability": "stable",
            "summary": "Grant access to publish profiling information to the Profiling Group to the given identity."
          },
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 44
          },
          "name": "grantPublish",
          "parameters": [
            {
              "docs": {
                "summary": "Principal to grant publish rights to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This will grant the following permissions:\n\n  - codeguru-profiler:GetProfile\n  - codeguru-profiler:DescribeProfilingGroup",
            "stability": "stable",
            "summary": "Grant access to read profiling information from the Profiling Group to the given identity."
          },
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 56
          },
          "name": "grantRead",
          "parameters": [
            {
              "docs": {
                "summary": "Principal to grant read rights to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "IProfilingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "A name for the profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 32
          },
          "name": "profilingGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/profiling-group:IProfilingGroup"
    },
    "@aws-cdk/aws-codeguruprofiler.ProfilingGroup": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A new Profiling Group.",
        "example": "// The execution role of your application that publishes to the ProfilingGroup via CodeGuru Profiler Profiling Agent. (the following is merely an example)\nconst publishAppRole = new iam.Role(this, 'PublishAppRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\nconst profilingGroup = new codeguruprofiler.ProfilingGroup(this, 'MyProfilingGroup');\nprofilingGroup.grantPublish(publishAppRole);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.ProfilingGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/profiling-group.ts",
          "line": 178
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codeguruprofiler.ProfilingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codeguruprofiler.IProfilingGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/profiling-group.ts",
        "line": 129
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing Profiling Group provided an ARN."
          },
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 155
          },
          "name": "fromProfilingGroupArn",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Profiling Group ARN."
              },
              "name": "profilingGroupArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing Profiling Group provided a Profiling Group Name."
          },
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 138
          },
          "name": "fromProfilingGroupName",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Profiling Group Name."
              },
              "name": "profilingGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This will grant the following permissions:\n\n  - codeguru-profiler:ConfigureAgent\n  - codeguru-profiler:PostAgentProfile",
            "stability": "stable",
            "summary": "Grant access to publish profiling information to the Profiling Group to the given identity."
          },
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 76
          },
          "name": "grantPublish",
          "overrides": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup",
          "parameters": [
            {
              "docs": {
                "summary": "Principal to grant publish rights to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "This will grant the following permissions:\n\n  - codeguru-profiler:GetProfile\n  - codeguru-profiler:DescribeProfilingGroup",
            "stability": "stable",
            "summary": "Grant access to read profiling information from the Profiling Group to the given identity."
          },
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 95
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup",
          "parameters": [
            {
              "docs": {
                "summary": "Principal to grant read rights to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "ProfilingGroup",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the Profiling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 176
          },
          "name": "profilingGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the Profiling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 169
          },
          "name": "profilingGroupName",
          "overrides": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/profiling-group:ProfilingGroup"
    },
    "@aws-cdk/aws-codeguruprofiler.ProfilingGroupProps": {
      "assembly": "@aws-cdk/aws-codeguruprofiler",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a new Profiling Group.",
        "example": "const profilingGroup = new codeguruprofiler.ProfilingGroup(this, 'MyProfilingGroup', {\n  computePlatform: codeguruprofiler.ComputePlatform.AWS_LAMBDA,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codeguruprofiler.ProfilingGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/profiling-group.ts",
        "line": 109
      },
      "name": "ProfilingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "ComputePlatform.DEFAULT",
            "stability": "stable",
            "summary": "The compute platform of the profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 122
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codeguruprofiler.ComputePlatform"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically generated name.",
            "stability": "stable",
            "summary": "A name for the profiling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/profiling-group.ts",
            "line": 115
          },
          "name": "profilingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/profiling-group:ProfilingGroupProps"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}