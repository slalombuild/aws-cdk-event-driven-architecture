{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "punycode": "^2.3.0"
  },
  "dependencies": {
    "@aws-cdk/aws-certificatemanager": "1.199.0",
    "@aws-cdk/aws-iam": "1.199.0",
    "@aws-cdk/aws-kms": "1.199.0",
    "@aws-cdk/aws-lambda": "1.199.0",
    "@aws-cdk/core": "1.199.0",
    "@aws-cdk/custom-resources": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Cognito",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cognito"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-cognito",
  "readme": {
    "markdown": "# Amazon Cognito Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\nFeatures                                   | Stability\n-------------------------------------------|--------------------------------------------------------\nCFN Resources                              | ![Stable](https://img.shields.io/badge/stable-success.svg?style=for-the-badge)\nHigher level constructs for User Pools     | ![Stable](https://img.shields.io/badge/stable-success.svg?style=for-the-badge)\nHigher level constructs for Identity Pools | ![Not Implemented](https://img.shields.io/badge/not--implemented-black.svg?style=for-the-badge)\n\n> **CFN Resources:** All classes with the `Cfn` prefix in this module ([CFN Resources]) are always\n> stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n<!-- -->\n\n> **Stable:** Higher level constructs in this module that are marked stable will not undergo any\n> breaking changes. They will strictly follow the [Semantic Versioning](https://semver.org/) model.\n\n---\n\n<!--END STABILITY BANNER-->\n\n[Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html) provides\nauthentication, authorization, and user management for your web and mobile apps. Your users can sign in directly with a\nuser name and password, or through a third party such as Facebook, Amazon, Google or Apple.\n\nThe two main components of Amazon Cognito are [user\npools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [identity\npools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html). User pools are user directories\nthat provide sign-up and sign-in options for your app users. Identity pools enable you to grant your users access to\nother AWS services. Identity Pool L2 Constructs can be found [here](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cognito-identitypool-alpha-readme.html).\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## Table of Contents\n\n- [User Pools](#user-pools)\n  - [Sign Up](#sign-up)\n  - [Sign In](#sign-in)\n  - [Attributes](#attributes)\n  - [Security](#security)\n    - [Multi-factor Authentication](#multi-factor-authentication-mfa)\n    - [Account Recovery Settings](#account-recovery-settings)\n  - [Emails](#emails)\n  - [Device Tracking](#device-tracking)\n  - [Lambda Triggers](#lambda-triggers)\n    - [Trigger Permissions](#trigger-permissions)\n  - [Import](#importing-user-pools)\n  - [Identity Providers](#identity-providers)\n  - [App Clients](#app-clients)\n  - [Resource Servers](#resource-servers)\n  - [Domains](#domains)\n\n## User Pools\n\nUser pools allow creating and managing your own directory of users that can sign up and sign in. They enable easy\nintegration with social identity providers such as Facebook, Google, Amazon, Microsoft Active Directory, etc. through\nSAML.\n\nUsing the CDK, a new user pool can be created as part of the stack using the construct's constructor. You may specify\nthe `userPoolName` to give your own identifier to the user pool. If not, CloudFormation will generate a name.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  userPoolName: 'myawesomeapp-userpool',\n});\n```\n\nThe default set up for the user pool is configured such that only administrators will be allowed\nto create users. Features such as Multi-factor authentication (MFAs) and Lambda Triggers are not\nconfigured by default.\n\nUse the `grant()` method to add an IAM policy statement associated with the user pool to an\nIAM principal's policy.\n\n```ts\nconst userPool = new cognito.UserPool(this, 'myuserpool');\nconst role = new iam.Role(this, 'role', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\nuserPool.grant(role, 'cognito-idp:AdminCreateUser');\n```\n\n### Sign Up\n\nUsers can either be signed up by the app's administrators or can sign themselves up. Once a user has signed up, their\naccount needs to be confirmed. Cognito provides several ways to sign users up and confirm their accounts. Learn more\nabout [user sign up here](https://docs.aws.amazon.com/cognito/latest/developerguide/signing-up-users-in-your-app.html).\n\nWhen a user signs up, email and SMS messages are used to verify their account and contact methods. The following code\nsnippet configures a user pool with properties relevant to these verification messages -\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});\n```\n\nBy default, self sign up is disabled. Learn more about [email and SMS verification messages\nhere](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html).\n\nBesides users signing themselves up, an administrator of any user pool can sign users up. The user then receives an\ninvitation to join the user pool. The following code snippet configures a user pool with properties relevant to the\ninvitation messages -\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}',\n  },\n});\n```\n\nAll email subjects, bodies and SMS messages for both invitation and verification support Cognito's message templating.\nLearn more about [message templates\nhere](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html).\n\n### Sign In\n\nUsers registering or signing in into your application can do so with multiple identifiers. There are 4 options\navailable:\n\n- `username`: Allow signing in using the one time immutable user name that the user chose at the time of sign up.\n- `email`: Allow signing in using the email address that is associated with the account.\n- `phone`: Allow signing in using the phone number that is associated with the account.\n- `preferredUsername`: Allow signing in with an alternate user name that the user can change at any time. However, this\n  is not available if the `username` option is not chosen.\n\nThe following code sets up a user pool so that the user can sign in with either their username or their email address -\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n});\n```\n\nUser pools can either be configured so that user name is primary sign in form, but also allows for the other three to be\nused additionally; or it can be configured so that email and/or phone numbers are the only ways a user can register and\nsign in. Read more about this\n[here](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#user-pool-settings-aliases-settings).\n\n⚠️ The Cognito service prevents changing the `signInAlias` property for an existing user pool.\n\nTo match with 'Option 1' in the above link, with a verified email, `signInAliases` should be set to\n`{ username: true, email: true }`. To match with 'Option 2' in the above link with both a verified\nemail and phone number, this property should be set to `{ email: true, phone: true }`.\n\nCognito recommends that email and phone number be automatically verified, if they are one of the sign in methods for\nthe user pool. Read more about that\n[here](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#user-pool-settings-aliases).\nThe CDK does this by default, when email and/or phone number are specified as part of `signInAliases`. This can be\noverridden by specifying the `autoVerify` property.\n\nThe following code snippet sets up only email as a sign in alias, but both email and phone number to be auto-verified.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true },\n});\n```\n\nA user pool can optionally ignore case when evaluating sign-ins. When `signInCaseSensitive` is false, Cognito will not\ncheck the capitalization of the alias when signing in. Default is true.\n\n### Attributes\n\nAttributes represent the various properties of each user that's collected and stored in the user pool. Cognito\nprovides a set of standard attributes that are available for all user pools. Users are allowed to select any of these\nstandard attributes to be required. Users will not be able to sign up to the user pool without providing the required\nattributes. Besides these, additional attributes can be further defined, and are known as custom attributes.\n\nLearn more on [attributes in Cognito's\ndocumentation](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html).\n\nThe following code configures a user pool with two standard attributes (name and address) as required and mutable, and adds\nfour custom attributes.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n```\n\nAs shown in the code snippet, there are data types that are available for custom attributes. The 'String' and 'Number'\ndata types allow for further constraints on their length and values, respectively.\n\nCustom attributes cannot be marked as required.\n\nAll custom attributes share the property `mutable` that specifies whether the value of the attribute can be changed.\nThe default value is `false`.\n\nUser pools come with two 'built-in' attributes - `email_verified` and `phone_number_verified`. These cannot be\nconfigured (required-ness or mutability) as part of user pool creation. However, user pool administrators can modify\nthem for specific users using the [AdminUpdateUserAttributes API].\n\n[AdminUpdateUserAttributes API]: https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html\n\n### Security\n\nCognito sends various messages to its users via SMS, for different actions, ranging from account verification to\nmarketing. In order to send SMS messages, Cognito needs an IAM role that it can assume, with permissions that allow it\nto send SMS messages.\n\nBy default, the CDK looks at all of the specified properties (and their defaults when not explicitly specified) and\nautomatically creates an SMS role, when needed. For example, if MFA second factor by SMS is enabled, the CDK will\ncreate a new role. The `smsRole` property can be used to specify the user supplied role that should be used instead.\nAdditionally, the property `enableSmsRole` can be used to override the CDK's default behaviour to either enable or\nsuppress automatic role creation.\n\n```ts\nconst poolSmsRole = new iam.Role(this, 'userpoolsmsrole', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\n\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  smsRole: poolSmsRole,\n  smsRoleExternalId: 'c87467be-4f34-11ea-b77f-2e728ce88125',\n});\n```\n\nWhen the `smsRole` property is specified, the `smsRoleExternalId` may also be specified. The value of\n`smsRoleExternalId` will be used as the `sts:ExternalId` when the Cognito service assumes the role. In turn, the role's\nassume role policy should be configured to accept this value as the ExternalId. Learn more about [ExternalId\nhere](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).\n\n#### Multi-factor Authentication (MFA)\n\nUser pools can be configured to enable multi-factor authentication (MFA). It can either be turned off, set to optional\nor made required. Setting MFA to optional means that individual users can choose to enable it.\nAdditionally, the MFA code can be sent either via SMS text message or via a time-based software token.\nSee the [documentation on MFA](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html) to\nlearn more.\n\nThe following code snippet marks MFA for the user pool as required. This means that all users are required to\nconfigure an MFA token and use it for sign in. It also allows for the users to use both SMS based MFA, as well,\n[time-based one time password\n(TOTP)](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa-totp.html).\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n```\n\nUser pools can be configured with policies around a user's password. This includes the password length and the\ncharacter sets that they must contain.\n\nFurther to this, it can also be configured with the validity of the auto-generated temporary password. A temporary\npassword is generated by the user pool either when an admin signs up a user or when a password reset is requested.\nThe validity of this password dictates how long to give the user to use this password before expiring it.\n\nThe following code snippet configures these properties -\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});\n```\n\nNote that, `tempPasswordValidity` can be specified only in whole days. Specifying fractional days would throw an error.\n\n#### Account Recovery Settings\n\nUser pools can be configured on which method a user should use when recovering the password for their account. This\ncan either be email and/or SMS. Read more at [Recovering User Accounts](https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html)\n\n```ts\nnew cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})\n```\n\nThe default for account recovery is by phone if available and by email otherwise.\nA user will not be allowed to reset their password via phone if they are also using it for MFA.\n\n\n### Emails\n\nCognito sends emails to users in the user pool, when particular actions take place, such as welcome emails, invitation\nemails, password resets, etc. The address from which these emails are sent can be configured on the user pool.\nRead more at [Email settings for User Pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html).\n\nBy default, user pools are configured to use Cognito's built in email capability, which will send emails\nfrom `no-reply@verificationemail.com`. If you want to use a custom email address you can configure\nCognito to send emails through Amazon SES, which is detailed below.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withCognito('support@myawesomeapp.com'),\n});\n```\n\nFor typical production environments, the default email limit is below the required delivery volume.\nTo enable a higher delivery volume, you can configure the UserPool to send emails through Amazon SES. To do\nso, follow the steps in the [Cognito Developer Guide](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer)\nto verify an email address, move the account out of the SES sandbox, and grant Cognito email permissions via an\nauthorization policy.\n\nOnce the SES setup is complete, the UserPool can be configured to use the SES email.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n```\n\nSending emails through SES requires that SES be configured (as described above) in a valid SES region.\nIf the UserPool is being created in a different region, `sesRegion` must be used to specify the correct SES region.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n\n```\n\nWhen sending emails from an SES verified domain, `sesVerifiedDomain` can be used to specify the domain.\nThe email address does not need to be verified when sending emails from a verified domain, because the identity of the email configuration is can be determined from the domain alone.\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n    sesVerifiedDomain: 'myawesomeapp.com',\n  }),\n});\n```\n\n### Device Tracking\n\nUser pools can be configured to track devices that users have logged in to.\nRead more at [Device Tracking](https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html)\n\n```ts\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});\n```\n\nThe default is to not track devices.\n\n### Lambda Triggers\n\nUser pools can be configured such that AWS Lambda functions can be triggered when certain user operations or actions\noccur, such as, sign up, user confirmation, sign in, etc. They can also be used to add custom authentication\nchallenges, user migrations and custom verification messages. Learn more about triggers at [User Pool Workflows with\nTriggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).\n\nLambda triggers can either be specified as part of the `UserPool` initialization, or it can be added later, via methods\non the construct, as so -\n\n```ts\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));\n```\n\nThe following table lists the set of triggers available, and their corresponding method to add it to the user pool.\nFor more information on the function of these triggers and how to configure them, read [User Pool Workflows with\nTriggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).\n\n#### Trigger Permissions\n\nThe `function.attachToRolePolicy()` API can be used to add additional IAM permissions to the lambda trigger\nas necessary.\n\n⚠️ Using the `attachToRolePolicy` API to provide permissions to your user pool will result in a circular dependency. See [aws/aws-cdk#7016](https://github.com/aws/aws-cdk/issues/7016).\nError message when running `cdk synth` or `cdk deploy`:\n> Circular dependency between resources: [pool056F3F7E, fnPostAuthFnCognitoA630A2B1, ...]\n\nTo work around the circular dependency issue, use the `attachInlinePolicy()` API instead, as shown below.\n\n```ts\ndeclare const postAuthFn: lambda.Function;\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));\n```\n\n### Importing User Pools\n\nAny user pool that has been created outside of this stack, can be imported into the CDK app. Importing a user pool\nallows for it to be used in other parts of the CDK app that reference an `IUserPool`. However, imported user pools have\nlimited configurability. As a rule of thumb, none of the properties that are part of the\n[`AWS::Cognito::UserPool`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html)\nCloudFormation resource can be configured.\n\nUser pools can be imported either using their id via the `UserPool.fromUserPoolId()`, or by using their ARN, via the\n`UserPool.fromUserPoolArn()` API.\n\n```ts\nconst awesomePool = cognito.UserPool.fromUserPoolId(this, 'awesome-user-pool', 'us-east-1_oiuR12Abd');\n\nconst otherAwesomePool = cognito.UserPool.fromUserPoolArn(this, 'other-awesome-user-pool',\n  'arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D');\n```\n\n### Identity Providers\n\nUsers that are part of a user pool can sign in either directly through a user pool, or federate through a third-party\nidentity provider. Once configured, the Cognito backend will take care of integrating with the third-party provider.\nRead more about [Adding User Pool Sign-in Through a Third\nParty](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html).\n\nThe following third-party identity providers are currently supported in the CDK -\n\n- [Login With Amazon](https://developer.amazon.com/apps-and-games/login-with-amazon)\n- [Facebook Login](https://developers.facebook.com/docs/facebook-login/)\n- [Google Login](https://developers.google.com/identity/sign-in/web/sign-in)\n- [Sign In With Apple](https://developer.apple.com/sign-in-with-apple/get-started/)\n- [OpenID Connect](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-oidc-idp.html)\n\nThe following code configures a user pool to federate with the third party provider, 'Login with Amazon'. The identity\nprovider needs to be configured with a set of credentials that the Cognito backend can use to federate with the\nthird-party identity provider.\n\n```ts\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n});\n```\n\nAttribute mapping allows mapping attributes provided by the third-party identity providers to [standard and custom\nattributes](#Attributes) of the user pool. Learn more about [Specifying Identity Provider Attribute Mappings for Your\nUser Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html).\n\nThe following code shows how different attributes provided by 'Login With Amazon' can be mapped to standard and custom\nuser pool attributes.\n\n```ts\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});\n```\n\n### App Clients\n\nAn app is an entity within a user pool that has permission to call unauthenticated APIs (APIs that do not have an\nauthenticated user), such as APIs to register, sign in, and handle forgotten passwords. To call these APIs, you need an\napp client ID and an optional client secret. Read [Configuring a User Pool App\nClient](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-client-apps.html) to learn more.\n\nThe following code creates an app client and retrieves the client id -\n\n```ts\nconst pool = new cognito.UserPool(this, 'pool');\nconst client = pool.addClient('customer-app-client');\nconst clientId = client.userPoolClientId;\n```\n\nExisting app clients can be imported into the CDK app using the `UserPoolClient.fromUserPoolClientId()` API. For new\nand imported user pools, clients can also be created via the `UserPoolClient` constructor, as so -\n\n```ts\nconst importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool,\n});\n```\n\nClients can be configured with authentication flows. Authentication flows allow users on a client to be authenticated\nwith a user pool. Cognito user pools provide several different types of authentication, such as, SRP (Secure\nRemote Password) authentication, username-and-password authentication, etc. Learn more about this at [UserPool Authentication\nFlow](https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-authentication-flow.html).\n\nThe following code configures a client to use both SRP and username-and-password authentication -\n\n```ts\nconst pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  },\n});\n```\n\nCustom authentication protocols can be configured by setting the `custom` property under `authFlow` and defining lambda\nfunctions for the corresponding user pool [triggers](#lambda-triggers). Learn more at [Custom Authentication\nFlow](https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-authentication-flow.html#amazon-cognito-user-pools-custom-authentication-flow).\n\nIn addition to these authentication mechanisms, Cognito user pools also support using OAuth 2.0 framework for\nauthenticating users. User pool clients can be configured with OAuth 2.0 authorization flows and scopes. Learn more\nabout the [OAuth 2.0 authorization framework](https://tools.ietf.org/html/rfc6749) and [Cognito user pool's\nimplementation of\nOAuth2.0](https://aws.amazon.com/blogs/mobile/understanding-amazon-cognito-user-pool-oauth-2-0-grants/).\n\nThe following code configures an app client with the authorization code grant flow and registers the the app's welcome\npage as a callback (or redirect) URL. It also configures the access token scope to 'openid'. All of these concepts can\nbe found in the [OAuth 2.0 RFC](https://tools.ietf.org/html/rfc6749).\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});\n```\n\nAn app client can be configured to prevent user existence errors. This\ninstructs the Cognito authentication API to return generic authentication\nfailure responses instead of an UserNotFoundException. By default, the flag\nis not set, which means the CloudFormation default (false) will be used. See the\n[documentation](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-managing-errors.html)\nfor the full details on the behavior of this flag.\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  preventUserExistenceErrors: true,\n});\n```\n\nAll identity providers created in the CDK app are automatically registered into the corresponding user pool. All app\nclients created in the CDK have all of the identity providers enabled by default. The 'Cognito' identity provider,\nthat allows users to register and sign in directly with the Cognito user pool, is also enabled by default.\nAlternatively, the list of supported identity providers for a client can be explicitly specified -\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ],\n});\n```\n\nIf the identity provider and the app client are created in the same stack, specify the dependency between both constructs to\nmake sure that the identity provider already exists when the app client will be created. The app client cannot handle the\ndependency to the identity provider automatically because the client does not have access to the provider's construct.\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);\n```\n\nIn accordance with the OIDC open standard, Cognito user pool clients provide access tokens, ID tokens and refresh tokens.\nMore information is available at [Using Tokens with User Pools](https://docs.aws.amazon.com/en_us/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html).\nThe expiration time for these tokens can be configured as shown below.\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  accessTokenValidity: Duration.minutes(60),\n  idTokenValidity: Duration.minutes(60),\n  refreshTokenValidity: Duration.days(30),\n});\n```\n\nClients can (and should) be allowed to read and write relevant user attributes only. Usually every client can be allowed to\nread the `given_name` attribute but not every client should be allowed to set the `email_verified` attribute.\nThe same criteria applies for both standard and custom attributes, more info is available at\n[Attribute Permissions and Scopes](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#user-pool-settings-attribute-permissions-and-scopes).\nThe default behaviour is to allow read and write permissions on all attributes. The following code shows how this can be\nconfigured for a client.\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});\n```\n\n[Token revocation](https://docs.aws.amazon.com/cognito/latest/developerguide/token-revocation.html)\ncan be configured to be able to revoke refresh tokens in app clients. By default, token revocation is enabled for new user\npools. The property can be used to enable the token revocation in existing app clients or to change the default behavior.\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  enableTokenRevocation: true,\n});\n```\n\n### Resource Servers\n\nA resource server is a server for access-protected resources. It handles authenticated requests from an app that has an\naccess token. See [Defining Resource\nServers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html)\nfor more information.\n\nAn application may choose to model custom permissions via OAuth. Resource Servers provide this capability via custom scopes\nthat are attached to an app client. The following example sets up a resource server for the 'users' resource for two different\napp clients and configures the clients to use these scopes.\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n```\n\n\n### Domains\n\nAfter setting up an [app client](#app-clients), the address for the user pool's sign-up and sign-in webpages can be\nconfigured using domains. There are two ways to set up a domain - either the Amazon Cognito hosted domain can be chosen\nwith an available domain prefix, or a custom domain name can be chosen. The custom domain must be one that is already\nowned, and whose certificate is registered in AWS Certificate Manager.\n\nThe following code sets up a user pool domain in Amazon Cognito hosted domain with the prefix 'my-awesome-app', and\nanother domain with the custom domain 'user.myapp.com' -\n\n```ts\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n```\n\nRead more about [Using the Amazon Cognito\nDomain](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain-prefix.html) and [Using Your Own\nDomain](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html).\n\nThe `signInUrl()` methods returns the fully qualified URL to the login page for the user pool. This page comes from the\nhosted UI configured with Cognito. Learn more at [Hosted UI with the Amazon Cognito\nConsole](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-integration.html#cognito-user-pools-create-an-app-integration).\n\n```ts\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});\n```\n\nExisting domains can be imported into CDK apps using `UserPoolDomain.fromDomainName()` API\n\n```ts\nconst myUserPoolDomain = cognito.UserPoolDomain.fromDomainName(this, 'my-user-pool-domain', 'domain-name');\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cognito",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Cognito",
      "packageId": "Amazon.CDK.AWS.Cognito"
    },
    "java": {
      "maven": {
        "artifactId": "cognito",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cognito"
    },
    "js": {
      "npm": "@aws-cdk/aws-cognito"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-cognito",
      "module": "aws_cdk.aws_cognito"
    }
  },
  "types": {
    "@aws-cdk/aws-cognito.AccountRecovery": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "remarks": "When a user forgets their password, they can have a code sent to their verified email or verified phone to recover their account.\nYou can choose the preferred way to send codes below.\nWe recommend not allowing phone to be used for both password resets and multi-factor authentication (MFA).",
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html",
        "stability": "stable",
        "summary": "How will a user be able to recover their account?",
        "example": "new cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.AccountRecovery",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 428
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Email if available, otherwise phone, but don’t allow a user to reset their password via phone if they are also using it for MFA."
          },
          "name": "EMAIL_AND_PHONE_WITHOUT_MFA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Phone if available, otherwise email, but don’t allow a user to reset their password via phone if they are also using it for MFA."
          },
          "name": "PHONE_WITHOUT_MFA_AND_EMAIL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Email only."
          },
          "name": "EMAIL_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Phone only, but don’t allow a user to reset their password via phone if they are also using it for MFA."
          },
          "name": "PHONE_ONLY_WITHOUT_MFA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "(Not Recommended) Phone if available, otherwise email, and do allow a user to reset their password via phone if they are also using it for MFA."
          },
          "name": "PHONE_AND_EMAIL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "None – users will have to contact an administrator to reset their passwords."
          },
          "name": "NONE"
        }
      ],
      "name": "AccountRecovery",
      "symbolId": "lib/user-pool:AccountRecovery"
    },
    "@aws-cdk/aws-cognito.AttributeMapping": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The mapping of user pool attributes to the attributes provided by the identity providers.",
        "example": "const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.AttributeMapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/base.ts",
        "line": 82
      },
      "name": "AttributeMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's postal address is a required attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 87
          },
          "name": "address",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's birthday."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 93
          },
          "name": "birthdate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom attribute mapping",
            "stability": "stable",
            "summary": "Specify custom attribute mapping here and mapping for any standard attributes not supported yet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 189
          },
          "name": "custom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's e-mail address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 99
          },
          "name": "email",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The surname or last name of user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 105
          },
          "name": "familyName",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's full name in displayable form."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 135
          },
          "name": "fullname",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's gender."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 111
          },
          "name": "gender",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's first name or give name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 117
          },
          "name": "givenName",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "Time, the user's information was last updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 177
          },
          "name": "lastUpdateTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's locale."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 123
          },
          "name": "locale",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's middle name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 129
          },
          "name": "middleName",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's nickname or casual name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 141
          },
          "name": "nickname",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's telephone number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 147
          },
          "name": "phoneNumber",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's preferred username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 159
          },
          "name": "preferredUsername",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The URL to the user's profile page."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 165
          },
          "name": "profilePage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The URL to the user's profile picture."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 153
          },
          "name": "profilePicture",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The user's time zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 171
          },
          "name": "timezone",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not mapped",
            "stability": "stable",
            "summary": "The URL to the user's web page or blog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 183
          },
          "name": "website",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/base:AttributeMapping"
    },
    "@aws-cdk/aws-cognito.AuthFlow": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-authentication-flow.html",
        "stability": "stable",
        "summary": "Types of authentication flow.",
        "example": "const pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.AuthFlow",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 12
      },
      "name": "AuthFlow",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Enable admin based user password authentication flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 17
          },
          "name": "adminUserPassword",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Enable custom authentication flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 23
          },
          "name": "custom",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Enable auth using username & password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 29
          },
          "name": "userPassword",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Enable SRP based authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 35
          },
          "name": "userSrp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:AuthFlow"
    },
    "@aws-cdk/aws-cognito.AutoVerifiedAttrs": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes that can be automatically verified for users in a user pool.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.AutoVerifiedAttrs",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 49
      },
      "name": "AutoVerifiedAttrs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true, if email is turned on for `signIn`. false, otherwise.",
            "remarks": "Note: If both `email` and `phone` is set, Cognito only verifies the phone number. To also verify email, see here -\nhttps://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html",
            "stability": "stable",
            "summary": "Whether the email address of the user should be auto verified at sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 58
          },
          "name": "email",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true, if phone is turned on for `signIn`. false, otherwise.",
            "stability": "stable",
            "summary": "Whether the phone number of the user should be auto verified at sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 64
          },
          "name": "phone",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool:AutoVerifiedAttrs"
    },
    "@aws-cdk/aws-cognito.BaseUrlOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to customize the behaviour of `baseUrl()`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst baseUrlOptions: cognito.BaseUrlOptions = {\n  fips: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.BaseUrlOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 188
      },
      "name": "BaseUrlOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "return the standard URL",
            "stability": "stable",
            "summary": "Whether to return the FIPS-compliant endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 194
          },
          "name": "fips",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:BaseUrlOptions"
    },
    "@aws-cdk/aws-cognito.BooleanAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "The Boolean custom attribute type.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.BooleanAttribute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-attr.ts",
          "line": 332
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.ICustomAttribute"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 329
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Bind this custom attribute type to the values as expected by CloudFormation."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 336
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cognito.ICustomAttribute",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig"
            }
          }
        }
      ],
      "name": "BooleanAttribute",
      "symbolId": "lib/user-pool-attr:BooleanAttribute"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPool": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::IdentityPool",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html",
          "exampleMetadata": "infused"
        },
        "remarks": "The `AWS::Cognito::IdentityPool` resource creates an Amazon Cognito identity pool.\n\nTo avoid deleting the resource accidentally from AWS CloudFormation , use [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) and the [UpdateReplacePolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html) to retain the resource on deletion or replacement.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::IdentityPool`.",
        "example": "import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::IdentityPool`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 322
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 197
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 346
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 367
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIdentityPool",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 201
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external",
            "summary": "The name of the Amazon Cognito identity pool, returned as a string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 226
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 351
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowunauthenticatedidentities"
            },
            "stability": "external",
            "summary": "Specifies whether the identity pool supports unauthenticated logins."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 233
          },
          "name": "allowUnauthenticatedIdentities",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents"
            },
            "stability": "external",
            "summary": "The events to configure."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 247
          },
          "name": "cognitoEvents",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders"
            },
            "stability": "external",
            "summary": "Key-value pairs that map provider names to provider app IDs."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 313
          },
          "name": "supportedLoginProviders",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow"
            },
            "stability": "external",
            "summary": "Enables the Basic (Classic) authentication flow."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 240
          },
          "name": "allowClassicFlow",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders"
            },
            "stability": "external",
            "summary": "The Amazon Cognito user pools and their client IDs."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 254
          },
          "name": "cognitoIdentityProviders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams"
            },
            "stability": "external",
            "summary": "Configuration options for configuring Amazon Cognito streams."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 261
          },
          "name": "cognitoStreams",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername"
            },
            "remarks": "This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).\n\n*Minimum length* : 1\n\n*Maximum length* : 100",
            "stability": "external",
            "summary": "The \"domain\" Amazon Cognito uses when referencing your users."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 272
          },
          "name": "developerProviderName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname"
            },
            "remarks": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`",
            "stability": "external",
            "summary": "The name of your Amazon Cognito identity pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 285
          },
          "name": "identityPoolName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of the OpenID connect providers."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 292
          },
          "name": "openIdConnectProviderArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync"
            },
            "stability": "external",
            "summary": "The configuration options to be applied to the identity pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 299
          },
          "name": "pushSync",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 306
          },
          "name": "samlProviderArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPool"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`CognitoIdentityProvider` is a property of the [AWS::Cognito::IdentityPool](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html) resource that represents an Amazon Cognito user pool and its client ID.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cognitoIdentityProviderProperty: cognito.CfnIdentityPool.CognitoIdentityProviderProperty = {\n  clientId: 'clientId',\n  providerName: 'providerName',\n  serverSideTokenCheck: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 381
      },
      "name": "CognitoIdentityProviderProperty",
      "namespace": "CfnIdentityPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html#cfn-cognito-identitypool-cognitoidentityprovider-clientid"
            },
            "stability": "external",
            "summary": "The client ID for the Amazon Cognito user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 387
          },
          "name": "clientId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html#cfn-cognito-identitypool-cognitoidentityprovider-providername"
            },
            "remarks": "For example: `cognito-idp.us-east-2.amazonaws.com/us-east-2_123456789` .",
            "stability": "external",
            "summary": "The provider name for an Amazon Cognito user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 393
          },
          "name": "providerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitoidentityprovider.html#cfn-cognito-identitypool-cognitoidentityprovider-serversidetokencheck"
            },
            "remarks": "After you set the `ServerSideTokenCheck` to TRUE for an identity pool, that identity pool checks with the integrated user pools to make sure the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user.\n\nIf the user is signed out or deleted, the identity pool returns a 400 Not Authorized error.",
            "stability": "external",
            "summary": "TRUE if server-side token validation is enabled for the identity provider’s token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 403
          },
          "name": "serverSideTokenCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPool.CognitoIdentityProviderProperty"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitostreams.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`CognitoStreams` is a property of the [AWS::Cognito::IdentityPool](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html) resource that defines configuration options for Amazon Cognito streams.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cognitoStreamsProperty: cognito.CfnIdentityPool.CognitoStreamsProperty = {\n  roleArn: 'roleArn',\n  streamingStatus: 'streamingStatus',\n  streamName: 'streamName',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 470
      },
      "name": "CognitoStreamsProperty",
      "namespace": "CfnIdentityPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitostreams.html#cfn-cognito-identitypool-cognitostreams-rolearn"
            },
            "remarks": "This role must grant access to Amazon Cognito (cognito-sync) to invoke `PutRecord` on your Amazon Cognito stream.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the role Amazon Cognito can assume to publish to the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 476
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitostreams.html#cfn-cognito-identitypool-cognitostreams-streamingstatus"
            },
            "remarks": "Valid values are: `ENABLED` or `DISABLED` .",
            "stability": "external",
            "summary": "Status of the Amazon Cognito streams."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 488
          },
          "name": "streamingStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-cognitostreams.html#cfn-cognito-identitypool-cognitostreams-streamname"
            },
            "remarks": "This stream must be in the developer's account and in the same Region as the identity pool.",
            "stability": "external",
            "summary": "The name of the Amazon Cognito stream to receive updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 482
          },
          "name": "streamName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPool.CognitoStreamsProperty"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-pushsync.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`PushSync` is a property of the [AWS::Cognito::IdentityPool](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html) resource that defines the configuration options to be applied to an Amazon Cognito identity pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst pushSyncProperty: cognito.CfnIdentityPool.PushSyncProperty = {\n  applicationArns: ['applicationArns'],\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 555
      },
      "name": "PushSyncProperty",
      "namespace": "CfnIdentityPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-pushsync.html#cfn-cognito-identitypool-pushsync-applicationarns"
            },
            "stability": "external",
            "summary": "The ARNs of the Amazon SNS platform applications that could be used by clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 561
          },
          "name": "applicationArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypool-pushsync.html#cfn-cognito-identitypool-pushsync-rolearn"
            },
            "stability": "external",
            "summary": "An IAM role configured to allow Amazon Cognito to call Amazon SNS on behalf of the developer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 567
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPool.PushSyncProperty"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPoolProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html",
          "exampleMetadata": "infused"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIdentityPool`.",
        "example": "import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 19
      },
      "name": "CfnIdentityPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowunauthenticatedidentities"
            },
            "stability": "external",
            "summary": "Specifies whether the identity pool supports unauthenticated logins."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 26
          },
          "name": "allowUnauthenticatedIdentities",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow"
            },
            "stability": "external",
            "summary": "Enables the Basic (Classic) authentication flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 33
          },
          "name": "allowClassicFlow",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents"
            },
            "stability": "external",
            "summary": "The events to configure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 40
          },
          "name": "cognitoEvents",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders"
            },
            "stability": "external",
            "summary": "The Amazon Cognito user pools and their client IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 47
          },
          "name": "cognitoIdentityProviders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams"
            },
            "stability": "external",
            "summary": "Configuration options for configuring Amazon Cognito streams."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 54
          },
          "name": "cognitoStreams",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername"
            },
            "remarks": "This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).\n\n*Minimum length* : 1\n\n*Maximum length* : 100",
            "stability": "external",
            "summary": "The \"domain\" Amazon Cognito uses when referencing your users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 65
          },
          "name": "developerProviderName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname"
            },
            "remarks": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`",
            "stability": "external",
            "summary": "The name of your Amazon Cognito identity pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 78
          },
          "name": "identityPoolName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of the OpenID connect providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 85
          },
          "name": "openIdConnectProviderArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync"
            },
            "stability": "external",
            "summary": "The configuration options to be applied to the identity pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 92
          },
          "name": "pushSync",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 99
          },
          "name": "samlProviderArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders"
            },
            "stability": "external",
            "summary": "Key-value pairs that map provider names to provider app IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 106
          },
          "name": "supportedLoginProviders",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPoolProps"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::IdentityPoolRoleAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::IdentityPoolRoleAttachment` resource manages the role configuration for an Amazon Cognito identity pool.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::IdentityPoolRoleAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\nconst cfnIdentityPoolRoleAttachment = new cognito.CfnIdentityPoolRoleAttachment(this, 'MyCfnIdentityPoolRoleAttachment', {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::IdentityPoolRoleAttachment`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 777
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 720
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 792
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 805
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIdentityPoolRoleAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 724
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 797
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-identitypoolid"
            },
            "stability": "external",
            "summary": "An identity pool ID in the format `REGION:GUID` ."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 750
          },
          "name": "identityPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-roles"
            },
            "remarks": "For a given role, the key is either \"authenticated\" or \"unauthenticated\". The value is the role ARN.",
            "stability": "external",
            "summary": "The map of the roles associated with this pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 768
          },
          "name": "roles",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-rolemappings"
            },
            "remarks": "This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .\n\nIf the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.\n\nFor more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .",
            "stability": "external",
            "summary": "How users for a specific identity provider are mapped to roles."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 761
          },
          "name": "roleMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPoolRoleAttachment"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-mappingrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Defines how to map a claim to a role ARN.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst mappingRuleProperty: cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty = {\n  claim: 'claim',\n  matchType: 'matchType',\n  roleArn: 'roleArn',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 819
      },
      "name": "MappingRuleProperty",
      "namespace": "CfnIdentityPoolRoleAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-mappingrule.html#cfn-cognito-identitypoolroleattachment-mappingrule-claim"
            },
            "remarks": "For example: \"isAdmin\" or \"paid\".",
            "stability": "external",
            "summary": "The claim name that must be present in the token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 825
          },
          "name": "claim",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-mappingrule.html#cfn-cognito-identitypoolroleattachment-mappingrule-matchtype"
            },
            "remarks": "Valid values are: `Equals` , `Contains` , `StartsWith` , and `NotEqual` .",
            "stability": "external",
            "summary": "The match condition that specifies how closely the claim value in the IdP token must match `Value` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 833
          },
          "name": "matchType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-mappingrule.html#cfn-cognito-identitypoolroleattachment-mappingrule-rolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 839
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-mappingrule.html#cfn-cognito-identitypoolroleattachment-mappingrule-value"
            },
            "remarks": "For example, \"paid\" or \"yes\".",
            "stability": "external",
            "summary": "A brief string that the claim must match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 845
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPoolRoleAttachment.MappingRuleProperty"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`RoleMapping` is a property of the [AWS::Cognito::IdentityPoolRoleAttachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html) resource that defines the role-mapping attributes of an Amazon Cognito identity pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst roleMappingProperty: cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  ambiguousRoleResolution: 'ambiguousRoleResolution',\n  identityProvider: 'identityProvider',\n  rulesConfiguration: {\n    rules: [{\n      claim: 'claim',\n      matchType: 'matchType',\n      roleArn: 'roleArn',\n      value: 'value',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 919
      },
      "name": "RoleMappingProperty",
      "namespace": "CfnIdentityPoolRoleAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-type"
            },
            "remarks": "`Token` uses `cognito:roles` and `cognito:preferred_role` claims from the Amazon Cognito identity provider token to map groups to roles. `Rules` attempts to match claims from the token to map to a role.\n\nValid values are `Token` or `Rules` .",
            "stability": "external",
            "summary": "The role-mapping type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 949
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-ambiguousroleresolution"
            },
            "remarks": "If you specify Token or Rules as the Type, AmbiguousRoleResolution is required.\n\nValid values are `AuthenticatedRole` or `Deny` .",
            "stability": "external",
            "summary": "Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no `cognito:preferred_role` claim and there are multiple `cognito:roles` matches for the Token type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 927
          },
          "name": "ambiguousRoleResolution",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-identityprovider"
            },
            "remarks": "For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id (http://cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id)` . This is the identity provider that is used by the user for authentication.\n\nIf the identity provider property isn't provided, the key of the entry in the `RoleMappings` map is used as the identity provider.",
            "stability": "external",
            "summary": "Identifier for the identity provider for which the role is mapped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 935
          },
          "name": "identityProvider",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-rulesconfiguration"
            },
            "remarks": "If you specify \"Rules\" as the role-mapping type, RulesConfiguration is required.",
            "stability": "external",
            "summary": "The rules to be used for mapping users to roles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 941
          },
          "name": "rulesConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPoolRoleAttachment.RoleMappingProperty"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rulesconfigurationtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`RulesConfigurationType` is a subproperty of the [RoleMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) property that defines the rules to be used for mapping users to roles.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst rulesConfigurationTypeProperty: cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty = {\n  rules: [{\n    claim: 'claim',\n    matchType: 'matchType',\n    roleArn: 'roleArn',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1020
      },
      "name": "RulesConfigurationTypeProperty",
      "namespace": "CfnIdentityPoolRoleAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rulesconfigurationtype.html#cfn-cognito-identitypoolroleattachment-rulesconfigurationtype-rules"
            },
            "remarks": "You can specify up to 25 rules per identity provider.",
            "stability": "external",
            "summary": "The rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1026
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIdentityPoolRoleAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\nconst cfnIdentityPoolRoleAttachmentProps: cognito.CfnIdentityPoolRoleAttachmentProps = {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 630
      },
      "name": "CfnIdentityPoolRoleAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-identitypoolid"
            },
            "stability": "external",
            "summary": "An identity pool ID in the format `REGION:GUID` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 637
          },
          "name": "identityPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-rolemappings"
            },
            "remarks": "This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .\n\nIf the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.\n\nFor more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .",
            "stability": "external",
            "summary": "How users for a specific identity provider are mapped to roles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 648
          },
          "name": "roleMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-roles"
            },
            "remarks": "For a given role, the key is either \"authenticated\" or \"unauthenticated\". The value is the role ARN.",
            "stability": "external",
            "summary": "The map of the roles associated with this pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 655
          },
          "name": "roles",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnIdentityPoolRoleAttachmentProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPool": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPool",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::UserPool` resource creates an Amazon Cognito user pool. For more information on working with Amazon Cognito user pools, see [Amazon Cognito User Pools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [CreateUserPool](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html) .\n\n> If you don't specify a value for a parameter, Amazon Cognito sets it to a default value.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\nconst cfnUserPool = new cognito.CfnUserPool(this, 'MyCfnUserPool', /* all optional props */ {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deletionProtection: 'deletionProtection',\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n    snsRegion: 'snsRegion',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  userAttributeUpdateSettings: {\n    attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n  },\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPool`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 1656
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1411
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1699
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1733
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPool",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1415
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the user pool, such as `arn:aws:cognito-idp:us-east-1:123412341234:userpool/us-east-1_123412341` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1440
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ProviderName"
            },
            "stability": "external",
            "summary": "The provider name of the Amazon Cognito user pool, specified as a `String` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1446
          },
          "name": "attrProviderName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ProviderURL"
            },
            "stability": "external",
            "summary": "The URL of the provider of the Amazon Cognito user pool, specified as a `String` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1452
          },
          "name": "attrProviderUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1704
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooltags"
            },
            "remarks": "A tag is a label that you can use to categorize and manage user pools in different ways, such as by purpose, owner, environment, or other criteria.",
            "stability": "external",
            "summary": "The tag keys and values to assign to the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1640
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-accountrecoverysetting"
            },
            "remarks": "It allows you to define a preferred method when a user has more than one method available. With this setting, SMS does not qualify for a valid password recovery mechanism if the user also has SMS MFA enabled. In the absence of this setting, Cognito uses the legacy behavior to determine the recovery method where SMS is preferred over email.",
            "stability": "external",
            "summary": "Use this setting to define which verified available method a user can use to recover their password when they call `ForgotPassword` ."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1459
          },
          "name": "accountRecoverySetting",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-admincreateuserconfig"
            },
            "stability": "external",
            "summary": "The configuration for creating a new user profile."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1466
          },
          "name": "adminCreateUserConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-aliasattributes"
            },
            "remarks": "> This user pool property cannot be updated.",
            "stability": "external",
            "summary": "Attributes supported as an alias for this user pool. Possible values: *phone_number* , *email* , or *preferred_username* ."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1475
          },
          "name": "aliasAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-autoverifiedattributes"
            },
            "remarks": "Possible values: *email* , *phone_number* .",
            "stability": "external",
            "summary": "The attributes to be auto-verified."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1482
          },
          "name": "autoVerifiedAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-deletionprotection"
            },
            "remarks": "Before you can delete a user pool that you have protected against deletion, you must deactivate this feature.\n\nWhen you try to delete a protected user pool in a `DeleteUserPool` API request, Amazon Cognito returns an `InvalidParameterException` error. To delete a protected user pool, send a new `DeleteUserPool` request after you deactivate deletion protection in an `UpdateUserPool` API request.",
            "stability": "external",
            "summary": "When active, `DeletionProtection` prevents accidental deletion of your user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1491
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-deviceconfiguration"
            },
            "remarks": "A null value indicates that you have deactivated device remembering in your user pool.\n\n> When you provide a value for any `DeviceConfiguration` field, you activate the Amazon Cognito device-remembering feature.",
            "stability": "external",
            "summary": "The device-remembering configuration for a user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1500
          },
          "name": "deviceConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailconfiguration"
            },
            "remarks": "The email configuration type sets your preferred sending method, AWS Region, and sender for messages from your user pool.",
            "stability": "external",
            "summary": "The email configuration of your user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1507
          },
          "name": "emailConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailverificationmessage"
            },
            "remarks": "See [VerificationMessageTemplateType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html) .",
            "stability": "external",
            "summary": "This parameter is no longer used."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1514
          },
          "name": "emailVerificationMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailverificationsubject"
            },
            "remarks": "See [VerificationMessageTemplateType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html) .",
            "stability": "external",
            "summary": "This parameter is no longer used."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1521
          },
          "name": "emailVerificationSubject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-enabledmfas"
            },
            "remarks": "To disable all MFAs after it has been enabled, set MfaConfiguration to “OFF” and remove EnabledMfas. MFAs can only be all disabled if MfaConfiguration is OFF. Once SMS_MFA is enabled, SMS_MFA can only be disabled by setting MfaConfiguration to “OFF”. Can be one of the following values:\n\n- `SMS_MFA` - Enables SMS MFA for the user pool. SMS_MFA can only be enabled if SMS configuration is provided.\n- `SOFTWARE_TOKEN_MFA` - Enables software token MFA for the user pool.\n\nAllowed values: `SMS_MFA` | `SOFTWARE_TOKEN_MFA`",
            "stability": "external",
            "summary": "Enables MFA on a specified user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1533
          },
          "name": "enabledMfas",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-lambdaconfig"
            },
            "remarks": "> In a push model, event sources (such as Amazon S3 and custom applications) need permission to invoke a function. So you must make an extra call to add permission for these event sources to invoke your Lambda function.\n>\n> For more information on using the Lambda API to add permission, see [AddPermission](https://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html) .\n>\n> For adding permission using the AWS CLI , see [add-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/add-permission.html) .",
            "stability": "external",
            "summary": "The Lambda trigger configuration information for the new user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1546
          },
          "name": "lambdaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-mfaconfiguration"
            },
            "remarks": "- `OFF` MFA won't be used for any users.\n- `ON` MFA is required for all users to sign in.\n- `OPTIONAL` MFA will be required only for individual users who have an MFA factor activated.",
            "stability": "external",
            "summary": "The multi-factor authentication (MFA) configuration. Valid values include:."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1557
          },
          "name": "mfaConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-policies"
            },
            "stability": "external",
            "summary": "The policy associated with a user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1564
          },
          "name": "policies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-schema"
            },
            "remarks": "> During a user pool update, you can add new schema attributes but you cannot modify or delete an existing schema attribute.",
            "stability": "external",
            "summary": "The schema attributes for the new user pool. These attributes can be standard or custom attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1573
          },
          "name": "schema",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsauthenticationmessage"
            },
            "stability": "external",
            "summary": "A string representing the SMS authentication message."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1580
          },
          "name": "smsAuthenticationMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsconfiguration"
            },
            "remarks": "To send SMS messages with Amazon SNS in the AWS Region that you want, the Amazon Cognito user pool uses an AWS Identity and Access Management (IAM) role in your AWS account .",
            "stability": "external",
            "summary": "The SMS configuration with the settings that your Amazon Cognito user pool must use to send an SMS message from your AWS account through Amazon Simple Notification Service."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1587
          },
          "name": "smsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsverificationmessage"
            },
            "remarks": "See [VerificationMessageTemplateType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html) .",
            "stability": "external",
            "summary": "This parameter is no longer used."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1594
          },
          "name": "smsVerificationMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userattributeupdatesettings"
            },
            "remarks": "These settings include the property `AttributesRequireVerificationBeforeUpdate` ,\na user-pool setting that tells Amazon Cognito how to handle changes to the value of your users' email address and phone number attributes. For\nmore information, see [Verifying updates to email addresses and phone numbers](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates) .",
            "stability": "external",
            "summary": "The settings for updates to user attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1603
          },
          "name": "userAttributeUpdateSettings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserAttributeUpdateSettingsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-usernameattributes"
            },
            "remarks": "Possible values: `phone_number` or `email` .\n\nThis user pool property cannot be updated.",
            "stability": "external",
            "summary": "Determines whether email addresses or phone numbers can be specified as user names when a user signs up."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1612
          },
          "name": "usernameAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-usernameconfiguration"
            },
            "remarks": "For example, when this is set to `False` , users will be able to sign in using either \"username\" or \"Username\". This configuration is immutable once it has been set.",
            "stability": "external",
            "summary": "You can choose to set case sensitivity on the username input for the selected sign-in option."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1619
          },
          "name": "usernameConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooladdons"
            },
            "remarks": "Set the key `AdvancedSecurityMode` to the value \"AUDIT\".",
            "stability": "external",
            "summary": "Enables advanced security risk detection."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1626
          },
          "name": "userPoolAddOns",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpoolname"
            },
            "stability": "external",
            "summary": "A string used to name the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1633
          },
          "name": "userPoolName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-verificationmessagetemplate"
            },
            "stability": "external",
            "summary": "The template for the verification message that the user sees when the app requests permission to access the user's information."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1647
          },
          "name": "verificationMessageTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-accountrecoverysetting.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "It allows you to define a preferred method when a user has more than one method available. With this setting, SMS does not qualify for a valid password recovery mechanism if the user also has SMS MFA enabled. In the absence of this setting, Cognito uses the legacy behavior to determine the recovery method where SMS is preferred over email.",
        "stability": "external",
        "summary": "Use this setting to define which verified available method a user can use to recover their password when they call `ForgotPassword` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountRecoverySettingProperty: cognito.CfnUserPool.AccountRecoverySettingProperty = {\n  recoveryMechanisms: [{\n    name: 'name',\n    priority: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1747
      },
      "name": "AccountRecoverySettingProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-accountrecoverysetting.html#cfn-cognito-userpool-accountrecoverysetting-recoverymechanisms"
            },
            "stability": "external",
            "summary": "The list of `RecoveryOptionTypes` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1753
          },
          "name": "recoveryMechanisms",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.AccountRecoverySettingProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-admincreateuserconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The configuration for `AdminCreateUser` requests.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst adminCreateUserConfigProperty: cognito.CfnUserPool.AdminCreateUserConfigProperty = {\n  allowAdminCreateUserOnly: false,\n  inviteMessageTemplate: {\n    emailMessage: 'emailMessage',\n    emailSubject: 'emailSubject',\n    smsMessage: 'smsMessage',\n  },\n  unusedAccountValidityDays: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1814
      },
      "name": "AdminCreateUserConfigProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-admincreateuserconfig.html#cfn-cognito-userpool-admincreateuserconfig-allowadmincreateuseronly"
            },
            "remarks": "Set to `False` if users can sign themselves up via an app.",
            "stability": "external",
            "summary": "Set to `True` if only the administrator is allowed to create user profiles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1820
          },
          "name": "allowAdminCreateUserOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-admincreateuserconfig.html#cfn-cognito-userpool-admincreateuserconfig-invitemessagetemplate"
            },
            "remarks": "See also [Customizing User Invitation Messages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization) .",
            "stability": "external",
            "summary": "The message template to be used for the welcome message to new users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1828
          },
          "name": "inviteMessageTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-admincreateuserconfig.html#cfn-cognito-userpool-admincreateuserconfig-unusedaccountvaliditydays"
            },
            "remarks": "To reset the account after that time limit, you must call `AdminCreateUser` again, specifying `\"RESEND\"` for the `MessageAction` parameter. The default value for this parameter is 7.\n\n> If you set a value for `TemporaryPasswordValidityDays` in `PasswordPolicy` , that value will be used, and `UnusedAccountValidityDays` will be no longer be an available parameter for that user pool.",
            "stability": "external",
            "summary": "The user account expiration limit, in days, after which a new account that hasn't signed in is no longer usable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1836
          },
          "name": "unusedAccountValidityDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.AdminCreateUserConfigProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-customemailsender.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A custom email sender AWS Lambda trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customEmailSenderProperty: cognito.CfnUserPool.CustomEmailSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1903
      },
      "name": "CustomEmailSenderProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-customemailsender.html#cfn-cognito-userpool-customemailsender-lambdaarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send email notifications to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1909
          },
          "name": "lambdaArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-customemailsender.html#cfn-cognito-userpool-customemailsender-lambdaversion"
            },
            "remarks": "The only supported value is `V1_0` .",
            "stability": "external",
            "summary": "The Lambda version represents the signature of the \"request\" attribute in the \"event\" information that Amazon Cognito passes to your custom email sender AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1915
          },
          "name": "lambdaVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.CustomEmailSenderProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-customsmssender.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A custom SMS sender AWS Lambda trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customSMSSenderProperty: cognito.CfnUserPool.CustomSMSSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1979
      },
      "name": "CustomSMSSenderProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-customsmssender.html#cfn-cognito-userpool-customsmssender-lambdaarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send SMS notifications to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1985
          },
          "name": "lambdaArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-customsmssender.html#cfn-cognito-userpool-customsmssender-lambdaversion"
            },
            "remarks": "The only supported value is `V1_0` .",
            "stability": "external",
            "summary": "The Lambda version represents the signature of the \"request\" attribute in the \"event\" information Amazon Cognito passes to your custom SMS sender Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1991
          },
          "name": "lambdaVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.CustomSMSSenderProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-deviceconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A [DescribeUserPool](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html) request returns a null value for this object when the user pool isn't configured to remember devices. When device remembering is active, you can remember a user's device with a [ConfirmDevice](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html) API request. Additionally. when the property `DeviceOnlyRememberedOnUserPrompt` is `true` , you must follow `ConfirmDevice` with an [UpdateDeviceStatus](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html) API request that sets the user's device to `remembered` or `not_remembered` .\n\nTo sign in with a remembered device, include `DEVICE_KEY` in the authentication parameters in your user's [InitiateAuth](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html) request. If your app doesn't include a `DEVICE_KEY` parameter, the [response](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html#API_InitiateAuth_ResponseSyntax) from Amazon Cognito includes newly-generated `DEVICE_KEY` and `DEVICE_GROUP_KEY` values under `NewDeviceMetadata` . Store these values to use in future device-authentication requests.\n\n> When you provide a value for any property of `DeviceConfiguration` , you activate the device remembering for the user pool.",
        "stability": "external",
        "summary": "The device-remembering configuration for a user pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst deviceConfigurationProperty: cognito.CfnUserPool.DeviceConfigurationProperty = {\n  challengeRequiredOnNewDevice: false,\n  deviceOnlyRememberedOnUserPrompt: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2059
      },
      "name": "DeviceConfigurationProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-deviceconfiguration.html#cfn-cognito-userpool-deviceconfiguration-challengerequiredonnewdevice"
            },
            "remarks": "> Whether or not `ChallengeRequiredOnNewDevice` is true, users who sign in with devices that have not been confirmed or remembered must still provide a second factor in a user pool that requires MFA.",
            "stability": "external",
            "summary": "When true, a remembered device can sign in with device authentication instead of SMS and time-based one-time password (TOTP) factors for multi-factor authentication (MFA)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2067
          },
          "name": "challengeRequiredOnNewDevice",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-deviceconfiguration.html#cfn-cognito-userpool-deviceconfiguration-deviceonlyrememberedonuserprompt"
            },
            "remarks": "When `DeviceOnlyRememberedOnUserPrompt` is `false` , Amazon Cognito immediately remembers devices that you register in a `ConfirmDevice` API request.",
            "stability": "external",
            "summary": "When true, Amazon Cognito doesn't automatically remember a user's device when your app sends a [ConfirmDevice](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html) API request. In your app, create a prompt for your user to choose whether they want to remember their device. Return the user's choice in an [UpdateDeviceStatus](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html) API request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2075
          },
          "name": "deviceOnlyRememberedOnUserPrompt",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.DeviceConfigurationProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The email configuration type sets your preferred sending method, AWS Region, and sender for messages from your user pool.",
        "stability": "external",
        "summary": "The email configuration of your user pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst emailConfigurationProperty: cognito.CfnUserPool.EmailConfigurationProperty = {\n  configurationSet: 'configurationSet',\n  emailSendingAccount: 'emailSendingAccount',\n  from: 'from',\n  replyToEmailAddress: 'replyToEmailAddress',\n  sourceArn: 'sourceArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2139
      },
      "name": "EmailConfigurationProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html#cfn-cognito-userpool-emailconfiguration-configurationset"
            },
            "remarks": "A configuration set is applied to an email by including a reference to the configuration set in the headers of the email. Once applied, all of the rules in that configuration set are applied to the email. Configuration sets can be used to apply the following types of rules to emails:\n\n- Event publishing – Amazon SES can track the number of send, delivery, open, click, bounce, and complaint events for each email sent. Use event publishing to send information about these events to other AWS services such as SNS and CloudWatch.\n- IP pool management – When leasing dedicated IP addresses with Amazon SES, you can create groups of IP addresses, called dedicated IP pools. You can then associate the dedicated IP pools with configuration sets.",
            "stability": "external",
            "summary": "The set of configuration rules that can be applied to emails sent using Amazon SES."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2148
          },
          "name": "configurationSet",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html#cfn-cognito-userpool-emailconfiguration-emailsendingaccount"
            },
            "remarks": "Specify one of the following values:\n\n- **COGNITO_DEFAULT** - When Amazon Cognito emails your users, it uses its built-in email functionality. When you use the default option, Amazon Cognito allows only a limited number of emails each day for your user pool. For typical production environments, the default email limit is less than the required delivery volume. To achieve a higher delivery volume, specify DEVELOPER to use your Amazon SES email configuration.\n\nTo look up the email delivery limit for the default option, see [Limits](https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html) in the *Amazon Cognito Developer Guide* .\n\nThe default FROM address is `no-reply@verificationemail.com` . To customize the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified email address for the `SourceArn` parameter.\n- **DEVELOPER** - When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon Cognito calls Amazon SES on your behalf to send email from your verified email address. When you use this option, the email delivery limits are the same limits that apply to your Amazon SES verified email address in your AWS account .\n\nIf you use this option, provide the ARN of an Amazon SES verified email address for the `SourceArn` parameter.\n\nBefore Amazon Cognito can email your users, it requires additional permissions to call Amazon SES on your behalf. When you update your user pool with this option, Amazon Cognito creates a *service-linked role* , which is a type of role in your AWS account . This role contains the permissions that allow you to access Amazon SES and send email messages from your email address. For more information about the service-linked role that Amazon Cognito creates, see [Using Service-Linked Roles for Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html) in the *Amazon Cognito Developer Guide* .",
            "stability": "external",
            "summary": "Specifies whether Amazon Cognito uses its built-in functionality to send your users email messages, or uses your Amazon Simple Email Service email configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2165
          },
          "name": "emailSendingAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html#cfn-cognito-userpool-emailconfiguration-from"
            },
            "remarks": "For example, `testuser@example.com` or `Test User <testuser@example.com>` . This address appears before the body of the email.",
            "stability": "external",
            "summary": "Identifies either the sender's email address or the sender's name with their email address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2171
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html#cfn-cognito-userpool-emailconfiguration-replytoemailaddress"
            },
            "stability": "external",
            "summary": "The destination to which the receiver of the email should reply."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2177
          },
          "name": "replyToEmailAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html#cfn-cognito-userpool-emailconfiguration-sourcearn"
            },
            "remarks": "Amazon Cognito uses this email address in one of the following ways, depending on the value that you specify for the `EmailSendingAccount` parameter:\n\n- If you specify `COGNITO_DEFAULT` , Amazon Cognito uses this address as the custom FROM address when it emails your users using its built-in email account.\n- If you specify `DEVELOPER` , Amazon Cognito emails your users with this address by calling Amazon SES on your behalf.\n\nThe Region value of the `SourceArn` parameter must indicate a supported AWS Region of your user pool. Typically, the Region in the `SourceArn` and the user pool Region are the same. For more information, see [Amazon SES email configuration regions](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping) in the [Amazon Cognito Developer Guide](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) .",
            "stability": "external",
            "summary": "The ARN of a verified email address in Amazon SES."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2188
          },
          "name": "sourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.EmailConfigurationProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-invitemessagetemplate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "See also [Customizing User Invitation Messages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization) .",
        "stability": "external",
        "summary": "The message template to be used for the welcome message to new users.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst inviteMessageTemplateProperty: cognito.CfnUserPool.InviteMessageTemplateProperty = {\n  emailMessage: 'emailMessage',\n  emailSubject: 'emailSubject',\n  smsMessage: 'smsMessage',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2263
      },
      "name": "InviteMessageTemplateProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-invitemessagetemplate.html#cfn-cognito-userpool-invitemessagetemplate-emailmessage"
            },
            "remarks": "EmailMessage is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.",
            "stability": "external",
            "summary": "The message template for email messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2269
          },
          "name": "emailMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-invitemessagetemplate.html#cfn-cognito-userpool-invitemessagetemplate-emailsubject"
            },
            "remarks": "EmailSubject is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.",
            "stability": "external",
            "summary": "The subject line for email messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2275
          },
          "name": "emailSubject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-invitemessagetemplate.html#cfn-cognito-userpool-invitemessagetemplate-smsmessage"
            },
            "stability": "external",
            "summary": "The message template for SMS messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2281
          },
          "name": "smsMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.InviteMessageTemplateProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies the configuration for AWS Lambda triggers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst lambdaConfigProperty: cognito.CfnUserPool.LambdaConfigProperty = {\n  createAuthChallenge: 'createAuthChallenge',\n  customEmailSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  customMessage: 'customMessage',\n  customSmsSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  defineAuthChallenge: 'defineAuthChallenge',\n  kmsKeyId: 'kmsKeyId',\n  postAuthentication: 'postAuthentication',\n  postConfirmation: 'postConfirmation',\n  preAuthentication: 'preAuthentication',\n  preSignUp: 'preSignUp',\n  preTokenGeneration: 'preTokenGeneration',\n  userMigration: 'userMigration',\n  verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2348
      },
      "name": "LambdaConfigProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-createauthchallenge"
            },
            "stability": "external",
            "summary": "Creates an authentication challenge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2354
          },
          "name": "createAuthChallenge",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-customemailsender"
            },
            "stability": "external",
            "summary": "A custom email sender AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2360
          },
          "name": "customEmailSender",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-custommessage"
            },
            "stability": "external",
            "summary": "A custom Message AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2366
          },
          "name": "customMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-customsmssender"
            },
            "stability": "external",
            "summary": "A custom SMS sender AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2372
          },
          "name": "customSmsSender",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-defineauthchallenge"
            },
            "stability": "external",
            "summary": "Defines the authentication challenge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2378
          },
          "name": "defineAuthChallenge",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-kmskeyid"
            },
            "remarks": "Amazon Cognito uses the key to encrypt codes and temporary passwords sent to `CustomEmailSender` and `CustomSMSSender` .",
            "stability": "external",
            "summary": "The Amazon Resource Name of a AWS Key Management Service ( AWS KMS ) key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2384
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-postauthentication"
            },
            "stability": "external",
            "summary": "A post-authentication AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2390
          },
          "name": "postAuthentication",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-postconfirmation"
            },
            "stability": "external",
            "summary": "A post-confirmation AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2396
          },
          "name": "postConfirmation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-preauthentication"
            },
            "stability": "external",
            "summary": "A pre-authentication AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2402
          },
          "name": "preAuthentication",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-presignup"
            },
            "stability": "external",
            "summary": "A pre-registration AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2408
          },
          "name": "preSignUp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-pretokengeneration"
            },
            "stability": "external",
            "summary": "A Lambda trigger that is invoked before token generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2414
          },
          "name": "preTokenGeneration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-usermigration"
            },
            "stability": "external",
            "summary": "The user migration Lambda config type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2420
          },
          "name": "userMigration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html#cfn-cognito-userpool-lambdaconfig-verifyauthchallengeresponse"
            },
            "stability": "external",
            "summary": "Verifies the authentication challenge response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2426
          },
          "name": "verifyAuthChallengeResponse",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.LambdaConfigProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-numberattributeconstraints.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum values of an attribute that is of the number data type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst numberAttributeConstraintsProperty: cognito.CfnUserPool.NumberAttributeConstraintsProperty = {\n  maxValue: 'maxValue',\n  minValue: 'minValue',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2523
      },
      "name": "NumberAttributeConstraintsProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-numberattributeconstraints.html#cfn-cognito-userpool-numberattributeconstraints-maxvalue"
            },
            "stability": "external",
            "summary": "The maximum value of an attribute that is of the number data type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2529
          },
          "name": "maxValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-numberattributeconstraints.html#cfn-cognito-userpool-numberattributeconstraints-minvalue"
            },
            "stability": "external",
            "summary": "The minimum value of an attribute that is of the number data type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2535
          },
          "name": "minValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.NumberAttributeConstraintsProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The password policy type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst passwordPolicyProperty: cognito.CfnUserPool.PasswordPolicyProperty = {\n  minimumLength: 123,\n  requireLowercase: false,\n  requireNumbers: false,\n  requireSymbols: false,\n  requireUppercase: false,\n  temporaryPasswordValidityDays: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2599
      },
      "name": "PasswordPolicyProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-minimumlength"
            },
            "remarks": "This value can't be less than 6.",
            "stability": "external",
            "summary": "The minimum length of the password in the policy that you have set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2605
          },
          "name": "minimumLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requirelowercase"
            },
            "stability": "external",
            "summary": "In the password policy that you have set, refers to whether you have required users to use at least one lowercase letter in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2611
          },
          "name": "requireLowercase",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requirenumbers"
            },
            "stability": "external",
            "summary": "In the password policy that you have set, refers to whether you have required users to use at least one number in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2617
          },
          "name": "requireNumbers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requiresymbols"
            },
            "stability": "external",
            "summary": "In the password policy that you have set, refers to whether you have required users to use at least one symbol in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2623
          },
          "name": "requireSymbols",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requireuppercase"
            },
            "stability": "external",
            "summary": "In the password policy that you have set, refers to whether you have required users to use at least one uppercase letter in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2629
          },
          "name": "requireUppercase",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-temporarypasswordvaliditydays"
            },
            "remarks": "If the user doesn't sign in during this time, an administrator must reset their password.\n\n> When you set `TemporaryPasswordValidityDays` for a user pool, you can no longer set a value for the legacy `UnusedAccountValidityDays` parameter in that user pool.",
            "stability": "external",
            "summary": "The number of days a temporary password is valid in the password policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2637
          },
          "name": "temporaryPasswordValidityDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.PasswordPolicyProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-policies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The policy associated with a user pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst policiesProperty: cognito.CfnUserPool.PoliciesProperty = {\n  passwordPolicy: {\n    minimumLength: 123,\n    requireLowercase: false,\n    requireNumbers: false,\n    requireSymbols: false,\n    requireUppercase: false,\n    temporaryPasswordValidityDays: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2713
      },
      "name": "PoliciesProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-policies.html#cfn-cognito-userpool-policies-passwordpolicy"
            },
            "stability": "external",
            "summary": "The password policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2719
          },
          "name": "passwordPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.PoliciesProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-recoveryoption.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A map containing a priority as a key, and recovery method name as a value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst recoveryOptionProperty: cognito.CfnUserPool.RecoveryOptionProperty = {\n  name: 'name',\n  priority: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2780
      },
      "name": "RecoveryOptionProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-recoveryoption.html#cfn-cognito-userpool-recoveryoption-name"
            },
            "stability": "external",
            "summary": "Specifies the recovery method for a user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2786
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-recoveryoption.html#cfn-cognito-userpool-recoveryoption-priority"
            },
            "stability": "external",
            "summary": "A positive integer specifying priority of a method with 1 being the highest priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2792
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.RecoveryOptionProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains information about the schema attribute.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst schemaAttributeProperty: cognito.CfnUserPool.SchemaAttributeProperty = {\n  attributeDataType: 'attributeDataType',\n  developerOnlyAttribute: false,\n  mutable: false,\n  name: 'name',\n  numberAttributeConstraints: {\n    maxValue: 'maxValue',\n    minValue: 'minValue',\n  },\n  required: false,\n  stringAttributeConstraints: {\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2856
      },
      "name": "SchemaAttributeProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-attributedatatype"
            },
            "stability": "external",
            "summary": "The attribute data type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2862
          },
          "name": "attributeDataType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-developeronlyattribute"
            },
            "remarks": "Specifies whether the attribute type is developer only. This attribute can only be modified by an administrator. Users will not be able to modify this attribute using their access token.",
            "stability": "external",
            "summary": "> We recommend that you use [WriteAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes) in the user pool client to control how attributes can be mutated for new use cases instead of using `DeveloperOnlyAttribute` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2870
          },
          "name": "developerOnlyAttribute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-mutable"
            },
            "remarks": "For any user pool attribute that is mapped to an IdP attribute, you must set this parameter to `true` . Amazon Cognito updates mapped attributes when users sign in to your application through an IdP. If an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute. For more information, see [Specifying Identity Provider Attribute Mappings for Your User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html) .",
            "stability": "external",
            "summary": "Specifies whether the value of the attribute can be changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2878
          },
          "name": "mutable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-name"
            },
            "stability": "external",
            "summary": "A schema attribute of the name type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2884
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-numberattributeconstraints"
            },
            "stability": "external",
            "summary": "Specifies the constraints for an attribute of the number type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2890
          },
          "name": "numberAttributeConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-required"
            },
            "remarks": "If the attribute is required and the user doesn't provide a value, registration or sign-in will fail.",
            "stability": "external",
            "summary": "Specifies whether a user pool attribute is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2896
          },
          "name": "required",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html#cfn-cognito-userpool-schemaattribute-stringattributeconstraints"
            },
            "stability": "external",
            "summary": "Specifies the constraints for an attribute of the string type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2902
          },
          "name": "stringAttributeConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.SchemaAttributeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-smsconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The Cognito User Pool makes the request to the Amazon SNS Service by using an IAM role that you provide for your AWS account .",
        "stability": "external",
        "summary": "The SMS configuration type that includes the settings the Cognito User Pool needs to call for the Amazon SNS service to send an SMS message from your AWS account .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst smsConfigurationProperty: cognito.CfnUserPool.SmsConfigurationProperty = {\n  externalId: 'externalId',\n  snsCallerArn: 'snsCallerArn',\n  snsRegion: 'snsRegion',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 2981
      },
      "name": "SmsConfigurationProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-smsconfiguration.html#cfn-cognito-userpool-smsconfiguration-externalid"
            },
            "remarks": "We recommend you use `ExternalId` to add security to your IAM role, which is used to call Amazon SNS to send SMS messages for your user pool. If you provide an `ExternalId` , the Cognito User Pool uses it when attempting to assume your IAM role. You can also set your roles trust policy to require the `ExternalID` . If you use the Cognito Management Console to create a role for SMS MFA, Cognito creates a role with the required permissions and a trust policy that uses `ExternalId` .",
            "stability": "external",
            "summary": "The external ID is a value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2987
          },
          "name": "externalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-smsconfiguration.html#cfn-cognito-userpool-smsconfiguration-snscallerarn"
            },
            "remarks": "This is the ARN of the IAM role in your AWS account that Amazon Cognito will use to send SMS messages. SMS messages are subject to a [spending limit](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html) .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon SNS caller."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 2993
          },
          "name": "snsCallerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-smsconfiguration.html#cfn-cognito-userpool-smsconfiguration-snsregion"
            },
            "remarks": "You can choose the same Region as your user pool, or a supported *Legacy Amazon SNS alternate Region* .\n\nAmazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html) .",
            "stability": "external",
            "summary": "The AWS Region to use with Amazon SNS integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3001
          },
          "name": "snsRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.SmsConfigurationProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-stringattributeconstraints.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`StringAttributeConstraints` is a subproperty of the [SchemaAttribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-schemaattribute.html) property type.",
        "stability": "external",
        "summary": "The `StringAttributeConstraints` property type defines the string attribute constraints of an Amazon Cognito user pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst stringAttributeConstraintsProperty: cognito.CfnUserPool.StringAttributeConstraintsProperty = {\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3068
      },
      "name": "StringAttributeConstraintsProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-stringattributeconstraints.html#cfn-cognito-userpool-stringattributeconstraints-maxlength"
            },
            "stability": "external",
            "summary": "The maximum length."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3074
          },
          "name": "maxLength",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-stringattributeconstraints.html#cfn-cognito-userpool-stringattributeconstraints-minlength"
            },
            "stability": "external",
            "summary": "The minimum length."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3080
          },
          "name": "minLength",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.StringAttributeConstraintsProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.UserAttributeUpdateSettingsProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-userattributeupdatesettings.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "These settings include the property `AttributesRequireVerificationBeforeUpdate` ,\na user-pool setting that tells Amazon Cognito how to handle changes to the value of your users' email address and phone number attributes. For\nmore information, see [Verifying updates to email addresses and phone numbers](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates) .",
        "stability": "external",
        "summary": "The settings for updates to user attributes.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst userAttributeUpdateSettingsProperty: cognito.CfnUserPool.UserAttributeUpdateSettingsProperty = {\n  attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserAttributeUpdateSettingsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3146
      },
      "name": "UserAttributeUpdateSettingsProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-userattributeupdatesettings.html#cfn-cognito-userpool-userattributeupdatesettings-attributesrequireverificationbeforeupdate"
            },
            "remarks": "When you update a user attribute that has this option activated, Amazon Cognito sends a verification message to the new phone number or email address. Amazon Cognito doesn’t change the value of the attribute until your user responds to the verification message and confirms the new value.\n\nYou can verify an updated email address or phone number with a [VerifyUserAttribute](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html) API request. You can also call the [AdminUpdateUserAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) API and set `email_verified` or `phone_number_verified` to true.\n\nWhen `AttributesRequireVerificationBeforeUpdate` is false, your user pool doesn't require that your users verify attribute changes before Amazon Cognito updates them. In a user pool where `AttributesRequireVerificationBeforeUpdate` is false, API operations that change attribute values can immediately update a user’s `email` or `phone_number` attribute.",
            "stability": "external",
            "summary": "Requires that your user verifies their email address, phone number, or both before Amazon Cognito updates the value of that attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3156
          },
          "name": "attributesRequireVerificationBeforeUpdate",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.UserAttributeUpdateSettingsProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-userpooladdons.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The user pool add-ons type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst userPoolAddOnsProperty: cognito.CfnUserPool.UserPoolAddOnsProperty = {\n  advancedSecurityMode: 'advancedSecurityMode',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3218
      },
      "name": "UserPoolAddOnsProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-userpooladdons.html#cfn-cognito-userpool-userpooladdons-advancedsecuritymode"
            },
            "stability": "external",
            "summary": "The advanced security mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3224
          },
          "name": "advancedSecurityMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.UserPoolAddOnsProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-usernameconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The `UsernameConfiguration` property type specifies case sensitivity on the username input for the selected sign-in option.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst usernameConfigurationProperty: cognito.CfnUserPool.UsernameConfigurationProperty = {\n  caseSensitive: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3285
      },
      "name": "UsernameConfigurationProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-usernameconfiguration.html#cfn-cognito-userpool-usernameconfiguration-casesensitive"
            },
            "remarks": "For most use cases, set case sensitivity to `False` (case insensitive) as a best practice. When usernames and email addresses are case insensitive, users can sign in as the same user when they enter a different capitalization of their user name.\n\nValid values include:\n\n- **True** - Enables case sensitivity for all username input. When this option is set to `True` , users must sign in using the exact capitalization of their given username, such as “UserName”. This is the default value.\n- **False** - Enables case insensitivity for all username input. For example, when this option is set to `False` , users can sign in using `username` , `USERNAME` , or `UserName` . This option also enables both `preferred_username` and `email` alias to be case insensitive, in addition to the `username` attribute.",
            "stability": "external",
            "summary": "Specifies whether user name case sensitivity will be applied for all users in the user pool through Amazon Cognito APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3296
          },
          "name": "caseSensitive",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.UsernameConfigurationProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The template for verification messages.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst verificationMessageTemplateProperty: cognito.CfnUserPool.VerificationMessageTemplateProperty = {\n  defaultEmailOption: 'defaultEmailOption',\n  emailMessage: 'emailMessage',\n  emailMessageByLink: 'emailMessageByLink',\n  emailSubject: 'emailSubject',\n  emailSubjectByLink: 'emailSubjectByLink',\n  smsMessage: 'smsMessage',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3357
      },
      "name": "VerificationMessageTemplateProperty",
      "namespace": "CfnUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html#cfn-cognito-userpool-verificationmessagetemplate-defaultemailoption"
            },
            "stability": "external",
            "summary": "The default email option."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3363
          },
          "name": "defaultEmailOption",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html#cfn-cognito-userpool-verificationmessagetemplate-emailmessage"
            },
            "remarks": "You can set an `EmailMessage` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.",
            "stability": "external",
            "summary": "The template for email messages that Amazon Cognito sends to your users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3369
          },
          "name": "emailMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html#cfn-cognito-userpool-verificationmessagetemplate-emailmessagebylink"
            },
            "remarks": "You can set an `EmailMessageByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.",
            "stability": "external",
            "summary": "The email message template for sending a confirmation link to the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3375
          },
          "name": "emailMessageByLink",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html#cfn-cognito-userpool-verificationmessagetemplate-emailsubject"
            },
            "remarks": "You can set an `EmailSubject` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.",
            "stability": "external",
            "summary": "The subject line for the email message template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3381
          },
          "name": "emailSubject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html#cfn-cognito-userpool-verificationmessagetemplate-emailsubjectbylink"
            },
            "remarks": "You can set an `EmailSubjectByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.",
            "stability": "external",
            "summary": "The subject line for the email message template for sending a confirmation link to the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3387
          },
          "name": "emailSubjectByLink",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-verificationmessagetemplate.html#cfn-cognito-userpool-verificationmessagetemplate-smsmessage"
            },
            "stability": "external",
            "summary": "The template for SMS messages that Amazon Cognito sends to your users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3393
          },
          "name": "smsMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPool.VerificationMessageTemplateProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolClient": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolClient",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html",
          "exampleMetadata": "lit=test/integ.cognito.lit.ts infused"
        },
        "remarks": "The `AWS::Cognito::UserPoolClient` resource specifies an Amazon Cognito user pool client.\n\n> If you don't specify a value for a parameter, Amazon Cognito sets it to a default value.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolClient`.",
        "example": "    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolClient`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 4062
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClientProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3805
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4098
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4130
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolClient",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3809
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClientSecret"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3834
          },
          "name": "attrClientSecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3840
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4103
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool where you want to create a user pool client."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3847
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-accesstokenvalidity"
            },
            "remarks": "After this limit expires, your user can't use their access token. To specify the time unit for `AccessTokenValidity` as `seconds` , `minutes` , `hours` , or `days` , set a `TokenValidityUnits` value in your API request.\n\nFor example, when you set `AccessTokenValidity` to `10` and `TokenValidityUnits` to `hours` , your user can authorize access with their access token for 10 hours.\n\nThe default time unit for `AccessTokenValidity` in an API request is hours.",
            "stability": "external",
            "summary": "The access token time limit."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3858
          },
          "name": "accessTokenValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthflows"
            },
            "remarks": "- **code** - Use a code grant flow, which provides an authorization code as the response. This code can be exchanged for access tokens with the `/oauth2/token` endpoint.\n- **implicit** - Issue the access token (and, optionally, ID token, based on scopes) directly to your user.\n- **client_credentials** - Issue the access token from the `/oauth2/token` endpoint directly to a non-person user using a combination of the client ID and client secret.",
            "stability": "external",
            "summary": "The allowed OAuth flows."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3869
          },
          "name": "allowedOAuthFlows",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthflowsuserpoolclient"
            },
            "stability": "external",
            "summary": "Set to true if the client is allowed to follow the OAuth protocol when interacting with Amazon Cognito user pools."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3876
          },
          "name": "allowedOAuthFlowsUserPoolClient",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthscopes"
            },
            "remarks": "Possible values provided by OAuth are `phone` , `email` , `openid` , and `profile` . Possible values provided by AWS are `aws.cognito.signin.user.admin` . Custom scopes created in Resource Servers are also supported.",
            "stability": "external",
            "summary": "The allowed OAuth scopes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3883
          },
          "name": "allowedOAuthScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-analyticsconfiguration"
            },
            "remarks": "> In AWS Regions where Amazon Pinpoint isn't available, user pools only support sending events to Amazon Pinpoint projects in AWS Region us-east-1. In Regions where Amazon Pinpoint is available, user pools support sending events to Amazon Pinpoint projects within that same Region.",
            "stability": "external",
            "summary": "The user pool analytics configuration for collecting metrics and sending them to your Amazon Pinpoint campaign."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3892
          },
          "name": "analyticsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-authsessionvalidity"
            },
            "remarks": "`AuthSessionValidity` is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires.",
            "stability": "external",
            "summary": "Amazon Cognito creates a session token for each API request in an authentication flow."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3899
          },
          "name": "authSessionValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-callbackurls"
            },
            "remarks": "A redirect URI must:\n\n- Be an absolute URI.\n- Be registered with the authorization server.\n- Not include a fragment component.\n\nSee [OAuth 2.0 - Redirection Endpoint](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6749#section-3.1.2) .\n\nAmazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes only.\n\nApp callback URLs such as myapp://example are also supported.",
            "stability": "external",
            "summary": "A list of allowed redirect (callback) URLs for the IdPs."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3918
          },
          "name": "callbackUrLs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-clientname"
            },
            "stability": "external",
            "summary": "The client name for the user pool client you would like to create."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3925
          },
          "name": "clientName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-defaultredirecturi"
            },
            "remarks": "A redirect URI must:\n\n- Be an absolute URI.\n- Be registered with the authorization server.\n- Not include a fragment component.\n\nSee [OAuth 2.0 - Redirection Endpoint](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6749#section-3.1.2) .\n\nAmazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes only.\n\nApp callback URLs such as myapp://example are also supported.",
            "stability": "external",
            "summary": "The default redirect URI. Must be in the `CallbackURLs` list."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3944
          },
          "name": "defaultRedirectUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-enablepropagateadditionalusercontextdata"
            },
            "remarks": "For more information about propagation of user context data, see [Adding advanced security to a user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html) . If you don’t include this parameter, you can't send device fingerprint information, including source IP address, to Amazon Cognito advanced security. You can only activate `EnablePropagateAdditionalUserContextData` in an app client that has a client secret.",
            "stability": "external",
            "summary": "Activates the propagation of additional user context data."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3951
          },
          "name": "enablePropagateAdditionalUserContextData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-enabletokenrevocation"
            },
            "remarks": "If you don't include this parameter, token revocation is automatically activated for the new user pool client.",
            "stability": "external",
            "summary": "Activates or deactivates token revocation. For more information about revoking tokens, see [RevokeToken](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html) ."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3960
          },
          "name": "enableTokenRevocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-explicitauthflows"
            },
            "remarks": "For each app client in your user pool, you can sign in your users with any combination of one or more flows, including with a user name and Secure Remote Password (SRP), a user name and password, or a custom authentication process that you define with Lambda functions.\n\n> If you don't specify a value for `ExplicitAuthFlows` , your user client supports `ALLOW_REFRESH_TOKEN_AUTH` , `ALLOW_USER_SRP_AUTH` , and `ALLOW_CUSTOM_AUTH` .\n\nValid values include:\n\n- `ALLOW_ADMIN_USER_PASSWORD_AUTH` : Enable admin based user password authentication flow `ADMIN_USER_PASSWORD_AUTH` . This setting replaces the `ADMIN_NO_SRP_AUTH` setting. With this authentication flow, your app passes a user name and password to Amazon Cognito in the request, instead of using the Secure Remote Password (SRP) protocol to securely transmit the password.\n- `ALLOW_CUSTOM_AUTH` : Enable Lambda trigger based authentication.\n- `ALLOW_USER_PASSWORD_AUTH` : Enable user password-based authentication. In this flow, Amazon Cognito receives the password in the request instead of using the SRP protocol to verify passwords.\n- `ALLOW_USER_SRP_AUTH` : Enable SRP-based authentication.\n- `ALLOW_REFRESH_TOKEN_AUTH` : Enable authflow to refresh tokens.\n\nIn some environments, you will see the values `ADMIN_NO_SRP_AUTH` , `CUSTOM_AUTH_FLOW_ONLY` , or `USER_PASSWORD_AUTH` . You can't assign these legacy `ExplicitAuthFlows` values to user pool clients at the same time as values that begin with `ALLOW_` ,\nlike `ALLOW_USER_SRP_AUTH` .",
            "stability": "external",
            "summary": "The authentication flows that you want your user pool client to support."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3980
          },
          "name": "explicitAuthFlows",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-generatesecret"
            },
            "stability": "external",
            "summary": "Boolean to specify whether you want to generate a secret for the user pool client being created."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3987
          },
          "name": "generateSecret",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-idtokenvalidity"
            },
            "remarks": "After this limit expires, your user can't use their ID token. To specify the time unit for `IdTokenValidity` as `seconds` , `minutes` , `hours` , or `days` , set a `TokenValidityUnits` value in your API request.\n\nFor example, when you set `IdTokenValidity` as `10` and `TokenValidityUnits` as `hours` , your user can authenticate their session with their ID token for 10 hours.\n\nThe default time unit for `IdTokenValidity` in an API request is hours.",
            "stability": "external",
            "summary": "The ID token time limit."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3998
          },
          "name": "idTokenValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-logouturls"
            },
            "stability": "external",
            "summary": "A list of allowed logout URLs for the IdPs."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4005
          },
          "name": "logoutUrLs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-preventuserexistenceerrors"
            },
            "remarks": "When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY` , those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.",
            "stability": "external",
            "summary": "Use this setting to choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4012
          },
          "name": "preventUserExistenceErrors",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-readattributes"
            },
            "stability": "external",
            "summary": "The read attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4019
          },
          "name": "readAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-refreshtokenvalidity"
            },
            "remarks": "After this limit expires, your user can't use their refresh token. To specify the time unit for `RefreshTokenValidity` as `seconds` , `minutes` , `hours` , or `days` , set a `TokenValidityUnits` value in your API request.\n\nFor example, when you set `RefreshTokenValidity` as `10` and `TokenValidityUnits` as `days` , your user can refresh their session and retrieve new access and ID tokens for 10 days.\n\nThe default time unit for `RefreshTokenValidity` in an API request is days. You can't set `RefreshTokenValidity` to 0. If you do, Amazon Cognito overrides the value with the default value of 30 days.",
            "stability": "external",
            "summary": "The refresh token time limit."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4030
          },
          "name": "refreshTokenValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-supportedidentityproviders"
            },
            "remarks": "The following are supported: `COGNITO` , `Facebook` , `Google` , `SignInWithApple` , and `LoginWithAmazon` . You can also specify the names that you configured for the SAML and OIDC IdPs in your user pool, for example `MySAMLIdP` or `MyOIDCIdP` .",
            "stability": "external",
            "summary": "A list of provider names for the identity providers (IdPs) that are supported on this client."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4037
          },
          "name": "supportedIdentityProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-tokenvalidityunits"
            },
            "remarks": "The default unit for RefreshToken is days, and default for ID and access tokens are hours.",
            "stability": "external",
            "summary": "The units in which the validity times are represented."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4044
          },
          "name": "tokenValidityUnits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-writeattributes"
            },
            "remarks": "If your app client allows users to sign in through an IdP, this array must include all attributes that you have mapped to IdP attributes. Amazon Cognito updates mapped attributes when users sign in to your application through an IdP. If your app client does not have write access to a mapped attribute, Amazon Cognito throws an error when it tries to update the attribute. For more information, see [Specifying IdP Attribute Mappings for Your user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html) .",
            "stability": "external",
            "summary": "The user pool attributes that the app client can write to."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4053
          },
          "name": "writeAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolClient"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-analyticsconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> In Regions where Amazon Pinpoint isn't available, user pools only support sending events to Amazon Pinpoint projects in us-east-1. In Regions where Amazon Pinpoint is available, user pools support sending events to Amazon Pinpoint projects within that same Region.",
        "stability": "external",
        "summary": "The Amazon Pinpoint analytics configuration necessary to collect metrics for a user pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst analyticsConfigurationProperty: cognito.CfnUserPoolClient.AnalyticsConfigurationProperty = {\n  applicationArn: 'applicationArn',\n  applicationId: 'applicationId',\n  externalId: 'externalId',\n  roleArn: 'roleArn',\n  userDataShared: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4146
      },
      "name": "AnalyticsConfigurationProperty",
      "namespace": "CfnUserPoolClient",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-analyticsconfiguration.html#cfn-cognito-userpoolclient-analyticsconfiguration-applicationarn"
            },
            "remarks": "You can use the Amazon Pinpoint project for integration with the chosen user pool client. Amazon Cognito publishes events to the Amazon Pinpoint project that the app ARN declares.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an Amazon Pinpoint project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4152
          },
          "name": "applicationArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-analyticsconfiguration.html#cfn-cognito-userpoolclient-analyticsconfiguration-applicationid"
            },
            "stability": "external",
            "summary": "The application ID for an Amazon Pinpoint application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4158
          },
          "name": "applicationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-analyticsconfiguration.html#cfn-cognito-userpoolclient-analyticsconfiguration-externalid"
            },
            "stability": "external",
            "summary": "The external ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4164
          },
          "name": "externalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-analyticsconfiguration.html#cfn-cognito-userpoolclient-analyticsconfiguration-rolearn"
            },
            "stability": "external",
            "summary": "The ARN of an AWS Identity and Access Management role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4170
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-analyticsconfiguration.html#cfn-cognito-userpoolclient-analyticsconfiguration-userdatashared"
            },
            "stability": "external",
            "summary": "If `UserDataShared` is `true` , Amazon Cognito includes user data in the events that it publishes to Amazon Pinpoint analytics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4176
          },
          "name": "userDataShared",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolClient.AnalyticsConfigurationProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-tokenvalidityunits.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The default unit for RefreshToken is days, and the default for ID and access tokens is hours.",
        "stability": "external",
        "summary": "The time units you use when you set the duration of ID, access, and refresh tokens.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst tokenValidityUnitsProperty: cognito.CfnUserPoolClient.TokenValidityUnitsProperty = {\n  accessToken: 'accessToken',\n  idToken: 'idToken',\n  refreshToken: 'refreshToken',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4249
      },
      "name": "TokenValidityUnitsProperty",
      "namespace": "CfnUserPoolClient",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-tokenvalidityunits.html#cfn-cognito-userpoolclient-tokenvalidityunits-accesstoken"
            },
            "remarks": "The default `AccessTokenValidity` time unit is hours. `AccessTokenValidity` duration can range from five minutes to one day.",
            "stability": "external",
            "summary": "A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `AccessTokenValidity` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4255
          },
          "name": "accessToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-tokenvalidityunits.html#cfn-cognito-userpoolclient-tokenvalidityunits-idtoken"
            },
            "remarks": "The default `IdTokenValidity` time unit is hours. `IdTokenValidity` duration can range from five minutes to one day.",
            "stability": "external",
            "summary": "A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `IdTokenValidity` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4261
          },
          "name": "idToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolclient-tokenvalidityunits.html#cfn-cognito-userpoolclient-tokenvalidityunits-refreshtoken"
            },
            "remarks": "The default `RefreshTokenValidity` time unit is days. `RefreshTokenValidity` duration can range from 60 minutes to 10 years.",
            "stability": "external",
            "summary": "A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `RefreshTokenValidity` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4267
          },
          "name": "refreshToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolClient.TokenValidityUnitsProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolClientProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolClient`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolClientProps: cognito.CfnUserPoolClientProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accessTokenValidity: 123,\n  allowedOAuthFlows: ['allowedOAuthFlows'],\n  allowedOAuthFlowsUserPoolClient: false,\n  allowedOAuthScopes: ['allowedOAuthScopes'],\n  analyticsConfiguration: {\n    applicationArn: 'applicationArn',\n    applicationId: 'applicationId',\n    externalId: 'externalId',\n    roleArn: 'roleArn',\n    userDataShared: false,\n  },\n  authSessionValidity: 123,\n  callbackUrLs: ['callbackUrLs'],\n  clientName: 'clientName',\n  defaultRedirectUri: 'defaultRedirectUri',\n  enablePropagateAdditionalUserContextData: false,\n  enableTokenRevocation: false,\n  explicitAuthFlows: ['explicitAuthFlows'],\n  generateSecret: false,\n  idTokenValidity: 123,\n  logoutUrLs: ['logoutUrLs'],\n  preventUserExistenceErrors: 'preventUserExistenceErrors',\n  readAttributes: ['readAttributes'],\n  refreshTokenValidity: 123,\n  supportedIdentityProviders: ['supportedIdentityProviders'],\n  tokenValidityUnits: {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    refreshToken: 'refreshToken',\n  },\n  writeAttributes: ['writeAttributes'],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClientProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 3468
      },
      "name": "CfnUserPoolClientProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool where you want to create a user pool client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3475
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-accesstokenvalidity"
            },
            "remarks": "After this limit expires, your user can't use their access token. To specify the time unit for `AccessTokenValidity` as `seconds` , `minutes` , `hours` , or `days` , set a `TokenValidityUnits` value in your API request.\n\nFor example, when you set `AccessTokenValidity` to `10` and `TokenValidityUnits` to `hours` , your user can authorize access with their access token for 10 hours.\n\nThe default time unit for `AccessTokenValidity` in an API request is hours.",
            "stability": "external",
            "summary": "The access token time limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3486
          },
          "name": "accessTokenValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthflows"
            },
            "remarks": "- **code** - Use a code grant flow, which provides an authorization code as the response. This code can be exchanged for access tokens with the `/oauth2/token` endpoint.\n- **implicit** - Issue the access token (and, optionally, ID token, based on scopes) directly to your user.\n- **client_credentials** - Issue the access token from the `/oauth2/token` endpoint directly to a non-person user using a combination of the client ID and client secret.",
            "stability": "external",
            "summary": "The allowed OAuth flows."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3497
          },
          "name": "allowedOAuthFlows",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthflowsuserpoolclient"
            },
            "stability": "external",
            "summary": "Set to true if the client is allowed to follow the OAuth protocol when interacting with Amazon Cognito user pools."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3504
          },
          "name": "allowedOAuthFlowsUserPoolClient",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthscopes"
            },
            "remarks": "Possible values provided by OAuth are `phone` , `email` , `openid` , and `profile` . Possible values provided by AWS are `aws.cognito.signin.user.admin` . Custom scopes created in Resource Servers are also supported.",
            "stability": "external",
            "summary": "The allowed OAuth scopes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3511
          },
          "name": "allowedOAuthScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-analyticsconfiguration"
            },
            "remarks": "> In AWS Regions where Amazon Pinpoint isn't available, user pools only support sending events to Amazon Pinpoint projects in AWS Region us-east-1. In Regions where Amazon Pinpoint is available, user pools support sending events to Amazon Pinpoint projects within that same Region.",
            "stability": "external",
            "summary": "The user pool analytics configuration for collecting metrics and sending them to your Amazon Pinpoint campaign."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3520
          },
          "name": "analyticsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-authsessionvalidity"
            },
            "remarks": "`AuthSessionValidity` is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires.",
            "stability": "external",
            "summary": "Amazon Cognito creates a session token for each API request in an authentication flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3527
          },
          "name": "authSessionValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-callbackurls"
            },
            "remarks": "A redirect URI must:\n\n- Be an absolute URI.\n- Be registered with the authorization server.\n- Not include a fragment component.\n\nSee [OAuth 2.0 - Redirection Endpoint](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6749#section-3.1.2) .\n\nAmazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes only.\n\nApp callback URLs such as myapp://example are also supported.",
            "stability": "external",
            "summary": "A list of allowed redirect (callback) URLs for the IdPs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3546
          },
          "name": "callbackUrLs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-clientname"
            },
            "stability": "external",
            "summary": "The client name for the user pool client you would like to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3553
          },
          "name": "clientName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-defaultredirecturi"
            },
            "remarks": "A redirect URI must:\n\n- Be an absolute URI.\n- Be registered with the authorization server.\n- Not include a fragment component.\n\nSee [OAuth 2.0 - Redirection Endpoint](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc6749#section-3.1.2) .\n\nAmazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes only.\n\nApp callback URLs such as myapp://example are also supported.",
            "stability": "external",
            "summary": "The default redirect URI. Must be in the `CallbackURLs` list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3572
          },
          "name": "defaultRedirectUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-enablepropagateadditionalusercontextdata"
            },
            "remarks": "For more information about propagation of user context data, see [Adding advanced security to a user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html) . If you don’t include this parameter, you can't send device fingerprint information, including source IP address, to Amazon Cognito advanced security. You can only activate `EnablePropagateAdditionalUserContextData` in an app client that has a client secret.",
            "stability": "external",
            "summary": "Activates the propagation of additional user context data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3579
          },
          "name": "enablePropagateAdditionalUserContextData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-enabletokenrevocation"
            },
            "remarks": "If you don't include this parameter, token revocation is automatically activated for the new user pool client.",
            "stability": "external",
            "summary": "Activates or deactivates token revocation. For more information about revoking tokens, see [RevokeToken](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3588
          },
          "name": "enableTokenRevocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-explicitauthflows"
            },
            "remarks": "For each app client in your user pool, you can sign in your users with any combination of one or more flows, including with a user name and Secure Remote Password (SRP), a user name and password, or a custom authentication process that you define with Lambda functions.\n\n> If you don't specify a value for `ExplicitAuthFlows` , your user client supports `ALLOW_REFRESH_TOKEN_AUTH` , `ALLOW_USER_SRP_AUTH` , and `ALLOW_CUSTOM_AUTH` .\n\nValid values include:\n\n- `ALLOW_ADMIN_USER_PASSWORD_AUTH` : Enable admin based user password authentication flow `ADMIN_USER_PASSWORD_AUTH` . This setting replaces the `ADMIN_NO_SRP_AUTH` setting. With this authentication flow, your app passes a user name and password to Amazon Cognito in the request, instead of using the Secure Remote Password (SRP) protocol to securely transmit the password.\n- `ALLOW_CUSTOM_AUTH` : Enable Lambda trigger based authentication.\n- `ALLOW_USER_PASSWORD_AUTH` : Enable user password-based authentication. In this flow, Amazon Cognito receives the password in the request instead of using the SRP protocol to verify passwords.\n- `ALLOW_USER_SRP_AUTH` : Enable SRP-based authentication.\n- `ALLOW_REFRESH_TOKEN_AUTH` : Enable authflow to refresh tokens.\n\nIn some environments, you will see the values `ADMIN_NO_SRP_AUTH` , `CUSTOM_AUTH_FLOW_ONLY` , or `USER_PASSWORD_AUTH` . You can't assign these legacy `ExplicitAuthFlows` values to user pool clients at the same time as values that begin with `ALLOW_` ,\nlike `ALLOW_USER_SRP_AUTH` .",
            "stability": "external",
            "summary": "The authentication flows that you want your user pool client to support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3608
          },
          "name": "explicitAuthFlows",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-generatesecret"
            },
            "stability": "external",
            "summary": "Boolean to specify whether you want to generate a secret for the user pool client being created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3615
          },
          "name": "generateSecret",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-idtokenvalidity"
            },
            "remarks": "After this limit expires, your user can't use their ID token. To specify the time unit for `IdTokenValidity` as `seconds` , `minutes` , `hours` , or `days` , set a `TokenValidityUnits` value in your API request.\n\nFor example, when you set `IdTokenValidity` as `10` and `TokenValidityUnits` as `hours` , your user can authenticate their session with their ID token for 10 hours.\n\nThe default time unit for `IdTokenValidity` in an API request is hours.",
            "stability": "external",
            "summary": "The ID token time limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3626
          },
          "name": "idTokenValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-logouturls"
            },
            "stability": "external",
            "summary": "A list of allowed logout URLs for the IdPs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3633
          },
          "name": "logoutUrLs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-preventuserexistenceerrors"
            },
            "remarks": "When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY` , those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.",
            "stability": "external",
            "summary": "Use this setting to choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3640
          },
          "name": "preventUserExistenceErrors",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-readattributes"
            },
            "stability": "external",
            "summary": "The read attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3647
          },
          "name": "readAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-refreshtokenvalidity"
            },
            "remarks": "After this limit expires, your user can't use their refresh token. To specify the time unit for `RefreshTokenValidity` as `seconds` , `minutes` , `hours` , or `days` , set a `TokenValidityUnits` value in your API request.\n\nFor example, when you set `RefreshTokenValidity` as `10` and `TokenValidityUnits` as `days` , your user can refresh their session and retrieve new access and ID tokens for 10 days.\n\nThe default time unit for `RefreshTokenValidity` in an API request is days. You can't set `RefreshTokenValidity` to 0. If you do, Amazon Cognito overrides the value with the default value of 30 days.",
            "stability": "external",
            "summary": "The refresh token time limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3658
          },
          "name": "refreshTokenValidity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-supportedidentityproviders"
            },
            "remarks": "The following are supported: `COGNITO` , `Facebook` , `Google` , `SignInWithApple` , and `LoginWithAmazon` . You can also specify the names that you configured for the SAML and OIDC IdPs in your user pool, for example `MySAMLIdP` or `MyOIDCIdP` .",
            "stability": "external",
            "summary": "A list of provider names for the identity providers (IdPs) that are supported on this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3665
          },
          "name": "supportedIdentityProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-tokenvalidityunits"
            },
            "remarks": "The default unit for RefreshToken is days, and default for ID and access tokens are hours.",
            "stability": "external",
            "summary": "The units in which the validity times are represented."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3672
          },
          "name": "tokenValidityUnits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-writeattributes"
            },
            "remarks": "If your app client allows users to sign in through an IdP, this array must include all attributes that you have mapped to IdP attributes. Amazon Cognito updates mapped attributes when users sign in to your application through an IdP. If your app client does not have write access to a mapped attribute, Amazon Cognito throws an error when it tries to update the attribute. For more information, see [Specifying IdP Attribute Mappings for Your user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html) .",
            "stability": "external",
            "summary": "The user pool attributes that the app client can write to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 3681
          },
          "name": "writeAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolClientProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolDomain": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolDomain",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The AWS::Cognito::UserPoolDomain resource creates a new domain for a user pool.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolDomain`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolDomain = new cognito.CfnUserPoolDomain(this, 'MyCfnUserPoolDomain', {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolDomain`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 4483
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomainProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4422
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4500
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4513
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolDomain",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4426
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CloudFrontDistribution"
            },
            "stability": "external",
            "summary": "The Amazon CloudFront endpoint that you use as the target of the alias that you set up with your Domain Name Service (DNS) provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4451
          },
          "name": "attrCloudFrontDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4505
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-domain"
            },
            "remarks": "For example: `auth.example.com` . If you're using a prefix domain, this field denotes the first part of the domain before `.auth.[region].amazoncognito.com` .\n\nThis string can include only lowercase letters, numbers, and hyphens. Don't use a hyphen for the first or last character. Use periods to separate subdomain names.",
            "stability": "external",
            "summary": "The domain name for the domain that hosts the sign-up and sign-in pages for your application."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4460
          },
          "name": "domain",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool where you want to associate a user pool domain."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4467
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-customdomainconfig"
            },
            "remarks": "Use this object to specify an SSL certificate that is managed by ACM.",
            "stability": "external",
            "summary": "The configuration for a custom domain that hosts the sign-up and sign-in pages for your application."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4474
          },
          "name": "customDomainConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolDomain"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpooldomain-customdomainconfigtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The configuration for a custom domain that hosts the sign-up and sign-in webpages for your application.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customDomainConfigTypeProperty: cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty = {\n  certificateArn: 'certificateArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4527
      },
      "name": "CustomDomainConfigTypeProperty",
      "namespace": "CfnUserPoolDomain",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpooldomain-customdomainconfigtype.html#cfn-cognito-userpooldomain-customdomainconfigtype-certificatearn"
            },
            "remarks": "You use this certificate for the subdomain of your custom domain.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4533
          },
          "name": "certificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolDomain.CustomDomainConfigTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolDomainProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolDomain`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolDomainProps: cognito.CfnUserPoolDomainProps = {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomainProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4333
      },
      "name": "CfnUserPoolDomainProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-domain"
            },
            "remarks": "For example: `auth.example.com` . If you're using a prefix domain, this field denotes the first part of the domain before `.auth.[region].amazoncognito.com` .\n\nThis string can include only lowercase letters, numbers, and hyphens. Don't use a hyphen for the first or last character. Use periods to separate subdomain names.",
            "stability": "external",
            "summary": "The domain name for the domain that hosts the sign-up and sign-in pages for your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4342
          },
          "name": "domain",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool where you want to associate a user pool domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4349
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-customdomainconfig"
            },
            "remarks": "Use this object to specify an SSL certificate that is managed by ACM.",
            "stability": "external",
            "summary": "The configuration for a custom domain that hosts the sign-up and sign-in pages for your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4356
          },
          "name": "customDomainConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolDomainProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolGroup": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a new group in the identified user pool.\n\nCalling this action requires developer credentials.\n\n> If you don't specify a value for a parameter, Amazon Cognito sets it to a default value.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolGroup = new cognito.CfnUserPoolGroup(this, 'MyCfnUserPoolGroup', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolGroup`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 4778
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4707
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4795
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4810
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4711
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4800
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4737
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-description"
            },
            "stability": "external",
            "summary": "A string containing the description of the group."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4744
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-groupname"
            },
            "remarks": "Must be unique.",
            "stability": "external",
            "summary": "The name of the group."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4751
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-precedence"
            },
            "remarks": "Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.\n\nTwo groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.\n\nThe default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .",
            "stability": "external",
            "summary": "A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4762
          },
          "name": "precedence",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-rolearn"
            },
            "stability": "external",
            "summary": "The role Amazon Resource Name (ARN) for the group."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4769
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolGroup"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolGroupProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolGroupProps: cognito.CfnUserPoolGroupProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4593
      },
      "name": "CfnUserPoolGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4600
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-description"
            },
            "stability": "external",
            "summary": "A string containing the description of the group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4607
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-groupname"
            },
            "remarks": "Must be unique.",
            "stability": "external",
            "summary": "The name of the group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4614
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-precedence"
            },
            "remarks": "Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.\n\nTwo groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.\n\nThe default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .",
            "stability": "external",
            "summary": "A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4625
          },
          "name": "precedence",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-rolearn"
            },
            "stability": "external",
            "summary": "The role Amazon Resource Name (ARN) for the group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4632
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolGroupProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolIdentityProvider": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolIdentityProvider",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::UserPoolIdentityProvider` resource creates an identity provider for a user pool.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolIdentityProvider`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\nconst cfnUserPoolIdentityProvider = new cognito.CfnUserPoolIdentityProvider(this, 'MyCfnUserPoolIdentityProvider', {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolIdentityProvider",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolIdentityProvider`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 5093
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4980
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5113
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5129
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolIdentityProvider",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4984
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5118
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-attributemapping"
            },
            "stability": "external",
            "summary": "A mapping of IdP attributes to standard and custom user pool attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5031
          },
          "name": "attributeMapping",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providerdetails"
            },
            "remarks": "- For Google and Login with Amazon:\n\n- client_id\n- client_secret\n- authorize_scopes\n- For Facebook:\n\n- client_id\n- client_secret\n- authorize_scopes\n- api_version\n- For Sign in with Apple:\n\n- client_id\n- team_id\n- key_id\n- private_key\n- authorize_scopes\n- For OpenID Connect (OIDC) providers:\n\n- client_id\n- client_secret\n- attributes_request_method\n- oidc_issuer\n- authorize_scopes\n- The following keys are only present if Amazon Cognito didn't discover them at the `oidc_issuer` URL.\n\n- authorize_url\n- token_url\n- attributes_url\n- jwks_uri\n- Amazon Cognito sets the value of the following keys automatically. They are read-only.\n\n- attributes_url_add_attributes\n- For SAML providers:\n\n- MetadataFile or MetadataURL\n- IDPSignout *optional*",
            "stability": "external",
            "summary": "The IdP details. The following list describes the provider detail keys for each IdP type."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5084
          },
          "name": "providerDetails",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providername"
            },
            "stability": "external",
            "summary": "The IdP name."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5010
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providertype"
            },
            "stability": "external",
            "summary": "The IdP type."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5017
          },
          "name": "providerType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5024
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-idpidentifiers"
            },
            "stability": "external",
            "summary": "A list of IdP identifiers."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5038
          },
          "name": "idpIdentifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolIdentityProvider"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolIdentityProvider`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\nconst cfnUserPoolIdentityProviderProps: cognito.CfnUserPoolIdentityProviderProps = {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 4823
      },
      "name": "CfnUserPoolIdentityProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providername"
            },
            "stability": "external",
            "summary": "The IdP name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4830
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providertype"
            },
            "stability": "external",
            "summary": "The IdP type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4837
          },
          "name": "providerType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4844
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-attributemapping"
            },
            "stability": "external",
            "summary": "A mapping of IdP attributes to standard and custom user pool attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4851
          },
          "name": "attributeMapping",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-idpidentifiers"
            },
            "stability": "external",
            "summary": "A list of IdP identifiers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4858
          },
          "name": "idpIdentifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providerdetails"
            },
            "remarks": "- For Google and Login with Amazon:\n\n- client_id\n- client_secret\n- authorize_scopes\n- For Facebook:\n\n- client_id\n- client_secret\n- authorize_scopes\n- api_version\n- For Sign in with Apple:\n\n- client_id\n- team_id\n- key_id\n- private_key\n- authorize_scopes\n- For OpenID Connect (OIDC) providers:\n\n- client_id\n- client_secret\n- attributes_request_method\n- oidc_issuer\n- authorize_scopes\n- The following keys are only present if Amazon Cognito didn't discover them at the `oidc_issuer` URL.\n\n- authorize_url\n- token_url\n- attributes_url\n- jwks_uri\n- Amazon Cognito sets the value of the following keys automatically. They are read-only.\n\n- attributes_url_add_attributes\n- For SAML providers:\n\n- MetadataFile or MetadataURL\n- IDPSignout *optional*",
            "stability": "external",
            "summary": "The IdP details. The following list describes the provider detail keys for each IdP type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 4904
          },
          "name": "providerDetails",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolIdentityProviderProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\nconst cfnUserPoolProps: cognito.CfnUserPoolProps = {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deletionProtection: 'deletionProtection',\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n    snsRegion: 'snsRegion',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  userAttributeUpdateSettings: {\n    attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n  },\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 1087
      },
      "name": "CfnUserPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-accountrecoverysetting"
            },
            "remarks": "It allows you to define a preferred method when a user has more than one method available. With this setting, SMS does not qualify for a valid password recovery mechanism if the user also has SMS MFA enabled. In the absence of this setting, Cognito uses the legacy behavior to determine the recovery method where SMS is preferred over email.",
            "stability": "external",
            "summary": "Use this setting to define which verified available method a user can use to recover their password when they call `ForgotPassword` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1094
          },
          "name": "accountRecoverySetting",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-admincreateuserconfig"
            },
            "stability": "external",
            "summary": "The configuration for creating a new user profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1101
          },
          "name": "adminCreateUserConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-aliasattributes"
            },
            "remarks": "> This user pool property cannot be updated.",
            "stability": "external",
            "summary": "Attributes supported as an alias for this user pool. Possible values: *phone_number* , *email* , or *preferred_username* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1110
          },
          "name": "aliasAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-autoverifiedattributes"
            },
            "remarks": "Possible values: *email* , *phone_number* .",
            "stability": "external",
            "summary": "The attributes to be auto-verified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1117
          },
          "name": "autoVerifiedAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-deletionprotection"
            },
            "remarks": "Before you can delete a user pool that you have protected against deletion, you must deactivate this feature.\n\nWhen you try to delete a protected user pool in a `DeleteUserPool` API request, Amazon Cognito returns an `InvalidParameterException` error. To delete a protected user pool, send a new `DeleteUserPool` request after you deactivate deletion protection in an `UpdateUserPool` API request.",
            "stability": "external",
            "summary": "When active, `DeletionProtection` prevents accidental deletion of your user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1126
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-deviceconfiguration"
            },
            "remarks": "A null value indicates that you have deactivated device remembering in your user pool.\n\n> When you provide a value for any `DeviceConfiguration` field, you activate the Amazon Cognito device-remembering feature.",
            "stability": "external",
            "summary": "The device-remembering configuration for a user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1135
          },
          "name": "deviceConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailconfiguration"
            },
            "remarks": "The email configuration type sets your preferred sending method, AWS Region, and sender for messages from your user pool.",
            "stability": "external",
            "summary": "The email configuration of your user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1142
          },
          "name": "emailConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailverificationmessage"
            },
            "remarks": "See [VerificationMessageTemplateType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html) .",
            "stability": "external",
            "summary": "This parameter is no longer used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1149
          },
          "name": "emailVerificationMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailverificationsubject"
            },
            "remarks": "See [VerificationMessageTemplateType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html) .",
            "stability": "external",
            "summary": "This parameter is no longer used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1156
          },
          "name": "emailVerificationSubject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-enabledmfas"
            },
            "remarks": "To disable all MFAs after it has been enabled, set MfaConfiguration to “OFF” and remove EnabledMfas. MFAs can only be all disabled if MfaConfiguration is OFF. Once SMS_MFA is enabled, SMS_MFA can only be disabled by setting MfaConfiguration to “OFF”. Can be one of the following values:\n\n- `SMS_MFA` - Enables SMS MFA for the user pool. SMS_MFA can only be enabled if SMS configuration is provided.\n- `SOFTWARE_TOKEN_MFA` - Enables software token MFA for the user pool.\n\nAllowed values: `SMS_MFA` | `SOFTWARE_TOKEN_MFA`",
            "stability": "external",
            "summary": "Enables MFA on a specified user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1168
          },
          "name": "enabledMfas",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-lambdaconfig"
            },
            "remarks": "> In a push model, event sources (such as Amazon S3 and custom applications) need permission to invoke a function. So you must make an extra call to add permission for these event sources to invoke your Lambda function.\n>\n> For more information on using the Lambda API to add permission, see [AddPermission](https://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html) .\n>\n> For adding permission using the AWS CLI , see [add-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/add-permission.html) .",
            "stability": "external",
            "summary": "The Lambda trigger configuration information for the new user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1181
          },
          "name": "lambdaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-mfaconfiguration"
            },
            "remarks": "- `OFF` MFA won't be used for any users.\n- `ON` MFA is required for all users to sign in.\n- `OPTIONAL` MFA will be required only for individual users who have an MFA factor activated.",
            "stability": "external",
            "summary": "The multi-factor authentication (MFA) configuration. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1192
          },
          "name": "mfaConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-policies"
            },
            "stability": "external",
            "summary": "The policy associated with a user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1199
          },
          "name": "policies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-schema"
            },
            "remarks": "> During a user pool update, you can add new schema attributes but you cannot modify or delete an existing schema attribute.",
            "stability": "external",
            "summary": "The schema attributes for the new user pool. These attributes can be standard or custom attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1208
          },
          "name": "schema",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsauthenticationmessage"
            },
            "stability": "external",
            "summary": "A string representing the SMS authentication message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1215
          },
          "name": "smsAuthenticationMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsconfiguration"
            },
            "remarks": "To send SMS messages with Amazon SNS in the AWS Region that you want, the Amazon Cognito user pool uses an AWS Identity and Access Management (IAM) role in your AWS account .",
            "stability": "external",
            "summary": "The SMS configuration with the settings that your Amazon Cognito user pool must use to send an SMS message from your AWS account through Amazon Simple Notification Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1222
          },
          "name": "smsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsverificationmessage"
            },
            "remarks": "See [VerificationMessageTemplateType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html) .",
            "stability": "external",
            "summary": "This parameter is no longer used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1229
          },
          "name": "smsVerificationMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userattributeupdatesettings"
            },
            "remarks": "These settings include the property `AttributesRequireVerificationBeforeUpdate` ,\na user-pool setting that tells Amazon Cognito how to handle changes to the value of your users' email address and phone number attributes. For\nmore information, see [Verifying updates to email addresses and phone numbers](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates) .",
            "stability": "external",
            "summary": "The settings for updates to user attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1238
          },
          "name": "userAttributeUpdateSettings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserAttributeUpdateSettingsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-usernameattributes"
            },
            "remarks": "Possible values: `phone_number` or `email` .\n\nThis user pool property cannot be updated.",
            "stability": "external",
            "summary": "Determines whether email addresses or phone numbers can be specified as user names when a user signs up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1247
          },
          "name": "usernameAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-usernameconfiguration"
            },
            "remarks": "For example, when this is set to `False` , users will be able to sign in using either \"username\" or \"Username\". This configuration is immutable once it has been set.",
            "stability": "external",
            "summary": "You can choose to set case sensitivity on the username input for the selected sign-in option."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1254
          },
          "name": "usernameConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooladdons"
            },
            "remarks": "Set the key `AdvancedSecurityMode` to the value \"AUDIT\".",
            "stability": "external",
            "summary": "Enables advanced security risk detection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1261
          },
          "name": "userPoolAddOns",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpoolname"
            },
            "stability": "external",
            "summary": "A string used to name the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1268
          },
          "name": "userPoolName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooltags"
            },
            "remarks": "A tag is a label that you can use to categorize and manage user pools in different ways, such as by purpose, owner, environment, or other criteria.",
            "stability": "external",
            "summary": "The tag keys and values to assign to the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1275
          },
          "name": "userPoolTags",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-verificationmessagetemplate"
            },
            "stability": "external",
            "summary": "The template for the verification message that the user sees when the app requests permission to access the user's information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 1282
          },
          "name": "verificationMessageTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolResourceServer": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolResourceServer",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::UserPoolResourceServer` resource creates a new OAuth2.0 resource server and defines custom scopes in it.\n\n> If you don't specify a value for a parameter, Amazon Cognito sets it to a default value.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolResourceServer`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolResourceServer = new cognito.CfnUserPoolResourceServer(this, 'MyCfnUserPoolResourceServer', {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServer",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolResourceServer`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 5302
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5242
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5320
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5334
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolResourceServer",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5246
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5325
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-identifier"
            },
            "remarks": "This could be an HTTPS endpoint where the resource server is located. For example: `https://my-weather-api.example.com` .",
            "stability": "external",
            "summary": "A unique resource server identifier for the resource server."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5272
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-name"
            },
            "stability": "external",
            "summary": "A friendly name for the resource server."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5279
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5286
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-scopes"
            },
            "remarks": "Each scope is a map with keys `ScopeName` and `ScopeDescription` .",
            "stability": "external",
            "summary": "A list of scopes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5293
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolResourceServer"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolresourceserver-resourceserverscopetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A resource server scope.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst resourceServerScopeTypeProperty: cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5348
      },
      "name": "ResourceServerScopeTypeProperty",
      "namespace": "CfnUserPoolResourceServer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolresourceserver-resourceserverscopetype.html#cfn-cognito-userpoolresourceserver-resourceserverscopetype-scopedescription"
            },
            "stability": "external",
            "summary": "A description of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5354
          },
          "name": "scopeDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolresourceserver-resourceserverscopetype.html#cfn-cognito-userpoolresourceserver-resourceserverscopetype-scopename"
            },
            "stability": "external",
            "summary": "The name of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5360
          },
          "name": "scopeName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolResourceServer`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolResourceServerProps: cognito.CfnUserPoolResourceServerProps = {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5142
      },
      "name": "CfnUserPoolResourceServerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-identifier"
            },
            "remarks": "This could be an HTTPS endpoint where the resource server is located. For example: `https://my-weather-api.example.com` .",
            "stability": "external",
            "summary": "A unique resource server identifier for the resource server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5149
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-name"
            },
            "stability": "external",
            "summary": "A friendly name for the resource server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5156
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5163
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-scopes"
            },
            "remarks": "Each scope is a map with keys `ScopeName` and `ScopeDescription` .",
            "stability": "external",
            "summary": "A list of scopes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5170
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolResourceServerProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolRiskConfigurationAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::UserPoolRiskConfigurationAttachment` resource sets the risk configuration that is used for Amazon Cognito advanced security features.\n\nYou can specify risk configuration for a single client (with a specific `clientId` ) or for all clients (by setting the `clientId` to `ALL` ). If you specify `ALL` , the default configuration is used for every client that has had no risk configuration set previously. If you specify risk configuration for a particular client, it no longer falls back to the `ALL` configuration.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolRiskConfigurationAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolRiskConfigurationAttachment = new cognito.CfnUserPoolRiskConfigurationAttachment(this, 'MyCfnUserPoolRiskConfigurationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolRiskConfigurationAttachment`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 5601
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5534
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5619
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5634
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5538
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5624
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-clientid"
            },
            "remarks": "You can specify the risk configuration for a single client (with a specific ClientId) or for all clients (by setting the ClientId to `ALL` ).",
            "stability": "external",
            "summary": "The app client ID."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5564
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5571
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfiguration"
            },
            "stability": "external",
            "summary": "The account takeover risk configuration object, including the `NotifyConfiguration` object and `Actions` to take if there is an account takeover."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5578
          },
          "name": "accountTakeoverRiskConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfiguration"
            },
            "stability": "external",
            "summary": "The compromised credentials risk configuration object, including the `EventFilter` and the `EventAction` ."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5585
          },
          "name": "compromisedCredentialsRiskConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-riskexceptionconfiguration"
            },
            "stability": "external",
            "summary": "The configuration to override the risk decision."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5592
          },
          "name": "riskExceptionConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractiontype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Account takeover action type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverActionTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty = {\n  eventAction: 'eventAction',\n  notify: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5648
      },
      "name": "AccountTakeoverActionTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractiontype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoveractiontype-eventaction"
            },
            "remarks": "- `BLOCK` Choosing this action will block the request.\n- `MFA_IF_CONFIGURED` Present an MFA challenge if user has configured it, else allow the request.\n- `MFA_REQUIRED` Present an MFA challenge if user has configured it, else block the request.\n- `NO_ACTION` Allow the user to sign in.",
            "stability": "external",
            "summary": "The action to take in response to the account takeover action. Valid values are as follows:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5659
          },
          "name": "eventAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractiontype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoveractiontype-notify"
            },
            "stability": "external",
            "summary": "Flag specifying whether to send a notification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5665
          },
          "name": "notify",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Account takeover actions type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty = {\n  highAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  lowAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  mediumAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5731
      },
      "name": "AccountTakeoverActionsTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype-highaction"
            },
            "stability": "external",
            "summary": "Action to take for a high risk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5737
          },
          "name": "highAction",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype-lowaction"
            },
            "stability": "external",
            "summary": "Action to take for a low risk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5743
          },
          "name": "lowAction",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoveractionstype-mediumaction"
            },
            "stability": "external",
            "summary": "Action to take for a medium risk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5749
          },
          "name": "mediumAction",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfigurationtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Configuration for mitigation actions and notification for different levels of risk detected for a potential account takeover.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty = {\n  actions: {\n    highAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    lowAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    mediumAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n  },\n\n  // the properties below are optional\n  notifyConfiguration: {\n    sourceArn: 'sourceArn',\n\n    // the properties below are optional\n    blockEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    from: 'from',\n    mfaEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    noActionEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    replyTo: 'replyTo',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5816
      },
      "name": "AccountTakeoverRiskConfigurationTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfigurationtype-actions"
            },
            "stability": "external",
            "summary": "Account takeover risk configuration actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5822
          },
          "name": "actions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfigurationtype-notifyconfiguration"
            },
            "stability": "external",
            "summary": "The notify configuration used to construct email notifications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5828
          },
          "name": "notifyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-compromisedcredentialsactionstype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The compromised credentials actions type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst compromisedCredentialsActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty = {\n  eventAction: 'eventAction',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5893
      },
      "name": "CompromisedCredentialsActionsTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-compromisedcredentialsactionstype.html#cfn-cognito-userpoolriskconfigurationattachment-compromisedcredentialsactionstype-eventaction"
            },
            "stability": "external",
            "summary": "The event action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5899
          },
          "name": "eventAction",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfigurationtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The compromised credentials risk configuration type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst compromisedCredentialsRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty = {\n  actions: {\n    eventAction: 'eventAction',\n  },\n\n  // the properties below are optional\n  eventFilter: ['eventFilter'],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5961
      },
      "name": "CompromisedCredentialsRiskConfigurationTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfigurationtype-actions"
            },
            "stability": "external",
            "summary": "The compromised credentials risk configuration actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5967
          },
          "name": "actions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfigurationtype-eventfilter"
            },
            "remarks": "The default is to perform all events if no event filter is specified.",
            "stability": "external",
            "summary": "Perform the action for these events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5973
          },
          "name": "eventFilter",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The notify configuration type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst notifyConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty = {\n  sourceArn: 'sourceArn',\n\n  // the properties below are optional\n  blockEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  from: 'from',\n  mfaEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  noActionEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  replyTo: 'replyTo',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6038
      },
      "name": "NotifyConfigurationTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype-sourcearn"
            },
            "remarks": "This identity permits Amazon Cognito to send for the email address specified in the `From` parameter.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6074
          },
          "name": "sourceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype-blockemail"
            },
            "stability": "external",
            "summary": "Email template used when a detected risk event is blocked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6044
          },
          "name": "blockEmail",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype-from"
            },
            "remarks": "The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.",
            "stability": "external",
            "summary": "The email address that is sending the email."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6050
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype-mfaemail"
            },
            "stability": "external",
            "summary": "The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6056
          },
          "name": "mfaEmail",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype-noactionemail"
            },
            "stability": "external",
            "summary": "The email template used when a detected risk event is allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6062
          },
          "name": "noActionEmail",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyconfigurationtype-replyto"
            },
            "stability": "external",
            "summary": "The destination to which the receiver of an email should reply to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6068
          },
          "name": "replyTo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyemailtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The notify email type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst notifyEmailTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty = {\n  subject: 'subject',\n\n  // the properties below are optional\n  htmlBody: 'htmlBody',\n  textBody: 'textBody',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6151
      },
      "name": "NotifyEmailTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyemailtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyemailtype-subject"
            },
            "stability": "external",
            "summary": "The email subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6163
          },
          "name": "subject",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyemailtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyemailtype-htmlbody"
            },
            "stability": "external",
            "summary": "The email HTML body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6157
          },
          "name": "htmlBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-notifyemailtype.html#cfn-cognito-userpoolriskconfigurationattachment-notifyemailtype-textbody"
            },
            "stability": "external",
            "summary": "The email text body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6169
          },
          "name": "textBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-riskexceptionconfigurationtype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The type of the configuration to override the risk decision.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst riskExceptionConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty = {\n  blockedIpRangeList: ['blockedIpRangeList'],\n  skippedIpRangeList: ['skippedIpRangeList'],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6237
      },
      "name": "RiskExceptionConfigurationTypeProperty",
      "namespace": "CfnUserPoolRiskConfigurationAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-riskexceptionconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-riskexceptionconfigurationtype-blockediprangelist"
            },
            "remarks": "The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.",
            "stability": "external",
            "summary": "Overrides the risk decision to always block the pre-authentication requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6243
          },
          "name": "blockedIpRangeList",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpoolriskconfigurationattachment-riskexceptionconfigurationtype.html#cfn-cognito-userpoolriskconfigurationattachment-riskexceptionconfigurationtype-skippediprangelist"
            },
            "remarks": "The IP range is in CIDR notation.",
            "stability": "external",
            "summary": "Risk detection isn't performed on the IP addresses in this range list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6249
          },
          "name": "skippedIpRangeList",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolRiskConfigurationAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolRiskConfigurationAttachmentProps: cognito.CfnUserPoolRiskConfigurationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 5425
      },
      "name": "CfnUserPoolRiskConfigurationAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-clientid"
            },
            "remarks": "You can specify the risk configuration for a single client (with a specific ClientId) or for all clients (by setting the ClientId to `ALL` ).",
            "stability": "external",
            "summary": "The app client ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5432
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5439
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfiguration"
            },
            "stability": "external",
            "summary": "The account takeover risk configuration object, including the `NotifyConfiguration` object and `Actions` to take if there is an account takeover."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5446
          },
          "name": "accountTakeoverRiskConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfiguration"
            },
            "stability": "external",
            "summary": "The compromised credentials risk configuration object, including the `EventFilter` and the `EventAction` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5453
          },
          "name": "compromisedCredentialsRiskConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-riskexceptionconfiguration"
            },
            "stability": "external",
            "summary": "The configuration to override the risk decision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 5460
          },
          "name": "riskExceptionConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolRiskConfigurationAttachmentProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachment": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolUICustomizationAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::UserPoolUICustomizationAttachment` resource sets the UI customization information for a user pool's built-in app UI.\n\nYou can specify app UI customization settings for a single client (with a specific `clientId` ) or for all clients (by setting the `clientId` to `ALL` ). If you specify `ALL` , the default configuration is used for every client that has had no UI customization set previously. If you specify UI customization settings for a particular client, it no longer falls back to the `ALL` configuration.\n\n> Before you create this resource, your user pool must have a domain associated with it. You can create an `AWS::Cognito::UserPoolDomain` resource first in this user pool.\n\nSetting a logo image isn't supported from AWS CloudFormation . Use the Amazon Cognito [SetUICustomization](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUICustomization.html#API_SetUICustomization_RequestSyntax) API operation to set the image.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolUICustomizationAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUICustomizationAttachment = new cognito.CfnUserPoolUICustomizationAttachment(this, 'MyCfnUserPoolUICustomizationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolUICustomizationAttachment`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 6458
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6405
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6474
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6487
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolUICustomizationAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6409
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6479
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-clientid"
            },
            "remarks": "You can specify the UI customization settings for a single client (with a specific clientId) or for all clients (by setting the clientId to `ALL` ).",
            "stability": "external",
            "summary": "The client ID for the client app."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6435
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6442
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-css"
            },
            "stability": "external",
            "summary": "The CSS values in the UI customization."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6449
          },
          "name": "css",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUICustomizationAttachment"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolUICustomizationAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUICustomizationAttachmentProps: cognito.CfnUserPoolUICustomizationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6312
      },
      "name": "CfnUserPoolUICustomizationAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-clientid"
            },
            "remarks": "You can specify the UI customization settings for a single client (with a specific clientId) or for all clients (by setting the clientId to `ALL` ).",
            "stability": "external",
            "summary": "The client ID for the client app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6319
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6326
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-css"
            },
            "stability": "external",
            "summary": "The CSS values in the UI customization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6333
          },
          "name": "css",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUICustomizationAttachmentProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUser": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolUser",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Cognito::UserPoolUser` resource creates an Amazon Cognito user pool user.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolUser`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\nconst cfnUserPoolUser = new cognito.CfnUserPoolUser(this, 'MyCfnUserPoolUser', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolUser`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 6778
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6663
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6798
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6816
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolUser",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6667
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6803
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-clientmetadata"
            },
            "remarks": "You create custom workflows by assigning AWS Lambda functions to user pool triggers. When you create a `UserPoolUser` resource and include the `ClientMetadata` property, Amazon Cognito invokes the function that is assigned to the *pre sign-up* trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a `clientMetadata` attribute, which provides the data that you assigned to the ClientMetadata property. In your function code in AWS Lambda , you can process the `clientMetadata` value to enhance your workflow for your specific needs.\n\nFor more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html) in the *Amazon Cognito Developer Guide* .\n\n> Take the following limitations into consideration when you use the ClientMetadata parameter:\n>\n> - Amazon Cognito does not store the ClientMetadata value. This data is available only to AWS Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose.\n> - Amazon Cognito does not validate the ClientMetadata value.\n> - Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide sensitive information.",
            "stability": "external",
            "summary": "A map of custom key-value pairs that you can provide as input for the custom workflow that is invoked by the *pre sign-up* trigger."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6710
          },
          "name": "clientMetadata",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool where the user will be created."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6693
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-desireddeliverymediums"
            },
            "remarks": "Specify `\"SMS\"` if the phone number will be used. The default value is `\"SMS\"` . You can specify more than one value.",
            "stability": "external",
            "summary": "Specify `\"EMAIL\"` if email will be used to send the welcome message."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6717
          },
          "name": "desiredDeliveryMediums",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-forcealiascreation"
            },
            "remarks": "Otherwise, it is ignored.\n\nIf this parameter is set to `True` and the phone number or email address specified in the UserAttributes parameter already exists as an alias with a different user, the API call will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias.\n\nIf this parameter is set to `False` , the API throws an `AliasExistsException` error if the alias already exists. The default value is `False` .",
            "stability": "external",
            "summary": "This parameter is used only if the `phone_number_verified` or `email_verified` attribute is set to `True` ."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6728
          },
          "name": "forceAliasCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-messageaction"
            },
            "remarks": "Set to `SUPPRESS` to suppress sending the message. You can specify only one value.",
            "stability": "external",
            "summary": "Set to `RESEND` to resend the invitation message to a user that already exists and reset the expiration limit on the user's account."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6735
          },
          "name": "messageAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-userattributes"
            },
            "remarks": "These are name-value pairs You can create a user without specifying any attributes other than `Username` . However, any attributes that you specify as required (in [](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html) or in the *Attributes* tab of the console) must be supplied either by you (in your call to `AdminCreateUser` ) or by the user (when they sign up in response to your welcome message).\n\nFor custom attributes, you must prepend the `custom:` prefix to the attribute name.\n\nTo send a message inviting the user to sign up, you must specify the user's email address or phone number. This can be done in your call to AdminCreateUser or in the *Users* tab of the Amazon Cognito console for managing your user pools.\n\nIn your call to `AdminCreateUser` , you can set the `email_verified` attribute to `True` , and you can set the `phone_number_verified` attribute to `True` . (You can also do this by calling [](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) .)\n\n- *email* : The email address of the user to whom the message that contains the code and user name will be sent. Required if the `email_verified` attribute is set to `True` , or if `\"EMAIL\"` is specified in the `DesiredDeliveryMediums` parameter.\n- *phone_number* : The phone number of the user to whom the message that contains the code and user name will be sent. Required if the `phone_number_verified` attribute is set to `True` , or if `\"SMS\"` is specified in the `DesiredDeliveryMediums` parameter.",
            "stability": "external",
            "summary": "The user attributes and attribute values to be set for the user to be created."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6751
          },
          "name": "userAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-username"
            },
            "remarks": "Must be unique within the user pool. Must be a UTF-8 string between 1 and 128 characters. After the user is created, the username can't be changed.",
            "stability": "external",
            "summary": "The username for the user."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6758
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-validationdata"
            },
            "remarks": "This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. For example, you might choose to allow or disallow user sign-up based on the user's domain.\n\nTo configure custom validation, you must create a Pre Sign-up AWS Lambda trigger for the user pool as described in the Amazon Cognito Developer Guide. The Lambda trigger receives the validation data and uses it in the validation process.\n\nThe user's validation data isn't persisted.",
            "stability": "external",
            "summary": "The user's validation data."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6769
          },
          "name": "validationData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUser"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpooluser-attributetype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies whether the attribute is standard or custom.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst attributeTypeProperty: cognito.CfnUserPoolUser.AttributeTypeProperty = {\n  name: 'name',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6830
      },
      "name": "AttributeTypeProperty",
      "namespace": "CfnUserPoolUser",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpooluser-attributetype.html#cfn-cognito-userpooluser-attributetype-name"
            },
            "stability": "external",
            "summary": "The name of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6836
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpooluser-attributetype.html#cfn-cognito-userpooluser-attributetype-value"
            },
            "stability": "external",
            "summary": "The value of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6842
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUser.AttributeTypeProperty"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUserProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolUser`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\nconst cfnUserPoolUserProps: cognito.CfnUserPoolUserProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6500
      },
      "name": "CfnUserPoolUserProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool where the user will be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6507
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-clientmetadata"
            },
            "remarks": "You create custom workflows by assigning AWS Lambda functions to user pool triggers. When you create a `UserPoolUser` resource and include the `ClientMetadata` property, Amazon Cognito invokes the function that is assigned to the *pre sign-up* trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a `clientMetadata` attribute, which provides the data that you assigned to the ClientMetadata property. In your function code in AWS Lambda , you can process the `clientMetadata` value to enhance your workflow for your specific needs.\n\nFor more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html) in the *Amazon Cognito Developer Guide* .\n\n> Take the following limitations into consideration when you use the ClientMetadata parameter:\n>\n> - Amazon Cognito does not store the ClientMetadata value. This data is available only to AWS Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose.\n> - Amazon Cognito does not validate the ClientMetadata value.\n> - Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide sensitive information.",
            "stability": "external",
            "summary": "A map of custom key-value pairs that you can provide as input for the custom workflow that is invoked by the *pre sign-up* trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6524
          },
          "name": "clientMetadata",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-desireddeliverymediums"
            },
            "remarks": "Specify `\"SMS\"` if the phone number will be used. The default value is `\"SMS\"` . You can specify more than one value.",
            "stability": "external",
            "summary": "Specify `\"EMAIL\"` if email will be used to send the welcome message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6531
          },
          "name": "desiredDeliveryMediums",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-forcealiascreation"
            },
            "remarks": "Otherwise, it is ignored.\n\nIf this parameter is set to `True` and the phone number or email address specified in the UserAttributes parameter already exists as an alias with a different user, the API call will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias.\n\nIf this parameter is set to `False` , the API throws an `AliasExistsException` error if the alias already exists. The default value is `False` .",
            "stability": "external",
            "summary": "This parameter is used only if the `phone_number_verified` or `email_verified` attribute is set to `True` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6542
          },
          "name": "forceAliasCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-messageaction"
            },
            "remarks": "Set to `SUPPRESS` to suppress sending the message. You can specify only one value.",
            "stability": "external",
            "summary": "Set to `RESEND` to resend the invitation message to a user that already exists and reset the expiration limit on the user's account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6549
          },
          "name": "messageAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-userattributes"
            },
            "remarks": "These are name-value pairs You can create a user without specifying any attributes other than `Username` . However, any attributes that you specify as required (in [](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html) or in the *Attributes* tab of the console) must be supplied either by you (in your call to `AdminCreateUser` ) or by the user (when they sign up in response to your welcome message).\n\nFor custom attributes, you must prepend the `custom:` prefix to the attribute name.\n\nTo send a message inviting the user to sign up, you must specify the user's email address or phone number. This can be done in your call to AdminCreateUser or in the *Users* tab of the Amazon Cognito console for managing your user pools.\n\nIn your call to `AdminCreateUser` , you can set the `email_verified` attribute to `True` , and you can set the `phone_number_verified` attribute to `True` . (You can also do this by calling [](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) .)\n\n- *email* : The email address of the user to whom the message that contains the code and user name will be sent. Required if the `email_verified` attribute is set to `True` , or if `\"EMAIL\"` is specified in the `DesiredDeliveryMediums` parameter.\n- *phone_number* : The phone number of the user to whom the message that contains the code and user name will be sent. Required if the `phone_number_verified` attribute is set to `True` , or if `\"SMS\"` is specified in the `DesiredDeliveryMediums` parameter.",
            "stability": "external",
            "summary": "The user attributes and attribute values to be set for the user to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6565
          },
          "name": "userAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-username"
            },
            "remarks": "Must be unique within the user pool. Must be a UTF-8 string between 1 and 128 characters. After the user is created, the username can't be changed.",
            "stability": "external",
            "summary": "The username for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6572
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-validationdata"
            },
            "remarks": "This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. For example, you might choose to allow or disallow user sign-up based on the user's domain.\n\nTo configure custom validation, you must create a Pre Sign-up AWS Lambda trigger for the user pool as described in the Amazon Cognito Developer Guide. The Lambda trigger receives the validation data and uses it in the validation process.\n\nThe user's validation data isn't persisted.",
            "stability": "external",
            "summary": "The user's validation data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6583
          },
          "name": "validationData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUserProps"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachment": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Cognito::UserPoolUserToGroupAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Adds the specified user to the specified group.\n\nCalling this action requires developer credentials.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Cognito::UserPoolUserToGroupAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUserToGroupAttachment = new cognito.CfnUserPoolUserToGroupAttachment(this, 'MyCfnUserPoolUserToGroupAttachment', {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Cognito::UserPoolUserToGroupAttachment`."
        },
        "locationInModule": {
          "filename": "lib/cognito.generated.ts",
          "line": 7048
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6995
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 7065
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 7078
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUserPoolUserToGroupAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6999
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 7070
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-groupname"
            },
            "stability": "external",
            "summary": "The group name."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 7025
          },
          "name": "groupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-username"
            },
            "stability": "external",
            "summary": "The username for the user."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 7032
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 7039
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUserToGroupAttachment"
    },
    "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUserPoolUserToGroupAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUserToGroupAttachmentProps: cognito.CfnUserPoolUserToGroupAttachmentProps = {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n};"
      },
      "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cognito.generated.ts",
        "line": 6905
      },
      "name": "CfnUserPoolUserToGroupAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-groupname"
            },
            "stability": "external",
            "summary": "The group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6912
          },
          "name": "groupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-username"
            },
            "stability": "external",
            "summary": "The username for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6919
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-userpoolid"
            },
            "stability": "external",
            "summary": "The user pool ID for the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cognito.generated.ts",
            "line": 6926
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cognito.generated:CfnUserPoolUserToGroupAttachmentProps"
    },
    "@aws-cdk/aws-cognito.ClientAttributes": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "A set of attributes, useful to set Read and Write attributes.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.ClientAttributes",
      "initializer": {
        "docs": {
          "default": "- a ClientAttributes object without any attributes",
          "stability": "stable",
          "summary": "Creates a ClientAttributes with the specified attributes."
        },
        "locationInModule": {
          "filename": "lib/user-pool-attr.ts",
          "line": 499
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 487
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The list of attributes represented by this ClientAttributes."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 543
          },
          "name": "attributes",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a custom ClientAttributes with the specified attributes."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 526
          },
          "name": "withCustomAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "a list of custom attributes to add to the set."
              },
              "name": "attributes",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.ClientAttributes"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a custom ClientAttributes with the specified attributes."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 507
          },
          "name": "withStandardAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "a list of standard attributes to add to the set."
              },
              "name": "attributes",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.StandardAttributesMask"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.ClientAttributes"
            }
          }
        }
      ],
      "name": "ClientAttributes",
      "symbolId": "lib/user-pool-attr:ClientAttributes"
    },
    "@aws-cdk/aws-cognito.CognitoDomainOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain-prefix.html",
        "stability": "stable",
        "summary": "Options while specifying a cognito prefix domain.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.CognitoDomainOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 42
      },
      "name": "CognitoDomainOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The prefix to the Cognito hosted domain name that will be associated with the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 46
          },
          "name": "domainPrefix",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:CognitoDomainOptions"
    },
    "@aws-cdk/aws-cognito.CustomAttributeConfig": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration that will be fed into CloudFormation for any custom attribute type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customAttributeConfig: cognito.CustomAttributeConfig = {\n  dataType: 'dataType',\n\n  // the properties below are optional\n  mutable: false,\n  numberConstraints: {\n    max: 123,\n    min: 123,\n  },\n  stringConstraints: {\n    maxLen: 123,\n    minLen: 123,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 166
      },
      "name": "CustomAttributeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SchemaAttributeType.html#CognitoUserPools-Type-SchemaAttributeType-AttributeDataType",
            "stability": "stable",
            "summary": "The data type of the custom attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 172
          },
          "name": "dataType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For any user pool attribute that's mapped to an identity provider attribute, you must set this parameter to true.\nAmazon Cognito updates mapped attributes when users sign in to your application through an identity provider.\nIf an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute.",
            "stability": "stable",
            "summary": "Specifies whether the value of the attribute can be changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 194
          },
          "name": "mutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "The constraints for a custom attribute of the 'Number' data type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 184
          },
          "name": "numberConstraints",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.NumberAttributeConstraints"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "The constraints for a custom attribute of 'String' data type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 178
          },
          "name": "stringConstraints",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StringAttributeConstraints"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:CustomAttributeConfig"
    },
    "@aws-cdk/aws-cognito.CustomAttributeProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Constraints that can be applied to a custom attribute of any type.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.CustomAttributeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 200
      },
      "name": "CustomAttributeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For any user pool attribute that's mapped to an identity provider attribute, you must set this parameter to true.\nAmazon Cognito updates mapped attributes when users sign in to your application through an identity provider.\nIf an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute.",
            "stability": "stable",
            "summary": "Specifies whether the value of the attribute can be changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 209
          },
          "name": "mutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:CustomAttributeProps"
    },
    "@aws-cdk/aws-cognito.CustomDomainOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html",
        "stability": "stable",
        "summary": "Options while specifying custom domain.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.CustomDomainOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 26
      },
      "name": "CustomDomainOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The certificate to associate with this domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 35
          },
          "name": "certificate",
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The custom domain name that you would like to associate with this User Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 30
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:CustomDomainOptions"
    },
    "@aws-cdk/aws-cognito.DateTimeAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "The DateTime custom attribute type.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.DateTimeAttribute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-attr.ts",
          "line": 350
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.ICustomAttribute"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 347
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Bind this custom attribute type to the values as expected by CloudFormation."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 354
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cognito.ICustomAttribute",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig"
            }
          }
        }
      ],
      "name": "DateTimeAttribute",
      "symbolId": "lib/user-pool-attr:DateTimeAttribute"
    },
    "@aws-cdk/aws-cognito.DeviceTracking": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html",
        "stability": "stable",
        "summary": "Device tracking settings.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.DeviceTracking",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 464
      },
      "name": "DeviceTracking",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only applicable to a new device.",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html",
            "stability": "stable",
            "summary": "Indicates whether a challenge is required on a new device."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 470
          },
          "name": "challengeRequiredOnNewDevice",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-device-tracking.html",
            "stability": "stable",
            "summary": "If true, a device is only remembered on user prompt."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 477
          },
          "name": "deviceOnlyRememberedOnUserPrompt",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool:DeviceTracking"
    },
    "@aws-cdk/aws-cognito.EmailSettings": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Email settings for the user pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst emailSettings: cognito.EmailSettings = {\n  from: 'from',\n  replyTo: 'replyTo',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.EmailSettings",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 404
      },
      "name": "EmailSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "verificationemail": ".com"
            },
            "default": "noreply",
            "stability": "stable",
            "summary": "The 'from' address on the emails received by the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 409
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "remarks": "When set, most email clients recognize to change 'to' line to this address when a reply is drafted.",
            "stability": "stable",
            "summary": "The 'replyTo' address on the emails received by the user as defined by IETF RFC-5322."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 416
          },
          "name": "replyTo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool:EmailSettings"
    },
    "@aws-cdk/aws-cognito.ICustomAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Represents a custom attribute type."
      },
      "fqn": "@aws-cdk/aws-cognito.ICustomAttribute",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 156
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Bind this custom attribute type to the values as expected by CloudFormation."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 160
          },
          "name": "bind",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig"
            }
          }
        }
      ],
      "name": "ICustomAttribute",
      "symbolId": "lib/user-pool-attr:ICustomAttribute"
    },
    "@aws-cdk/aws-cognito.IUserPool": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Cognito UserPool."
      },
      "fqn": "@aws-cdk/aws-cognito.IUserPool",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 666
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-client-apps.html",
            "stability": "stable",
            "summary": "Add a new app client to this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 688
          },
          "name": "addClient",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolClientOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolClient"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain.html",
            "stability": "stable",
            "summary": "Associate a domain to this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 694
          },
          "name": "addDomain",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolDomainOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolDomain"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-resource-servers.html",
            "stability": "stable",
            "summary": "Add a new resource server to this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 700
          },
          "name": "addResourceServer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServer"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Register an identity provider with this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 705
          },
          "name": "registerIdentityProvider",
          "parameters": [
            {
              "name": "provider",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
              }
            }
          ]
        }
      ],
      "name": "IUserPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Get all identity providers registered with this user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 682
          },
          "name": "identityProviders",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of this user pool resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 677
          },
          "name": "userPoolArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The physical ID of this user pool resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 671
          },
          "name": "userPoolId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool:IUserPool"
    },
    "@aws-cdk/aws-cognito.IUserPoolClient": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Cognito user pool client."
      },
      "fqn": "@aws-cdk/aws-cognito.IUserPoolClient",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 318
      },
      "name": "IUserPoolClient",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Name of the application client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 323
          },
          "name": "userPoolClientId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:IUserPoolClient"
    },
    "@aws-cdk/aws-cognito.IUserPoolDomain": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Represents a user pool domain."
      },
      "fqn": "@aws-cdk/aws-cognito.IUserPoolDomain",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 12
      },
      "name": "IUserPoolDomain",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "If `customDomain` was selected, this holds the full domain name that was specified.\nIf the `cognitoDomain` was used, it contains the prefix to the Cognito hosted domain.",
            "stability": "stable",
            "summary": "The domain that was specified to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 19
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:IUserPoolDomain"
    },
    "@aws-cdk/aws-cognito.IUserPoolIdentityProvider": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Represents a UserPoolIdentityProvider."
      },
      "fqn": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idp.ts",
        "line": 7
      },
      "name": "IUserPoolIdentityProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The primary identifier of this identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idp.ts",
            "line": 12
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idp:IUserPoolIdentityProvider"
    },
    "@aws-cdk/aws-cognito.IUserPoolResourceServer": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Cognito user pool resource server."
      },
      "fqn": "@aws-cdk/aws-cognito.IUserPoolResourceServer",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-resource-server.ts",
        "line": 9
      },
      "name": "IUserPoolResourceServer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Resource server id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 14
          },
          "name": "userPoolResourceServerId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-resource-server:IUserPoolResourceServer"
    },
    "@aws-cdk/aws-cognito.Mfa": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html",
        "stability": "stable",
        "summary": "The different ways in which a user pool's MFA enforcement can be configured.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.Mfa",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 329
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Users are not required to use MFA for sign in, and cannot configure one."
          },
          "name": "OFF"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Users are not required to use MFA for sign in, but can configure one if they so choose to."
          },
          "name": "OPTIONAL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Users are required to configure an MFA, and have to use it to sign in."
          },
          "name": "REQUIRED"
        }
      ],
      "name": "Mfa",
      "symbolId": "lib/user-pool:Mfa"
    },
    "@aws-cdk/aws-cognito.MfaSecondFactor": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html",
        "stability": "stable",
        "summary": "The different ways in which a user pool can obtain their MFA token for sign in.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.MfaSecondFactor",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 342
      },
      "name": "MfaSecondFactor",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa-totp.html",
            "stability": "stable",
            "summary": "The MFA token is a time-based one time password that is generated by a hardware or software token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 355
          },
          "name": "otp",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa-sms-text-message.html",
            "stability": "stable",
            "summary": "The MFA token is sent to the user via SMS to their verified phone numbers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 348
          },
          "name": "sms",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool:MfaSecondFactor"
    },
    "@aws-cdk/aws-cognito.NumberAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "The Number custom attribute type.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.NumberAttribute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-attr.ts",
          "line": 303
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito.NumberAttributeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.ICustomAttribute"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 298
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Bind this custom attribute type to the values as expected by CloudFormation."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 309
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cognito.ICustomAttribute",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig"
            }
          }
        }
      ],
      "name": "NumberAttribute",
      "symbolId": "lib/user-pool-attr:NumberAttribute"
    },
    "@aws-cdk/aws-cognito.NumberAttributeConstraints": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Constraints that can be applied to a custom attribute of number type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst numberAttributeConstraints: cognito.NumberAttributeConstraints = {\n  max: 123,\n  min: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.NumberAttributeConstraints",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 275
      },
      "name": "NumberAttributeConstraints",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no maximum value",
            "stability": "stable",
            "summary": "Maximum value of this attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 286
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no minimum value",
            "stability": "stable",
            "summary": "Minimum value of this attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 280
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:NumberAttributeConstraints"
    },
    "@aws-cdk/aws-cognito.NumberAttributeProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for NumberAttr.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.NumberAttributeProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.NumberAttributeConstraints",
        "@aws-cdk/aws-cognito.CustomAttributeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 292
      },
      "name": "NumberAttributeProps",
      "symbolId": "lib/user-pool-attr:NumberAttributeProps"
    },
    "@aws-cdk/aws-cognito.OAuthFlows": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "- the 'Allowed OAuth Flows' section at https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-idp-settings.html",
        "stability": "stable",
        "summary": "Types of OAuth grant flows.",
        "example": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.OAuthFlows",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 74
      },
      "name": "OAuthFlows",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Initiate an authorization code grant flow, which provides an authorization code as the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 79
          },
          "name": "authorizationCodeGrant",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Client should get the access token and ID token from the token endpoint using a combination of client and client_secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 92
          },
          "name": "clientCredentials",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The client should get the access token and ID token directly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 85
          },
          "name": "implicitCodeGrant",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:OAuthFlows"
    },
    "@aws-cdk/aws-cognito.OAuthScope": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-idp-settings.html",
        "stability": "stable",
        "summary": "OAuth scopes that are allowed with this client.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.OAuthScope",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 99
      },
      "methods": [
        {
          "docs": {
            "remarks": "The format is 'resource-server-identifier/scope'.",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html",
            "stability": "stable",
            "summary": "Custom scope is one that you define for your own resource server in the Resource Servers."
          },
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 134
          },
          "name": "custom",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.OAuthScope"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a custom scope that's tied to a resource server in your stack."
          },
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 141
          },
          "name": "resourceServer",
          "parameters": [
            {
              "name": "server",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.IUserPoolResourceServer"
              }
            },
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.ResourceServerScope"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.OAuthScope"
            }
          },
          "static": true
        }
      ],
      "name": "OAuthScope",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants access to Amazon Cognito User Pool API operations that require access tokens, such as UpdateUserAttributes and VerifyUserAttribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 127
          },
          "name": "COGNITO_ADMIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthScope"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Automatically includes access to `OAuthScope.OPENID`.",
            "stability": "stable",
            "summary": "Grants access to the 'email' and 'email_verified' claims."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 110
          },
          "name": "EMAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthScope"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns all user attributes in the ID token that are readable by the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 115
          },
          "name": "OPENID",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthScope"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Automatically includes access to `OAuthScope.OPENID`.",
            "stability": "stable",
            "summary": "Grants access to the 'phone_number' and 'phone_number_verified' claims."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 104
          },
          "name": "PHONE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthScope"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants access to all user attributes that are readable by the client Automatically includes access to `OAuthScope.OPENID`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 121
          },
          "name": "PROFILE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthScope"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthscopes",
            "stability": "stable",
            "summary": "The name of this scope as recognized by CloudFormation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 149
          },
          "name": "scopeName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:OAuthScope"
    },
    "@aws-cdk/aws-cognito.OAuthSettings": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "OAuth settings to configure the interaction between the app and this client.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.OAuthSettings",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 41
      },
      "name": "OAuthSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- ['https://example.com'] if either authorizationCodeGrant or implicitCodeGrant flows are enabled, no callback URLs otherwise.",
            "stability": "stable",
            "summary": "List of allowed redirect URLs for the identity providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 54
          },
          "name": "callbackUrls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{authorizationCodeGrant:true,implicitCodeGrant:true}",
            "see": "- the 'Allowed OAuth Flows' section at https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-idp-settings.html",
            "stability": "stable",
            "summary": "OAuth flows that are allowed with this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 48
          },
          "name": "flows",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthFlows"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no logout URLs",
            "stability": "stable",
            "summary": "List of allowed logout URLs for the identity providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 60
          },
          "name": "logoutUrls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[OAuthScope.PHONE,OAuthScope.EMAIL,OAuthScope.OPENID,OAuthScope.PROFILE,OAuthScope.COGNITO_ADMIN]",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-idp-settings.html",
            "stability": "stable",
            "summary": "OAuth scopes that are allowed with this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 67
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.OAuthScope"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/user-pool-client:OAuthSettings"
    },
    "@aws-cdk/aws-cognito.OidcAttributeRequestMethod": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "The method to use to request attributes."
      },
      "fqn": "@aws-cdk/aws-cognito.OidcAttributeRequestMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/user-pool-idps/oidc.ts",
        "line": 93
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "GET."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "POST."
          },
          "name": "POST"
        }
      ],
      "name": "OidcAttributeRequestMethod",
      "symbolId": "lib/user-pool-idps/oidc:OidcAttributeRequestMethod"
    },
    "@aws-cdk/aws-cognito.OidcEndpoints": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "OpenID Connect endpoints.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst oidcEndpoints: cognito.OidcEndpoints = {\n  authorization: 'authorization',\n  jwksUri: 'jwksUri',\n  token: 'token',\n  userInfo: 'userInfo',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.OidcEndpoints",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/oidc.ts",
        "line": 68
      },
      "name": "OidcEndpoints",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Authorization endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 72
          },
          "name": "authorization",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Jwks_uri endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 87
          },
          "name": "jwksUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Token endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 77
          },
          "name": "token",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UserInfo endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 82
          },
          "name": "userInfo",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/oidc:OidcEndpoints"
    },
    "@aws-cdk/aws-cognito.PasswordPolicy": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Password policy for User Pools.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.PasswordPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 361
      },
      "name": "PasswordPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "8",
            "stability": "stable",
            "summary": "Minimum length required for a user's password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 374
          },
          "name": "minLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the user is required to have digits in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 392
          },
          "name": "requireDigits",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the user is required to have lowercase characters in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 380
          },
          "name": "requireLowercase",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the user is required to have symbols in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 398
          },
          "name": "requireSymbols",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the user is required to have uppercase characters in their password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 386
          },
          "name": "requireUppercase",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(7)",
            "remarks": "This must be provided as whole days, like Duration.days(3) or Duration.hours(48).\nFractional days, such as Duration.hours(20), will generate an error.",
            "stability": "stable",
            "summary": "The length of time the temporary password generated by an admin is valid."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 368
          },
          "name": "tempPasswordValidity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/user-pool:PasswordPolicy"
    },
    "@aws-cdk/aws-cognito.ProviderAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "An attribute available from a third party identity provider.",
        "example": "const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.ProviderAttribute",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idps/base.ts",
        "line": 6
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use this to specify an attribute from the identity provider that is not pre-defined in the CDK."
          },
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 67
          },
          "name": "other",
          "parameters": [
            {
              "docs": {
                "summary": "the attribute value string as recognized by the provider."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
            }
          },
          "static": true
        }
      ],
      "name": "ProviderAttribute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The email attribute provided by Amazon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 19
          },
          "name": "AMAZON_EMAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The name attribute provided by Amazon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 21
          },
          "name": "AMAZON_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The postal code attribute provided by Amazon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 23
          },
          "name": "AMAZON_POSTAL_CODE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The user id attribute provided by Amazon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 17
          },
          "name": "AMAZON_USER_ID",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The email attribute provided by Apple."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 8
          },
          "name": "APPLE_EMAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The first name attribute provided by Apple."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 12
          },
          "name": "APPLE_FIRST_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The last name attribute provided by Apple."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 14
          },
          "name": "APPLE_LAST_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The name attribute provided by Apple."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 10
          },
          "name": "APPLE_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The birthday attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 28
          },
          "name": "FACEBOOK_BIRTHDAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The email attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 30
          },
          "name": "FACEBOOK_EMAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The first name attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 34
          },
          "name": "FACEBOOK_FIRST_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The gender attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 40
          },
          "name": "FACEBOOK_GENDER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The user id attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 26
          },
          "name": "FACEBOOK_ID",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The last name attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 36
          },
          "name": "FACEBOOK_LAST_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The locale attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 42
          },
          "name": "FACEBOOK_LOCALE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The middle name attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 38
          },
          "name": "FACEBOOK_MIDDLE_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The name attribute provided by Facebook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 32
          },
          "name": "FACEBOOK_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The birthday attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 49
          },
          "name": "GOOGLE_BIRTHDAYS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The email attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 53
          },
          "name": "GOOGLE_EMAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The family name attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 61
          },
          "name": "GOOGLE_FAMILY_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The gender attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 47
          },
          "name": "GOOGLE_GENDER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The given name attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 59
          },
          "name": "GOOGLE_GIVEN_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The name attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 55
          },
          "name": "GOOGLE_NAME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The name attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 45
          },
          "name": "GOOGLE_NAMES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The phone number attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 51
          },
          "name": "GOOGLE_PHONE_NUMBERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The picture attribute provided by Google."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 57
          },
          "name": "GOOGLE_PICTURE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The attribute value string as recognized by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 72
          },
          "name": "attributeName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/base:ProviderAttribute"
    },
    "@aws-cdk/aws-cognito.ResourceServerScope": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "A scope for ResourceServer.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.ResourceServerScope",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-resource-server.ts",
          "line": 46
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.ResourceServerScopeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-resource-server.ts",
        "line": 35
      },
      "name": "ResourceServerScope",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A description of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 44
          },
          "name": "scopeDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 39
          },
          "name": "scopeName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-resource-server:ResourceServerScope"
    },
    "@aws-cdk/aws-cognito.ResourceServerScopeProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props to initialize ResourceServerScope.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.ResourceServerScopeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-resource-server.ts",
        "line": 20
      },
      "name": "ResourceServerScopeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A description of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 29
          },
          "name": "scopeDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 24
          },
          "name": "scopeName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-resource-server:ResourceServerScopeProps"
    },
    "@aws-cdk/aws-cognito.SignInAliases": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The different ways in which users of this pool can sign up or sign in.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.SignInAliases",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 19
      },
      "name": "SignInAliases",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether a user is allowed to sign up or sign in with an email address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 30
          },
          "name": "email",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether a user is allowed to sign up or sign in with a phone number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 36
          },
          "name": "phone",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Can only be used in conjunction with `USERNAME`.",
            "stability": "stable",
            "summary": "Whether a user is allowed to sign in with a secondary username, that can be set and modified after sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 43
          },
          "name": "preferredUsername",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether user is allowed to sign up or sign in with a username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 24
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool:SignInAliases"
    },
    "@aws-cdk/aws-cognito.SignInUrlOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to customize the behaviour of `signInUrl()`.",
        "example": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.SignInUrlOptions",
      "interfaces": [
        "@aws-cdk/aws-cognito.BaseUrlOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 200
      },
      "name": "SignInUrlOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Where to redirect to after sign in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 204
          },
          "name": "redirectUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'/login'",
            "stability": "stable",
            "summary": "The path in the URI where the sign-in page is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 210
          },
          "name": "signInPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:SignInUrlOptions"
    },
    "@aws-cdk/aws-cognito.StandardAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes",
        "stability": "stable",
        "summary": "Standard attribute that can be marked as required or mutable.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.StandardAttribute",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 134
      },
      "name": "StandardAttribute",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "For any user pool attribute that's mapped to an identity provider attribute, this must be set to `true`.\nAmazon Cognito updates mapped attributes when users sign in to your application through an identity provider.\nIf an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute.",
            "stability": "stable",
            "summary": "Specifies whether the value of the attribute can be changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 143
          },
          "name": "mutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If the attribute is required and the user does not provide a value, registration or sign-in will fail.",
            "stability": "stable",
            "summary": "Specifies whether the attribute is required upon user registration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 150
          },
          "name": "required",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:StandardAttribute"
    },
    "@aws-cdk/aws-cognito.StandardAttributes": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes",
        "stability": "stable",
        "summary": "The set of standard attributes that can be marked as required or mutable.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.StandardAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 9
      },
      "name": "StandardAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's postal address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 14
          },
          "name": "address",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's birthday, represented as an ISO 8601:2004 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 20
          },
          "name": "birthdate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's e-mail address, represented as an RFC 5322 [RFC5322] addr-spec."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 26
          },
          "name": "email",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "deprecated": "this is not a standard attribute and was incorrectly added to the CDK.\nIt is a Cognito built-in attribute and cannot be controlled as part of user pool creation.",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 118
          },
          "name": "emailVerified",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The surname or last name of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 32
          },
          "name": "familyName",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's full name in displayable form, including all name parts, titles and suffixes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 62
          },
          "name": "fullname",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's gender."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 38
          },
          "name": "gender",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's first name or give name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 44
          },
          "name": "givenName",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The time, the user's information was last updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 104
          },
          "name": "lastUpdateTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's locale, represented as a BCP47 [RFC5646] language tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 50
          },
          "name": "locale",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's middle name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 56
          },
          "name": "middleName",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's nickname or casual name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 68
          },
          "name": "nickname",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's telephone number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 74
          },
          "name": "phoneNumber",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "deprecated": "this is not a standard attribute and was incorrectly added to the CDK.\nIt is a Cognito built-in attribute and cannot be controlled as part of user pool creation.",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 126
          },
          "name": "phoneNumberVerified",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's preffered username, different from the immutable user name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 86
          },
          "name": "preferredUsername",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The URL to the user's profile page."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 92
          },
          "name": "profilePage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The URL to the user's profile picture."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 80
          },
          "name": "profilePicture",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The user's time zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 98
          },
          "name": "timezone",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see the defaults under `StandardAttribute`",
            "stability": "stable",
            "summary": "The URL to the user's web page or blog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 110
          },
          "name": "website",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:StandardAttributes"
    },
    "@aws-cdk/aws-cognito.StandardAttributesMask": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "This interface contains standard attributes recognized by Cognito from https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html including built-in attributes `email_verified` and `phone_number_verified`.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.StandardAttributesMask",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 367
      },
      "name": "StandardAttributesMask",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's postal address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 372
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's birthday, represented as an ISO 8601:2004 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 378
          },
          "name": "birthdate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's e-mail address, represented as an RFC 5322 [RFC5322] addr-spec."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 384
          },
          "name": "email",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the email address has been verified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 474
          },
          "name": "emailVerified",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The surname or last name of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 390
          },
          "name": "familyName",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's full name in displayable form, including all name parts, titles and suffixes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 420
          },
          "name": "fullname",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's gender."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 396
          },
          "name": "gender",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's first name or give name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 402
          },
          "name": "givenName",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The time, the user's information was last updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 462
          },
          "name": "lastUpdateTime",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's locale, represented as a BCP47 [RFC5646] language tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 408
          },
          "name": "locale",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's middle name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 414
          },
          "name": "middleName",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's nickname or casual name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 426
          },
          "name": "nickname",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's telephone number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 432
          },
          "name": "phoneNumber",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the phone number has been verified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 480
          },
          "name": "phoneNumberVerified",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's preffered username, different from the immutable user name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 444
          },
          "name": "preferredUsername",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The URL to the user's profile page."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 450
          },
          "name": "profilePage",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The URL to the user's profile picture."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 438
          },
          "name": "profilePicture",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The user's time zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 456
          },
          "name": "timezone",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "The URL to the user's web page or blog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 468
          },
          "name": "website",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:StandardAttributesMask"
    },
    "@aws-cdk/aws-cognito.StringAttribute": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "The String custom attribute type.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.StringAttribute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-attr.ts",
          "line": 243
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito.StringAttributeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.ICustomAttribute"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 238
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Bind this custom attribute type to the values as expected by CloudFormation."
          },
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 255
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cognito.ICustomAttribute",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig"
            }
          }
        }
      ],
      "name": "StringAttribute",
      "symbolId": "lib/user-pool-attr:StringAttribute"
    },
    "@aws-cdk/aws-cognito.StringAttributeConstraints": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Constraints that can be applied to a custom attribute of string type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst stringAttributeConstraints: cognito.StringAttributeConstraints = {\n  maxLen: 123,\n  minLen: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.StringAttributeConstraints",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 215
      },
      "name": "StringAttributeConstraints",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "2048",
            "stability": "stable",
            "summary": "Maximum length of this attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 226
          },
          "name": "maxLen",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "Minimum length of this attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-attr.ts",
            "line": 220
          },
          "name": "minLen",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/user-pool-attr:StringAttributeConstraints"
    },
    "@aws-cdk/aws-cognito.StringAttributeProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for constructing a StringAttr.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.StringAttributeProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.StringAttributeConstraints",
        "@aws-cdk/aws-cognito.CustomAttributeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-attr.ts",
        "line": 232
      },
      "name": "StringAttributeProps",
      "symbolId": "lib/user-pool-attr:StringAttributeProps"
    },
    "@aws-cdk/aws-cognito.UserInvitationConfig": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "User pool configuration when administrators sign users up.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserInvitationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 305
      },
      "name": "UserInvitationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'Your username is {username} and temporary password is {####}.'",
            "stability": "stable",
            "summary": "The template to the email body that is sent to the user when an administrator signs them up to the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 316
          },
          "name": "emailBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'Your temporary password'",
            "stability": "stable",
            "summary": "The template to the email subject that is sent to the user when an administrator signs them up to the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 310
          },
          "name": "emailSubject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'Your username is {username} and temporary password is {####}'",
            "stability": "stable",
            "summary": "The template to the SMS message that is sent to the user when an administrator signs them up to the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 322
          },
          "name": "smsMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool:UserInvitationConfig"
    },
    "@aws-cdk/aws-cognito.UserPool": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a Cognito User Pool.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPool",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool.ts",
          "line": 819
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPool"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 755
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing user pool based on its ARN."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 772
          },
          "name": "fromUserPoolArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "userPoolArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.IUserPool"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing user pool based on its id."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 759
          },
          "name": "fromUserPoolId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "userPoolId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.IUserPool"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a new app client to this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 713
          },
          "name": "addClient",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolClientOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolClient"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate a domain to this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 720
          },
          "name": "addDomain",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolDomainOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolDomain"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a new resource server to this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 727
          },
          "name": "addResourceServer",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServer"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html",
            "stability": "stable",
            "summary": "Add a lambda trigger to a user pool operation."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 925
          },
          "name": "addTrigger",
          "parameters": [
            {
              "name": "operation",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
              }
            },
            {
              "name": "fn",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an IAM policy statement associated with this user pool to an IAM principal's policy."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 742
          },
          "name": "grant",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Register an identity provider with this user pool."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 734
          },
          "name": "registerIdentityProvider",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "parameters": [
            {
              "name": "provider",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
              }
            }
          ]
        }
      ],
      "name": "UserPool",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Get all identity providers registered with this user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 711
          },
          "name": "identityProviders",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 803
          },
          "name": "userPoolArn",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The physical ID of this user pool resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 798
          },
          "name": "userPoolId",
          "overrides": "@aws-cdk/aws-cognito.IUserPool",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "User pool provider name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 809
          },
          "name": "userPoolProviderName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "User pool provider URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 815
          },
          "name": "userPoolProviderUrl",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool:UserPool"
    },
    "@aws-cdk/aws-cognito.UserPoolClient": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a UserPool App Client.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolClient",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-client.ts",
          "line": 356
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolClientProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolClient"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 329
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a user pool client given its id."
          },
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 333
          },
          "name": "fromUserPoolClientId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "userPoolClientId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.IUserPoolClient"
            }
          },
          "static": true
        }
      ],
      "name": "UserPoolClient",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The OAuth flows enabled for this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 345
          },
          "name": "oAuthFlows",
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthFlows"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the application client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 341
          },
          "name": "userPoolClientId",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolClient",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The client name that was specified via the `userPoolClientName` property during initialization, throws an error otherwise."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 403
          },
          "name": "userPoolClientName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:UserPoolClient"
    },
    "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Identity providers supported by the UserPoolClient.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 159
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Specify a provider not yet supported by the CDK."
          },
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 193
          },
          "name": "custom",
          "parameters": [
            {
              "docs": {
                "summary": "name of the identity provider as recognized by CloudFormation property `SupportedIdentityProviders`."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
            }
          },
          "static": true
        }
      ],
      "name": "UserPoolClientIdentityProvider",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "A `UserPoolIdentityProviderAmazon` must be attached to the user pool.",
            "stability": "stable",
            "summary": "Allow users to sign in using 'Login With Amazon'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 182
          },
          "name": "AMAZON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "A `UserPoolIdentityProviderApple` must be attached to the user pool.",
            "stability": "stable",
            "summary": "Allow users to sign in using 'Sign In With Apple'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 164
          },
          "name": "APPLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Allow users to sign in directly as a user of the User Pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 187
          },
          "name": "COGNITO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "A `UserPoolIdentityProviderFacebook` must be attached to the user pool.",
            "stability": "stable",
            "summary": "Allow users to sign in using 'Facebook Login'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 170
          },
          "name": "FACEBOOK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "A `UserPoolIdentityProviderGoogle` must be attached to the user pool.",
            "stability": "stable",
            "summary": "Allow users to sign in using 'Google Login'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 176
          },
          "name": "GOOGLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the identity provider as recognized by CloudFormation property `SupportedIdentityProviders`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 198
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:UserPoolClientIdentityProvider"
    },
    "@aws-cdk/aws-cognito.UserPoolClientOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to create a UserPoolClient.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolClientOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 208
      },
      "name": "UserPoolClientOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(60)",
            "remarks": "Values between 5 minutes and 1 day are valid. The duration can not be longer than the refresh token validity.",
            "see": "https://docs.aws.amazon.com/en_us/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html#amazon-cognito-user-pools-using-the-access-token",
            "stability": "stable",
            "summary": "Validity of the access token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 281
          },
          "name": "accessTokenValidity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all auth flows disabled",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-authentication-flow.html",
            "stability": "stable",
            "summary": "The set of OAuth authentication flows to enable on the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 226
          },
          "name": "authFlows",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.AuthFlow"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Turns off all OAuth interactions for this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 232
          },
          "name": "disableOAuth",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true for new user pool clients",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/token-revocation.html#enable-token-revocation",
            "stability": "stable",
            "summary": "Enable token revocation for this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 302
          },
          "name": "enableTokenRevocation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to generate a client secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 219
          },
          "name": "generateSecret",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(60)",
            "remarks": "Values between 5 minutes and 1 day are valid. The duration can not be longer than the refresh token validity.",
            "see": "https://docs.aws.amazon.com/en_us/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html#amazon-cognito-user-pools-using-the-id-token",
            "stability": "stable",
            "summary": "Validity of the ID token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 265
          },
          "name": "idTokenValidity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in `OAuthSettings`. meaningless if `disableOAuth` is set.",
            "remarks": "An error is thrown when this is specified and `disableOAuth` is set.",
            "stability": "stable",
            "summary": "OAuth settings for this client to interact with the app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 239
          },
          "name": "oAuth",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OAuthSettings"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-managing-errors.html",
            "stability": "stable",
            "summary": "Whether Cognito returns a UserNotFoundException exception when the user does not exist in the user pool (false), or whether it returns another type of error that doesn't reveal the user's absence."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 248
          },
          "name": "preventUserExistenceErrors",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all standard and custom attributes",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#user-pool-settings-attribute-permissions-and-scopes",
            "stability": "stable",
            "summary": "The set of attributes this client will be able to read."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 288
          },
          "name": "readAttributes",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ClientAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "remarks": "Values between 60 minutes and 10 years are valid.",
            "see": "https://docs.aws.amazon.com/en_us/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html#amazon-cognito-user-pools-using-the-refresh-token",
            "stability": "stable",
            "summary": "Validity of the refresh token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 273
          },
          "name": "refreshTokenValidity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- supports all identity providers that are registered with the user pool. If the user pool and/or\nidentity providers are imported, either specify this option explicitly or ensure that the identity providers are\nregistered with the user pool using the `UserPool.registerIdentityProvider()` API.",
            "stability": "stable",
            "summary": "The list of identity providers that users should be able to use to sign in using this client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 257
          },
          "name": "supportedIdentityProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- cloudformation generated name",
            "stability": "stable",
            "summary": "Name of the application client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 213
          },
          "name": "userPoolClientName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all standard and custom attributes",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#user-pool-settings-attribute-permissions-and-scopes",
            "stability": "stable",
            "summary": "The set of attributes this client will be able to write."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 295
          },
          "name": "writeAttributes",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.ClientAttributes"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:UserPoolClientOptions"
    },
    "@aws-cdk/aws-cognito.UserPoolClientProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the UserPoolClient construct.",
        "example": "const importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolClientProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolClientOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-client.ts",
        "line": 308
      },
      "name": "UserPoolClientProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The UserPool resource this client will have access to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-client.ts",
            "line": 312
          },
          "name": "userPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito.IUserPool"
          }
        }
      ],
      "symbolId": "lib/user-pool-client:UserPoolClientProps"
    },
    "@aws-cdk/aws-cognito.UserPoolDomain": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a user pool domain.",
        "example": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolDomain",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-domain.ts",
          "line": 100
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolDomainProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolDomain"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 83
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a UserPoolDomain given its domain name."
          },
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 87
          },
          "name": "fromDomainName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "userPoolDomainName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.IUserPoolDomain"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The URL to the hosted UI associated with this domain."
          },
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 158
          },
          "name": "baseUrl",
          "parameters": [
            {
              "docs": {
                "summary": "options to customize baseUrl."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cognito.BaseUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The URL to the sign in page in this domain using a specific UserPoolClient."
          },
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 171
          },
          "name": "signInUrl",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface] the user pool client that the UI will use to interact with the UserPool."
              },
              "name": "client",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolClient"
              }
            },
            {
              "docs": {
                "summary": "options to customize signInUrl."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.SignInUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UserPoolDomain",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the CloudFront distribution associated with the user pool domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 129
          },
          "name": "cloudFrontDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If `customDomain` was selected, this holds the full domain name that was specified.\nIf the `cognitoDomain` was used, it contains the prefix to the Cognito hosted domain.",
            "stability": "stable",
            "summary": "The domain that was specified to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 95
          },
          "name": "domainName",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolDomain",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:UserPoolDomain"
    },
    "@aws-cdk/aws-cognito.UserPoolDomainOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to create a UserPoolDomain.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolDomainOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 52
      },
      "name": "UserPoolDomainOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- not set if `customDomain` is specified, otherwise, throws an error.",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain-prefix.html",
            "stability": "stable",
            "summary": "Associate a cognito prefix domain with your user pool Either `customDomain` or `cognitoDomain` must be specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 67
          },
          "name": "cognitoDomain",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.CognitoDomainOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not set if `cognitoDomain` is specified, otherwise, throws an error.",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html",
            "stability": "stable",
            "summary": "Associate a custom domain with your user pool Either `customDomain` or `cognitoDomain` must be specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 59
          },
          "name": "customDomain",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.CustomDomainOptions"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:UserPoolDomainOptions"
    },
    "@aws-cdk/aws-cognito.UserPoolDomainProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for UserPoolDomain construct.",
        "example": "    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();",
        "custom": {
          "exampleMetadata": "lit=test/integ.cognito.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolDomainProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolDomainOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-domain.ts",
        "line": 73
      },
      "name": "UserPoolDomainProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The user pool to which this domain should be associated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-domain.ts",
            "line": 77
          },
          "name": "userPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito.IUserPool"
          }
        }
      ],
      "symbolId": "lib/user-pool-domain:UserPoolDomainProps"
    },
    "@aws-cdk/aws-cognito.UserPoolEmail": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "Configure how Cognito sends emails.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolEmail",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-email.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Send email using Cognito."
          },
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 122
          },
          "name": "withCognito",
          "parameters": [
            {
              "name": "replyTo",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolEmail"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send email using SES."
          },
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 129
          },
          "name": "withSES",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cognito.UserPoolSESOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolEmail"
            }
          },
          "static": true
        }
      ],
      "name": "UserPoolEmail",
      "symbolId": "lib/user-pool-email:UserPoolEmail"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProvider": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "User pool third-party identity providers."
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProvider",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idp.ts",
        "line": 18
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing UserPoolIdentityProvider."
          },
          "locationInModule": {
            "filename": "lib/user-pool-idp.ts",
            "line": 23
          },
          "name": "fromProviderName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "providerName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
            }
          },
          "static": true
        }
      ],
      "name": "UserPoolIdentityProvider",
      "symbolId": "lib/user-pool-idp:UserPoolIdentityProvider"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::UserPoolIdentityProvider",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Represents a identity provider that integrates with 'Login with Amazon'.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);"
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-idps/amazon.ts",
          "line": 35
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idps/amazon.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-pool-idps/private/user-pool-idp-base.ts",
            "line": 20
          },
          "name": "configureAttributeMapping",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "UserPoolIdentityProviderAmazon",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The primary identifier of this identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/amazon.ts",
            "line": 33
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/amazon:UserPoolIdentityProviderAmazon"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize UserPoolAmazonIdentityProvider.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/amazon.ts",
        "line": 9
      },
      "name": "UserPoolIdentityProviderAmazonProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://developer.amazon.com/docs/login-with-amazon/security-profile.html#client-identifier",
            "stability": "stable",
            "summary": "The client id recognized by 'Login with Amazon' APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/amazon.ts",
            "line": 14
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://developer.amazon.com/docs/login-with-amazon/security-profile.html#client-identifier",
            "stability": "stable",
            "summary": "The client secret to be accompanied with clientId for 'Login with Amazon' APIs to authenticate the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/amazon.ts",
            "line": 19
          },
          "name": "clientSecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[ profile ]",
            "see": "https://developer.amazon.com/docs/login-with-amazon/customer-profile.html",
            "stability": "stable",
            "summary": "The types of user profile data to obtain for the Amazon profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/amazon.ts",
            "line": 25
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/amazon:UserPoolIdentityProviderAmazonProps"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderApple": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::UserPoolIdentityProvider",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "Represents a identity provider that integrates with 'Apple'.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderApple = new cognito.UserPoolIdentityProviderApple(this, 'MyUserPoolIdentityProviderApple', {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderApple",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-idps/apple.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idps/apple.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-pool-idps/private/user-pool-idp-base.ts",
            "line": 20
          },
          "name": "configureAttributeMapping",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "UserPoolIdentityProviderApple",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The primary identifier of this identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/apple.ts",
            "line": 40
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/apple:UserPoolIdentityProviderApple"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize UserPoolAppleIdentityProvider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderAppleProps: cognito.UserPoolIdentityProviderAppleProps = {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/apple.ts",
        "line": 9
      },
      "name": "UserPoolIdentityProviderAppleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://developer.apple.com/documentation/sign_in_with_apple/clientconfigi/3230948-clientid",
            "stability": "stable",
            "summary": "The client id recognized by Apple APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/apple.ts",
            "line": 14
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The keyId (of the same key, which content has to be later supplied as `privateKey`) for Apple APIs to authenticate the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/apple.ts",
            "line": 22
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The privateKey content for Apple APIs to authenticate the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/apple.ts",
            "line": 26
          },
          "name": "privateKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The teamId for Apple APIs to authenticate the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/apple.ts",
            "line": 18
          },
          "name": "teamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[ name ]",
            "see": "https://developer.apple.com/documentation/sign_in_with_apple/clientconfigi/3230955-scope",
            "stability": "stable",
            "summary": "The list of apple permissions to obtain for getting access to the apple profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/apple.ts",
            "line": 32
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/apple:UserPoolIdentityProviderAppleProps"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebook": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::UserPoolIdentityProvider",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "Represents a identity provider that integrates with 'Facebook Login'.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderFacebook = new cognito.UserPoolIdentityProviderFacebook(this, 'MyUserPoolIdentityProviderFacebook', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebook",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-idps/facebook.ts",
          "line": 39
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idps/facebook.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-pool-idps/private/user-pool-idp-base.ts",
            "line": 20
          },
          "name": "configureAttributeMapping",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "UserPoolIdentityProviderFacebook",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The primary identifier of this identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/facebook.ts",
            "line": 37
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/facebook:UserPoolIdentityProviderFacebook"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize UserPoolFacebookIdentityProvider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderFacebookProps: cognito.UserPoolIdentityProviderFacebookProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/facebook.ts",
        "line": 9
      },
      "name": "UserPoolIdentityProviderFacebookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The client id recognized by Facebook APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/facebook.ts",
            "line": 13
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://developers.facebook.com/docs/facebook-login/security#appsecret",
            "stability": "stable",
            "summary": "The client secret to be accompanied with clientUd for Facebook to authenticate the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/facebook.ts",
            "line": 18
          },
          "name": "clientSecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- to the oldest version supported by Facebook",
            "stability": "stable",
            "summary": "The Facebook API version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/facebook.ts",
            "line": 29
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[ public_profile ]",
            "see": "https://developers.facebook.com/docs/facebook-login/permissions",
            "stability": "stable",
            "summary": "The list of facebook permissions to obtain for getting access to the Facebook profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/facebook.ts",
            "line": 24
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/facebook:UserPoolIdentityProviderFacebookProps"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogle": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::UserPoolIdentityProvider",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "Represents a identity provider that integrates with 'Google'.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderGoogle = new cognito.UserPoolIdentityProviderGoogle(this, 'MyUserPoolIdentityProviderGoogle', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogle",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-idps/google.ts",
          "line": 35
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idps/google.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-pool-idps/private/user-pool-idp-base.ts",
            "line": 20
          },
          "name": "configureAttributeMapping",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "UserPoolIdentityProviderGoogle",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The primary identifier of this identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/google.ts",
            "line": 33
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/google:UserPoolIdentityProviderGoogle"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize UserPoolGoogleIdentityProvider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderGoogleProps: cognito.UserPoolIdentityProviderGoogleProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/google.ts",
        "line": 9
      },
      "name": "UserPoolIdentityProviderGoogleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://developers.google.com/identity/sign-in/web/sign-in#specify_your_apps_client_id",
            "stability": "stable",
            "summary": "The client id recognized by Google APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/google.ts",
            "line": 14
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://developers.google.com/identity/sign-in/web/sign-in",
            "stability": "stable",
            "summary": "The client secret to be accompanied with clientId for Google APIs to authenticate the client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/google.ts",
            "line": 19
          },
          "name": "clientSecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[ profile ]",
            "see": "https://developers.google.com/identity/sign-in/web/sign-in",
            "stability": "stable",
            "summary": "The list of google permissions to obtain for getting access to the google profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/google.ts",
            "line": 25
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/google:UserPoolIdentityProviderGoogleProps"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderOidc": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Cognito::UserPoolIdentityProvider",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "Represents a identity provider that integrates with OpenID Connect.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderOidc = new cognito.UserPoolIdentityProviderOidc(this, 'MyUserPoolIdentityProviderOidc', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  issuerUrl: 'issuerUrl',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  attributeRequestMethod: cognito.OidcAttributeRequestMethod.GET,\n  endpoints: {\n    authorization: 'authorization',\n    jwksUri: 'jwksUri',\n    token: 'token',\n    userInfo: 'userInfo',\n  },\n  identifiers: ['identifiers'],\n  name: 'name',\n  scopes: ['scopes'],\n});"
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderOidc",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-idps/oidc.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderOidcProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolIdentityProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-idps/oidc.ts",
        "line": 104
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-pool-idps/private/user-pool-idp-base.ts",
            "line": 20
          },
          "name": "configureAttributeMapping",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "UserPoolIdentityProviderOidc",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The primary identifier of this identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 105
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolIdentityProvider",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/oidc:UserPoolIdentityProviderOidc"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderOidcProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize UserPoolIdentityProviderOidc.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderOidcProps: cognito.UserPoolIdentityProviderOidcProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  issuerUrl: 'issuerUrl',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  attributeRequestMethod: cognito.OidcAttributeRequestMethod.GET,\n  endpoints: {\n    authorization: 'authorization',\n    jwksUri: 'jwksUri',\n    token: 'token',\n    userInfo: 'userInfo',\n  },\n  identifiers: ['identifiers'],\n  name: 'name',\n  scopes: ['scopes'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderOidcProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/oidc.ts",
        "line": 10
      },
      "name": "UserPoolIdentityProviderOidcProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The client id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 14
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The client secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 19
          },
          "name": "clientSecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Issuer URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 24
          },
          "name": "issuerUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OidcAttributeRequestMethod.GET",
            "stability": "stable",
            "summary": "The method to use to request attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 55
          },
          "name": "attributeRequestMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OidcAttributeRequestMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto discovered with issuer URL",
            "stability": "stable",
            "summary": "OpenID connect endpoints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 62
          },
          "name": "endpoints",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.OidcEndpoints"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no identifiers used",
            "remarks": "Identifiers can be used to redirect users to the correct IdP in multitenant apps.",
            "stability": "stable",
            "summary": "Identifiers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 48
          },
          "name": "identifiers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the unique ID of the construct",
            "stability": "stable",
            "summary": "The name of the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 31
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "['openid']",
            "stability": "stable",
            "summary": "The OAuth 2.0 scopes that you will request from OpenID Connect. Scopes are groups of OpenID Connect user attributes to exchange with your app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/oidc.ts",
            "line": 39
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/oidc:UserPoolIdentityProviderOidcProps"
    },
    "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a new instance of UserPoolIdentityProvider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderProps: cognito.UserPoolIdentityProviderProps = {\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-idps/base.ts",
        "line": 196
      },
      "name": "UserPoolIdentityProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The user pool to which this construct provides identities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 200
          },
          "name": "userPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito.IUserPool"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no attribute mapping",
            "stability": "stable",
            "summary": "Mapping attributes from the identity provider to standard and custom attributes of the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-idps/base.ts",
            "line": 206
          },
          "name": "attributeMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.AttributeMapping"
          }
        }
      ],
      "symbolId": "lib/user-pool-idps/base:UserPoolIdentityProviderProps"
    },
    "@aws-cdk/aws-cognito.UserPoolOperation": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "User pool operations to which lambda triggers can be attached.",
        "example": "const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolOperation",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 165
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A custom user pool operation."
          },
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 239
          },
          "name": "of",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
            }
          },
          "static": true
        }
      ],
      "name": "UserPoolOperation",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-create-auth-challenge.html",
            "stability": "stable",
            "summary": "Creates a challenge in a custom auth flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 170
          },
          "name": "CREATE_AUTH_CHALLENGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-email-sender.html",
            "stability": "stable",
            "summary": "Amazon Cognito invokes this trigger to send email notifications to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 230
          },
          "name": "CUSTOM_EMAIL_SENDER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-message.html",
            "stability": "stable",
            "summary": "Advanced customization and localization of messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 176
          },
          "name": "CUSTOM_MESSAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-sms-sender.html",
            "stability": "stable",
            "summary": "Amazon Cognito invokes this trigger to send email notifications to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 236
          },
          "name": "CUSTOM_SMS_SENDER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-define-auth-challenge.html",
            "stability": "stable",
            "summary": "Determines the next challenge in a custom auth flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 182
          },
          "name": "DEFINE_AUTH_CHALLENGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html",
            "stability": "stable",
            "summary": "Event logging for custom analytics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 188
          },
          "name": "POST_AUTHENTICATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html",
            "stability": "stable",
            "summary": "Custom welcome messages or event logging for custom analytics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 194
          },
          "name": "POST_CONFIRMATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html",
            "stability": "stable",
            "summary": "Custom validation to accept or deny the sign-in request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 200
          },
          "name": "PRE_AUTHENTICATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html",
            "stability": "stable",
            "summary": "Custom validation to accept or deny the sign-up request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 206
          },
          "name": "PRE_SIGN_UP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html",
            "stability": "stable",
            "summary": "Add or remove attributes in Id tokens."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 212
          },
          "name": "PRE_TOKEN_GENERATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html",
            "stability": "stable",
            "summary": "Migrate a user from an existing user directory to user pools."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 218
          },
          "name": "USER_MIGRATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-verify-auth-challenge-response.html",
            "stability": "stable",
            "summary": "Determines if a response is correct in a custom auth flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 224
          },
          "name": "VERIFY_AUTH_CHALLENGE_RESPONSE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The key to use in `CfnUserPool.LambdaConfigProperty`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 245
          },
          "name": "operationName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool:UserPoolOperation"
    },
    "@aws-cdk/aws-cognito.UserPoolProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props for the UserPool construct.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 483
      },
      "name": "UserPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "AccountRecovery.PHONE_WITHOUT_MFA_AND_EMAIL",
            "stability": "stable",
            "summary": "How will a user be able to recover their account?"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 640
          },
          "name": "accountRecovery",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.AccountRecovery"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If `signInAlias` includes email and/or phone, they will be included in `autoVerifiedAttributes` by default.\nIf absent, no attributes will be auto-verified.",
            "remarks": "EMAIL and PHONE are the only available options.",
            "stability": "stable",
            "summary": "Attributes which Cognito will look to verify automatically upon user sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 562
          },
          "name": "autoVerify",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.AutoVerifiedAttrs"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom attributes.",
            "stability": "stable",
            "summary": "Define a set of custom attributes that can be configured for each user in the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 577
          },
          "name": "customAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.ICustomAttribute"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no key ID configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-sender-triggers.html",
            "stability": "stable",
            "summary": "This key will be used to encrypt temporary passwords and authorization codes that Amazon Cognito generates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 660
          },
          "name": "customSenderKmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults on each property of DeviceTracking.",
            "stability": "stable",
            "summary": "Device tracking settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 653
          },
          "name": "deviceTracking",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.DeviceTracking"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- cognito will use the default email configuration",
            "stability": "stable",
            "summary": "Email settings for a user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 619
          },
          "name": "email",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolEmail"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults on each property of EmailSettings.",
            "deprecated": "Use 'email' instead.",
            "stability": "deprecated",
            "summary": "Email settings for a user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 613
          },
          "name": "emailSettings",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.EmailSettings"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CDK will determine based on other properties of the user pool if an SMS role should be created or not.",
            "remarks": "When left unspecified, CDK will determine based on other properties if a role is needed or not.",
            "stability": "stable",
            "summary": "Setting this would explicitly enable or disable SMS role creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 538
          },
          "name": "enableSmsRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Lambda triggers.",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html",
            "stability": "stable",
            "summary": "Lambda functions to use for supported Cognito triggers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 626
          },
          "name": "lambdaTriggers",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserPoolTriggers"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Mfa.OFF",
            "stability": "stable",
            "summary": "Configure whether users of this user pool can or are required use MFA to sign in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 584
          },
          "name": "mfa",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.Mfa"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'Your authentication code is {####}.'",
            "remarks": "Use '{####}' in the template where Cognito should insert the verification code.",
            "stability": "stable",
            "summary": "The SMS message template sent during MFA verification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 591
          },
          "name": "mfaMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- { sms: true, otp: false }, if `mfa` is set to `OPTIONAL` or `REQUIRED`.\n{ sms: false, otp: false }, otherwise",
            "remarks": "Ignored if `mfa` is set to `OFF`.",
            "stability": "stable",
            "summary": "Configure the MFA types that users can use in this user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 599
          },
          "name": "mfaSecondFactor",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.MfaSecondFactor"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults on each property of PasswordPolicy.",
            "stability": "stable",
            "summary": "Password policy for this user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 605
          },
          "name": "passwordPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.PasswordPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "stability": "stable",
            "summary": "Policy to apply when the user pool is removed from the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 647
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This can be further configured via the `selfSignUp` property.",
            "stability": "stable",
            "summary": "Whether self sign up should be enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 495
          },
          "name": "selfSignUpEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{ username: true }",
            "remarks": "Allows either username with aliases OR sign in with email, phone, or both.\n\nRead the sections on usernames and aliases to learn more -\nhttps://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html\n\nTo match with 'Option 1' in the above link, with a verified email, this property should be set to\n`{ username: true, email: true }`. To match with 'Option 2' in the above link with both a verified email and phone\nnumber, this property should be set to `{ email: true, phone: true }`.",
            "stability": "stable",
            "summary": "Methods in which a user registers or signs in to a user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 553
          },
          "name": "signInAliases",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.SignInAliases"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "For example, when this option is set to false, users will be able to sign in using either `MyUsername` or `myusername`.",
            "stability": "stable",
            "summary": "Whether sign-in aliases should be evaluated with case sensitivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 633
          },
          "name": "signInCaseSensitive",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new IAM role is created",
            "stability": "stable",
            "summary": "The IAM role that Cognito will assume while sending SMS messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 514
          },
          "name": "smsRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external id will be configured",
            "remarks": "Learn more about ExternalId here - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\n\nThis property will be ignored if `smsRole` is not specified.",
            "stability": "stable",
            "summary": "The 'ExternalId' that Cognito service must using when assuming the `smsRole`, if the role is restricted with an 'sts:ExternalId' conditional."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 523
          },
          "name": "smsRoleExternalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The same region as the user pool, with a few exceptions - https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html#user-pool-sms-settings-first-time",
            "remarks": "This property will do nothing if SMS configuration is not configured",
            "stability": "stable",
            "summary": "The region to integrate with SNS to send SMS messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 531
          },
          "name": "snsRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All standard attributes are optional and mutable.",
            "remarks": "Read more on attributes here - https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html",
            "stability": "stable",
            "summary": "The set of attributes that are required for every user in the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 570
          },
          "name": "standardAttributes",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.StandardAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in UserInvitationConfig",
            "stability": "stable",
            "summary": "Configuration around admins signing up users into a user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 508
          },
          "name": "userInvitation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserInvitationConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically generated name by CloudFormation at deploy time",
            "stability": "stable",
            "summary": "Name of the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 489
          },
          "name": "userPoolName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see defaults in UserVerificationConfig",
            "remarks": "Enable or disable self sign-up via the `selfSignUpEnabled` property.",
            "stability": "stable",
            "summary": "Configuration around users signing themselves up to the user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 502
          },
          "name": "userVerification",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.UserVerificationConfig"
          }
        }
      ],
      "symbolId": "lib/user-pool:UserPoolProps"
    },
    "@aws-cdk/aws-cognito.UserPoolResourceServer": {
      "assembly": "@aws-cdk/aws-cognito",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Defines a User Pool OAuth2.0 Resource Server.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-pool-resource-server.ts",
          "line": 102
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cognito.IUserPoolResourceServer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-pool-resource-server.ts",
        "line": 88
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a user pool resource client given its id."
          },
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 92
          },
          "name": "fromUserPoolResourceServerId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "userPoolResourceServerId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cognito.IUserPoolResourceServer"
            }
          },
          "static": true
        }
      ],
      "name": "UserPoolResourceServer",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Resource server id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 100
          },
          "name": "userPoolResourceServerId",
          "overrides": "@aws-cdk/aws-cognito.IUserPoolResourceServer",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-resource-server:UserPoolResourceServer"
    },
    "@aws-cdk/aws-cognito.UserPoolResourceServerOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to create a UserPoolResourceServer.",
        "example": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-resource-server.ts",
        "line": 56
      },
      "name": "UserPoolResourceServerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A unique resource server identifier for the resource server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 60
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No scopes will be added",
            "stability": "stable",
            "summary": "Oauth scopes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 72
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cognito.ResourceServerScope"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `identifier`",
            "stability": "stable",
            "summary": "A friendly name for the resource server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 66
          },
          "name": "userPoolResourceServerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-resource-server:UserPoolResourceServerOptions"
    },
    "@aws-cdk/aws-cognito.UserPoolResourceServerProps": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the UserPoolResourceServer construct.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const resourceServerScope: cognito.ResourceServerScope;\ndeclare const userPool: cognito.UserPool;\nconst userPoolResourceServerProps: cognito.UserPoolResourceServerProps = {\n  identifier: 'identifier',\n  userPool: userPool,\n\n  // the properties below are optional\n  scopes: [resourceServerScope],\n  userPoolResourceServerName: 'userPoolResourceServerName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerProps",
      "interfaces": [
        "@aws-cdk/aws-cognito.UserPoolResourceServerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-resource-server.ts",
        "line": 78
      },
      "name": "UserPoolResourceServerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The user pool to add this resource server to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-resource-server.ts",
            "line": 82
          },
          "name": "userPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito.IUserPool"
          }
        }
      ],
      "symbolId": "lib/user-pool-resource-server:UserPoolResourceServerProps"
    },
    "@aws-cdk/aws-cognito.UserPoolSESOptions": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for Cognito sending emails via Amazon SES.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolSESOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool-email.ts",
        "line": 8
      },
      "name": "UserPoolSESOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The email address used must be a verified email address\nin Amazon SES and must be configured to allow Cognito to\nsend emails.",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html",
            "stability": "stable",
            "summary": "The verified Amazon SES email address that Cognito should use to send emails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 19
          },
          "name": "fromEmail",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no configuration set",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html#cfn-cognito-userpool-emailconfiguration-configurationset",
            "stability": "stable",
            "summary": "The name of a configuration set in Amazon SES that should be applied to emails sent via Cognito."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 44
          },
          "name": "configurationSetName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no name",
            "stability": "stable",
            "summary": "An optional name that should be used as the sender's name along with the email."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 27
          },
          "name": "fromName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as the fromEmail",
            "stability": "stable",
            "summary": "The destination to which the receiver of the email should reploy to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 34
          },
          "name": "replyTo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The same region as the Cognito UserPool",
            "remarks": "If sending emails with a Amazon SES verified email address,\nand the region that SES is configured is different than the\nregion in which the UserPool is deployed, you must specify that\nregion here.\n\nMust be 'us-east-1', 'us-west-2', or 'eu-west-1'",
            "stability": "stable",
            "summary": "Required if the UserPool region is different than the SES region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 58
          },
          "name": "sesRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no domain",
            "stability": "stable",
            "summary": "SES Verified custom domain to be used to verify the identity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool-email.ts",
            "line": 65
          },
          "name": "sesVerifiedDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool-email:UserPoolSESOptions"
    },
    "@aws-cdk/aws-cognito.UserPoolTriggers": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html",
        "stability": "stable",
        "summary": "Triggers for a user pool.",
        "example": "const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserPoolTriggers",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 71
      },
      "name": "UserPoolTriggers",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-create-auth-challenge.html",
            "stability": "stable",
            "summary": "Creates an authentication challenge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 77
          },
          "name": "createAuthChallenge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-email-sender.html",
            "stability": "stable",
            "summary": "Amazon Cognito invokes this trigger to send email notifications to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 147
          },
          "name": "customEmailSender",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-message.html",
            "stability": "stable",
            "summary": "A custom Message AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 84
          },
          "name": "customMessage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-sms-sender.html",
            "stability": "stable",
            "summary": "Amazon Cognito invokes this trigger to send SMS notifications to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 154
          },
          "name": "customSmsSender",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-define-auth-challenge.html",
            "stability": "stable",
            "summary": "Defines the authentication challenge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 91
          },
          "name": "defineAuthChallenge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html",
            "stability": "stable",
            "summary": "A post-authentication AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 98
          },
          "name": "postAuthentication",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html",
            "stability": "stable",
            "summary": "A post-confirmation AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 105
          },
          "name": "postConfirmation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html",
            "stability": "stable",
            "summary": "A pre-authentication AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 112
          },
          "name": "preAuthentication",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html",
            "stability": "stable",
            "summary": "A pre-registration AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 119
          },
          "name": "preSignUp",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html",
            "stability": "stable",
            "summary": "A pre-token-generation AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 126
          },
          "name": "preTokenGeneration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html",
            "stability": "stable",
            "summary": "A user-migration AWS Lambda trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 133
          },
          "name": "userMigration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trigger configured",
            "see": "https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-verify-auth-challenge-response.html",
            "stability": "stable",
            "summary": "Verifies the authentication challenge response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 140
          },
          "name": "verifyAuthChallengeResponse",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ],
      "symbolId": "lib/user-pool:UserPoolTriggers"
    },
    "@aws-cdk/aws-cognito.UserVerificationConfig": {
      "assembly": "@aws-cdk/aws-cognito",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "User pool configuration for user self sign up.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.UserVerificationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 265
      },
      "name": "UserVerificationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- 'The verification code to your new account is {####}' if VerificationEmailStyle.CODE is chosen,\n'Verify your account by clicking on {##Verify Email##}' if VerificationEmailStyle.LINK is chosen.",
            "remarks": "See https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html to\nlearn more about message templates.",
            "stability": "stable",
            "summary": "The email body template for the verification email sent to the user upon sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 282
          },
          "name": "emailBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VerificationEmailStyle.CODE",
            "remarks": "Learn more at https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-email-verification-message-customization.html",
            "stability": "stable",
            "summary": "Emails can be verified either using a code or a link."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 289
          },
          "name": "emailStyle",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cognito.VerificationEmailStyle"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'Verify your new account'",
            "remarks": "See https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html to\nlearn more about message templates.",
            "stability": "stable",
            "summary": "The email subject template for the verification email sent to the user upon sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 272
          },
          "name": "emailSubject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 'The verification code to your new account is {####}' if VerificationEmailStyle.CODE is chosen,\nnot configured if VerificationEmailStyle.LINK is chosen",
            "remarks": "See https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html to\nlearn more about message templates.",
            "stability": "stable",
            "summary": "The message template for the verification SMS sent to the user upon sign up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-pool.ts",
            "line": 299
          },
          "name": "smsMessage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-pool:UserVerificationConfig"
    },
    "@aws-cdk/aws-cognito.VerificationEmailStyle": {
      "assembly": "@aws-cdk/aws-cognito",
      "docs": {
        "stability": "stable",
        "summary": "The email verification style.",
        "example": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cognito.VerificationEmailStyle",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/user-pool.ts",
        "line": 255
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Verify email via code."
          },
          "name": "CODE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Verify email via link."
          },
          "name": "LINK"
        }
      ],
      "name": "VerificationEmailStyle",
      "symbolId": "lib/user-pool:VerificationEmailStyle"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}