{"version":"2","toolVersion":"1.80.0","snippets":{"c53bca97797226597795242d0791034f722853432f3f3953207ba2130aecaf9c":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    user_pool_name=\"myawesomeapp-userpool\"\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    UserPoolName = \"myawesomeapp-userpool\"\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .userPoolName(\"myawesomeapp-userpool\")\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tUserPoolName: jsii.String(\"myawesomeapp-userpool\"),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  userPoolName: 'myawesomeapp-userpool',\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":66}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  userPoolName: 'myawesomeapp-userpool',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":3,"104":1,"193":1,"194":1,"197":1,"226":1,"281":1},"fqnsFingerprint":"c4b0a434a6728f081037f10659bd98008805b98ad5c1462c83464a0046371c4f"},"b619a5d129441e7b52cfdbc7397cd895d694edb91e0177c39476b06887319ec2":{"translations":{"python":{"source":"user_pool = cognito.UserPool(self, \"myuserpool\")\nrole = iam.Role(self, \"role\",\n    assumed_by=iam.ServicePrincipal(\"foo\")\n)\nuser_pool.grant(role, \"cognito-idp:AdminCreateUser\")","version":"2"},"csharp":{"source":"var userPool = new UserPool(this, \"myuserpool\");\nvar role = new Role(this, \"role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"foo\")\n});\nuserPool.Grant(role, \"cognito-idp:AdminCreateUser\");","version":"1"},"java":{"source":"UserPool userPool = new UserPool(this, \"myuserpool\");\nRole role = Role.Builder.create(this, \"role\")\n        .assumedBy(new ServicePrincipal(\"foo\"))\n        .build();\nuserPool.grant(role, \"cognito-idp:AdminCreateUser\");","version":"1"},"go":{"source":"userPool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"))\nrole := iam.NewRole(this, jsii.String(\"role\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"foo\")),\n})\nuserPool.grant(role, jsii.String(\"cognito-idp:AdminCreateUser\"))","version":"1"},"$":{"source":"const userPool = new cognito.UserPool(this, 'myuserpool');\nconst role = new iam.Role(this, 'role', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\nuserPool.grant(role, 'cognito-idp:AdminCreateUser');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":79}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userPool = new cognito.UserPool(this, 'myuserpool');\nconst role = new iam.Role(this, 'role', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\nuserPool.grant(role, 'cognito-idp:AdminCreateUser');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":12,"104":2,"193":1,"194":4,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":1},"fqnsFingerprint":"65f3b81072587d191d1d54c9cb09b05d8bcf386d8ac7d11a586126ebd6a0f77a"},"6a310b2775c669a727b377d5c75488b48190520514cc5a9a6ebacaa84452e324":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tSelfSignUpEnabled: jsii.Boolean(true),\n\tUserVerification: &UserVerificationConfig{\n\t\tEmailSubject: jsii.String(\"Verify your email for our awesome app!\"),\n\t\tEmailBody: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t\tEmailStyle: cognito.VerificationEmailStyle_CODE,\n\t\tSmsMessage: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":96}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserVerificationConfig","@aws-cdk/aws-cognito.VerificationEmailStyle","@aws-cdk/aws-cognito.VerificationEmailStyle#CODE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":11,"104":1,"106":1,"193":2,"194":3,"197":1,"226":1,"281":6},"fqnsFingerprint":"324589d39db344c12a2a7b9f1a0ce57c2b67b3f8baa3d60cf6fcf1ce86fbfd6c"},"4d2640c662e6328f79fa5511add9c79f2dbe3bb0ed9373351a54c2a2889b9c82":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    user_invitation=cognito.UserInvitationConfig(\n        email_subject=\"Invite to join our awesome app!\",\n        email_body=\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        sms_message=\"Hello {username}, your temporary password for our awesome app is {####}\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    UserInvitation = new UserInvitationConfig {\n        EmailSubject = \"Invite to join our awesome app!\",\n        EmailBody = \"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        SmsMessage = \"Hello {username}, your temporary password for our awesome app is {####}\"\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .userInvitation(UserInvitationConfig.builder()\n                .emailSubject(\"Invite to join our awesome app!\")\n                .emailBody(\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\")\n                .smsMessage(\"Hello {username}, your temporary password for our awesome app is {####}\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tUserInvitation: &UserInvitationConfig{\n\t\tEmailSubject: jsii.String(\"Invite to join our awesome app!\"),\n\t\tEmailBody: jsii.String(\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\"),\n\t\tSmsMessage: jsii.String(\"Hello {username}, your temporary password for our awesome app is {####}\"),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":116}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserInvitationConfig","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":2,"194":1,"197":1,"226":1,"281":4},"fqnsFingerprint":"5d786f2fdd14724e3302179a0890ac05615f0d2538d22b40164050639d74d0e1"},"f975fd87d4c92ea1caaeb1c8e3b9ec06e937b635fb36d5c9ea38468d22de7c6a":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(\n        username=True,\n        email=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases {\n        Username = true,\n        Email = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder()\n                .username(true)\n                .email(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\t// ...\n\tSignInAliases: &SignInAliases{\n\t\tUsername: jsii.Boolean(true),\n\t\tEmail: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":144}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.SignInAliases","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":5,"104":1,"106":2,"193":2,"194":1,"197":1,"226":1,"281":3},"fqnsFingerprint":"9e4de072bc8da97a1701718ed0c51934ed62d1a73bee198cf626f0463de75da5"},"a7bdd0cee44710a08d4c10dc989fc93b47141b16125d03ec875a3482049cf95d":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(username=True, email=True),\n    auto_verify=cognito.AutoVerifiedAttrs(email=True, phone=True)\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases { Username = true, Email = true },\n    AutoVerify = new AutoVerifiedAttrs { Email = true, Phone = true }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder().username(true).email(true).build())\n        .autoVerify(AutoVerifiedAttrs.builder().email(true).phone(true).build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\t// ...\n\tSignInAliases: &SignInAliases{\n\t\tUsername: jsii.Boolean(true),\n\t\tEmail: jsii.Boolean(true),\n\t},\n\tAutoVerify: &AutoVerifiedAttrs{\n\t\tEmail: jsii.Boolean(true),\n\t\tPhone: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":174}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AutoVerifiedAttrs","@aws-cdk/aws-cognito.SignInAliases","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":8,"104":1,"106":4,"193":3,"194":1,"197":1,"226":1,"281":6},"fqnsFingerprint":"6b1ff292364c7cabbae22991cca9ae7ba250df61aa37a96e781f9d9cff3d9c3c"},"9c3457c1bc50acc6ca2152d90e4eb5b36633fbf60a513953dbe2c50ddc13d332":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":199}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"81bbaba5fcaa2a7907950ad313ffb5ac069427fb1f254d204c67793a397adfec":{"translations":{"python":{"source":"pool_sms_role = iam.Role(self, \"userpoolsmsrole\",\n    assumed_by=iam.ServicePrincipal(\"foo\")\n)\n\ncognito.UserPool(self, \"myuserpool\",\n    # ...\n    sms_role=pool_sms_role,\n    sms_role_external_id=\"c87467be-4f34-11ea-b77f-2e728ce88125\"\n)","version":"2"},"csharp":{"source":"var poolSmsRole = new Role(this, \"userpoolsmsrole\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"foo\")\n});\n\nnew UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SmsRole = poolSmsRole,\n    SmsRoleExternalId = \"c87467be-4f34-11ea-b77f-2e728ce88125\"\n});","version":"1"},"java":{"source":"Role poolSmsRole = Role.Builder.create(this, \"userpoolsmsrole\")\n        .assumedBy(new ServicePrincipal(\"foo\"))\n        .build();\n\nUserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .smsRole(poolSmsRole)\n        .smsRoleExternalId(\"c87467be-4f34-11ea-b77f-2e728ce88125\")\n        .build();","version":"1"},"go":{"source":"poolSmsRole := iam.NewRole(this, jsii.String(\"userpoolsmsrole\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"foo\")),\n})\n\ncognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tSmsRole: poolSmsRole,\n\tSmsRoleExternalId: jsii.String(\"c87467be-4f34-11ea-b77f-2e728ce88125\"),\n})","version":"1"},"$":{"source":"const poolSmsRole = new iam.Role(this, 'userpoolsmsrole', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\n\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  smsRole: poolSmsRole,\n  smsRoleExternalId: 'c87467be-4f34-11ea-b77f-2e728ce88125',\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":247}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst poolSmsRole = new iam.Role(this, 'userpoolsmsrole', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\n\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  smsRole: poolSmsRole,\n  smsRoleExternalId: 'c87467be-4f34-11ea-b77f-2e728ce88125',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":11,"104":2,"193":2,"194":3,"197":3,"225":1,"226":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"1704d80ed2b175498cbe62f45d28ccb01feebefe8420d457a56dc3edeba7fcb2"},"70ebcdcfe8d2448286af2831084ee86f41560cd508aa4bf946841d6136412931":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    mfa=cognito.Mfa.REQUIRED,\n    mfa_second_factor=cognito.MfaSecondFactor(\n        sms=True,\n        otp=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    Mfa = Mfa.REQUIRED,\n    MfaSecondFactor = new MfaSecondFactor {\n        Sms = true,\n        Otp = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .mfa(Mfa.REQUIRED)\n        .mfaSecondFactor(MfaSecondFactor.builder()\n                .sms(true)\n                .otp(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tMfa: cognito.Mfa_REQUIRED,\n\tMfaSecondFactor: &MfaSecondFactor{\n\t\tSms: jsii.Boolean(true),\n\t\tOtp: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":277}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.Mfa","@aws-cdk/aws-cognito.Mfa#REQUIRED","@aws-cdk/aws-cognito.MfaSecondFactor","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":9,"104":1,"106":2,"193":2,"194":3,"197":1,"226":1,"281":4},"fqnsFingerprint":"bd9ff0d3386783407f943a2dc8772853774c10f49df316358d81421a6575c1cd"},"ea9d020e8ca961cc3e1bfd3bf663069589314aa017b89bc3f3a1e2dc6fe27c97":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    password_policy=cognito.PasswordPolicy(\n        min_length=12,\n        require_lowercase=True,\n        require_uppercase=True,\n        require_digits=True,\n        require_symbols=True,\n        temp_password_validity=Duration.days(3)\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    PasswordPolicy = new PasswordPolicy {\n        MinLength = 12,\n        RequireLowercase = true,\n        RequireUppercase = true,\n        RequireDigits = true,\n        RequireSymbols = true,\n        TempPasswordValidity = Duration.Days(3)\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .passwordPolicy(PasswordPolicy.builder()\n                .minLength(12)\n                .requireLowercase(true)\n                .requireUppercase(true)\n                .requireDigits(true)\n                .requireSymbols(true)\n                .tempPasswordValidity(Duration.days(3))\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tPasswordPolicy: &PasswordPolicy{\n\t\tMinLength: jsii.Number(12),\n\t\tRequireLowercase: jsii.Boolean(true),\n\t\tRequireUppercase: jsii.Boolean(true),\n\t\tRequireDigits: jsii.Boolean(true),\n\t\tRequireSymbols: jsii.Boolean(true),\n\t\tTempPasswordValidity: awscdkcore.Duration_Days(jsii.Number(3)),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":297}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.PasswordPolicy","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":2,"10":1,"75":11,"104":1,"106":4,"193":2,"194":2,"196":1,"197":1,"226":1,"281":7},"fqnsFingerprint":"c19672cb917f6431dbc93d312e16432dc3620c13c1888f031b95a3177538a3b6"},"dc08ba0a5dc98d6666a9480b44948ba41712f93454785fea30a1d807dcc1c0ae":{"translations":{"python":{"source":"cognito.UserPool(self, \"UserPool\",\n    # ...\n    account_recovery=cognito.AccountRecovery.EMAIL_ONLY\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"UserPool\", new UserPoolProps {\n    // ...\n    AccountRecovery = AccountRecovery.EMAIL_ONLY\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"UserPool\")\n        // ...\n        .accountRecovery(AccountRecovery.EMAIL_ONLY)\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"UserPool\"), &UserPoolProps{\n\t// ...\n\tAccountRecovery: cognito.AccountRecovery_EMAIL_ONLY,\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":318}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AccountRecovery","@aws-cdk/aws-cognito.AccountRecovery#EMAIL_ONLY","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"fb1a1fe0fb129509cbe6e8ef54d461cb737cdf326f83c722ce40e4c597669d97"},"88e09aa1ec9c401974bdb9a7658769114c5651a12dfcf90c018a772a012c15c9":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    email=cognito.UserPoolEmail.with_cognito(\"support@myawesomeapp.com\")\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithCognito(\"support@myawesomeapp.com\")\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withCognito(\"support@myawesomeapp.com\"))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tEmail: cognito.UserPoolEmail_WithCognito(jsii.String(\"support@myawesomeapp.com\")),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withCognito('support@myawesomeapp.com'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":339}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolEmail","@aws-cdk/aws-cognito.UserPoolEmail#withCognito","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withCognito('support@myawesomeapp.com'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":6,"104":1,"193":1,"194":3,"196":1,"197":1,"226":1,"281":1},"fqnsFingerprint":"94f7e22c8225b941736e064b110ee9cb9662ed7f292990363bc332367d0a7d12"},"e7eb516d8362bc8d63d6dcbc04167fa591a99c37fba300c155f094ff77a0d4d9":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    email=cognito.UserPoolEmail.with_sES(\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new UserPoolSESOptions {\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(UserPoolSESOptions.builder()\n                .fromEmail(\"noreply@myawesomeapp.com\")\n                .fromName(\"Awesome App\")\n                .replyTo(\"support@myawesomeapp.com\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tEmail: cognito.UserPoolEmail_WithSES(&UserPoolSESOptions{\n\t\tFromEmail: jsii.String(\"noreply@myawesomeapp.com\"),\n\t\tFromName: jsii.String(\"Awesome App\"),\n\t\tReplyTo: jsii.String(\"support@myawesomeapp.com\"),\n\t}),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":353}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolEmail","@aws-cdk/aws-cognito.UserPoolEmail#withSES","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolSESOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":9,"104":1,"193":2,"194":3,"196":1,"197":1,"226":1,"281":4},"fqnsFingerprint":"b3aa2d2216fb49407722bdaf7509979363cf49923111c080f8358655f0e5504e"},"70df66f4b169e91364639ed7af67e242324e8d9eb2267791c58c9d7123481a57":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    email=cognito.UserPoolEmail.with_sES(\n        ses_region=\"us-east-1\",\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new UserPoolSESOptions {\n        SesRegion = \"us-east-1\",\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(UserPoolSESOptions.builder()\n                .sesRegion(\"us-east-1\")\n                .fromEmail(\"noreply@myawesomeapp.com\")\n                .fromName(\"Awesome App\")\n                .replyTo(\"support@myawesomeapp.com\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tEmail: cognito.UserPoolEmail_WithSES(&UserPoolSESOptions{\n\t\tSesRegion: jsii.String(\"us-east-1\"),\n\t\tFromEmail: jsii.String(\"noreply@myawesomeapp.com\"),\n\t\tFromName: jsii.String(\"Awesome App\"),\n\t\tReplyTo: jsii.String(\"support@myawesomeapp.com\"),\n\t}),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":366}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolEmail","@aws-cdk/aws-cognito.UserPoolEmail#withSES","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolSESOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":10,"104":1,"193":2,"194":3,"196":1,"197":1,"226":1,"281":5},"fqnsFingerprint":"b3aa2d2216fb49407722bdaf7509979363cf49923111c080f8358655f0e5504e"},"30cb213d9d45337118252cd1c02216a331ba9f3351e7b23eb82b48adf406f803":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    email=cognito.UserPoolEmail.with_sES(\n        ses_region=\"us-east-1\",\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\",\n        ses_verified_domain=\"myawesomeapp.com\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new UserPoolSESOptions {\n        SesRegion = \"us-east-1\",\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\",\n        SesVerifiedDomain = \"myawesomeapp.com\"\n    })\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(UserPoolSESOptions.builder()\n                .sesRegion(\"us-east-1\")\n                .fromEmail(\"noreply@myawesomeapp.com\")\n                .fromName(\"Awesome App\")\n                .replyTo(\"support@myawesomeapp.com\")\n                .sesVerifiedDomain(\"myawesomeapp.com\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tEmail: cognito.UserPoolEmail_WithSES(&UserPoolSESOptions{\n\t\tSesRegion: jsii.String(\"us-east-1\"),\n\t\tFromEmail: jsii.String(\"noreply@myawesomeapp.com\"),\n\t\tFromName: jsii.String(\"Awesome App\"),\n\t\tReplyTo: jsii.String(\"support@myawesomeapp.com\"),\n\t\tSesVerifiedDomain: jsii.String(\"myawesomeapp.com\"),\n\t}),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n    sesVerifiedDomain: 'myawesomeapp.com',\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":381}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolEmail","@aws-cdk/aws-cognito.UserPoolEmail#withSES","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolSESOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n    sesVerifiedDomain: 'myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":11,"104":1,"193":2,"194":3,"196":1,"197":1,"226":1,"281":6},"fqnsFingerprint":"b3aa2d2216fb49407722bdaf7509979363cf49923111c080f8358655f0e5504e"},"7731a9d10f2b08db6816c2d27ab18b11ba84918e8a865ae1e3396a55a4b4a4e9":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    device_tracking=cognito.DeviceTracking(\n        challenge_required_on_new_device=True,\n        device_only_remembered_on_user_prompt=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    DeviceTracking = new DeviceTracking {\n        ChallengeRequiredOnNewDevice = true,\n        DeviceOnlyRememberedOnUserPrompt = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .deviceTracking(DeviceTracking.builder()\n                .challengeRequiredOnNewDevice(true)\n                .deviceOnlyRememberedOnUserPrompt(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tDeviceTracking: &DeviceTracking{\n\t\tChallengeRequiredOnNewDevice: jsii.Boolean(true),\n\t\tDeviceOnlyRememberedOnUserPrompt: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":398}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.DeviceTracking","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":5,"104":1,"106":2,"193":2,"194":1,"197":1,"226":1,"281":3},"fqnsFingerprint":"6750bbc2944b5950780b943b0182ca456aa5b8bc659ac64c148295fa5cf64ce9"},"3e0514e7e999826afe0da96d076d940d9bfa1e89706a577fc9eac814fb6562ac":{"translations":{"python":{"source":"auth_challenge_fn = lambda_.Function(self, \"authChallengeFn\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"path/to/asset\"))\n)\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    # ...\n    lambda_triggers=cognito.UserPoolTriggers(\n        create_auth_challenge=auth_challenge_fn\n    )\n)\n\nuserpool.add_trigger(cognito.UserPoolOperation.USER_MIGRATION, lambda_.Function(self, \"userMigrationFn\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"path/to/asset\"))\n))","version":"2"},"csharp":{"source":"var authChallengeFn = new Function(this, \"authChallengeFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"path/to/asset\"))\n});\n\nvar userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    LambdaTriggers = new UserPoolTriggers {\n        CreateAuthChallenge = authChallengeFn\n    }\n});\n\nuserpool.AddTrigger(UserPoolOperation.USER_MIGRATION, new Function(this, \"userMigrationFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"path/to/asset\"))\n}));","version":"1"},"java":{"source":"Function authChallengeFn = Function.Builder.create(this, \"authChallengeFn\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"path/to/asset\")))\n        .build();\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .createAuthChallenge(authChallengeFn)\n                .build())\n        .build();\n\nuserpool.addTrigger(UserPoolOperation.USER_MIGRATION, Function.Builder.create(this, \"userMigrationFn\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"path/to/asset\")))\n        .build());","version":"1"},"go":{"source":"authChallengeFn := lambda.NewFunction(this, jsii.String(\"authChallengeFn\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_FromAsset(path.join(__dirname, jsii.String(\"path/to/asset\"))),\n})\n\nuserpool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tLambdaTriggers: &UserPoolTriggers{\n\t\tCreateAuthChallenge: authChallengeFn,\n\t},\n})\n\nuserpool.AddTrigger(cognito.UserPoolOperation_USER_MIGRATION(), lambda.NewFunction(this, jsii.String(\"userMigrationFn\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_*FromAsset(path.join(__dirname, jsii.String(\"path/to/asset\"))),\n}))","version":"1"},"$":{"source":"const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":420}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#addTrigger","@aws-cdk/aws-cognito.UserPoolOperation","@aws-cdk/aws-cognito.UserPoolOperation#USER_MIGRATION","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolTriggers","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Code#fromAsset","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#NODEJS_14_X","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":40,"104":3,"193":4,"194":16,"196":5,"197":3,"225":2,"226":1,"242":2,"243":2,"281":8},"fqnsFingerprint":"f516b6f6eed07f1e809f2aca6e8d3e87734f26ee162071561d55703de0d4ac4c"},"dd94dfd122deaf328839ee25b62d28cb7950c120304774ad396307c9a73d0df7":{"translations":{"python":{"source":"# post_auth_fn: lambda.Function\n\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    lambda_triggers=cognito.UserPoolTriggers(\n        post_authentication=post_auth_fn\n    )\n)\n\n# provide permissions to describe the user pool scoped to the ARN the user pool\npost_auth_fn.role.attach_inline_policy(iam.Policy(self, \"userpool-policy\",\n    statements=[iam.PolicyStatement(\n        actions=[\"cognito-idp:DescribeUserPool\"],\n        resources=[userpool.user_pool_arn]\n    )]\n))","version":"2"},"csharp":{"source":"Function postAuthFn;\n\n\nvar userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    LambdaTriggers = new UserPoolTriggers {\n        PostAuthentication = postAuthFn\n    }\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(new Policy(this, \"userpool-policy\", new PolicyProps {\n    Statements = new [] { new PolicyStatement(new PolicyStatementProps {\n        Actions = new [] { \"cognito-idp:DescribeUserPool\" },\n        Resources = new [] { userpool.UserPoolArn }\n    }) }\n}));","version":"1"},"java":{"source":"Function postAuthFn;\n\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .postAuthentication(postAuthFn)\n                .build())\n        .build();\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role.attachInlinePolicy(Policy.Builder.create(this, \"userpool-policy\")\n        .statements(List.of(PolicyStatement.Builder.create()\n                .actions(List.of(\"cognito-idp:DescribeUserPool\"))\n                .resources(List.of(userpool.getUserPoolArn()))\n                .build()))\n        .build());","version":"1"},"go":{"source":"var postAuthFn function\n\n\nuserpool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tLambdaTriggers: &UserPoolTriggers{\n\t\tPostAuthentication: postAuthFn,\n\t},\n})\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(iam.NewPolicy(this, jsii.String(\"userpool-policy\"), &PolicyProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"cognito-idp:DescribeUserPool\"),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tuserpool.UserPoolArn,\n\t\t\t},\n\t\t}),\n\t},\n}))","version":"1"},"$":{"source":"declare const postAuthFn: lambda.Function;\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":457}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#userPoolArn","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolTriggers","@aws-cdk/aws-iam.IIdentity#attachInlinePolicy","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.PolicyProps","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-lambda.Function#role","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const postAuthFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"28":1,"75":21,"104":2,"130":1,"153":1,"169":1,"192":3,"193":4,"194":6,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":5,"290":1},"fqnsFingerprint":"642d307b83bed6e8e5585a61db334dbc8fdf835a74dcff9ca77a2415e7eb2aad"},"666564a14cac34f6090c25419712bd710b27b3b67d414bfc8cd915b2dd5d73b2":{"translations":{"python":{"source":"awesome_pool = cognito.UserPool.from_user_pool_id(self, \"awesome-user-pool\", \"us-east-1_oiuR12Abd\")\n\nother_awesome_pool = cognito.UserPool.from_user_pool_arn(self, \"other-awesome-user-pool\", \"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\")","version":"2"},"csharp":{"source":"var awesomePool = UserPool.FromUserPoolId(this, \"awesome-user-pool\", \"us-east-1_oiuR12Abd\");\n\nvar otherAwesomePool = UserPool.FromUserPoolArn(this, \"other-awesome-user-pool\", \"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\");","version":"1"},"java":{"source":"IUserPool awesomePool = UserPool.fromUserPoolId(this, \"awesome-user-pool\", \"us-east-1_oiuR12Abd\");\n\nIUserPool otherAwesomePool = UserPool.fromUserPoolArn(this, \"other-awesome-user-pool\", \"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\");","version":"1"},"go":{"source":"awesomePool := cognito.UserPool_FromUserPoolId(this, jsii.String(\"awesome-user-pool\"), jsii.String(\"us-east-1_oiuR12Abd\"))\n\notherAwesomePool := cognito.UserPool_FromUserPoolArn(this, jsii.String(\"other-awesome-user-pool\"), jsii.String(\"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\"))","version":"1"},"$":{"source":"const awesomePool = cognito.UserPool.fromUserPoolId(this, 'awesome-user-pool', 'us-east-1_oiuR12Abd');\n\nconst otherAwesomePool = cognito.UserPool.fromUserPoolArn(this, 'other-awesome-user-pool',\n  'arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":486}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#fromUserPoolArn","@aws-cdk/aws-cognito.UserPool#fromUserPoolId","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awesomePool = cognito.UserPool.fromUserPoolId(this, 'awesome-user-pool', 'us-east-1_oiuR12Abd');\n\nconst otherAwesomePool = cognito.UserPool.fromUserPoolArn(this, 'other-awesome-user-pool',\n  'arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":8,"104":2,"194":4,"196":2,"225":2,"242":2,"243":2},"fqnsFingerprint":"6f6be066e5aaf8ae0bc9355c024a5665ef450d68224320a8603749c6b882cda3"},"72fde5974a8332e271e55ea76ef605d44345ea2c819972e3337b3b77cafe6fc4":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"Pool\")\n\nprovider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"Pool\");\n\nvar provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool\n});","version":"1"},"java":{"source":"UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .build();","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nprovider := cognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n\tUserPool: userpool,\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'Pool');\n\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":512}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":10,"104":2,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"281":3},"fqnsFingerprint":"3c4ea82ef355840939066deb3ff120e1a9236a42a5e46eec110d5c181e8fd518"},"35b05a5c11d927610fd0d414a579b9f999703ff78d109a20129d093daa8ccbee":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"Pool\")\n\ncognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool,\n    attribute_mapping=cognito.AttributeMapping(\n        email=cognito.ProviderAttribute.AMAZON_EMAIL,\n        website=cognito.ProviderAttribute.other(\"url\"),  # use other() when an attribute is not pre-defined in the CDK\n        custom={\n            # custom user pool attributes go here\n            \"unique_id\": cognito.ProviderAttribute.AMAZON_USER_ID\n        }\n    )\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"Pool\");\n\nnew UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool,\n    AttributeMapping = new AttributeMapping {\n        Email = ProviderAttribute.AMAZON_EMAIL,\n        Website = ProviderAttribute.Other(\"url\"),  // use other() when an attribute is not pre-defined in the CDK\n        Custom = new Dictionary<string, ProviderAttribute> {\n            // custom user pool attributes go here\n            { \"uniqueId\", ProviderAttribute.AMAZON_USER_ID }\n        }\n    }\n});","version":"1"},"java":{"source":"UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .attributeMapping(AttributeMapping.builder()\n                .email(ProviderAttribute.AMAZON_EMAIL)\n                .website(ProviderAttribute.other(\"url\")) // use other() when an attribute is not pre-defined in the CDK\n                .custom(Map.of(\n                        // custom user pool attributes go here\n                        \"uniqueId\", ProviderAttribute.AMAZON_USER_ID))\n                .build())\n        .build();","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\ncognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n\tUserPool: userpool,\n\tAttributeMapping: &AttributeMapping{\n\t\tEmail: cognito.ProviderAttribute_AMAZON_EMAIL(),\n\t\tWebsite: cognito.ProviderAttribute_Other(jsii.String(\"url\")),\n\t\t // use other() when an attribute is not pre-defined in the CDK\n\t\tCustom: map[string]providerAttribute{\n\t\t\t// custom user pool attributes go here\n\t\t\t\"uniqueId\": cognito.*providerAttribute_AMAZON_USER_ID(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":529}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_EMAIL","@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_USER_ID","@aws-cdk/aws-cognito.ProviderAttribute#other","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":23,"104":2,"193":3,"194":8,"196":1,"197":2,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"78e0a8c9150290b231791390ad87871719d6b4733828c7e215318f4a35fda4bf"},"3bafaab079728958b3b426b32e7f29dab0865186fedc71285fbd2f50c523e9dc":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"pool\")\nclient = pool.add_client(\"customer-app-client\")\nclient_id = client.user_pool_client_id","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"pool\");\nvar client = pool.AddClient(\"customer-app-client\");\nvar clientId = client.UserPoolClientId;","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"pool\");\nUserPoolClient client = pool.addClient(\"customer-app-client\");\nString clientId = client.getUserPoolClientId();","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"pool\"))\nclient := pool.addClient(jsii.String(\"customer-app-client\"))\nclientId := client.UserPoolClientId","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'pool');\nconst client = pool.addClient('customer-app-client');\nconst clientId = client.userPoolClientId;","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":556}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClient#userPoolClientId","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'pool');\nconst client = pool.addClient('customer-app-client');\nconst clientId = client.userPoolClientId;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":9,"104":1,"194":3,"196":1,"197":1,"225":3,"242":3,"243":3},"fqnsFingerprint":"6a1594e15529a91fb69172d070df2028b5a79b6ba8cf5329b944d05cf2a17a08"},"dba258bc5accd28db64e862fda3d1a9085ea7717f54829f09b0623d6e5fa518d":{"translations":{"python":{"source":"imported_pool = cognito.UserPool.from_user_pool_id(self, \"imported-pool\", \"us-east-1_oiuR12Abd\")\ncognito.UserPoolClient(self, \"customer-app-client\",\n    user_pool=imported_pool\n)","version":"2"},"csharp":{"source":"var importedPool = UserPool.FromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nnew UserPoolClient(this, \"customer-app-client\", new UserPoolClientProps {\n    UserPool = importedPool\n});","version":"1"},"java":{"source":"IUserPool importedPool = UserPool.fromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nUserPoolClient.Builder.create(this, \"customer-app-client\")\n        .userPool(importedPool)\n        .build();","version":"1"},"go":{"source":"importedPool := cognito.UserPool_FromUserPoolId(this, jsii.String(\"imported-pool\"), jsii.String(\"us-east-1_oiuR12Abd\"))\ncognito.NewUserPoolClient(this, jsii.String(\"customer-app-client\"), &UserPoolClientProps{\n\tUserPool: importedPool,\n})","version":"1"},"$":{"source":"const importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":565}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#fromUserPoolId","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":8,"104":2,"193":1,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"6608efe5830657b52b6fb2309db27ab1c1ed51e24d64900627caef7db0327103"},"6fda4277db607bea7b0b44268fefb895d55862da5c5c5809338455013a8269fe":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"pool\")\npool.add_client(\"app-client\",\n    auth_flows=cognito.AuthFlow(\n        user_password=True,\n        user_srp=True\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    AuthFlows = new AuthFlow {\n        UserPassword = true,\n        UserSrp = true\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .userSrp(true)\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\tAuthFlows: &AuthFlow{\n\t\tUserPassword: jsii.Boolean(true),\n\t\tUserSrp: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":579}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AuthFlow","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":8,"104":1,"106":2,"193":2,"194":2,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"a67828d50df75e0a87093ba650ffd896ea97489f1cf193046a9b727915051543"},"2e977cbc6fd2d0d3143615923b11b9307cff244d6818eb35745801f1d59ca1bf":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tAuthorizationCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_OPENID(),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://my-app-domain.com/welcome\"),\n\t\t},\n\t\tLogoutUrls: []*string{\n\t\t\tjsii.String(\"https://my-app-domain.com/signin\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":603}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#OPENID","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":14,"104":1,"106":1,"192":3,"193":3,"194":4,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":6},"fqnsFingerprint":"82a968d0c8b9587d5a118331b009bfeb69588d20d3adf2421cfb9417a3696185"},"45e1250661485f375c213fdac7c9c48d961c5ebe50a00b4988179179de9e45c8":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    prevent_user_existence_errors=True\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    PreventUserExistenceErrors = true\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .preventUserExistenceErrors(true)\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\tPreventUserExistenceErrors: jsii.Boolean(true),\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  preventUserExistenceErrors: true,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":624}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  preventUserExistenceErrors: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":6,"104":1,"106":1,"193":1,"194":2,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"fbf417f17f1ba3536e3871af8d2df05bbf5ed412de0934b432bd668a14e7a950"},"d8c8577717ad739ac44f86df3f4f9a0ce05370fc426e628b8a798ff4f2bbf728":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON, cognito.UserPoolClientIdentityProvider.COGNITO\n    ]\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO))\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tSupportedIdentityProviders: []userPoolClientIdentityProvider{\n\t\tcognito.*userPoolClientIdentityProvider_AMAZON(),\n\t\tcognito.*userPoolClientIdentityProvider_COGNITO(),\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":636}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#COGNITO","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":12,"104":1,"192":1,"193":1,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"37cc9c5e782711ed3aa7fd74cd92385d97438f63255d9fc254e99551dcbb73df"},"9797f6d5f61fdc1a1517fdc63f40411519b5e5849dde10380acd6008312fa24f":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\nprovider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    user_pool=pool,\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\"\n)\n\nclient = pool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n)\n\nclient.node.add_dependency(provider)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\nvar provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    UserPool = pool,\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\"\n});\n\nvar client = pool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n});\n\nclient.Node.AddDependency(provider);","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\nUserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .userPool(pool)\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .build();\n\nUserPoolClient client = pool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON))\n        .build());\n\nclient.node.addDependency(provider);","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\nprovider := cognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tUserPool: pool,\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n})\n\nclient := pool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tSupportedIdentityProviders: []userPoolClientIdentityProvider{\n\t\tcognito.*userPoolClientIdentityProvider_AMAZON(),\n\t},\n})\n\nclient.Node.AddDependency(provider)","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":651}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","@aws-cdk/core.Construct#node","@aws-cdk/core.ConstructNode#addDependency","@aws-cdk/core.IDependable","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":2,"192":1,"193":2,"194":7,"196":2,"197":2,"225":3,"226":1,"242":3,"243":3,"281":4},"fqnsFingerprint":"1e94ad3c35e6c6958cc7b7278e44d5e27a00aee8148da25c20cf326bb6cc64c8"},"2e975cd0fee072b08851fea0d1eff0ae2a394686d06fb9dcc3d832b88812dc25":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    access_token_validity=Duration.minutes(60),\n    id_token_validity=Duration.minutes(60),\n    refresh_token_validity=Duration.days(30)\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    AccessTokenValidity = Duration.Minutes(60),\n    IdTokenValidity = Duration.Minutes(60),\n    RefreshTokenValidity = Duration.Days(30)\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .accessTokenValidity(Duration.minutes(60))\n        .idTokenValidity(Duration.minutes(60))\n        .refreshTokenValidity(Duration.days(30))\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tAccessTokenValidity: awscdkcore.Duration_Minutes(jsii.Number(60)),\n\tIdTokenValidity: *awscdkcore.Duration_*Minutes(jsii.Number(60)),\n\tRefreshTokenValidity: *awscdkcore.Duration_Days(jsii.Number(30)),\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  accessTokenValidity: Duration.minutes(60),\n  idTokenValidity: Duration.minutes(60),\n  refreshTokenValidity: Duration.days(30),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":673}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  accessTokenValidity: Duration.minutes(60),\n  idTokenValidity: Duration.minutes(60),\n  refreshTokenValidity: Duration.days(30),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":2,"75":14,"104":1,"193":1,"194":5,"196":4,"197":1,"225":1,"226":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"e2058184d4a659c41bd2419f285dfcf4bc296e6e2b8c2fc18d31f2c8a1254bfb"},"009efcd4f64da124d3111e2abc547952619a5f9f80004ed58bbc09d261c60475":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nclient_write_attributes = (cognito.ClientAttributes()).with_standard_attributes(fullname=True, email=True).with_custom_attributes(\"favouritePizza\", \"favouriteBeverage\")\n\nclient_read_attributes = client_write_attributes.with_standard_attributes(email_verified=True).with_custom_attributes(\"pointsEarned\")\n\npool.add_client(\"app-client\",\n    # ...\n    read_attributes=client_read_attributes,\n    write_attributes=client_write_attributes\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar clientWriteAttributes = (new ClientAttributes()).WithStandardAttributes(new StandardAttributesMask { Fullname = true, Email = true }).WithCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nvar clientReadAttributes = clientWriteAttributes.WithStandardAttributes(new StandardAttributesMask { EmailVerified = true }).WithCustomAttributes(\"pointsEarned\");\n\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    ReadAttributes = clientReadAttributes,\n    WriteAttributes = clientWriteAttributes\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nClientAttributes clientWriteAttributes = (new ClientAttributes()).withStandardAttributes(StandardAttributesMask.builder().fullname(true).email(true).build()).withCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nClientAttributes clientReadAttributes = clientWriteAttributes.withStandardAttributes(StandardAttributesMask.builder().emailVerified(true).build()).withCustomAttributes(\"pointsEarned\");\n\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .readAttributes(clientReadAttributes)\n        .writeAttributes(clientWriteAttributes)\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nclientWriteAttributes := (cognito.NewClientAttributes()).WithStandardAttributes(&StandardAttributesMask{\n\tFullname: jsii.Boolean(true),\n\tEmail: jsii.Boolean(true),\n}).WithCustomAttributes(jsii.String(\"favouritePizza\"), jsii.String(\"favouriteBeverage\"))\n\nclientReadAttributes := clientWriteAttributes.WithStandardAttributes(&StandardAttributesMask{\n\tEmailVerified: jsii.Boolean(true),\n}).WithCustomAttributes(jsii.String(\"pointsEarned\"))\n\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tReadAttributes: clientReadAttributes,\n\tWriteAttributes: clientWriteAttributes,\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":690}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.ClientAttributes","@aws-cdk/aws-cognito.ClientAttributes#withCustomAttributes","@aws-cdk/aws-cognito.ClientAttributes#withStandardAttributes","@aws-cdk/aws-cognito.StandardAttributesMask","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":1,"106":3,"193":3,"194":7,"196":5,"197":2,"200":1,"225":3,"226":1,"242":3,"243":3,"281":5},"fqnsFingerprint":"cc952ab20d6d1fbc8d95afa56fe0297009acdb2312e5cbe31e2e9e7949652be4"},"3836d3272372fa67fb2c9e362e4c88998c61e659ea2bd3696aa1d037e264a8dd":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    enable_token_revocation=True\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    EnableTokenRevocation = true\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .enableTokenRevocation(true)\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tEnableTokenRevocation: jsii.Boolean(true),\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  enableTokenRevocation: true,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":712}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  enableTokenRevocation: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":6,"104":1,"106":1,"193":1,"194":2,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"fbf417f17f1ba3536e3871af8d2df05bbf5ed412de0934b432bd668a14e7a950"},"01531bdb5e686a6e06fbdadd2855eccc3c6610230fd9fc1ff996c099f7c8bc41":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":731}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"eb757d53e359c98677410ba1a011ff70ad944579fff705071044656dc221bae3":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nvar certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nvar domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\npool.addDomain(jsii.String(\"CognitoDomain\"), &UserPoolDomainOptions{\n\tCognitoDomain: &CognitoDomainOptions{\n\t\tDomainPrefix: jsii.String(\"my-awesome-app\"),\n\t},\n})\n\ncertificateArn := \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomainCert := certificatemanager.Certificate_FromCertificateArn(this, jsii.String(\"domainCert\"), certificateArn)\npool.addDomain(jsii.String(\"CustomDomain\"), &UserPoolDomainOptions{\n\tCustomDomain: &CustomDomainOptions{\n\t\tDomainName: jsii.String(\"user.myapp.com\"),\n\t\tCertificate: domainCert,\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":770}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-cognito.CognitoDomainOptions","@aws-cdk/aws-cognito.CustomDomainOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolDomainOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":19,"104":2,"193":4,"194":5,"196":3,"197":1,"225":3,"226":2,"242":3,"243":3,"281":5},"fqnsFingerprint":"75d60300c871e090ebbd4766b4e5d7d33c6cc29b91ceabc52545256b86d3e142"},"5d0b803029c351d73536530d94e2bd16350c8ebcb7068064bf9aac8488618dcb":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nvar client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nvar domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nvar signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});","version":"1"},"java":{"source":"UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"UserPool\"), &UserPoolProps{\n})\nclient := userpool.addClient(jsii.String(\"Client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tImplicitCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://myapp.com/home\"),\n\t\t\tjsii.String(\"https://myapp.com/users\"),\n\t\t},\n\t},\n})\ndomain := userpool.addDomain(jsii.String(\"Domain\"), &UserPoolDomainOptions{\n})\nsignInUrl := domain.SignInUrl(client, &SignInUrlOptions{\n\tRedirectUri: jsii.String(\"https://myapp.com/home\"),\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":798}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.SignInUrlOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomain#signInUrl","@aws-cdk/aws-cognito.UserPoolDomainOptions","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":18,"104":1,"106":1,"192":1,"193":6,"194":4,"196":3,"197":1,"225":4,"242":4,"243":4,"281":5},"fqnsFingerprint":"c43089a069e15f8c39a6d969ca2270bcb4ea6dd65989f9ea06b4e5a9ede2500d"},"4aa99d75b8e1ed7d1c9d55426815745834a2a19faf657d7c55f274fae4507818":{"translations":{"python":{"source":"my_user_pool_domain = cognito.UserPoolDomain.from_domain_name(self, \"my-user-pool-domain\", \"domain-name\")","version":"2"},"csharp":{"source":"var myUserPoolDomain = UserPoolDomain.FromDomainName(this, \"my-user-pool-domain\", \"domain-name\");","version":"1"},"java":{"source":"IUserPoolDomain myUserPoolDomain = UserPoolDomain.fromDomainName(this, \"my-user-pool-domain\", \"domain-name\");","version":"1"},"go":{"source":"myUserPoolDomain := cognito.UserPoolDomain_FromDomainName(this, jsii.String(\"my-user-pool-domain\"), jsii.String(\"domain-name\"))","version":"1"},"$":{"source":"const myUserPoolDomain = cognito.UserPoolDomain.fromDomainName(this, 'my-user-pool-domain', 'domain-name');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cognito"},"field":{"field":"markdown","line":824}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomain#fromDomainName","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myUserPoolDomain = cognito.UserPoolDomain.fromDomainName(this, 'my-user-pool-domain', 'domain-name');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"2430a0eeef4c9330909aa0692d19039dfc038ec5f89228ea7e6623ac8f339d93"},"c0a847ecc2411ffb05b9e0040b1b86a4cc163dfe6b9720dad16b254fc59c4686":{"translations":{"python":{"source":"cognito.UserPool(self, \"UserPool\",\n    # ...\n    account_recovery=cognito.AccountRecovery.EMAIL_ONLY\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"UserPool\", new UserPoolProps {\n    // ...\n    AccountRecovery = AccountRecovery.EMAIL_ONLY\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"UserPool\")\n        // ...\n        .accountRecovery(AccountRecovery.EMAIL_ONLY)\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"UserPool\"), &UserPoolProps{\n\t// ...\n\tAccountRecovery: cognito.AccountRecovery_EMAIL_ONLY,\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.AccountRecovery"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AccountRecovery","@aws-cdk/aws-cognito.AccountRecovery#EMAIL_ONLY","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"fb1a1fe0fb129509cbe6e8ef54d461cb737cdf326f83c722ce40e4c597669d97"},"6c013dd95e8894d45b5155b16363504cb4cc2aa7772184378e53b43ec235605b":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"Pool\")\n\ncognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool,\n    attribute_mapping=cognito.AttributeMapping(\n        email=cognito.ProviderAttribute.AMAZON_EMAIL,\n        website=cognito.ProviderAttribute.other(\"url\"),  # use other() when an attribute is not pre-defined in the CDK\n        custom={\n            # custom user pool attributes go here\n            \"unique_id\": cognito.ProviderAttribute.AMAZON_USER_ID\n        }\n    )\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"Pool\");\n\nnew UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool,\n    AttributeMapping = new AttributeMapping {\n        Email = ProviderAttribute.AMAZON_EMAIL,\n        Website = ProviderAttribute.Other(\"url\"),  // use other() when an attribute is not pre-defined in the CDK\n        Custom = new Dictionary<string, ProviderAttribute> {\n            // custom user pool attributes go here\n            { \"uniqueId\", ProviderAttribute.AMAZON_USER_ID }\n        }\n    }\n});","version":"1"},"java":{"source":"UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .attributeMapping(AttributeMapping.builder()\n                .email(ProviderAttribute.AMAZON_EMAIL)\n                .website(ProviderAttribute.other(\"url\")) // use other() when an attribute is not pre-defined in the CDK\n                .custom(Map.of(\n                        // custom user pool attributes go here\n                        \"uniqueId\", ProviderAttribute.AMAZON_USER_ID))\n                .build())\n        .build();","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\ncognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n\tUserPool: userpool,\n\tAttributeMapping: &AttributeMapping{\n\t\tEmail: cognito.ProviderAttribute_AMAZON_EMAIL(),\n\t\tWebsite: cognito.ProviderAttribute_Other(jsii.String(\"url\")),\n\t\t // use other() when an attribute is not pre-defined in the CDK\n\t\tCustom: map[string]providerAttribute{\n\t\t\t// custom user pool attributes go here\n\t\t\t\"uniqueId\": cognito.*providerAttribute_AMAZON_USER_ID(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.AttributeMapping"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_EMAIL","@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_USER_ID","@aws-cdk/aws-cognito.ProviderAttribute#other","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":23,"104":2,"193":3,"194":8,"196":1,"197":2,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"78e0a8c9150290b231791390ad87871719d6b4733828c7e215318f4a35fda4bf"},"3a2becead7de349feae7186bcb6c0c6eff873030d1d1216e3a03a25aa099a07d":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"pool\")\npool.add_client(\"app-client\",\n    auth_flows=cognito.AuthFlow(\n        user_password=True,\n        user_srp=True\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    AuthFlows = new AuthFlow {\n        UserPassword = true,\n        UserSrp = true\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .userSrp(true)\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\tAuthFlows: &AuthFlow{\n\t\tUserPassword: jsii.Boolean(true),\n\t\tUserSrp: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.AuthFlow"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AuthFlow","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":8,"104":1,"106":2,"193":2,"194":2,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"a67828d50df75e0a87093ba650ffd896ea97489f1cf193046a9b727915051543"},"7efbb336cef0f125029313b1f8c2ce49f5c9f810ce45fe720e1c9d5d1e144bae":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(username=True, email=True),\n    auto_verify=cognito.AutoVerifiedAttrs(email=True, phone=True)\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases { Username = true, Email = true },\n    AutoVerify = new AutoVerifiedAttrs { Email = true, Phone = true }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder().username(true).email(true).build())\n        .autoVerify(AutoVerifiedAttrs.builder().email(true).phone(true).build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\t// ...\n\tSignInAliases: &SignInAliases{\n\t\tUsername: jsii.Boolean(true),\n\t\tEmail: jsii.Boolean(true),\n\t},\n\tAutoVerify: &AutoVerifiedAttrs{\n\t\tEmail: jsii.Boolean(true),\n\t\tPhone: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.AutoVerifiedAttrs"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AutoVerifiedAttrs","@aws-cdk/aws-cognito.SignInAliases","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":8,"104":1,"106":4,"193":3,"194":1,"197":1,"226":1,"281":6},"fqnsFingerprint":"6b1ff292364c7cabbae22991cca9ae7ba250df61aa37a96e781f9d9cff3d9c3c"},"af4a73858ce0780cf9251de320f2036fb5a10787a58a98c9531e81d32d5b1ed9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nbase_url_options = cognito.BaseUrlOptions(\n    fips=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar baseUrlOptions = new BaseUrlOptions {\n    Fips = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nBaseUrlOptions baseUrlOptions = BaseUrlOptions.builder()\n        .fips(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nbaseUrlOptions := &BaseUrlOptions{\n\tFips: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst baseUrlOptions: cognito.BaseUrlOptions = {\n  fips: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.BaseUrlOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BaseUrlOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseUrlOptions: cognito.BaseUrlOptions = {\n  fips: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":5,"91":1,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"28ed35f69401ef720f06846bae091981475dab47f3620103ba2d264dd72c58d5"},"36f2b34a3a25503438d27cd870a2c413b693649530d9b6c769e2f7ca0e29eb0a":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.BooleanAttribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"70e620c5b4659b96a19ffd375465c6d5f1ec92ec2614377ad63d308b9dca0080":{"translations":{"python":{"source":"import aws_cdk.aws_cognito as cognito\n\n# my_provider: iam.OpenIdConnectProvider\n\ncognito.CfnIdentityPool(self, \"IdentityPool\",\n    open_id_connect_provider_arns=[my_provider.open_id_connect_provider_arn],\n    # And the other properties for your identity pool\n    allow_unauthenticated_identities=False\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Cognito;\n\nOpenIdConnectProvider myProvider;\n\nnew CfnIdentityPool(this, \"IdentityPool\", new CfnIdentityPoolProps {\n    OpenIdConnectProviderArns = new [] { myProvider.OpenIdConnectProviderArn },\n    // And the other properties for your identity pool\n    AllowUnauthenticatedIdentities = false\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cognito.*;\n\nOpenIdConnectProvider myProvider;\n\nCfnIdentityPool.Builder.create(this, \"IdentityPool\")\n        .openIdConnectProviderArns(List.of(myProvider.getOpenIdConnectProviderArn()))\n        // And the other properties for your identity pool\n        .allowUnauthenticatedIdentities(false)\n        .build();","version":"1"},"go":{"source":"import cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar myProvider openIdConnectProvider\n\ncognito.NewCfnIdentityPool(this, jsii.String(\"IdentityPool\"), &CfnIdentityPoolProps{\n\tOpenIdConnectProviderArns: []*string{\n\t\tmyProvider.OpenIdConnectProviderArn,\n\t},\n\t// And the other properties for your identity pool\n\tAllowUnauthenticatedIdentities: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPool"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPool","@aws-cdk/aws-cognito.CfnIdentityPoolProps","@aws-cdk/aws-iam.OpenIdConnectProvider#openIdConnectProviderArn","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":10,"91":1,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":2,"197":1,"225":1,"226":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"93c1918b1194eb4865620aa976992bea87c692318059076e4fe312a912a2e1bd"},"6639ad050355309737ba2126bb43bbd497d8524c594293ccec3410a93325a0af":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncognito_identity_provider_property = cognito.CfnIdentityPool.CognitoIdentityProviderProperty(\n    client_id=\"clientId\",\n    provider_name=\"providerName\",\n    server_side_token_check=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cognitoIdentityProviderProperty = new CognitoIdentityProviderProperty {\n    ClientId = \"clientId\",\n    ProviderName = \"providerName\",\n    ServerSideTokenCheck = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCognitoIdentityProviderProperty cognitoIdentityProviderProperty = CognitoIdentityProviderProperty.builder()\n        .clientId(\"clientId\")\n        .providerName(\"providerName\")\n        .serverSideTokenCheck(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncognitoIdentityProviderProperty := &CognitoIdentityProviderProperty{\n\tClientId: jsii.String(\"clientId\"),\n\tProviderName: jsii.String(\"providerName\"),\n\tServerSideTokenCheck: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cognitoIdentityProviderProperty: cognito.CfnIdentityPool.CognitoIdentityProviderProperty = {\n  clientId: 'clientId',\n  providerName: 'providerName',\n  serverSideTokenCheck: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cognitoIdentityProviderProperty: cognito.CfnIdentityPool.CognitoIdentityProviderProperty = {\n  clientId: 'clientId',\n  providerName: 'providerName',\n  serverSideTokenCheck: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"ae5115602ad99c7cf637b275daf56503abc2d3bceb826315d20ba696654c6210"},"12cd9820e82567919c9b3997d54849a4f8f8d59f4efcf2480e2e3ae1b3a468eb":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncognito_streams_property = cognito.CfnIdentityPool.CognitoStreamsProperty(\n    role_arn=\"roleArn\",\n    streaming_status=\"streamingStatus\",\n    stream_name=\"streamName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cognitoStreamsProperty = new CognitoStreamsProperty {\n    RoleArn = \"roleArn\",\n    StreamingStatus = \"streamingStatus\",\n    StreamName = \"streamName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCognitoStreamsProperty cognitoStreamsProperty = CognitoStreamsProperty.builder()\n        .roleArn(\"roleArn\")\n        .streamingStatus(\"streamingStatus\")\n        .streamName(\"streamName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncognitoStreamsProperty := &CognitoStreamsProperty{\n\tRoleArn: jsii.String(\"roleArn\"),\n\tStreamingStatus: jsii.String(\"streamingStatus\"),\n\tStreamName: jsii.String(\"streamName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cognitoStreamsProperty: cognito.CfnIdentityPool.CognitoStreamsProperty = {\n  roleArn: 'roleArn',\n  streamingStatus: 'streamingStatus',\n  streamName: 'streamName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cognitoStreamsProperty: cognito.CfnIdentityPool.CognitoStreamsProperty = {\n  roleArn: 'roleArn',\n  streamingStatus: 'streamingStatus',\n  streamName: 'streamName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"a07b91a05d642cfdf3ad445fc59961ea8340884941713892ee8a2d4099579f72"},"37fdd1d06f21c34296e858b1472810ad6a59a251a9db5281ea84ff6bff8023e6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\npush_sync_property = cognito.CfnIdentityPool.PushSyncProperty(\n    application_arns=[\"applicationArns\"],\n    role_arn=\"roleArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar pushSyncProperty = new PushSyncProperty {\n    ApplicationArns = new [] { \"applicationArns\" },\n    RoleArn = \"roleArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nPushSyncProperty pushSyncProperty = PushSyncProperty.builder()\n        .applicationArns(List.of(\"applicationArns\"))\n        .roleArn(\"roleArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\npushSyncProperty := &PushSyncProperty{\n\tApplicationArns: []*string{\n\t\tjsii.String(\"applicationArns\"),\n\t},\n\tRoleArn: jsii.String(\"roleArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst pushSyncProperty: cognito.CfnIdentityPool.PushSyncProperty = {\n  applicationArns: ['applicationArns'],\n  roleArn: 'roleArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pushSyncProperty: cognito.CfnIdentityPool.PushSyncProperty = {\n  applicationArns: ['applicationArns'],\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"e0a828a08f0da96dc2f5e6ab33d6f555f07a1b0a142e54818bc533b362b6816e"},"310bd778aabea9276f366ff5eeebbf70ef1b658b1b35a0630c8c39c81113ccc4":{"translations":{"python":{"source":"import aws_cdk.aws_cognito as cognito\n\n# my_provider: iam.OpenIdConnectProvider\n\ncognito.CfnIdentityPool(self, \"IdentityPool\",\n    open_id_connect_provider_arns=[my_provider.open_id_connect_provider_arn],\n    # And the other properties for your identity pool\n    allow_unauthenticated_identities=False\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Cognito;\n\nOpenIdConnectProvider myProvider;\n\nnew CfnIdentityPool(this, \"IdentityPool\", new CfnIdentityPoolProps {\n    OpenIdConnectProviderArns = new [] { myProvider.OpenIdConnectProviderArn },\n    // And the other properties for your identity pool\n    AllowUnauthenticatedIdentities = false\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cognito.*;\n\nOpenIdConnectProvider myProvider;\n\nCfnIdentityPool.Builder.create(this, \"IdentityPool\")\n        .openIdConnectProviderArns(List.of(myProvider.getOpenIdConnectProviderArn()))\n        // And the other properties for your identity pool\n        .allowUnauthenticatedIdentities(false)\n        .build();","version":"1"},"go":{"source":"import cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar myProvider openIdConnectProvider\n\ncognito.NewCfnIdentityPool(this, jsii.String(\"IdentityPool\"), &CfnIdentityPoolProps{\n\tOpenIdConnectProviderArns: []*string{\n\t\tmyProvider.OpenIdConnectProviderArn,\n\t},\n\t// And the other properties for your identity pool\n\tAllowUnauthenticatedIdentities: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPoolProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPool","@aws-cdk/aws-cognito.CfnIdentityPoolProps","@aws-cdk/aws-iam.OpenIdConnectProvider#openIdConnectProviderArn","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":10,"91":1,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":2,"197":1,"225":1,"226":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"93c1918b1194eb4865620aa976992bea87c692318059076e4fe312a912a2e1bd"},"bf040ec4339a99b5fe61accb8de9a911164848c3566b9cb85197dc54f6c1d67f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# roles: Any\n\ncfn_identity_pool_role_attachment = cognito.CfnIdentityPoolRoleAttachment(self, \"MyCfnIdentityPoolRoleAttachment\",\n    identity_pool_id=\"identityPoolId\",\n\n    # the properties below are optional\n    role_mappings={\n        \"role_mappings_key\": cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            ambiguous_role_resolution=\"ambiguousRoleResolution\",\n            identity_provider=\"identityProvider\",\n            rules_configuration=cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n                rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n                    claim=\"claim\",\n                    match_type=\"matchType\",\n                    role_arn=\"roleArn\",\n                    value=\"value\"\n                )]\n            )\n        )\n    },\n    roles=roles\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar roles;\n\nvar cfnIdentityPoolRoleAttachment = new CfnIdentityPoolRoleAttachment(this, \"MyCfnIdentityPoolRoleAttachment\", new CfnIdentityPoolRoleAttachmentProps {\n    IdentityPoolId = \"identityPoolId\",\n\n    // the properties below are optional\n    RoleMappings = new Dictionary<string, object> {\n        { \"roleMappingsKey\", new RoleMappingProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            AmbiguousRoleResolution = \"ambiguousRoleResolution\",\n            IdentityProvider = \"identityProvider\",\n            RulesConfiguration = new RulesConfigurationTypeProperty {\n                Rules = new [] { new MappingRuleProperty {\n                    Claim = \"claim\",\n                    MatchType = \"matchType\",\n                    RoleArn = \"roleArn\",\n                    Value = \"value\"\n                } }\n            }\n        } }\n    },\n    Roles = roles\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject roles;\n\nCfnIdentityPoolRoleAttachment cfnIdentityPoolRoleAttachment = CfnIdentityPoolRoleAttachment.Builder.create(this, \"MyCfnIdentityPoolRoleAttachment\")\n        .identityPoolId(\"identityPoolId\")\n\n        // the properties below are optional\n        .roleMappings(Map.of(\n                \"roleMappingsKey\", RoleMappingProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .ambiguousRoleResolution(\"ambiguousRoleResolution\")\n                        .identityProvider(\"identityProvider\")\n                        .rulesConfiguration(RulesConfigurationTypeProperty.builder()\n                                .rules(List.of(MappingRuleProperty.builder()\n                                        .claim(\"claim\")\n                                        .matchType(\"matchType\")\n                                        .roleArn(\"roleArn\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build()))\n        .roles(roles)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar roles interface{}\n\ncfnIdentityPoolRoleAttachment := cognito.NewCfnIdentityPoolRoleAttachment(this, jsii.String(\"MyCfnIdentityPoolRoleAttachment\"), &CfnIdentityPoolRoleAttachmentProps{\n\tIdentityPoolId: jsii.String(\"identityPoolId\"),\n\n\t// the properties below are optional\n\tRoleMappings: map[string]interface{}{\n\t\t\"roleMappingsKey\": &RoleMappingProperty{\n\t\t\t\"type\": jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ambiguousRoleResolution\": jsii.String(\"ambiguousRoleResolution\"),\n\t\t\t\"identityProvider\": jsii.String(\"identityProvider\"),\n\t\t\t\"rulesConfiguration\": &RulesConfigurationTypeProperty{\n\t\t\t\t\"rules\": []interface{}{\n\t\t\t\t\t&MappingRuleProperty{\n\t\t\t\t\t\t\"claim\": jsii.String(\"claim\"),\n\t\t\t\t\t\t\"matchType\": jsii.String(\"matchType\"),\n\t\t\t\t\t\t\"roleArn\": jsii.String(\"roleArn\"),\n\t\t\t\t\t\t\"value\": jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tRoles: roles,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\nconst cfnIdentityPoolRoleAttachment = new cognito.CfnIdentityPoolRoleAttachment(this, 'MyCfnIdentityPoolRoleAttachment', {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment","@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIdentityPoolRoleAttachment = new cognito.CfnIdentityPoolRoleAttachment(this, 'MyCfnIdentityPoolRoleAttachment', {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":19,"104":1,"125":1,"130":1,"192":1,"193":5,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"8c1fd58e914b959a20f66a45c43dc871bf719361fbdad58cfe0edbcf58733cb4"},"e0c25c9952cac3c252b3b5f269b5ddf43ee3b27b2fe3ad80a05accbaa87e6106":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nmapping_rule_property = cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n    claim=\"claim\",\n    match_type=\"matchType\",\n    role_arn=\"roleArn\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar mappingRuleProperty = new MappingRuleProperty {\n    Claim = \"claim\",\n    MatchType = \"matchType\",\n    RoleArn = \"roleArn\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nMappingRuleProperty mappingRuleProperty = MappingRuleProperty.builder()\n        .claim(\"claim\")\n        .matchType(\"matchType\")\n        .roleArn(\"roleArn\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nmappingRuleProperty := &MappingRuleProperty{\n\tClaim: jsii.String(\"claim\"),\n\tMatchType: jsii.String(\"matchType\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst mappingRuleProperty: cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty = {\n  claim: 'claim',\n  matchType: 'matchType',\n  roleArn: 'roleArn',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mappingRuleProperty: cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty = {\n  claim: 'claim',\n  matchType: 'matchType',\n  roleArn: 'roleArn',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":9,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"c2fea5673756c3dbcd124622e533121de64e9fcbb92cc865d6b2bd00d4da66b8"},"c2c2235172ae2ad3e27333dbc254234ea8ccf217c4b0d3c33b5acfac205072ae":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrole_mapping_property = cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    ambiguous_role_resolution=\"ambiguousRoleResolution\",\n    identity_provider=\"identityProvider\",\n    rules_configuration=cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n        rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n            claim=\"claim\",\n            match_type=\"matchType\",\n            role_arn=\"roleArn\",\n            value=\"value\"\n        )]\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar roleMappingProperty = new RoleMappingProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    AmbiguousRoleResolution = \"ambiguousRoleResolution\",\n    IdentityProvider = \"identityProvider\",\n    RulesConfiguration = new RulesConfigurationTypeProperty {\n        Rules = new [] { new MappingRuleProperty {\n            Claim = \"claim\",\n            MatchType = \"matchType\",\n            RoleArn = \"roleArn\",\n            Value = \"value\"\n        } }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRoleMappingProperty roleMappingProperty = RoleMappingProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .ambiguousRoleResolution(\"ambiguousRoleResolution\")\n        .identityProvider(\"identityProvider\")\n        .rulesConfiguration(RulesConfigurationTypeProperty.builder()\n                .rules(List.of(MappingRuleProperty.builder()\n                        .claim(\"claim\")\n                        .matchType(\"matchType\")\n                        .roleArn(\"roleArn\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nroleMappingProperty := &RoleMappingProperty{\n\tType: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tAmbiguousRoleResolution: jsii.String(\"ambiguousRoleResolution\"),\n\tIdentityProvider: jsii.String(\"identityProvider\"),\n\tRulesConfiguration: &RulesConfigurationTypeProperty{\n\t\tRules: []interface{}{\n\t\t\t&MappingRuleProperty{\n\t\t\t\tClaim: jsii.String(\"claim\"),\n\t\t\t\tMatchType: jsii.String(\"matchType\"),\n\t\t\t\tRoleArn: jsii.String(\"roleArn\"),\n\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst roleMappingProperty: cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  ambiguousRoleResolution: 'ambiguousRoleResolution',\n  identityProvider: 'identityProvider',\n  rulesConfiguration: {\n    rules: [{\n      claim: 'claim',\n      matchType: 'matchType',\n      roleArn: 'roleArn',\n      value: 'value',\n    }],\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst roleMappingProperty: cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  ambiguousRoleResolution: 'ambiguousRoleResolution',\n  identityProvider: 'identityProvider',\n  rulesConfiguration: {\n    rules: [{\n      claim: 'claim',\n      matchType: 'matchType',\n      roleArn: 'roleArn',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":8,"75":14,"153":2,"169":1,"192":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"a19855bc726dd4c88084ef7b1ebbe9d9a2ac87cf25f8c6ed04512215c77ed2be"},"381b0f275dcf4e626c2401e5d82d59fea04f994e21fb96cb2656743a1c455b26":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrules_configuration_type_property = cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n    rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n        claim=\"claim\",\n        match_type=\"matchType\",\n        role_arn=\"roleArn\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar rulesConfigurationTypeProperty = new RulesConfigurationTypeProperty {\n    Rules = new [] { new MappingRuleProperty {\n        Claim = \"claim\",\n        MatchType = \"matchType\",\n        RoleArn = \"roleArn\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRulesConfigurationTypeProperty rulesConfigurationTypeProperty = RulesConfigurationTypeProperty.builder()\n        .rules(List.of(MappingRuleProperty.builder()\n                .claim(\"claim\")\n                .matchType(\"matchType\")\n                .roleArn(\"roleArn\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nrulesConfigurationTypeProperty := &RulesConfigurationTypeProperty{\n\tRules: []interface{}{\n\t\t&MappingRuleProperty{\n\t\t\tClaim: jsii.String(\"claim\"),\n\t\t\tMatchType: jsii.String(\"matchType\"),\n\t\t\tRoleArn: jsii.String(\"roleArn\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst rulesConfigurationTypeProperty: cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty = {\n  rules: [{\n    claim: 'claim',\n    matchType: 'matchType',\n    roleArn: 'roleArn',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rulesConfigurationTypeProperty: cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty = {\n  rules: [{\n    claim: 'claim',\n    matchType: 'matchType',\n    roleArn: 'roleArn',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":10,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"9bacda1ac371e9437b51cddc0368387a6226562203475a7a1b0ae40bd25398c2"},"30c06dc4f27d9b5c011e0a154d475f4f689172b71984747cb246723972944821":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# roles: Any\n\ncfn_identity_pool_role_attachment_props = cognito.CfnIdentityPoolRoleAttachmentProps(\n    identity_pool_id=\"identityPoolId\",\n\n    # the properties below are optional\n    role_mappings={\n        \"role_mappings_key\": cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            ambiguous_role_resolution=\"ambiguousRoleResolution\",\n            identity_provider=\"identityProvider\",\n            rules_configuration=cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n                rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n                    claim=\"claim\",\n                    match_type=\"matchType\",\n                    role_arn=\"roleArn\",\n                    value=\"value\"\n                )]\n            )\n        )\n    },\n    roles=roles\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar roles;\n\nvar cfnIdentityPoolRoleAttachmentProps = new CfnIdentityPoolRoleAttachmentProps {\n    IdentityPoolId = \"identityPoolId\",\n\n    // the properties below are optional\n    RoleMappings = new Dictionary<string, object> {\n        { \"roleMappingsKey\", new RoleMappingProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            AmbiguousRoleResolution = \"ambiguousRoleResolution\",\n            IdentityProvider = \"identityProvider\",\n            RulesConfiguration = new RulesConfigurationTypeProperty {\n                Rules = new [] { new MappingRuleProperty {\n                    Claim = \"claim\",\n                    MatchType = \"matchType\",\n                    RoleArn = \"roleArn\",\n                    Value = \"value\"\n                } }\n            }\n        } }\n    },\n    Roles = roles\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject roles;\n\nCfnIdentityPoolRoleAttachmentProps cfnIdentityPoolRoleAttachmentProps = CfnIdentityPoolRoleAttachmentProps.builder()\n        .identityPoolId(\"identityPoolId\")\n\n        // the properties below are optional\n        .roleMappings(Map.of(\n                \"roleMappingsKey\", RoleMappingProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .ambiguousRoleResolution(\"ambiguousRoleResolution\")\n                        .identityProvider(\"identityProvider\")\n                        .rulesConfiguration(RulesConfigurationTypeProperty.builder()\n                                .rules(List.of(MappingRuleProperty.builder()\n                                        .claim(\"claim\")\n                                        .matchType(\"matchType\")\n                                        .roleArn(\"roleArn\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build()))\n        .roles(roles)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar roles interface{}\n\ncfnIdentityPoolRoleAttachmentProps := &CfnIdentityPoolRoleAttachmentProps{\n\tIdentityPoolId: jsii.String(\"identityPoolId\"),\n\n\t// the properties below are optional\n\tRoleMappings: map[string]interface{}{\n\t\t\"roleMappingsKey\": &RoleMappingProperty{\n\t\t\t\"type\": jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"ambiguousRoleResolution\": jsii.String(\"ambiguousRoleResolution\"),\n\t\t\t\"identityProvider\": jsii.String(\"identityProvider\"),\n\t\t\t\"rulesConfiguration\": &RulesConfigurationTypeProperty{\n\t\t\t\t\"rules\": []interface{}{\n\t\t\t\t\t&MappingRuleProperty{\n\t\t\t\t\t\t\"claim\": jsii.String(\"claim\"),\n\t\t\t\t\t\t\"matchType\": jsii.String(\"matchType\"),\n\t\t\t\t\t\t\"roleArn\": jsii.String(\"roleArn\"),\n\t\t\t\t\t\t\"value\": jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tRoles: roles,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\nconst cfnIdentityPoolRoleAttachmentProps: cognito.CfnIdentityPoolRoleAttachmentProps = {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIdentityPoolRoleAttachmentProps: cognito.CfnIdentityPoolRoleAttachmentProps = {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":9,"75":19,"125":1,"130":1,"153":1,"169":1,"192":1,"193":5,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"65a92d613fac3522404fa42efb934e98c7953e45f06455974d910dfe122bbc37"},"c78fb3199066ba8702b9b3346ee68471f518f14c71f27a8e8f1ea1ab2e3f2fbf":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# user_pool_tags: Any\n\ncfn_user_pool = cognito.CfnUserPool(self, \"MyCfnUserPool\",\n    account_recovery_setting=cognito.CfnUserPool.AccountRecoverySettingProperty(\n        recovery_mechanisms=[cognito.CfnUserPool.RecoveryOptionProperty(\n            name=\"name\",\n            priority=123\n        )]\n    ),\n    admin_create_user_config=cognito.CfnUserPool.AdminCreateUserConfigProperty(\n        allow_admin_create_user_only=False,\n        invite_message_template=cognito.CfnUserPool.InviteMessageTemplateProperty(\n            email_message=\"emailMessage\",\n            email_subject=\"emailSubject\",\n            sms_message=\"smsMessage\"\n        ),\n        unused_account_validity_days=123\n    ),\n    alias_attributes=[\"aliasAttributes\"],\n    auto_verified_attributes=[\"autoVerifiedAttributes\"],\n    deletion_protection=\"deletionProtection\",\n    device_configuration=cognito.CfnUserPool.DeviceConfigurationProperty(\n        challenge_required_on_new_device=False,\n        device_only_remembered_on_user_prompt=False\n    ),\n    email_configuration=cognito.CfnUserPool.EmailConfigurationProperty(\n        configuration_set=\"configurationSet\",\n        email_sending_account=\"emailSendingAccount\",\n        from=\"from\",\n        reply_to_email_address=\"replyToEmailAddress\",\n        source_arn=\"sourceArn\"\n    ),\n    email_verification_message=\"emailVerificationMessage\",\n    email_verification_subject=\"emailVerificationSubject\",\n    enabled_mfas=[\"enabledMfas\"],\n    lambda_config=cognito.CfnUserPool.LambdaConfigProperty(\n        create_auth_challenge=\"createAuthChallenge\",\n        custom_email_sender=cognito.CfnUserPool.CustomEmailSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        custom_message=\"customMessage\",\n        custom_sms_sender=cognito.CfnUserPool.CustomSMSSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        define_auth_challenge=\"defineAuthChallenge\",\n        kms_key_id=\"kmsKeyId\",\n        post_authentication=\"postAuthentication\",\n        post_confirmation=\"postConfirmation\",\n        pre_authentication=\"preAuthentication\",\n        pre_sign_up=\"preSignUp\",\n        pre_token_generation=\"preTokenGeneration\",\n        user_migration=\"userMigration\",\n        verify_auth_challenge_response=\"verifyAuthChallengeResponse\"\n    ),\n    mfa_configuration=\"mfaConfiguration\",\n    policies=cognito.CfnUserPool.PoliciesProperty(\n        password_policy=cognito.CfnUserPool.PasswordPolicyProperty(\n            minimum_length=123,\n            require_lowercase=False,\n            require_numbers=False,\n            require_symbols=False,\n            require_uppercase=False,\n            temporary_password_validity_days=123\n        )\n    ),\n    schema=[cognito.CfnUserPool.SchemaAttributeProperty(\n        attribute_data_type=\"attributeDataType\",\n        developer_only_attribute=False,\n        mutable=False,\n        name=\"name\",\n        number_attribute_constraints=cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n            max_value=\"maxValue\",\n            min_value=\"minValue\"\n        ),\n        required=False,\n        string_attribute_constraints=cognito.CfnUserPool.StringAttributeConstraintsProperty(\n            max_length=\"maxLength\",\n            min_length=\"minLength\"\n        )\n    )],\n    sms_authentication_message=\"smsAuthenticationMessage\",\n    sms_configuration=cognito.CfnUserPool.SmsConfigurationProperty(\n        external_id=\"externalId\",\n        sns_caller_arn=\"snsCallerArn\",\n        sns_region=\"snsRegion\"\n    ),\n    sms_verification_message=\"smsVerificationMessage\",\n    user_attribute_update_settings=cognito.CfnUserPool.UserAttributeUpdateSettingsProperty(\n        attributes_require_verification_before_update=[\"attributesRequireVerificationBeforeUpdate\"]\n    ),\n    username_attributes=[\"usernameAttributes\"],\n    username_configuration=cognito.CfnUserPool.UsernameConfigurationProperty(\n        case_sensitive=False\n    ),\n    user_pool_add_ons=cognito.CfnUserPool.UserPoolAddOnsProperty(\n        advanced_security_mode=\"advancedSecurityMode\"\n    ),\n    user_pool_name=\"userPoolName\",\n    user_pool_tags=user_pool_tags,\n    verification_message_template=cognito.CfnUserPool.VerificationMessageTemplateProperty(\n        default_email_option=\"defaultEmailOption\",\n        email_message=\"emailMessage\",\n        email_message_by_link=\"emailMessageByLink\",\n        email_subject=\"emailSubject\",\n        email_subject_by_link=\"emailSubjectByLink\",\n        sms_message=\"smsMessage\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar userPoolTags;\n\nvar cfnUserPool = new CfnUserPool(this, \"MyCfnUserPool\", new CfnUserPoolProps {\n    AccountRecoverySetting = new AccountRecoverySettingProperty {\n        RecoveryMechanisms = new [] { new RecoveryOptionProperty {\n            Name = \"name\",\n            Priority = 123\n        } }\n    },\n    AdminCreateUserConfig = new AdminCreateUserConfigProperty {\n        AllowAdminCreateUserOnly = false,\n        InviteMessageTemplate = new InviteMessageTemplateProperty {\n            EmailMessage = \"emailMessage\",\n            EmailSubject = \"emailSubject\",\n            SmsMessage = \"smsMessage\"\n        },\n        UnusedAccountValidityDays = 123\n    },\n    AliasAttributes = new [] { \"aliasAttributes\" },\n    AutoVerifiedAttributes = new [] { \"autoVerifiedAttributes\" },\n    DeletionProtection = \"deletionProtection\",\n    DeviceConfiguration = new DeviceConfigurationProperty {\n        ChallengeRequiredOnNewDevice = false,\n        DeviceOnlyRememberedOnUserPrompt = false\n    },\n    EmailConfiguration = new EmailConfigurationProperty {\n        ConfigurationSet = \"configurationSet\",\n        EmailSendingAccount = \"emailSendingAccount\",\n        From = \"from\",\n        ReplyToEmailAddress = \"replyToEmailAddress\",\n        SourceArn = \"sourceArn\"\n    },\n    EmailVerificationMessage = \"emailVerificationMessage\",\n    EmailVerificationSubject = \"emailVerificationSubject\",\n    EnabledMfas = new [] { \"enabledMfas\" },\n    LambdaConfig = new LambdaConfigProperty {\n        CreateAuthChallenge = \"createAuthChallenge\",\n        CustomEmailSender = new CustomEmailSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        CustomMessage = \"customMessage\",\n        CustomSmsSender = new CustomSMSSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        DefineAuthChallenge = \"defineAuthChallenge\",\n        KmsKeyId = \"kmsKeyId\",\n        PostAuthentication = \"postAuthentication\",\n        PostConfirmation = \"postConfirmation\",\n        PreAuthentication = \"preAuthentication\",\n        PreSignUp = \"preSignUp\",\n        PreTokenGeneration = \"preTokenGeneration\",\n        UserMigration = \"userMigration\",\n        VerifyAuthChallengeResponse = \"verifyAuthChallengeResponse\"\n    },\n    MfaConfiguration = \"mfaConfiguration\",\n    Policies = new PoliciesProperty {\n        PasswordPolicy = new PasswordPolicyProperty {\n            MinimumLength = 123,\n            RequireLowercase = false,\n            RequireNumbers = false,\n            RequireSymbols = false,\n            RequireUppercase = false,\n            TemporaryPasswordValidityDays = 123\n        }\n    },\n    Schema = new [] { new SchemaAttributeProperty {\n        AttributeDataType = \"attributeDataType\",\n        DeveloperOnlyAttribute = false,\n        Mutable = false,\n        Name = \"name\",\n        NumberAttributeConstraints = new NumberAttributeConstraintsProperty {\n            MaxValue = \"maxValue\",\n            MinValue = \"minValue\"\n        },\n        Required = false,\n        StringAttributeConstraints = new StringAttributeConstraintsProperty {\n            MaxLength = \"maxLength\",\n            MinLength = \"minLength\"\n        }\n    } },\n    SmsAuthenticationMessage = \"smsAuthenticationMessage\",\n    SmsConfiguration = new SmsConfigurationProperty {\n        ExternalId = \"externalId\",\n        SnsCallerArn = \"snsCallerArn\",\n        SnsRegion = \"snsRegion\"\n    },\n    SmsVerificationMessage = \"smsVerificationMessage\",\n    UserAttributeUpdateSettings = new UserAttributeUpdateSettingsProperty {\n        AttributesRequireVerificationBeforeUpdate = new [] { \"attributesRequireVerificationBeforeUpdate\" }\n    },\n    UsernameAttributes = new [] { \"usernameAttributes\" },\n    UsernameConfiguration = new UsernameConfigurationProperty {\n        CaseSensitive = false\n    },\n    UserPoolAddOns = new UserPoolAddOnsProperty {\n        AdvancedSecurityMode = \"advancedSecurityMode\"\n    },\n    UserPoolName = \"userPoolName\",\n    UserPoolTags = userPoolTags,\n    VerificationMessageTemplate = new VerificationMessageTemplateProperty {\n        DefaultEmailOption = \"defaultEmailOption\",\n        EmailMessage = \"emailMessage\",\n        EmailMessageByLink = \"emailMessageByLink\",\n        EmailSubject = \"emailSubject\",\n        EmailSubjectByLink = \"emailSubjectByLink\",\n        SmsMessage = \"smsMessage\"\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject userPoolTags;\n\nCfnUserPool cfnUserPool = CfnUserPool.Builder.create(this, \"MyCfnUserPool\")\n        .accountRecoverySetting(AccountRecoverySettingProperty.builder()\n                .recoveryMechanisms(List.of(RecoveryOptionProperty.builder()\n                        .name(\"name\")\n                        .priority(123)\n                        .build()))\n                .build())\n        .adminCreateUserConfig(AdminCreateUserConfigProperty.builder()\n                .allowAdminCreateUserOnly(false)\n                .inviteMessageTemplate(InviteMessageTemplateProperty.builder()\n                        .emailMessage(\"emailMessage\")\n                        .emailSubject(\"emailSubject\")\n                        .smsMessage(\"smsMessage\")\n                        .build())\n                .unusedAccountValidityDays(123)\n                .build())\n        .aliasAttributes(List.of(\"aliasAttributes\"))\n        .autoVerifiedAttributes(List.of(\"autoVerifiedAttributes\"))\n        .deletionProtection(\"deletionProtection\")\n        .deviceConfiguration(DeviceConfigurationProperty.builder()\n                .challengeRequiredOnNewDevice(false)\n                .deviceOnlyRememberedOnUserPrompt(false)\n                .build())\n        .emailConfiguration(EmailConfigurationProperty.builder()\n                .configurationSet(\"configurationSet\")\n                .emailSendingAccount(\"emailSendingAccount\")\n                .from(\"from\")\n                .replyToEmailAddress(\"replyToEmailAddress\")\n                .sourceArn(\"sourceArn\")\n                .build())\n        .emailVerificationMessage(\"emailVerificationMessage\")\n        .emailVerificationSubject(\"emailVerificationSubject\")\n        .enabledMfas(List.of(\"enabledMfas\"))\n        .lambdaConfig(LambdaConfigProperty.builder()\n                .createAuthChallenge(\"createAuthChallenge\")\n                .customEmailSender(CustomEmailSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .customMessage(\"customMessage\")\n                .customSmsSender(CustomSMSSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .defineAuthChallenge(\"defineAuthChallenge\")\n                .kmsKeyId(\"kmsKeyId\")\n                .postAuthentication(\"postAuthentication\")\n                .postConfirmation(\"postConfirmation\")\n                .preAuthentication(\"preAuthentication\")\n                .preSignUp(\"preSignUp\")\n                .preTokenGeneration(\"preTokenGeneration\")\n                .userMigration(\"userMigration\")\n                .verifyAuthChallengeResponse(\"verifyAuthChallengeResponse\")\n                .build())\n        .mfaConfiguration(\"mfaConfiguration\")\n        .policies(PoliciesProperty.builder()\n                .passwordPolicy(PasswordPolicyProperty.builder()\n                        .minimumLength(123)\n                        .requireLowercase(false)\n                        .requireNumbers(false)\n                        .requireSymbols(false)\n                        .requireUppercase(false)\n                        .temporaryPasswordValidityDays(123)\n                        .build())\n                .build())\n        .schema(List.of(SchemaAttributeProperty.builder()\n                .attributeDataType(\"attributeDataType\")\n                .developerOnlyAttribute(false)\n                .mutable(false)\n                .name(\"name\")\n                .numberAttributeConstraints(NumberAttributeConstraintsProperty.builder()\n                        .maxValue(\"maxValue\")\n                        .minValue(\"minValue\")\n                        .build())\n                .required(false)\n                .stringAttributeConstraints(StringAttributeConstraintsProperty.builder()\n                        .maxLength(\"maxLength\")\n                        .minLength(\"minLength\")\n                        .build())\n                .build()))\n        .smsAuthenticationMessage(\"smsAuthenticationMessage\")\n        .smsConfiguration(SmsConfigurationProperty.builder()\n                .externalId(\"externalId\")\n                .snsCallerArn(\"snsCallerArn\")\n                .snsRegion(\"snsRegion\")\n                .build())\n        .smsVerificationMessage(\"smsVerificationMessage\")\n        .userAttributeUpdateSettings(UserAttributeUpdateSettingsProperty.builder()\n                .attributesRequireVerificationBeforeUpdate(List.of(\"attributesRequireVerificationBeforeUpdate\"))\n                .build())\n        .usernameAttributes(List.of(\"usernameAttributes\"))\n        .usernameConfiguration(UsernameConfigurationProperty.builder()\n                .caseSensitive(false)\n                .build())\n        .userPoolAddOns(UserPoolAddOnsProperty.builder()\n                .advancedSecurityMode(\"advancedSecurityMode\")\n                .build())\n        .userPoolName(\"userPoolName\")\n        .userPoolTags(userPoolTags)\n        .verificationMessageTemplate(VerificationMessageTemplateProperty.builder()\n                .defaultEmailOption(\"defaultEmailOption\")\n                .emailMessage(\"emailMessage\")\n                .emailMessageByLink(\"emailMessageByLink\")\n                .emailSubject(\"emailSubject\")\n                .emailSubjectByLink(\"emailSubjectByLink\")\n                .smsMessage(\"smsMessage\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar userPoolTags interface{}\n\ncfnUserPool := cognito.NewCfnUserPool(this, jsii.String(\"MyCfnUserPool\"), &CfnUserPoolProps{\n\tAccountRecoverySetting: &AccountRecoverySettingProperty{\n\t\tRecoveryMechanisms: []interface{}{\n\t\t\t&RecoveryOptionProperty{\n\t\t\t\tName: jsii.String(\"name\"),\n\t\t\t\tPriority: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tAdminCreateUserConfig: &AdminCreateUserConfigProperty{\n\t\tAllowAdminCreateUserOnly: jsii.Boolean(false),\n\t\tInviteMessageTemplate: &InviteMessageTemplateProperty{\n\t\t\tEmailMessage: jsii.String(\"emailMessage\"),\n\t\t\tEmailSubject: jsii.String(\"emailSubject\"),\n\t\t\tSmsMessage: jsii.String(\"smsMessage\"),\n\t\t},\n\t\tUnusedAccountValidityDays: jsii.Number(123),\n\t},\n\tAliasAttributes: []*string{\n\t\tjsii.String(\"aliasAttributes\"),\n\t},\n\tAutoVerifiedAttributes: []*string{\n\t\tjsii.String(\"autoVerifiedAttributes\"),\n\t},\n\tDeletionProtection: jsii.String(\"deletionProtection\"),\n\tDeviceConfiguration: &DeviceConfigurationProperty{\n\t\tChallengeRequiredOnNewDevice: jsii.Boolean(false),\n\t\tDeviceOnlyRememberedOnUserPrompt: jsii.Boolean(false),\n\t},\n\tEmailConfiguration: &EmailConfigurationProperty{\n\t\tConfigurationSet: jsii.String(\"configurationSet\"),\n\t\tEmailSendingAccount: jsii.String(\"emailSendingAccount\"),\n\t\tFrom: jsii.String(\"from\"),\n\t\tReplyToEmailAddress: jsii.String(\"replyToEmailAddress\"),\n\t\tSourceArn: jsii.String(\"sourceArn\"),\n\t},\n\tEmailVerificationMessage: jsii.String(\"emailVerificationMessage\"),\n\tEmailVerificationSubject: jsii.String(\"emailVerificationSubject\"),\n\tEnabledMfas: []*string{\n\t\tjsii.String(\"enabledMfas\"),\n\t},\n\tLambdaConfig: &LambdaConfigProperty{\n\t\tCreateAuthChallenge: jsii.String(\"createAuthChallenge\"),\n\t\tCustomEmailSender: &CustomEmailSenderProperty{\n\t\t\tLambdaArn: jsii.String(\"lambdaArn\"),\n\t\t\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n\t\t},\n\t\tCustomMessage: jsii.String(\"customMessage\"),\n\t\tCustomSmsSender: &CustomSMSSenderProperty{\n\t\t\tLambdaArn: jsii.String(\"lambdaArn\"),\n\t\t\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n\t\t},\n\t\tDefineAuthChallenge: jsii.String(\"defineAuthChallenge\"),\n\t\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\tPostAuthentication: jsii.String(\"postAuthentication\"),\n\t\tPostConfirmation: jsii.String(\"postConfirmation\"),\n\t\tPreAuthentication: jsii.String(\"preAuthentication\"),\n\t\tPreSignUp: jsii.String(\"preSignUp\"),\n\t\tPreTokenGeneration: jsii.String(\"preTokenGeneration\"),\n\t\tUserMigration: jsii.String(\"userMigration\"),\n\t\tVerifyAuthChallengeResponse: jsii.String(\"verifyAuthChallengeResponse\"),\n\t},\n\tMfaConfiguration: jsii.String(\"mfaConfiguration\"),\n\tPolicies: &PoliciesProperty{\n\t\tPasswordPolicy: &PasswordPolicyProperty{\n\t\t\tMinimumLength: jsii.Number(123),\n\t\t\tRequireLowercase: jsii.Boolean(false),\n\t\t\tRequireNumbers: jsii.Boolean(false),\n\t\t\tRequireSymbols: jsii.Boolean(false),\n\t\t\tRequireUppercase: jsii.Boolean(false),\n\t\t\tTemporaryPasswordValidityDays: jsii.Number(123),\n\t\t},\n\t},\n\tSchema: []interface{}{\n\t\t&SchemaAttributeProperty{\n\t\t\tAttributeDataType: jsii.String(\"attributeDataType\"),\n\t\t\tDeveloperOnlyAttribute: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tNumberAttributeConstraints: &NumberAttributeConstraintsProperty{\n\t\t\t\tMaxValue: jsii.String(\"maxValue\"),\n\t\t\t\tMinValue: jsii.String(\"minValue\"),\n\t\t\t},\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tStringAttributeConstraints: &StringAttributeConstraintsProperty{\n\t\t\t\tMaxLength: jsii.String(\"maxLength\"),\n\t\t\t\tMinLength: jsii.String(\"minLength\"),\n\t\t\t},\n\t\t},\n\t},\n\tSmsAuthenticationMessage: jsii.String(\"smsAuthenticationMessage\"),\n\tSmsConfiguration: &SmsConfigurationProperty{\n\t\tExternalId: jsii.String(\"externalId\"),\n\t\tSnsCallerArn: jsii.String(\"snsCallerArn\"),\n\t\tSnsRegion: jsii.String(\"snsRegion\"),\n\t},\n\tSmsVerificationMessage: jsii.String(\"smsVerificationMessage\"),\n\tUserAttributeUpdateSettings: &UserAttributeUpdateSettingsProperty{\n\t\tAttributesRequireVerificationBeforeUpdate: []*string{\n\t\t\tjsii.String(\"attributesRequireVerificationBeforeUpdate\"),\n\t\t},\n\t},\n\tUsernameAttributes: []*string{\n\t\tjsii.String(\"usernameAttributes\"),\n\t},\n\tUsernameConfiguration: &UsernameConfigurationProperty{\n\t\tCaseSensitive: jsii.Boolean(false),\n\t},\n\tUserPoolAddOns: &UserPoolAddOnsProperty{\n\t\tAdvancedSecurityMode: jsii.String(\"advancedSecurityMode\"),\n\t},\n\tUserPoolName: jsii.String(\"userPoolName\"),\n\tUserPoolTags: userPoolTags,\n\tVerificationMessageTemplate: &VerificationMessageTemplateProperty{\n\t\tDefaultEmailOption: jsii.String(\"defaultEmailOption\"),\n\t\tEmailMessage: jsii.String(\"emailMessage\"),\n\t\tEmailMessageByLink: jsii.String(\"emailMessageByLink\"),\n\t\tEmailSubject: jsii.String(\"emailSubject\"),\n\t\tEmailSubjectByLink: jsii.String(\"emailSubjectByLink\"),\n\t\tSmsMessage: jsii.String(\"smsMessage\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\nconst cfnUserPool = new cognito.CfnUserPool(this, 'MyCfnUserPool', /* all optional props */ {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deletionProtection: 'deletionProtection',\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n    snsRegion: 'snsRegion',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  userAttributeUpdateSettings: {\n    attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n  },\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool","@aws-cdk/aws-cognito.CfnUserPoolProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPool = new cognito.CfnUserPool(this, 'MyCfnUserPool', /* all optional props */ {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deletionProtection: 'deletionProtection',\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n    snsRegion: 'snsRegion',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  userAttributeUpdateSettings: {\n    attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n  },\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":54,"75":93,"91":11,"104":1,"125":1,"130":1,"192":7,"193":20,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":87,"290":1},"fqnsFingerprint":"97bfcb72ae85de70ca436b665cefbb57176374bc8816772e8f1ce10309a5114c"},"7a6665e7ecba0100b633d55083b9e5758275b95b439ecdd21c0cbf552e9c1f5b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_recovery_setting_property = cognito.CfnUserPool.AccountRecoverySettingProperty(\n    recovery_mechanisms=[cognito.CfnUserPool.RecoveryOptionProperty(\n        name=\"name\",\n        priority=123\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar accountRecoverySettingProperty = new AccountRecoverySettingProperty {\n    RecoveryMechanisms = new [] { new RecoveryOptionProperty {\n        Name = \"name\",\n        Priority = 123\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountRecoverySettingProperty accountRecoverySettingProperty = AccountRecoverySettingProperty.builder()\n        .recoveryMechanisms(List.of(RecoveryOptionProperty.builder()\n                .name(\"name\")\n                .priority(123)\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\naccountRecoverySettingProperty := &AccountRecoverySettingProperty{\n\tRecoveryMechanisms: []interface{}{\n\t\t&RecoveryOptionProperty{\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tPriority: jsii.Number(123),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountRecoverySettingProperty: cognito.CfnUserPool.AccountRecoverySettingProperty = {\n  recoveryMechanisms: [{\n    name: 'name',\n    priority: 123,\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountRecoverySettingProperty: cognito.CfnUserPool.AccountRecoverySettingProperty = {\n  recoveryMechanisms: [{\n    name: 'name',\n    priority: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":2,"75":8,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"7a898f237274a526693cfa802108a2ce6043701604cb70ed67173efadc9cf8aa"},"72ba109eee84c214684a264944b8b048a6bb0a221d658c5fcd0edd40a86b63f9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nadmin_create_user_config_property = cognito.CfnUserPool.AdminCreateUserConfigProperty(\n    allow_admin_create_user_only=False,\n    invite_message_template=cognito.CfnUserPool.InviteMessageTemplateProperty(\n        email_message=\"emailMessage\",\n        email_subject=\"emailSubject\",\n        sms_message=\"smsMessage\"\n    ),\n    unused_account_validity_days=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar adminCreateUserConfigProperty = new AdminCreateUserConfigProperty {\n    AllowAdminCreateUserOnly = false,\n    InviteMessageTemplate = new InviteMessageTemplateProperty {\n        EmailMessage = \"emailMessage\",\n        EmailSubject = \"emailSubject\",\n        SmsMessage = \"smsMessage\"\n    },\n    UnusedAccountValidityDays = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAdminCreateUserConfigProperty adminCreateUserConfigProperty = AdminCreateUserConfigProperty.builder()\n        .allowAdminCreateUserOnly(false)\n        .inviteMessageTemplate(InviteMessageTemplateProperty.builder()\n                .emailMessage(\"emailMessage\")\n                .emailSubject(\"emailSubject\")\n                .smsMessage(\"smsMessage\")\n                .build())\n        .unusedAccountValidityDays(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nadminCreateUserConfigProperty := &AdminCreateUserConfigProperty{\n\tAllowAdminCreateUserOnly: jsii.Boolean(false),\n\tInviteMessageTemplate: &InviteMessageTemplateProperty{\n\t\tEmailMessage: jsii.String(\"emailMessage\"),\n\t\tEmailSubject: jsii.String(\"emailSubject\"),\n\t\tSmsMessage: jsii.String(\"smsMessage\"),\n\t},\n\tUnusedAccountValidityDays: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst adminCreateUserConfigProperty: cognito.CfnUserPool.AdminCreateUserConfigProperty = {\n  allowAdminCreateUserOnly: false,\n  inviteMessageTemplate: {\n    emailMessage: 'emailMessage',\n    emailSubject: 'emailSubject',\n    smsMessage: 'smsMessage',\n  },\n  unusedAccountValidityDays: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst adminCreateUserConfigProperty: cognito.CfnUserPool.AdminCreateUserConfigProperty = {\n  allowAdminCreateUserOnly: false,\n  inviteMessageTemplate: {\n    emailMessage: 'emailMessage',\n    emailSubject: 'emailSubject',\n    smsMessage: 'smsMessage',\n  },\n  unusedAccountValidityDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":11,"91":1,"153":2,"169":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"de864f720fde153bdbb409ebb042030f9049a37c9358904b0cfd46e23cf72037"},"5bc398509b9e3a94b9c9f67208cf2dcb5ec33bcab55e7129e67a1dec32aa4cf0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_email_sender_property = cognito.CfnUserPool.CustomEmailSenderProperty(\n    lambda_arn=\"lambdaArn\",\n    lambda_version=\"lambdaVersion\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar customEmailSenderProperty = new CustomEmailSenderProperty {\n    LambdaArn = \"lambdaArn\",\n    LambdaVersion = \"lambdaVersion\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomEmailSenderProperty customEmailSenderProperty = CustomEmailSenderProperty.builder()\n        .lambdaArn(\"lambdaArn\")\n        .lambdaVersion(\"lambdaVersion\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncustomEmailSenderProperty := &CustomEmailSenderProperty{\n\tLambdaArn: jsii.String(\"lambdaArn\"),\n\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customEmailSenderProperty: cognito.CfnUserPool.CustomEmailSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customEmailSenderProperty: cognito.CfnUserPool.CustomEmailSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"7df5c078e70ad090e21175a0deed434016b4facb84d4d16755250edc8ed24701"},"54c48551cc8a3b2729d8e225d416862856008b145b75d6973b89cecb24e961bd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_sMSSender_property = cognito.CfnUserPool.CustomSMSSenderProperty(\n    lambda_arn=\"lambdaArn\",\n    lambda_version=\"lambdaVersion\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar customSMSSenderProperty = new CustomSMSSenderProperty {\n    LambdaArn = \"lambdaArn\",\n    LambdaVersion = \"lambdaVersion\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomSMSSenderProperty customSMSSenderProperty = CustomSMSSenderProperty.builder()\n        .lambdaArn(\"lambdaArn\")\n        .lambdaVersion(\"lambdaVersion\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncustomSMSSenderProperty := &CustomSMSSenderProperty{\n\tLambdaArn: jsii.String(\"lambdaArn\"),\n\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customSMSSenderProperty: cognito.CfnUserPool.CustomSMSSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customSMSSenderProperty: cognito.CfnUserPool.CustomSMSSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"9e84d3b95a5d7d9aaca1bdff29b3c22cfffef12d647793c028559da74969d0aa"},"bf971b0dbc3f15e81465e25b460aa9c34856806a68b6b80e42cf4ab2a860e876":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ndevice_configuration_property = cognito.CfnUserPool.DeviceConfigurationProperty(\n    challenge_required_on_new_device=False,\n    device_only_remembered_on_user_prompt=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar deviceConfigurationProperty = new DeviceConfigurationProperty {\n    ChallengeRequiredOnNewDevice = false,\n    DeviceOnlyRememberedOnUserPrompt = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nDeviceConfigurationProperty deviceConfigurationProperty = DeviceConfigurationProperty.builder()\n        .challengeRequiredOnNewDevice(false)\n        .deviceOnlyRememberedOnUserPrompt(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ndeviceConfigurationProperty := &DeviceConfigurationProperty{\n\tChallengeRequiredOnNewDevice: jsii.Boolean(false),\n\tDeviceOnlyRememberedOnUserPrompt: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst deviceConfigurationProperty: cognito.CfnUserPool.DeviceConfigurationProperty = {\n  challengeRequiredOnNewDevice: false,\n  deviceOnlyRememberedOnUserPrompt: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deviceConfigurationProperty: cognito.CfnUserPool.DeviceConfigurationProperty = {\n  challengeRequiredOnNewDevice: false,\n  deviceOnlyRememberedOnUserPrompt: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":7,"91":2,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"84f2fd2b642175e36d36a16ce4897abafdc3ab70e7252fb5b928117ae26689d5"},"8f16c364b23547df49394310a5883402b33f5c813a37d17257c50de456cfd87a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nemail_configuration_property = cognito.CfnUserPool.EmailConfigurationProperty(\n    configuration_set=\"configurationSet\",\n    email_sending_account=\"emailSendingAccount\",\n    from=\"from\",\n    reply_to_email_address=\"replyToEmailAddress\",\n    source_arn=\"sourceArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar emailConfigurationProperty = new EmailConfigurationProperty {\n    ConfigurationSet = \"configurationSet\",\n    EmailSendingAccount = \"emailSendingAccount\",\n    From = \"from\",\n    ReplyToEmailAddress = \"replyToEmailAddress\",\n    SourceArn = \"sourceArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nEmailConfigurationProperty emailConfigurationProperty = EmailConfigurationProperty.builder()\n        .configurationSet(\"configurationSet\")\n        .emailSendingAccount(\"emailSendingAccount\")\n        .from(\"from\")\n        .replyToEmailAddress(\"replyToEmailAddress\")\n        .sourceArn(\"sourceArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nemailConfigurationProperty := &EmailConfigurationProperty{\n\tConfigurationSet: jsii.String(\"configurationSet\"),\n\tEmailSendingAccount: jsii.String(\"emailSendingAccount\"),\n\tFrom: jsii.String(\"from\"),\n\tReplyToEmailAddress: jsii.String(\"replyToEmailAddress\"),\n\tSourceArn: jsii.String(\"sourceArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst emailConfigurationProperty: cognito.CfnUserPool.EmailConfigurationProperty = {\n  configurationSet: 'configurationSet',\n  emailSendingAccount: 'emailSendingAccount',\n  from: 'from',\n  replyToEmailAddress: 'replyToEmailAddress',\n  sourceArn: 'sourceArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst emailConfigurationProperty: cognito.CfnUserPool.EmailConfigurationProperty = {\n  configurationSet: 'configurationSet',\n  emailSendingAccount: 'emailSendingAccount',\n  from: 'from',\n  replyToEmailAddress: 'replyToEmailAddress',\n  sourceArn: 'sourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"cafb7a1fff5f80098ac7469295d278a9ef29e0c13f2ed9a77c216f80203ed61d"},"08210b469b6c6312f0873329904ce6ae4fc34afc5a53b7df33864b65196d1fe2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ninvite_message_template_property = cognito.CfnUserPool.InviteMessageTemplateProperty(\n    email_message=\"emailMessage\",\n    email_subject=\"emailSubject\",\n    sms_message=\"smsMessage\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar inviteMessageTemplateProperty = new InviteMessageTemplateProperty {\n    EmailMessage = \"emailMessage\",\n    EmailSubject = \"emailSubject\",\n    SmsMessage = \"smsMessage\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nInviteMessageTemplateProperty inviteMessageTemplateProperty = InviteMessageTemplateProperty.builder()\n        .emailMessage(\"emailMessage\")\n        .emailSubject(\"emailSubject\")\n        .smsMessage(\"smsMessage\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ninviteMessageTemplateProperty := &InviteMessageTemplateProperty{\n\tEmailMessage: jsii.String(\"emailMessage\"),\n\tEmailSubject: jsii.String(\"emailSubject\"),\n\tSmsMessage: jsii.String(\"smsMessage\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst inviteMessageTemplateProperty: cognito.CfnUserPool.InviteMessageTemplateProperty = {\n  emailMessage: 'emailMessage',\n  emailSubject: 'emailSubject',\n  smsMessage: 'smsMessage',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inviteMessageTemplateProperty: cognito.CfnUserPool.InviteMessageTemplateProperty = {\n  emailMessage: 'emailMessage',\n  emailSubject: 'emailSubject',\n  smsMessage: 'smsMessage',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"d168879807eec8c115de56945467d8d1c53e7e4d7104a38c2dad6d00a5547881"},"07625535c98f92eb4c8937db076e0a375cfab2492d51687c310ca3ea2a2326f3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nlambda_config_property = cognito.CfnUserPool.LambdaConfigProperty(\n    create_auth_challenge=\"createAuthChallenge\",\n    custom_email_sender=cognito.CfnUserPool.CustomEmailSenderProperty(\n        lambda_arn=\"lambdaArn\",\n        lambda_version=\"lambdaVersion\"\n    ),\n    custom_message=\"customMessage\",\n    custom_sms_sender=cognito.CfnUserPool.CustomSMSSenderProperty(\n        lambda_arn=\"lambdaArn\",\n        lambda_version=\"lambdaVersion\"\n    ),\n    define_auth_challenge=\"defineAuthChallenge\",\n    kms_key_id=\"kmsKeyId\",\n    post_authentication=\"postAuthentication\",\n    post_confirmation=\"postConfirmation\",\n    pre_authentication=\"preAuthentication\",\n    pre_sign_up=\"preSignUp\",\n    pre_token_generation=\"preTokenGeneration\",\n    user_migration=\"userMigration\",\n    verify_auth_challenge_response=\"verifyAuthChallengeResponse\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar lambdaConfigProperty = new LambdaConfigProperty {\n    CreateAuthChallenge = \"createAuthChallenge\",\n    CustomEmailSender = new CustomEmailSenderProperty {\n        LambdaArn = \"lambdaArn\",\n        LambdaVersion = \"lambdaVersion\"\n    },\n    CustomMessage = \"customMessage\",\n    CustomSmsSender = new CustomSMSSenderProperty {\n        LambdaArn = \"lambdaArn\",\n        LambdaVersion = \"lambdaVersion\"\n    },\n    DefineAuthChallenge = \"defineAuthChallenge\",\n    KmsKeyId = \"kmsKeyId\",\n    PostAuthentication = \"postAuthentication\",\n    PostConfirmation = \"postConfirmation\",\n    PreAuthentication = \"preAuthentication\",\n    PreSignUp = \"preSignUp\",\n    PreTokenGeneration = \"preTokenGeneration\",\n    UserMigration = \"userMigration\",\n    VerifyAuthChallengeResponse = \"verifyAuthChallengeResponse\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nLambdaConfigProperty lambdaConfigProperty = LambdaConfigProperty.builder()\n        .createAuthChallenge(\"createAuthChallenge\")\n        .customEmailSender(CustomEmailSenderProperty.builder()\n                .lambdaArn(\"lambdaArn\")\n                .lambdaVersion(\"lambdaVersion\")\n                .build())\n        .customMessage(\"customMessage\")\n        .customSmsSender(CustomSMSSenderProperty.builder()\n                .lambdaArn(\"lambdaArn\")\n                .lambdaVersion(\"lambdaVersion\")\n                .build())\n        .defineAuthChallenge(\"defineAuthChallenge\")\n        .kmsKeyId(\"kmsKeyId\")\n        .postAuthentication(\"postAuthentication\")\n        .postConfirmation(\"postConfirmation\")\n        .preAuthentication(\"preAuthentication\")\n        .preSignUp(\"preSignUp\")\n        .preTokenGeneration(\"preTokenGeneration\")\n        .userMigration(\"userMigration\")\n        .verifyAuthChallengeResponse(\"verifyAuthChallengeResponse\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nlambdaConfigProperty := &LambdaConfigProperty{\n\tCreateAuthChallenge: jsii.String(\"createAuthChallenge\"),\n\tCustomEmailSender: &CustomEmailSenderProperty{\n\t\tLambdaArn: jsii.String(\"lambdaArn\"),\n\t\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n\t},\n\tCustomMessage: jsii.String(\"customMessage\"),\n\tCustomSmsSender: &CustomSMSSenderProperty{\n\t\tLambdaArn: jsii.String(\"lambdaArn\"),\n\t\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n\t},\n\tDefineAuthChallenge: jsii.String(\"defineAuthChallenge\"),\n\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\tPostAuthentication: jsii.String(\"postAuthentication\"),\n\tPostConfirmation: jsii.String(\"postConfirmation\"),\n\tPreAuthentication: jsii.String(\"preAuthentication\"),\n\tPreSignUp: jsii.String(\"preSignUp\"),\n\tPreTokenGeneration: jsii.String(\"preTokenGeneration\"),\n\tUserMigration: jsii.String(\"userMigration\"),\n\tVerifyAuthChallengeResponse: jsii.String(\"verifyAuthChallengeResponse\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst lambdaConfigProperty: cognito.CfnUserPool.LambdaConfigProperty = {\n  createAuthChallenge: 'createAuthChallenge',\n  customEmailSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  customMessage: 'customMessage',\n  customSmsSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  defineAuthChallenge: 'defineAuthChallenge',\n  kmsKeyId: 'kmsKeyId',\n  postAuthentication: 'postAuthentication',\n  postConfirmation: 'postConfirmation',\n  preAuthentication: 'preAuthentication',\n  preSignUp: 'preSignUp',\n  preTokenGeneration: 'preTokenGeneration',\n  userMigration: 'userMigration',\n  verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lambdaConfigProperty: cognito.CfnUserPool.LambdaConfigProperty = {\n  createAuthChallenge: 'createAuthChallenge',\n  customEmailSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  customMessage: 'customMessage',\n  customSmsSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  defineAuthChallenge: 'defineAuthChallenge',\n  kmsKeyId: 'kmsKeyId',\n  postAuthentication: 'postAuthentication',\n  postConfirmation: 'postConfirmation',\n  preAuthentication: 'preAuthentication',\n  preSignUp: 'preSignUp',\n  preTokenGeneration: 'preTokenGeneration',\n  userMigration: 'userMigration',\n  verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":16,"75":22,"153":2,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":17,"290":1},"fqnsFingerprint":"44ae7247be13e94332e2975995e5123d2aae3191f7634eeed06119b374fdd020"},"b511acb83ce58064106234453d5cc090eff405c67fb5c2de88a16306620c2159":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnumber_attribute_constraints_property = cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n    max_value=\"maxValue\",\n    min_value=\"minValue\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar numberAttributeConstraintsProperty = new NumberAttributeConstraintsProperty {\n    MaxValue = \"maxValue\",\n    MinValue = \"minValue\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNumberAttributeConstraintsProperty numberAttributeConstraintsProperty = NumberAttributeConstraintsProperty.builder()\n        .maxValue(\"maxValue\")\n        .minValue(\"minValue\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nnumberAttributeConstraintsProperty := &NumberAttributeConstraintsProperty{\n\tMaxValue: jsii.String(\"maxValue\"),\n\tMinValue: jsii.String(\"minValue\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst numberAttributeConstraintsProperty: cognito.CfnUserPool.NumberAttributeConstraintsProperty = {\n  maxValue: 'maxValue',\n  minValue: 'minValue',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst numberAttributeConstraintsProperty: cognito.CfnUserPool.NumberAttributeConstraintsProperty = {\n  maxValue: 'maxValue',\n  minValue: 'minValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"9b24c4d5c22a0d7a63c91e9998baa98aed34bffc07361ab1f72bb34727cce242"},"e161ab36e160ac0168ef017e2d1f1e53042a00acb6d51e490490118bab4324db":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\npassword_policy_property = cognito.CfnUserPool.PasswordPolicyProperty(\n    minimum_length=123,\n    require_lowercase=False,\n    require_numbers=False,\n    require_symbols=False,\n    require_uppercase=False,\n    temporary_password_validity_days=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar passwordPolicyProperty = new PasswordPolicyProperty {\n    MinimumLength = 123,\n    RequireLowercase = false,\n    RequireNumbers = false,\n    RequireSymbols = false,\n    RequireUppercase = false,\n    TemporaryPasswordValidityDays = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nPasswordPolicyProperty passwordPolicyProperty = PasswordPolicyProperty.builder()\n        .minimumLength(123)\n        .requireLowercase(false)\n        .requireNumbers(false)\n        .requireSymbols(false)\n        .requireUppercase(false)\n        .temporaryPasswordValidityDays(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\npasswordPolicyProperty := &PasswordPolicyProperty{\n\tMinimumLength: jsii.Number(123),\n\tRequireLowercase: jsii.Boolean(false),\n\tRequireNumbers: jsii.Boolean(false),\n\tRequireSymbols: jsii.Boolean(false),\n\tRequireUppercase: jsii.Boolean(false),\n\tTemporaryPasswordValidityDays: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst passwordPolicyProperty: cognito.CfnUserPool.PasswordPolicyProperty = {\n  minimumLength: 123,\n  requireLowercase: false,\n  requireNumbers: false,\n  requireSymbols: false,\n  requireUppercase: false,\n  temporaryPasswordValidityDays: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst passwordPolicyProperty: cognito.CfnUserPool.PasswordPolicyProperty = {\n  minimumLength: 123,\n  requireLowercase: false,\n  requireNumbers: false,\n  requireSymbols: false,\n  requireUppercase: false,\n  temporaryPasswordValidityDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":11,"91":4,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"07ecd3ceae48600ef3650260ff490266b63d15c8b25fbc9e7af4dfe2bddad87a"},"b5b5deb9cce1804e700e86c6f22041d389ccf7396d783bd8d5b384db7a732fb5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\npolicies_property = cognito.CfnUserPool.PoliciesProperty(\n    password_policy=cognito.CfnUserPool.PasswordPolicyProperty(\n        minimum_length=123,\n        require_lowercase=False,\n        require_numbers=False,\n        require_symbols=False,\n        require_uppercase=False,\n        temporary_password_validity_days=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar policiesProperty = new PoliciesProperty {\n    PasswordPolicy = new PasswordPolicyProperty {\n        MinimumLength = 123,\n        RequireLowercase = false,\n        RequireNumbers = false,\n        RequireSymbols = false,\n        RequireUppercase = false,\n        TemporaryPasswordValidityDays = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nPoliciesProperty policiesProperty = PoliciesProperty.builder()\n        .passwordPolicy(PasswordPolicyProperty.builder()\n                .minimumLength(123)\n                .requireLowercase(false)\n                .requireNumbers(false)\n                .requireSymbols(false)\n                .requireUppercase(false)\n                .temporaryPasswordValidityDays(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\npoliciesProperty := &PoliciesProperty{\n\tPasswordPolicy: &PasswordPolicyProperty{\n\t\tMinimumLength: jsii.Number(123),\n\t\tRequireLowercase: jsii.Boolean(false),\n\t\tRequireNumbers: jsii.Boolean(false),\n\t\tRequireSymbols: jsii.Boolean(false),\n\t\tRequireUppercase: jsii.Boolean(false),\n\t\tTemporaryPasswordValidityDays: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst policiesProperty: cognito.CfnUserPool.PoliciesProperty = {\n  passwordPolicy: {\n    minimumLength: 123,\n    requireLowercase: false,\n    requireNumbers: false,\n    requireSymbols: false,\n    requireUppercase: false,\n    temporaryPasswordValidityDays: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policiesProperty: cognito.CfnUserPool.PoliciesProperty = {\n  passwordPolicy: {\n    minimumLength: 123,\n    requireLowercase: false,\n    requireNumbers: false,\n    requireSymbols: false,\n    requireUppercase: false,\n    temporaryPasswordValidityDays: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":12,"91":4,"153":2,"169":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"026974eccdb63d6d0ef2cb489a2200d6984300ef8392c70f78b887bf1f3b0f0c"},"6ad612e6b3ec80a322c2087eace3d680f4f655bdabfdd7a4b5949ea396ec6812":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrecovery_option_property = cognito.CfnUserPool.RecoveryOptionProperty(\n    name=\"name\",\n    priority=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar recoveryOptionProperty = new RecoveryOptionProperty {\n    Name = \"name\",\n    Priority = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRecoveryOptionProperty recoveryOptionProperty = RecoveryOptionProperty.builder()\n        .name(\"name\")\n        .priority(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nrecoveryOptionProperty := &RecoveryOptionProperty{\n\tName: jsii.String(\"name\"),\n\tPriority: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst recoveryOptionProperty: cognito.CfnUserPool.RecoveryOptionProperty = {\n  name: 'name',\n  priority: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recoveryOptionProperty: cognito.CfnUserPool.RecoveryOptionProperty = {\n  name: 'name',\n  priority: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":2,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"78cafa508c85b06ebad1bcaf5acccb765695d4e6ae3e4e8f6f0d36f0a6ba6ccf"},"2c197b6814a34f806f25f28a452e6516e5e132c5a28f888b97146499273c7d07":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nschema_attribute_property = cognito.CfnUserPool.SchemaAttributeProperty(\n    attribute_data_type=\"attributeDataType\",\n    developer_only_attribute=False,\n    mutable=False,\n    name=\"name\",\n    number_attribute_constraints=cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n        max_value=\"maxValue\",\n        min_value=\"minValue\"\n    ),\n    required=False,\n    string_attribute_constraints=cognito.CfnUserPool.StringAttributeConstraintsProperty(\n        max_length=\"maxLength\",\n        min_length=\"minLength\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar schemaAttributeProperty = new SchemaAttributeProperty {\n    AttributeDataType = \"attributeDataType\",\n    DeveloperOnlyAttribute = false,\n    Mutable = false,\n    Name = \"name\",\n    NumberAttributeConstraints = new NumberAttributeConstraintsProperty {\n        MaxValue = \"maxValue\",\n        MinValue = \"minValue\"\n    },\n    Required = false,\n    StringAttributeConstraints = new StringAttributeConstraintsProperty {\n        MaxLength = \"maxLength\",\n        MinLength = \"minLength\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nSchemaAttributeProperty schemaAttributeProperty = SchemaAttributeProperty.builder()\n        .attributeDataType(\"attributeDataType\")\n        .developerOnlyAttribute(false)\n        .mutable(false)\n        .name(\"name\")\n        .numberAttributeConstraints(NumberAttributeConstraintsProperty.builder()\n                .maxValue(\"maxValue\")\n                .minValue(\"minValue\")\n                .build())\n        .required(false)\n        .stringAttributeConstraints(StringAttributeConstraintsProperty.builder()\n                .maxLength(\"maxLength\")\n                .minLength(\"minLength\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nschemaAttributeProperty := &SchemaAttributeProperty{\n\tAttributeDataType: jsii.String(\"attributeDataType\"),\n\tDeveloperOnlyAttribute: jsii.Boolean(false),\n\tMutable: jsii.Boolean(false),\n\tName: jsii.String(\"name\"),\n\tNumberAttributeConstraints: &NumberAttributeConstraintsProperty{\n\t\tMaxValue: jsii.String(\"maxValue\"),\n\t\tMinValue: jsii.String(\"minValue\"),\n\t},\n\tRequired: jsii.Boolean(false),\n\tStringAttributeConstraints: &StringAttributeConstraintsProperty{\n\t\tMaxLength: jsii.String(\"maxLength\"),\n\t\tMinLength: jsii.String(\"minLength\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst schemaAttributeProperty: cognito.CfnUserPool.SchemaAttributeProperty = {\n  attributeDataType: 'attributeDataType',\n  developerOnlyAttribute: false,\n  mutable: false,\n  name: 'name',\n  numberAttributeConstraints: {\n    maxValue: 'maxValue',\n    minValue: 'minValue',\n  },\n  required: false,\n  stringAttributeConstraints: {\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaAttributeProperty: cognito.CfnUserPool.SchemaAttributeProperty = {\n  attributeDataType: 'attributeDataType',\n  developerOnlyAttribute: false,\n  mutable: false,\n  name: 'name',\n  numberAttributeConstraints: {\n    maxValue: 'maxValue',\n    minValue: 'minValue',\n  },\n  required: false,\n  stringAttributeConstraints: {\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":16,"91":3,"153":2,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"8a519126d9cd7a2c59ddcec799a0d3e3c689edef3e103e622093d6721196de5d"},"8ae5befa9b32f07f596e47dc741a337b348ac5abaa79e87d4676b3f0387d011c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nsms_configuration_property = cognito.CfnUserPool.SmsConfigurationProperty(\n    external_id=\"externalId\",\n    sns_caller_arn=\"snsCallerArn\",\n    sns_region=\"snsRegion\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar smsConfigurationProperty = new SmsConfigurationProperty {\n    ExternalId = \"externalId\",\n    SnsCallerArn = \"snsCallerArn\",\n    SnsRegion = \"snsRegion\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nSmsConfigurationProperty smsConfigurationProperty = SmsConfigurationProperty.builder()\n        .externalId(\"externalId\")\n        .snsCallerArn(\"snsCallerArn\")\n        .snsRegion(\"snsRegion\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nsmsConfigurationProperty := &SmsConfigurationProperty{\n\tExternalId: jsii.String(\"externalId\"),\n\tSnsCallerArn: jsii.String(\"snsCallerArn\"),\n\tSnsRegion: jsii.String(\"snsRegion\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst smsConfigurationProperty: cognito.CfnUserPool.SmsConfigurationProperty = {\n  externalId: 'externalId',\n  snsCallerArn: 'snsCallerArn',\n  snsRegion: 'snsRegion',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst smsConfigurationProperty: cognito.CfnUserPool.SmsConfigurationProperty = {\n  externalId: 'externalId',\n  snsCallerArn: 'snsCallerArn',\n  snsRegion: 'snsRegion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"d71921ec4f08a17c755d419fef2f63a664dd57f958c34fde73d87fec500c7445"},"e854b3a4bc673ca293f2b48742afc9c92f7d1f6a27a52ef32594c6fdbffa4805":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nstring_attribute_constraints_property = cognito.CfnUserPool.StringAttributeConstraintsProperty(\n    max_length=\"maxLength\",\n    min_length=\"minLength\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar stringAttributeConstraintsProperty = new StringAttributeConstraintsProperty {\n    MaxLength = \"maxLength\",\n    MinLength = \"minLength\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nStringAttributeConstraintsProperty stringAttributeConstraintsProperty = StringAttributeConstraintsProperty.builder()\n        .maxLength(\"maxLength\")\n        .minLength(\"minLength\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nstringAttributeConstraintsProperty := &StringAttributeConstraintsProperty{\n\tMaxLength: jsii.String(\"maxLength\"),\n\tMinLength: jsii.String(\"minLength\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst stringAttributeConstraintsProperty: cognito.CfnUserPool.StringAttributeConstraintsProperty = {\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stringAttributeConstraintsProperty: cognito.CfnUserPool.StringAttributeConstraintsProperty = {\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"3edd320e071294448f8a4bad67cbb6ca7ca9d9795ef462cd6f0d3d80e94b3970"},"31d460785696ff5e46089a5ac410f0423419ad26b72bccef9bf50358bfa9e19f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nuser_attribute_update_settings_property = cognito.CfnUserPool.UserAttributeUpdateSettingsProperty(\n    attributes_require_verification_before_update=[\"attributesRequireVerificationBeforeUpdate\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar userAttributeUpdateSettingsProperty = new UserAttributeUpdateSettingsProperty {\n    AttributesRequireVerificationBeforeUpdate = new [] { \"attributesRequireVerificationBeforeUpdate\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nUserAttributeUpdateSettingsProperty userAttributeUpdateSettingsProperty = UserAttributeUpdateSettingsProperty.builder()\n        .attributesRequireVerificationBeforeUpdate(List.of(\"attributesRequireVerificationBeforeUpdate\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nuserAttributeUpdateSettingsProperty := &UserAttributeUpdateSettingsProperty{\n\tAttributesRequireVerificationBeforeUpdate: []*string{\n\t\tjsii.String(\"attributesRequireVerificationBeforeUpdate\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst userAttributeUpdateSettingsProperty: cognito.CfnUserPool.UserAttributeUpdateSettingsProperty = {\n  attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.UserAttributeUpdateSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.UserAttributeUpdateSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userAttributeUpdateSettingsProperty: cognito.CfnUserPool.UserAttributeUpdateSettingsProperty = {\n  attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"e8d57af76b451bae5123528b217ad351e743e31f23ad5fa800f6bdb95779fb2c"},"dd3875c90819570b5e42d1365258aa7f1f23f3959882eb4e62d02f6b572760dc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nuser_pool_add_ons_property = cognito.CfnUserPool.UserPoolAddOnsProperty(\n    advanced_security_mode=\"advancedSecurityMode\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar userPoolAddOnsProperty = new UserPoolAddOnsProperty {\n    AdvancedSecurityMode = \"advancedSecurityMode\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nUserPoolAddOnsProperty userPoolAddOnsProperty = UserPoolAddOnsProperty.builder()\n        .advancedSecurityMode(\"advancedSecurityMode\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nuserPoolAddOnsProperty := &UserPoolAddOnsProperty{\n\tAdvancedSecurityMode: jsii.String(\"advancedSecurityMode\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst userPoolAddOnsProperty: cognito.CfnUserPool.UserPoolAddOnsProperty = {\n  advancedSecurityMode: 'advancedSecurityMode',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolAddOnsProperty: cognito.CfnUserPool.UserPoolAddOnsProperty = {\n  advancedSecurityMode: 'advancedSecurityMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"b10d5220a30bf167bbe1a57cfcb7bddc64cc0afc5e63da4e92e1becc75586618"},"eb2f8713d8283d937f42770d25979f45be2f0220858cc03603266232fa499357":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nusername_configuration_property = cognito.CfnUserPool.UsernameConfigurationProperty(\n    case_sensitive=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar usernameConfigurationProperty = new UsernameConfigurationProperty {\n    CaseSensitive = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nUsernameConfigurationProperty usernameConfigurationProperty = UsernameConfigurationProperty.builder()\n        .caseSensitive(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nusernameConfigurationProperty := &UsernameConfigurationProperty{\n\tCaseSensitive: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst usernameConfigurationProperty: cognito.CfnUserPool.UsernameConfigurationProperty = {\n  caseSensitive: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst usernameConfigurationProperty: cognito.CfnUserPool.UsernameConfigurationProperty = {\n  caseSensitive: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"0c38708942ca80755435b2ef1857442166605aa8c0e445cd1b374ed8acdac55d"},"d107a1545063b667eb809251dad654a09178763a0fe46bee4c9ab5f8a58a4e2b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nverification_message_template_property = cognito.CfnUserPool.VerificationMessageTemplateProperty(\n    default_email_option=\"defaultEmailOption\",\n    email_message=\"emailMessage\",\n    email_message_by_link=\"emailMessageByLink\",\n    email_subject=\"emailSubject\",\n    email_subject_by_link=\"emailSubjectByLink\",\n    sms_message=\"smsMessage\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar verificationMessageTemplateProperty = new VerificationMessageTemplateProperty {\n    DefaultEmailOption = \"defaultEmailOption\",\n    EmailMessage = \"emailMessage\",\n    EmailMessageByLink = \"emailMessageByLink\",\n    EmailSubject = \"emailSubject\",\n    EmailSubjectByLink = \"emailSubjectByLink\",\n    SmsMessage = \"smsMessage\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nVerificationMessageTemplateProperty verificationMessageTemplateProperty = VerificationMessageTemplateProperty.builder()\n        .defaultEmailOption(\"defaultEmailOption\")\n        .emailMessage(\"emailMessage\")\n        .emailMessageByLink(\"emailMessageByLink\")\n        .emailSubject(\"emailSubject\")\n        .emailSubjectByLink(\"emailSubjectByLink\")\n        .smsMessage(\"smsMessage\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nverificationMessageTemplateProperty := &VerificationMessageTemplateProperty{\n\tDefaultEmailOption: jsii.String(\"defaultEmailOption\"),\n\tEmailMessage: jsii.String(\"emailMessage\"),\n\tEmailMessageByLink: jsii.String(\"emailMessageByLink\"),\n\tEmailSubject: jsii.String(\"emailSubject\"),\n\tEmailSubjectByLink: jsii.String(\"emailSubjectByLink\"),\n\tSmsMessage: jsii.String(\"smsMessage\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst verificationMessageTemplateProperty: cognito.CfnUserPool.VerificationMessageTemplateProperty = {\n  defaultEmailOption: 'defaultEmailOption',\n  emailMessage: 'emailMessage',\n  emailMessageByLink: 'emailMessageByLink',\n  emailSubject: 'emailSubject',\n  emailSubjectByLink: 'emailSubjectByLink',\n  smsMessage: 'smsMessage',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst verificationMessageTemplateProperty: cognito.CfnUserPool.VerificationMessageTemplateProperty = {\n  defaultEmailOption: 'defaultEmailOption',\n  emailMessage: 'emailMessage',\n  emailMessageByLink: 'emailMessageByLink',\n  emailSubject: 'emailSubject',\n  emailSubjectByLink: 'emailSubjectByLink',\n  smsMessage: 'smsMessage',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":11,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"30feb630ea833edb56935d46eadfce83c95a62b00ddc6b229ed3334cdc2ffca6"},"6d1fae8d81be0b5d7992ba0a88e5b1d906106550d8a4ac31d0126c8145612c45":{"translations":{"python":{"source":"import aws_cdk.aws_cognito as cognito\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nfrom aws_cdk.core import App, CfnOutput, Stack\nfrom constructs import Construct\nimport aws_cdk.aws_elasticloadbalancingv2_actions as actions\n\nStack): lb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\nuser_pool = cognito.UserPool(self, \"UserPool\")\nuser_pool_client = cognito.UserPoolClient(self, \"Client\",\n    user_pool=user_pool,\n\n    # Required minimal configuration for use with an ELB\n    generate_secret=True,\n    auth_flows=cognito.AuthFlow(\n        user_password=True\n    ),\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.EMAIL],\n        callback_urls=[f\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\"\n        ]\n    )\n)\ncfn_client = user_pool_client.node.default_child\ncfn_client.add_property_override(\"RefreshTokenValidity\", 1)\ncfn_client.add_property_override(\"SupportedIdentityProviders\", [\"COGNITO\"])\n\nuser_pool_domain = cognito.UserPoolDomain(self, \"Domain\",\n    user_pool=user_pool,\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"test-cdk-prefix\"\n    )\n)\n\nlb.add_listener(\"Listener\",\n    port=443,\n    certificates=[certificate],\n    default_action=actions.AuthenticateCognitoAction(\n        user_pool=user_pool,\n        user_pool_client=user_pool_client,\n        user_pool_domain=user_pool_domain,\n        next=elbv2.ListenerAction.fixed_response(200,\n            content_type=\"text/plain\",\n            message_body=\"Authenticated\"\n        )\n    )\n)\n\nCfnOutput(self, \"DNS\",\n    value=lb.load_balancer_dns_name\n)\n\napp = App()\nCognitoStack(app, \"integ-cognito\")\napp.synth()","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Cognito;\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\nusing Constructs;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions;\n\nCognitoStack : Stack\n{var lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\nvar userPool = new UserPool(this, \"UserPool\");\nvar userPoolClient = new UserPoolClient(this, \"Client\", new UserPoolClientProps {\n    UserPool = userPool,\n\n    // Required minimal configuration for use with an ELB\n    GenerateSecret = true,\n    AuthFlows = new AuthFlow {\n        UserPassword = true\n    },\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.EMAIL },\n        CallbackUrls = new [] { $\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\" }\n    }\n});\nvar cfnClient = (CfnUserPoolClient)userPoolClient.Node.DefaultChild;\ncfnClient.AddPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.AddPropertyOverride(\"SupportedIdentityProviders\", new [] { \"COGNITO\" });\n\nvar userPoolDomain = new UserPoolDomain(this, \"Domain\", new UserPoolDomainProps {\n    UserPool = userPool,\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"test-cdk-prefix\"\n    }\n});\n\nlb.AddListener(\"Listener\", new BaseApplicationListenerProps {\n    Port = 443,\n    Certificates = new [] { certificate },\n    DefaultAction = new AuthenticateCognitoAction(new AuthenticateCognitoActionProps {\n        UserPool = userPool,\n        UserPoolClient = userPoolClient,\n        UserPoolDomain = userPoolDomain,\n        Next = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n            ContentType = \"text/plain\",\n            MessageBody = \"Authenticated\"\n        })\n    })\n});\n\nnew CfnOutput(this, \"DNS\", new CfnOutputProps {\n    Value = lb.LoadBalancerDnsName\n});\n\nvar app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.Synth();","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cognito.*;\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.App;\nimport software.amazon.awscdk.core.CfnOutput;\nimport software.amazon.awscdk.core.Stack;\nimport software.constructs.Construct;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.actions.*;\n\nCognitoStack extends Stack {CognitoStack(ApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\nUserPool userPool = new UserPool(this, \"UserPool\");\nUserPoolClient userPoolClient = UserPoolClient.Builder.create(this, \"Client\")\n        .userPool(userPool)\n\n        // Required minimal configuration for use with an ELB\n        .generateSecret(true)\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .build())\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.EMAIL))\n                .callbackUrls(List.of(String.format(\"https://%s/oauth2/idpresponse\", lb.getLoadBalancerDnsName())))\n                .build())\n        .build();\nCfnUserPoolClient cfnClient = (CfnUserPoolClient)userPoolClient.getNode().getDefaultChild();\ncfnClient.addPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.addPropertyOverride(\"SupportedIdentityProviders\", List.of(\"COGNITO\"));\n\nUserPoolDomain userPoolDomain = UserPoolDomain.Builder.create(this, \"Domain\")\n        .userPool(userPool)\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"test-cdk-prefix\")\n                .build())\n        .build();\n\nlb.addListener(\"Listener\", BaseApplicationListenerProps.builder()\n        .port(443)\n        .certificates(List.of(certificate))\n        .defaultAction(AuthenticateCognitoAction.Builder.create()\n                .userPool(userPool)\n                .userPoolClient(userPoolClient)\n                .userPoolDomain(userPoolDomain)\n                .next(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                        .contentType(\"text/plain\")\n                        .messageBody(\"Authenticated\")\n                        .build()))\n                .build())\n        .build());\n\nCfnOutput.Builder.create(this, \"DNS\")\n        .value(lb.getLoadBalancerDnsName())\n        .build();\n\nApp app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.synth();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawscognito\"\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\nimport \"github.com/aws/constructs-go/constructs\"\nimport actions \"github.com/aws-samples/dummy/lib\"\n\ncognitoStack struct {\nstack\n}\n\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &ApplicationLoadBalancerProps{\n\tVpc: Vpc,\n\tInternetFacing: jsii.Boolean(true),\n})\n\nuserPool := cognito.NewUserPool(this, jsii.String(\"UserPool\"))\nuserPoolClient := cognito.NewUserPoolClient(this, jsii.String(\"Client\"), &UserPoolClientProps{\n\tUserPool: UserPool,\n\n\t// Required minimal configuration for use with an ELB\n\tGenerateSecret: jsii.Boolean(true),\n\tAuthFlows: &AuthFlow{\n\t\tUserPassword: jsii.Boolean(true),\n\t},\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tAuthorizationCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_EMAIL(),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tfmt.Sprintf(\"https://%v/oauth2/idpresponse\", lb.LoadBalancerDnsName),\n\t\t},\n\t},\n})\ncfnClient := userPoolClient.Node.defaultChild.(cfnUserPoolClient)\ncfnClient.AddPropertyOverride(jsii.String(\"RefreshTokenValidity\"), jsii.Number(1))\ncfnClient.AddPropertyOverride(jsii.String(\"SupportedIdentityProviders\"), []interface{}{\n\tjsii.String(\"COGNITO\"),\n})\n\nuserPoolDomain := cognito.NewUserPoolDomain(this, jsii.String(\"Domain\"), &UserPoolDomainProps{\n\tUserPool: UserPool,\n\tCognitoDomain: &CognitoDomainOptions{\n\t\tDomainPrefix: jsii.String(\"test-cdk-prefix\"),\n\t},\n})\n\nlb.AddListener(jsii.String(\"Listener\"), &BaseApplicationListenerProps{\n\tPort: jsii.Number(443),\n\tCertificates: []iListenerCertificate{\n\t\tcertificate,\n\t},\n\tDefaultAction: actions.NewAuthenticateCognitoAction(&AuthenticateCognitoActionProps{\n\t\tUserPool: *UserPool,\n\t\tUserPoolClient: *UserPoolClient,\n\t\tUserPoolDomain: *UserPoolDomain,\n\t\tNext: elbv2.ListenerAction_FixedResponse(jsii.Number(200), &FixedResponseOptions{\n\t\t\tContentType: jsii.String(\"text/plain\"),\n\t\t\tMessageBody: jsii.String(\"Authenticated\"),\n\t\t}),\n\t}),\n})\n\nawscdkcore.NewCfnOutput(this, jsii.String(\"DNS\"), &CfnOutputProps{\n\tValue: lb.*LoadBalancerDnsName,\n})\n\napp := awscdkcore.NewApp()\nNewCognitoStack(app, jsii.String(\"integ-cognito\"))\napp.Synth()","version":"1"},"$":{"source":"    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolClient"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AuthFlow","@aws-cdk/aws-cognito.CfnUserPoolClient","@aws-cdk/aws-cognito.CognitoDomainOptions","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.IUserPoolClient","@aws-cdk/aws-cognito.IUserPoolDomain","@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#EMAIL","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientProps","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomainProps","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoAction","@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoActionProps","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps","@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps","@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer#loadBalancerDnsName","@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions","@aws-cdk/aws-elasticloadbalancingv2.ListenerAction","@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse","@aws-cdk/core.App","@aws-cdk/core.CfnOutput","@aws-cdk/core.CfnOutputProps","@aws-cdk/core.CfnResource#addPropertyOverride","@aws-cdk/core.Construct#node","@aws-cdk/core.Stage#synth","constructs.Construct"],"fullSource":"import * as cognito from '@aws-cdk/aws-cognito';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport { App, CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '../lib';\n\nclass CognitoStack extends Stack {\n\n  /// !hide\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'Stack', {\n      maxAzs: 2,\n    });\n\n    const certificate: elbv2.IListenerCertificate = {\n      certificateArn: process.env.SELF_SIGNED_CERT_ARN ?? '',\n    };\n\n    /// !show\n    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();","syntaxKindCounter":{"8":3,"10":19,"15":1,"17":1,"75":78,"104":5,"106":4,"153":1,"169":1,"192":4,"193":11,"194":17,"196":5,"197":8,"211":1,"216":1,"217":1,"221":1,"225":6,"226":6,"242":6,"243":6,"245":1,"254":6,"255":6,"256":4,"257":2,"258":4,"279":1,"281":18,"282":6,"290":1},"fqnsFingerprint":"d069a5f15d467e2a2e2895788a7249a448ce6ee72a9c48011d1fdb701522977c"},"885820b60d7d3c28697138aadf684369a79236921c1cca4f5c1bd81294fc5ec8":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nanalytics_configuration_property = cognito.CfnUserPoolClient.AnalyticsConfigurationProperty(\n    application_arn=\"applicationArn\",\n    application_id=\"applicationId\",\n    external_id=\"externalId\",\n    role_arn=\"roleArn\",\n    user_data_shared=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar analyticsConfigurationProperty = new AnalyticsConfigurationProperty {\n    ApplicationArn = \"applicationArn\",\n    ApplicationId = \"applicationId\",\n    ExternalId = \"externalId\",\n    RoleArn = \"roleArn\",\n    UserDataShared = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAnalyticsConfigurationProperty analyticsConfigurationProperty = AnalyticsConfigurationProperty.builder()\n        .applicationArn(\"applicationArn\")\n        .applicationId(\"applicationId\")\n        .externalId(\"externalId\")\n        .roleArn(\"roleArn\")\n        .userDataShared(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nanalyticsConfigurationProperty := &AnalyticsConfigurationProperty{\n\tApplicationArn: jsii.String(\"applicationArn\"),\n\tApplicationId: jsii.String(\"applicationId\"),\n\tExternalId: jsii.String(\"externalId\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n\tUserDataShared: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst analyticsConfigurationProperty: cognito.CfnUserPoolClient.AnalyticsConfigurationProperty = {\n  applicationArn: 'applicationArn',\n  applicationId: 'applicationId',\n  externalId: 'externalId',\n  roleArn: 'roleArn',\n  userDataShared: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst analyticsConfigurationProperty: cognito.CfnUserPoolClient.AnalyticsConfigurationProperty = {\n  applicationArn: 'applicationArn',\n  applicationId: 'applicationId',\n  externalId: 'externalId',\n  roleArn: 'roleArn',\n  userDataShared: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":10,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"30823832f481c0ef2684f9e8f4a922497a79cdd1ce5392597d056d8fabae121c"},"2fde22cb58387bb87925639b6fc826b9a27e0bea785a49ec3b235fa803c3cedd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ntoken_validity_units_property = cognito.CfnUserPoolClient.TokenValidityUnitsProperty(\n    access_token=\"accessToken\",\n    id_token=\"idToken\",\n    refresh_token=\"refreshToken\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar tokenValidityUnitsProperty = new TokenValidityUnitsProperty {\n    AccessToken = \"accessToken\",\n    IdToken = \"idToken\",\n    RefreshToken = \"refreshToken\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nTokenValidityUnitsProperty tokenValidityUnitsProperty = TokenValidityUnitsProperty.builder()\n        .accessToken(\"accessToken\")\n        .idToken(\"idToken\")\n        .refreshToken(\"refreshToken\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ntokenValidityUnitsProperty := &TokenValidityUnitsProperty{\n\tAccessToken: jsii.String(\"accessToken\"),\n\tIdToken: jsii.String(\"idToken\"),\n\tRefreshToken: jsii.String(\"refreshToken\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst tokenValidityUnitsProperty: cognito.CfnUserPoolClient.TokenValidityUnitsProperty = {\n  accessToken: 'accessToken',\n  idToken: 'idToken',\n  refreshToken: 'refreshToken',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tokenValidityUnitsProperty: cognito.CfnUserPoolClient.TokenValidityUnitsProperty = {\n  accessToken: 'accessToken',\n  idToken: 'idToken',\n  refreshToken: 'refreshToken',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"7144ccbaabc781e1faa2d3fb8a553c280cface87c8c4aeb472839efa42b07ab7"},"8a49e5f7de96b1e3f9746ff37bf6a658c363e478664ad6efc85aa869c918a6c1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_client_props = cognito.CfnUserPoolClientProps(\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    access_token_validity=123,\n    allowed_oAuth_flows=[\"allowedOAuthFlows\"],\n    allowed_oAuth_flows_user_pool_client=False,\n    allowed_oAuth_scopes=[\"allowedOAuthScopes\"],\n    analytics_configuration=cognito.CfnUserPoolClient.AnalyticsConfigurationProperty(\n        application_arn=\"applicationArn\",\n        application_id=\"applicationId\",\n        external_id=\"externalId\",\n        role_arn=\"roleArn\",\n        user_data_shared=False\n    ),\n    auth_session_validity=123,\n    callback_ur_ls=[\"callbackUrLs\"],\n    client_name=\"clientName\",\n    default_redirect_uri=\"defaultRedirectUri\",\n    enable_propagate_additional_user_context_data=False,\n    enable_token_revocation=False,\n    explicit_auth_flows=[\"explicitAuthFlows\"],\n    generate_secret=False,\n    id_token_validity=123,\n    logout_ur_ls=[\"logoutUrLs\"],\n    prevent_user_existence_errors=\"preventUserExistenceErrors\",\n    read_attributes=[\"readAttributes\"],\n    refresh_token_validity=123,\n    supported_identity_providers=[\"supportedIdentityProviders\"],\n    token_validity_units=cognito.CfnUserPoolClient.TokenValidityUnitsProperty(\n        access_token=\"accessToken\",\n        id_token=\"idToken\",\n        refresh_token=\"refreshToken\"\n    ),\n    write_attributes=[\"writeAttributes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolClientProps = new CfnUserPoolClientProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AccessTokenValidity = 123,\n    AllowedOAuthFlows = new [] { \"allowedOAuthFlows\" },\n    AllowedOAuthFlowsUserPoolClient = false,\n    AllowedOAuthScopes = new [] { \"allowedOAuthScopes\" },\n    AnalyticsConfiguration = new AnalyticsConfigurationProperty {\n        ApplicationArn = \"applicationArn\",\n        ApplicationId = \"applicationId\",\n        ExternalId = \"externalId\",\n        RoleArn = \"roleArn\",\n        UserDataShared = false\n    },\n    AuthSessionValidity = 123,\n    CallbackUrLs = new [] { \"callbackUrLs\" },\n    ClientName = \"clientName\",\n    DefaultRedirectUri = \"defaultRedirectUri\",\n    EnablePropagateAdditionalUserContextData = false,\n    EnableTokenRevocation = false,\n    ExplicitAuthFlows = new [] { \"explicitAuthFlows\" },\n    GenerateSecret = false,\n    IdTokenValidity = 123,\n    LogoutUrLs = new [] { \"logoutUrLs\" },\n    PreventUserExistenceErrors = \"preventUserExistenceErrors\",\n    ReadAttributes = new [] { \"readAttributes\" },\n    RefreshTokenValidity = 123,\n    SupportedIdentityProviders = new [] { \"supportedIdentityProviders\" },\n    TokenValidityUnits = new TokenValidityUnitsProperty {\n        AccessToken = \"accessToken\",\n        IdToken = \"idToken\",\n        RefreshToken = \"refreshToken\"\n    },\n    WriteAttributes = new [] { \"writeAttributes\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolClientProps cfnUserPoolClientProps = CfnUserPoolClientProps.builder()\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .accessTokenValidity(123)\n        .allowedOAuthFlows(List.of(\"allowedOAuthFlows\"))\n        .allowedOAuthFlowsUserPoolClient(false)\n        .allowedOAuthScopes(List.of(\"allowedOAuthScopes\"))\n        .analyticsConfiguration(AnalyticsConfigurationProperty.builder()\n                .applicationArn(\"applicationArn\")\n                .applicationId(\"applicationId\")\n                .externalId(\"externalId\")\n                .roleArn(\"roleArn\")\n                .userDataShared(false)\n                .build())\n        .authSessionValidity(123)\n        .callbackUrLs(List.of(\"callbackUrLs\"))\n        .clientName(\"clientName\")\n        .defaultRedirectUri(\"defaultRedirectUri\")\n        .enablePropagateAdditionalUserContextData(false)\n        .enableTokenRevocation(false)\n        .explicitAuthFlows(List.of(\"explicitAuthFlows\"))\n        .generateSecret(false)\n        .idTokenValidity(123)\n        .logoutUrLs(List.of(\"logoutUrLs\"))\n        .preventUserExistenceErrors(\"preventUserExistenceErrors\")\n        .readAttributes(List.of(\"readAttributes\"))\n        .refreshTokenValidity(123)\n        .supportedIdentityProviders(List.of(\"supportedIdentityProviders\"))\n        .tokenValidityUnits(TokenValidityUnitsProperty.builder()\n                .accessToken(\"accessToken\")\n                .idToken(\"idToken\")\n                .refreshToken(\"refreshToken\")\n                .build())\n        .writeAttributes(List.of(\"writeAttributes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolClientProps := &CfnUserPoolClientProps{\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tAccessTokenValidity: jsii.Number(123),\n\tAllowedOAuthFlows: []*string{\n\t\tjsii.String(\"allowedOAuthFlows\"),\n\t},\n\tAllowedOAuthFlowsUserPoolClient: jsii.Boolean(false),\n\tAllowedOAuthScopes: []*string{\n\t\tjsii.String(\"allowedOAuthScopes\"),\n\t},\n\tAnalyticsConfiguration: &AnalyticsConfigurationProperty{\n\t\tApplicationArn: jsii.String(\"applicationArn\"),\n\t\tApplicationId: jsii.String(\"applicationId\"),\n\t\tExternalId: jsii.String(\"externalId\"),\n\t\tRoleArn: jsii.String(\"roleArn\"),\n\t\tUserDataShared: jsii.Boolean(false),\n\t},\n\tAuthSessionValidity: jsii.Number(123),\n\tCallbackUrLs: []*string{\n\t\tjsii.String(\"callbackUrLs\"),\n\t},\n\tClientName: jsii.String(\"clientName\"),\n\tDefaultRedirectUri: jsii.String(\"defaultRedirectUri\"),\n\tEnablePropagateAdditionalUserContextData: jsii.Boolean(false),\n\tEnableTokenRevocation: jsii.Boolean(false),\n\tExplicitAuthFlows: []*string{\n\t\tjsii.String(\"explicitAuthFlows\"),\n\t},\n\tGenerateSecret: jsii.Boolean(false),\n\tIdTokenValidity: jsii.Number(123),\n\tLogoutUrLs: []*string{\n\t\tjsii.String(\"logoutUrLs\"),\n\t},\n\tPreventUserExistenceErrors: jsii.String(\"preventUserExistenceErrors\"),\n\tReadAttributes: []*string{\n\t\tjsii.String(\"readAttributes\"),\n\t},\n\tRefreshTokenValidity: jsii.Number(123),\n\tSupportedIdentityProviders: []*string{\n\t\tjsii.String(\"supportedIdentityProviders\"),\n\t},\n\tTokenValidityUnits: &TokenValidityUnitsProperty{\n\t\tAccessToken: jsii.String(\"accessToken\"),\n\t\tIdToken: jsii.String(\"idToken\"),\n\t\tRefreshToken: jsii.String(\"refreshToken\"),\n\t},\n\tWriteAttributes: []*string{\n\t\tjsii.String(\"writeAttributes\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolClientProps: cognito.CfnUserPoolClientProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accessTokenValidity: 123,\n  allowedOAuthFlows: ['allowedOAuthFlows'],\n  allowedOAuthFlowsUserPoolClient: false,\n  allowedOAuthScopes: ['allowedOAuthScopes'],\n  analyticsConfiguration: {\n    applicationArn: 'applicationArn',\n    applicationId: 'applicationId',\n    externalId: 'externalId',\n    roleArn: 'roleArn',\n    userDataShared: false,\n  },\n  authSessionValidity: 123,\n  callbackUrLs: ['callbackUrLs'],\n  clientName: 'clientName',\n  defaultRedirectUri: 'defaultRedirectUri',\n  enablePropagateAdditionalUserContextData: false,\n  enableTokenRevocation: false,\n  explicitAuthFlows: ['explicitAuthFlows'],\n  generateSecret: false,\n  idTokenValidity: 123,\n  logoutUrLs: ['logoutUrLs'],\n  preventUserExistenceErrors: 'preventUserExistenceErrors',\n  readAttributes: ['readAttributes'],\n  refreshTokenValidity: 123,\n  supportedIdentityProviders: ['supportedIdentityProviders'],\n  tokenValidityUnits: {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    refreshToken: 'refreshToken',\n  },\n  writeAttributes: ['writeAttributes'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolClientProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolClientProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolClientProps: cognito.CfnUserPoolClientProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accessTokenValidity: 123,\n  allowedOAuthFlows: ['allowedOAuthFlows'],\n  allowedOAuthFlowsUserPoolClient: false,\n  allowedOAuthScopes: ['allowedOAuthScopes'],\n  analyticsConfiguration: {\n    applicationArn: 'applicationArn',\n    applicationId: 'applicationId',\n    externalId: 'externalId',\n    roleArn: 'roleArn',\n    userDataShared: false,\n  },\n  authSessionValidity: 123,\n  callbackUrLs: ['callbackUrLs'],\n  clientName: 'clientName',\n  defaultRedirectUri: 'defaultRedirectUri',\n  enablePropagateAdditionalUserContextData: false,\n  enableTokenRevocation: false,\n  explicitAuthFlows: ['explicitAuthFlows'],\n  generateSecret: false,\n  idTokenValidity: 123,\n  logoutUrLs: ['logoutUrLs'],\n  preventUserExistenceErrors: 'preventUserExistenceErrors',\n  readAttributes: ['readAttributes'],\n  refreshTokenValidity: 123,\n  supportedIdentityProviders: ['supportedIdentityProviders'],\n  tokenValidityUnits: {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    refreshToken: 'refreshToken',\n  },\n  writeAttributes: ['writeAttributes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":20,"75":34,"91":5,"153":1,"169":1,"192":8,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":30,"290":1},"fqnsFingerprint":"5c87590518c016ee424a10fdf0d3ff6863049d0d744c4227391550c1ca8b926f"},"1dcc8b13c406d2d29defeef869340a67861bb6c6f76bb01a5db7433109467ec4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_domain = cognito.CfnUserPoolDomain(self, \"MyCfnUserPoolDomain\",\n    domain=\"domain\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    custom_domain_config=cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty(\n        certificate_arn=\"certificateArn\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolDomain = new CfnUserPoolDomain(this, \"MyCfnUserPoolDomain\", new CfnUserPoolDomainProps {\n    Domain = \"domain\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    CustomDomainConfig = new CustomDomainConfigTypeProperty {\n        CertificateArn = \"certificateArn\"\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolDomain cfnUserPoolDomain = CfnUserPoolDomain.Builder.create(this, \"MyCfnUserPoolDomain\")\n        .domain(\"domain\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .customDomainConfig(CustomDomainConfigTypeProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolDomain := cognito.NewCfnUserPoolDomain(this, jsii.String(\"MyCfnUserPoolDomain\"), &CfnUserPoolDomainProps{\n\tDomain: jsii.String(\"domain\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tCustomDomainConfig: &CustomDomainConfigTypeProperty{\n\t\tCertificateArn: jsii.String(\"certificateArn\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolDomain = new cognito.CfnUserPoolDomain(this, 'MyCfnUserPoolDomain', {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolDomain"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolDomain","@aws-cdk/aws-cognito.CfnUserPoolDomainProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolDomain = new cognito.CfnUserPoolDomain(this, 'MyCfnUserPoolDomain', {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":8,"104":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"5ec2ab74d57d1cd9ca428a1a72c93de44e2bc04278159eb7df279a609ea40cc0"},"e9a714e55f8ec0572aba7458b38e2df2815a0612f938ab5b34bb82487b8cbb11":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_domain_config_type_property = cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty(\n    certificate_arn=\"certificateArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar customDomainConfigTypeProperty = new CustomDomainConfigTypeProperty {\n    CertificateArn = \"certificateArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomDomainConfigTypeProperty customDomainConfigTypeProperty = CustomDomainConfigTypeProperty.builder()\n        .certificateArn(\"certificateArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncustomDomainConfigTypeProperty := &CustomDomainConfigTypeProperty{\n\tCertificateArn: jsii.String(\"certificateArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customDomainConfigTypeProperty: cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty = {\n  certificateArn: 'certificateArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customDomainConfigTypeProperty: cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty = {\n  certificateArn: 'certificateArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"0b9d6b8adb02d27445a89a957bbbac6d33550681af136f2ddf126180098efe63"},"62e15dc48589392a937c13b59412ed5802aaa55e57be5ea5fcf7a437aa02b419":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_domain_props = cognito.CfnUserPoolDomainProps(\n    domain=\"domain\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    custom_domain_config=cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty(\n        certificate_arn=\"certificateArn\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolDomainProps = new CfnUserPoolDomainProps {\n    Domain = \"domain\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    CustomDomainConfig = new CustomDomainConfigTypeProperty {\n        CertificateArn = \"certificateArn\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolDomainProps cfnUserPoolDomainProps = CfnUserPoolDomainProps.builder()\n        .domain(\"domain\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .customDomainConfig(CustomDomainConfigTypeProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolDomainProps := &CfnUserPoolDomainProps{\n\tDomain: jsii.String(\"domain\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tCustomDomainConfig: &CustomDomainConfigTypeProperty{\n\t\tCertificateArn: jsii.String(\"certificateArn\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolDomainProps: cognito.CfnUserPoolDomainProps = {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolDomainProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolDomainProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolDomainProps: cognito.CfnUserPoolDomainProps = {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":1,"169":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"3b046c7c4dd478b56000121971eb8dd367d381003233fead173a02b72a9808b1"},"d4fc113c673432d9c88985f12a69b34c042aa95efb40b3b85e92bb97f6339f07":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_group = cognito.CfnUserPoolGroup(self, \"MyCfnUserPoolGroup\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    description=\"description\",\n    group_name=\"groupName\",\n    precedence=123,\n    role_arn=\"roleArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolGroup = new CfnUserPoolGroup(this, \"MyCfnUserPoolGroup\", new CfnUserPoolGroupProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    GroupName = \"groupName\",\n    Precedence = 123,\n    RoleArn = \"roleArn\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolGroup cfnUserPoolGroup = CfnUserPoolGroup.Builder.create(this, \"MyCfnUserPoolGroup\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .groupName(\"groupName\")\n        .precedence(123)\n        .roleArn(\"roleArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolGroup := cognito.NewCfnUserPoolGroup(this, jsii.String(\"MyCfnUserPoolGroup\"), &CfnUserPoolGroupProps{\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tGroupName: jsii.String(\"groupName\"),\n\tPrecedence: jsii.Number(123),\n\tRoleArn: jsii.String(\"roleArn\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolGroup = new cognito.CfnUserPoolGroup(this, 'MyCfnUserPoolGroup', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolGroup"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolGroup","@aws-cdk/aws-cognito.CfnUserPoolGroupProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolGroup = new cognito.CfnUserPoolGroup(this, 'MyCfnUserPoolGroup', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":6,"75":9,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"2c63ab02f05aca4c3435ee176f52c32c97ef68217198e1f21d000d6299085390"},"2eb6161676b3e7b1719005cce803e2bb12d3cb8fba4e89f1b685b9e14e3973cc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_group_props = cognito.CfnUserPoolGroupProps(\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    description=\"description\",\n    group_name=\"groupName\",\n    precedence=123,\n    role_arn=\"roleArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolGroupProps = new CfnUserPoolGroupProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    GroupName = \"groupName\",\n    Precedence = 123,\n    RoleArn = \"roleArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolGroupProps cfnUserPoolGroupProps = CfnUserPoolGroupProps.builder()\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .groupName(\"groupName\")\n        .precedence(123)\n        .roleArn(\"roleArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolGroupProps := &CfnUserPoolGroupProps{\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tGroupName: jsii.String(\"groupName\"),\n\tPrecedence: jsii.Number(123),\n\tRoleArn: jsii.String(\"roleArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolGroupProps: cognito.CfnUserPoolGroupProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolGroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolGroupProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolGroupProps: cognito.CfnUserPoolGroupProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":5,"75":9,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"838103a20d3fb8da0ba0509410687ebbc18e5d3aba3013d0bc001fe9621dfed5"},"073defff906a6796564b6f6d7d1b2edd36e2812bb86342deccfa98f1fe497edb":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# attribute_mapping: Any\n# provider_details: Any\n\ncfn_user_pool_identity_provider = cognito.CfnUserPoolIdentityProvider(self, \"MyCfnUserPoolIdentityProvider\",\n    provider_name=\"providerName\",\n    provider_type=\"providerType\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    attribute_mapping=attribute_mapping,\n    idp_identifiers=[\"idpIdentifiers\"],\n    provider_details=provider_details\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar attributeMapping;\nvar providerDetails;\n\nvar cfnUserPoolIdentityProvider = new CfnUserPoolIdentityProvider(this, \"MyCfnUserPoolIdentityProvider\", new CfnUserPoolIdentityProviderProps {\n    ProviderName = \"providerName\",\n    ProviderType = \"providerType\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AttributeMapping = attributeMapping,\n    IdpIdentifiers = new [] { \"idpIdentifiers\" },\n    ProviderDetails = providerDetails\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject attributeMapping;\nObject providerDetails;\n\nCfnUserPoolIdentityProvider cfnUserPoolIdentityProvider = CfnUserPoolIdentityProvider.Builder.create(this, \"MyCfnUserPoolIdentityProvider\")\n        .providerName(\"providerName\")\n        .providerType(\"providerType\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .attributeMapping(attributeMapping)\n        .idpIdentifiers(List.of(\"idpIdentifiers\"))\n        .providerDetails(providerDetails)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar attributeMapping interface{}\nvar providerDetails interface{}\n\ncfnUserPoolIdentityProvider := cognito.NewCfnUserPoolIdentityProvider(this, jsii.String(\"MyCfnUserPoolIdentityProvider\"), &CfnUserPoolIdentityProviderProps{\n\tProviderName: jsii.String(\"providerName\"),\n\tProviderType: jsii.String(\"providerType\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tAttributeMapping: attributeMapping,\n\tIdpIdentifiers: []*string{\n\t\tjsii.String(\"idpIdentifiers\"),\n\t},\n\tProviderDetails: providerDetails,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\nconst cfnUserPoolIdentityProvider = new cognito.CfnUserPoolIdentityProvider(this, 'MyCfnUserPoolIdentityProvider', {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolIdentityProvider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolIdentityProvider","@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolIdentityProvider = new cognito.CfnUserPoolIdentityProvider(this, 'MyCfnUserPoolIdentityProvider', {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":14,"104":1,"125":2,"130":2,"192":1,"193":1,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"135dce7f6f322babf2e8d9785c7157649e776c20dacdba27562a682744183dcb"},"5e64c13f9b1fbb4be21dfb467dcc161198a4a0b9aa28a3146ff11d8568621fdd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# attribute_mapping: Any\n# provider_details: Any\n\ncfn_user_pool_identity_provider_props = cognito.CfnUserPoolIdentityProviderProps(\n    provider_name=\"providerName\",\n    provider_type=\"providerType\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    attribute_mapping=attribute_mapping,\n    idp_identifiers=[\"idpIdentifiers\"],\n    provider_details=provider_details\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar attributeMapping;\nvar providerDetails;\n\nvar cfnUserPoolIdentityProviderProps = new CfnUserPoolIdentityProviderProps {\n    ProviderName = \"providerName\",\n    ProviderType = \"providerType\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AttributeMapping = attributeMapping,\n    IdpIdentifiers = new [] { \"idpIdentifiers\" },\n    ProviderDetails = providerDetails\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject attributeMapping;\nObject providerDetails;\n\nCfnUserPoolIdentityProviderProps cfnUserPoolIdentityProviderProps = CfnUserPoolIdentityProviderProps.builder()\n        .providerName(\"providerName\")\n        .providerType(\"providerType\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .attributeMapping(attributeMapping)\n        .idpIdentifiers(List.of(\"idpIdentifiers\"))\n        .providerDetails(providerDetails)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar attributeMapping interface{}\nvar providerDetails interface{}\n\ncfnUserPoolIdentityProviderProps := &CfnUserPoolIdentityProviderProps{\n\tProviderName: jsii.String(\"providerName\"),\n\tProviderType: jsii.String(\"providerType\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tAttributeMapping: attributeMapping,\n\tIdpIdentifiers: []*string{\n\t\tjsii.String(\"idpIdentifiers\"),\n\t},\n\tProviderDetails: providerDetails,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\nconst cfnUserPoolIdentityProviderProps: cognito.CfnUserPoolIdentityProviderProps = {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolIdentityProviderProps: cognito.CfnUserPoolIdentityProviderProps = {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":14,"125":2,"130":2,"153":1,"169":1,"192":1,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"cd86aaad58ac154f3ea37c5cdbca56a16a29d883e3b06bc710ebfae8373a3383"},"907a399b12f48a24c26844de6b6fbc6fa82126c7f004a58982991c3beb70a305":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# user_pool_tags: Any\n\ncfn_user_pool_props = cognito.CfnUserPoolProps(\n    account_recovery_setting=cognito.CfnUserPool.AccountRecoverySettingProperty(\n        recovery_mechanisms=[cognito.CfnUserPool.RecoveryOptionProperty(\n            name=\"name\",\n            priority=123\n        )]\n    ),\n    admin_create_user_config=cognito.CfnUserPool.AdminCreateUserConfigProperty(\n        allow_admin_create_user_only=False,\n        invite_message_template=cognito.CfnUserPool.InviteMessageTemplateProperty(\n            email_message=\"emailMessage\",\n            email_subject=\"emailSubject\",\n            sms_message=\"smsMessage\"\n        ),\n        unused_account_validity_days=123\n    ),\n    alias_attributes=[\"aliasAttributes\"],\n    auto_verified_attributes=[\"autoVerifiedAttributes\"],\n    deletion_protection=\"deletionProtection\",\n    device_configuration=cognito.CfnUserPool.DeviceConfigurationProperty(\n        challenge_required_on_new_device=False,\n        device_only_remembered_on_user_prompt=False\n    ),\n    email_configuration=cognito.CfnUserPool.EmailConfigurationProperty(\n        configuration_set=\"configurationSet\",\n        email_sending_account=\"emailSendingAccount\",\n        from=\"from\",\n        reply_to_email_address=\"replyToEmailAddress\",\n        source_arn=\"sourceArn\"\n    ),\n    email_verification_message=\"emailVerificationMessage\",\n    email_verification_subject=\"emailVerificationSubject\",\n    enabled_mfas=[\"enabledMfas\"],\n    lambda_config=cognito.CfnUserPool.LambdaConfigProperty(\n        create_auth_challenge=\"createAuthChallenge\",\n        custom_email_sender=cognito.CfnUserPool.CustomEmailSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        custom_message=\"customMessage\",\n        custom_sms_sender=cognito.CfnUserPool.CustomSMSSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        define_auth_challenge=\"defineAuthChallenge\",\n        kms_key_id=\"kmsKeyId\",\n        post_authentication=\"postAuthentication\",\n        post_confirmation=\"postConfirmation\",\n        pre_authentication=\"preAuthentication\",\n        pre_sign_up=\"preSignUp\",\n        pre_token_generation=\"preTokenGeneration\",\n        user_migration=\"userMigration\",\n        verify_auth_challenge_response=\"verifyAuthChallengeResponse\"\n    ),\n    mfa_configuration=\"mfaConfiguration\",\n    policies=cognito.CfnUserPool.PoliciesProperty(\n        password_policy=cognito.CfnUserPool.PasswordPolicyProperty(\n            minimum_length=123,\n            require_lowercase=False,\n            require_numbers=False,\n            require_symbols=False,\n            require_uppercase=False,\n            temporary_password_validity_days=123\n        )\n    ),\n    schema=[cognito.CfnUserPool.SchemaAttributeProperty(\n        attribute_data_type=\"attributeDataType\",\n        developer_only_attribute=False,\n        mutable=False,\n        name=\"name\",\n        number_attribute_constraints=cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n            max_value=\"maxValue\",\n            min_value=\"minValue\"\n        ),\n        required=False,\n        string_attribute_constraints=cognito.CfnUserPool.StringAttributeConstraintsProperty(\n            max_length=\"maxLength\",\n            min_length=\"minLength\"\n        )\n    )],\n    sms_authentication_message=\"smsAuthenticationMessage\",\n    sms_configuration=cognito.CfnUserPool.SmsConfigurationProperty(\n        external_id=\"externalId\",\n        sns_caller_arn=\"snsCallerArn\",\n        sns_region=\"snsRegion\"\n    ),\n    sms_verification_message=\"smsVerificationMessage\",\n    user_attribute_update_settings=cognito.CfnUserPool.UserAttributeUpdateSettingsProperty(\n        attributes_require_verification_before_update=[\"attributesRequireVerificationBeforeUpdate\"]\n    ),\n    username_attributes=[\"usernameAttributes\"],\n    username_configuration=cognito.CfnUserPool.UsernameConfigurationProperty(\n        case_sensitive=False\n    ),\n    user_pool_add_ons=cognito.CfnUserPool.UserPoolAddOnsProperty(\n        advanced_security_mode=\"advancedSecurityMode\"\n    ),\n    user_pool_name=\"userPoolName\",\n    user_pool_tags=user_pool_tags,\n    verification_message_template=cognito.CfnUserPool.VerificationMessageTemplateProperty(\n        default_email_option=\"defaultEmailOption\",\n        email_message=\"emailMessage\",\n        email_message_by_link=\"emailMessageByLink\",\n        email_subject=\"emailSubject\",\n        email_subject_by_link=\"emailSubjectByLink\",\n        sms_message=\"smsMessage\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar userPoolTags;\n\nvar cfnUserPoolProps = new CfnUserPoolProps {\n    AccountRecoverySetting = new AccountRecoverySettingProperty {\n        RecoveryMechanisms = new [] { new RecoveryOptionProperty {\n            Name = \"name\",\n            Priority = 123\n        } }\n    },\n    AdminCreateUserConfig = new AdminCreateUserConfigProperty {\n        AllowAdminCreateUserOnly = false,\n        InviteMessageTemplate = new InviteMessageTemplateProperty {\n            EmailMessage = \"emailMessage\",\n            EmailSubject = \"emailSubject\",\n            SmsMessage = \"smsMessage\"\n        },\n        UnusedAccountValidityDays = 123\n    },\n    AliasAttributes = new [] { \"aliasAttributes\" },\n    AutoVerifiedAttributes = new [] { \"autoVerifiedAttributes\" },\n    DeletionProtection = \"deletionProtection\",\n    DeviceConfiguration = new DeviceConfigurationProperty {\n        ChallengeRequiredOnNewDevice = false,\n        DeviceOnlyRememberedOnUserPrompt = false\n    },\n    EmailConfiguration = new EmailConfigurationProperty {\n        ConfigurationSet = \"configurationSet\",\n        EmailSendingAccount = \"emailSendingAccount\",\n        From = \"from\",\n        ReplyToEmailAddress = \"replyToEmailAddress\",\n        SourceArn = \"sourceArn\"\n    },\n    EmailVerificationMessage = \"emailVerificationMessage\",\n    EmailVerificationSubject = \"emailVerificationSubject\",\n    EnabledMfas = new [] { \"enabledMfas\" },\n    LambdaConfig = new LambdaConfigProperty {\n        CreateAuthChallenge = \"createAuthChallenge\",\n        CustomEmailSender = new CustomEmailSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        CustomMessage = \"customMessage\",\n        CustomSmsSender = new CustomSMSSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        DefineAuthChallenge = \"defineAuthChallenge\",\n        KmsKeyId = \"kmsKeyId\",\n        PostAuthentication = \"postAuthentication\",\n        PostConfirmation = \"postConfirmation\",\n        PreAuthentication = \"preAuthentication\",\n        PreSignUp = \"preSignUp\",\n        PreTokenGeneration = \"preTokenGeneration\",\n        UserMigration = \"userMigration\",\n        VerifyAuthChallengeResponse = \"verifyAuthChallengeResponse\"\n    },\n    MfaConfiguration = \"mfaConfiguration\",\n    Policies = new PoliciesProperty {\n        PasswordPolicy = new PasswordPolicyProperty {\n            MinimumLength = 123,\n            RequireLowercase = false,\n            RequireNumbers = false,\n            RequireSymbols = false,\n            RequireUppercase = false,\n            TemporaryPasswordValidityDays = 123\n        }\n    },\n    Schema = new [] { new SchemaAttributeProperty {\n        AttributeDataType = \"attributeDataType\",\n        DeveloperOnlyAttribute = false,\n        Mutable = false,\n        Name = \"name\",\n        NumberAttributeConstraints = new NumberAttributeConstraintsProperty {\n            MaxValue = \"maxValue\",\n            MinValue = \"minValue\"\n        },\n        Required = false,\n        StringAttributeConstraints = new StringAttributeConstraintsProperty {\n            MaxLength = \"maxLength\",\n            MinLength = \"minLength\"\n        }\n    } },\n    SmsAuthenticationMessage = \"smsAuthenticationMessage\",\n    SmsConfiguration = new SmsConfigurationProperty {\n        ExternalId = \"externalId\",\n        SnsCallerArn = \"snsCallerArn\",\n        SnsRegion = \"snsRegion\"\n    },\n    SmsVerificationMessage = \"smsVerificationMessage\",\n    UserAttributeUpdateSettings = new UserAttributeUpdateSettingsProperty {\n        AttributesRequireVerificationBeforeUpdate = new [] { \"attributesRequireVerificationBeforeUpdate\" }\n    },\n    UsernameAttributes = new [] { \"usernameAttributes\" },\n    UsernameConfiguration = new UsernameConfigurationProperty {\n        CaseSensitive = false\n    },\n    UserPoolAddOns = new UserPoolAddOnsProperty {\n        AdvancedSecurityMode = \"advancedSecurityMode\"\n    },\n    UserPoolName = \"userPoolName\",\n    UserPoolTags = userPoolTags,\n    VerificationMessageTemplate = new VerificationMessageTemplateProperty {\n        DefaultEmailOption = \"defaultEmailOption\",\n        EmailMessage = \"emailMessage\",\n        EmailMessageByLink = \"emailMessageByLink\",\n        EmailSubject = \"emailSubject\",\n        EmailSubjectByLink = \"emailSubjectByLink\",\n        SmsMessage = \"smsMessage\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject userPoolTags;\n\nCfnUserPoolProps cfnUserPoolProps = CfnUserPoolProps.builder()\n        .accountRecoverySetting(AccountRecoverySettingProperty.builder()\n                .recoveryMechanisms(List.of(RecoveryOptionProperty.builder()\n                        .name(\"name\")\n                        .priority(123)\n                        .build()))\n                .build())\n        .adminCreateUserConfig(AdminCreateUserConfigProperty.builder()\n                .allowAdminCreateUserOnly(false)\n                .inviteMessageTemplate(InviteMessageTemplateProperty.builder()\n                        .emailMessage(\"emailMessage\")\n                        .emailSubject(\"emailSubject\")\n                        .smsMessage(\"smsMessage\")\n                        .build())\n                .unusedAccountValidityDays(123)\n                .build())\n        .aliasAttributes(List.of(\"aliasAttributes\"))\n        .autoVerifiedAttributes(List.of(\"autoVerifiedAttributes\"))\n        .deletionProtection(\"deletionProtection\")\n        .deviceConfiguration(DeviceConfigurationProperty.builder()\n                .challengeRequiredOnNewDevice(false)\n                .deviceOnlyRememberedOnUserPrompt(false)\n                .build())\n        .emailConfiguration(EmailConfigurationProperty.builder()\n                .configurationSet(\"configurationSet\")\n                .emailSendingAccount(\"emailSendingAccount\")\n                .from(\"from\")\n                .replyToEmailAddress(\"replyToEmailAddress\")\n                .sourceArn(\"sourceArn\")\n                .build())\n        .emailVerificationMessage(\"emailVerificationMessage\")\n        .emailVerificationSubject(\"emailVerificationSubject\")\n        .enabledMfas(List.of(\"enabledMfas\"))\n        .lambdaConfig(LambdaConfigProperty.builder()\n                .createAuthChallenge(\"createAuthChallenge\")\n                .customEmailSender(CustomEmailSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .customMessage(\"customMessage\")\n                .customSmsSender(CustomSMSSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .defineAuthChallenge(\"defineAuthChallenge\")\n                .kmsKeyId(\"kmsKeyId\")\n                .postAuthentication(\"postAuthentication\")\n                .postConfirmation(\"postConfirmation\")\n                .preAuthentication(\"preAuthentication\")\n                .preSignUp(\"preSignUp\")\n                .preTokenGeneration(\"preTokenGeneration\")\n                .userMigration(\"userMigration\")\n                .verifyAuthChallengeResponse(\"verifyAuthChallengeResponse\")\n                .build())\n        .mfaConfiguration(\"mfaConfiguration\")\n        .policies(PoliciesProperty.builder()\n                .passwordPolicy(PasswordPolicyProperty.builder()\n                        .minimumLength(123)\n                        .requireLowercase(false)\n                        .requireNumbers(false)\n                        .requireSymbols(false)\n                        .requireUppercase(false)\n                        .temporaryPasswordValidityDays(123)\n                        .build())\n                .build())\n        .schema(List.of(SchemaAttributeProperty.builder()\n                .attributeDataType(\"attributeDataType\")\n                .developerOnlyAttribute(false)\n                .mutable(false)\n                .name(\"name\")\n                .numberAttributeConstraints(NumberAttributeConstraintsProperty.builder()\n                        .maxValue(\"maxValue\")\n                        .minValue(\"minValue\")\n                        .build())\n                .required(false)\n                .stringAttributeConstraints(StringAttributeConstraintsProperty.builder()\n                        .maxLength(\"maxLength\")\n                        .minLength(\"minLength\")\n                        .build())\n                .build()))\n        .smsAuthenticationMessage(\"smsAuthenticationMessage\")\n        .smsConfiguration(SmsConfigurationProperty.builder()\n                .externalId(\"externalId\")\n                .snsCallerArn(\"snsCallerArn\")\n                .snsRegion(\"snsRegion\")\n                .build())\n        .smsVerificationMessage(\"smsVerificationMessage\")\n        .userAttributeUpdateSettings(UserAttributeUpdateSettingsProperty.builder()\n                .attributesRequireVerificationBeforeUpdate(List.of(\"attributesRequireVerificationBeforeUpdate\"))\n                .build())\n        .usernameAttributes(List.of(\"usernameAttributes\"))\n        .usernameConfiguration(UsernameConfigurationProperty.builder()\n                .caseSensitive(false)\n                .build())\n        .userPoolAddOns(UserPoolAddOnsProperty.builder()\n                .advancedSecurityMode(\"advancedSecurityMode\")\n                .build())\n        .userPoolName(\"userPoolName\")\n        .userPoolTags(userPoolTags)\n        .verificationMessageTemplate(VerificationMessageTemplateProperty.builder()\n                .defaultEmailOption(\"defaultEmailOption\")\n                .emailMessage(\"emailMessage\")\n                .emailMessageByLink(\"emailMessageByLink\")\n                .emailSubject(\"emailSubject\")\n                .emailSubjectByLink(\"emailSubjectByLink\")\n                .smsMessage(\"smsMessage\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar userPoolTags interface{}\n\ncfnUserPoolProps := &CfnUserPoolProps{\n\tAccountRecoverySetting: &AccountRecoverySettingProperty{\n\t\tRecoveryMechanisms: []interface{}{\n\t\t\t&RecoveryOptionProperty{\n\t\t\t\tName: jsii.String(\"name\"),\n\t\t\t\tPriority: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tAdminCreateUserConfig: &AdminCreateUserConfigProperty{\n\t\tAllowAdminCreateUserOnly: jsii.Boolean(false),\n\t\tInviteMessageTemplate: &InviteMessageTemplateProperty{\n\t\t\tEmailMessage: jsii.String(\"emailMessage\"),\n\t\t\tEmailSubject: jsii.String(\"emailSubject\"),\n\t\t\tSmsMessage: jsii.String(\"smsMessage\"),\n\t\t},\n\t\tUnusedAccountValidityDays: jsii.Number(123),\n\t},\n\tAliasAttributes: []*string{\n\t\tjsii.String(\"aliasAttributes\"),\n\t},\n\tAutoVerifiedAttributes: []*string{\n\t\tjsii.String(\"autoVerifiedAttributes\"),\n\t},\n\tDeletionProtection: jsii.String(\"deletionProtection\"),\n\tDeviceConfiguration: &DeviceConfigurationProperty{\n\t\tChallengeRequiredOnNewDevice: jsii.Boolean(false),\n\t\tDeviceOnlyRememberedOnUserPrompt: jsii.Boolean(false),\n\t},\n\tEmailConfiguration: &EmailConfigurationProperty{\n\t\tConfigurationSet: jsii.String(\"configurationSet\"),\n\t\tEmailSendingAccount: jsii.String(\"emailSendingAccount\"),\n\t\tFrom: jsii.String(\"from\"),\n\t\tReplyToEmailAddress: jsii.String(\"replyToEmailAddress\"),\n\t\tSourceArn: jsii.String(\"sourceArn\"),\n\t},\n\tEmailVerificationMessage: jsii.String(\"emailVerificationMessage\"),\n\tEmailVerificationSubject: jsii.String(\"emailVerificationSubject\"),\n\tEnabledMfas: []*string{\n\t\tjsii.String(\"enabledMfas\"),\n\t},\n\tLambdaConfig: &LambdaConfigProperty{\n\t\tCreateAuthChallenge: jsii.String(\"createAuthChallenge\"),\n\t\tCustomEmailSender: &CustomEmailSenderProperty{\n\t\t\tLambdaArn: jsii.String(\"lambdaArn\"),\n\t\t\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n\t\t},\n\t\tCustomMessage: jsii.String(\"customMessage\"),\n\t\tCustomSmsSender: &CustomSMSSenderProperty{\n\t\t\tLambdaArn: jsii.String(\"lambdaArn\"),\n\t\t\tLambdaVersion: jsii.String(\"lambdaVersion\"),\n\t\t},\n\t\tDefineAuthChallenge: jsii.String(\"defineAuthChallenge\"),\n\t\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\tPostAuthentication: jsii.String(\"postAuthentication\"),\n\t\tPostConfirmation: jsii.String(\"postConfirmation\"),\n\t\tPreAuthentication: jsii.String(\"preAuthentication\"),\n\t\tPreSignUp: jsii.String(\"preSignUp\"),\n\t\tPreTokenGeneration: jsii.String(\"preTokenGeneration\"),\n\t\tUserMigration: jsii.String(\"userMigration\"),\n\t\tVerifyAuthChallengeResponse: jsii.String(\"verifyAuthChallengeResponse\"),\n\t},\n\tMfaConfiguration: jsii.String(\"mfaConfiguration\"),\n\tPolicies: &PoliciesProperty{\n\t\tPasswordPolicy: &PasswordPolicyProperty{\n\t\t\tMinimumLength: jsii.Number(123),\n\t\t\tRequireLowercase: jsii.Boolean(false),\n\t\t\tRequireNumbers: jsii.Boolean(false),\n\t\t\tRequireSymbols: jsii.Boolean(false),\n\t\t\tRequireUppercase: jsii.Boolean(false),\n\t\t\tTemporaryPasswordValidityDays: jsii.Number(123),\n\t\t},\n\t},\n\tSchema: []interface{}{\n\t\t&SchemaAttributeProperty{\n\t\t\tAttributeDataType: jsii.String(\"attributeDataType\"),\n\t\t\tDeveloperOnlyAttribute: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tNumberAttributeConstraints: &NumberAttributeConstraintsProperty{\n\t\t\t\tMaxValue: jsii.String(\"maxValue\"),\n\t\t\t\tMinValue: jsii.String(\"minValue\"),\n\t\t\t},\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tStringAttributeConstraints: &StringAttributeConstraintsProperty{\n\t\t\t\tMaxLength: jsii.String(\"maxLength\"),\n\t\t\t\tMinLength: jsii.String(\"minLength\"),\n\t\t\t},\n\t\t},\n\t},\n\tSmsAuthenticationMessage: jsii.String(\"smsAuthenticationMessage\"),\n\tSmsConfiguration: &SmsConfigurationProperty{\n\t\tExternalId: jsii.String(\"externalId\"),\n\t\tSnsCallerArn: jsii.String(\"snsCallerArn\"),\n\t\tSnsRegion: jsii.String(\"snsRegion\"),\n\t},\n\tSmsVerificationMessage: jsii.String(\"smsVerificationMessage\"),\n\tUserAttributeUpdateSettings: &UserAttributeUpdateSettingsProperty{\n\t\tAttributesRequireVerificationBeforeUpdate: []*string{\n\t\t\tjsii.String(\"attributesRequireVerificationBeforeUpdate\"),\n\t\t},\n\t},\n\tUsernameAttributes: []*string{\n\t\tjsii.String(\"usernameAttributes\"),\n\t},\n\tUsernameConfiguration: &UsernameConfigurationProperty{\n\t\tCaseSensitive: jsii.Boolean(false),\n\t},\n\tUserPoolAddOns: &UserPoolAddOnsProperty{\n\t\tAdvancedSecurityMode: jsii.String(\"advancedSecurityMode\"),\n\t},\n\tUserPoolName: jsii.String(\"userPoolName\"),\n\tUserPoolTags: userPoolTags,\n\tVerificationMessageTemplate: &VerificationMessageTemplateProperty{\n\t\tDefaultEmailOption: jsii.String(\"defaultEmailOption\"),\n\t\tEmailMessage: jsii.String(\"emailMessage\"),\n\t\tEmailMessageByLink: jsii.String(\"emailMessageByLink\"),\n\t\tEmailSubject: jsii.String(\"emailSubject\"),\n\t\tEmailSubjectByLink: jsii.String(\"emailSubjectByLink\"),\n\t\tSmsMessage: jsii.String(\"smsMessage\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\nconst cfnUserPoolProps: cognito.CfnUserPoolProps = {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deletionProtection: 'deletionProtection',\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n    snsRegion: 'snsRegion',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  userAttributeUpdateSettings: {\n    attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n  },\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolProps: cognito.CfnUserPoolProps = {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deletionProtection: 'deletionProtection',\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n    snsRegion: 'snsRegion',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  userAttributeUpdateSettings: {\n    attributesRequireVerificationBeforeUpdate: ['attributesRequireVerificationBeforeUpdate'],\n  },\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":53,"75":93,"91":11,"125":1,"130":1,"153":1,"169":1,"192":7,"193":20,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":87,"290":1},"fqnsFingerprint":"26b4420e7811cc418b7b0e728642f1f2f1ec8d26bc6d3f2a4980c005c70a4517"},"dbb2e8ecb6794a3b90035fcfb0eaa73228f571fcfeba2d48a1795cc0444116bd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_resource_server = cognito.CfnUserPoolResourceServer(self, \"MyCfnUserPoolResourceServer\",\n    identifier=\"identifier\",\n    name=\"name\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    scopes=[cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty(\n        scope_description=\"scopeDescription\",\n        scope_name=\"scopeName\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolResourceServer = new CfnUserPoolResourceServer(this, \"MyCfnUserPoolResourceServer\", new CfnUserPoolResourceServerProps {\n    Identifier = \"identifier\",\n    Name = \"name\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Scopes = new [] { new ResourceServerScopeTypeProperty {\n        ScopeDescription = \"scopeDescription\",\n        ScopeName = \"scopeName\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolResourceServer cfnUserPoolResourceServer = CfnUserPoolResourceServer.Builder.create(this, \"MyCfnUserPoolResourceServer\")\n        .identifier(\"identifier\")\n        .name(\"name\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .scopes(List.of(ResourceServerScopeTypeProperty.builder()\n                .scopeDescription(\"scopeDescription\")\n                .scopeName(\"scopeName\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolResourceServer := cognito.NewCfnUserPoolResourceServer(this, jsii.String(\"MyCfnUserPoolResourceServer\"), &CfnUserPoolResourceServerProps{\n\tIdentifier: jsii.String(\"identifier\"),\n\tName: jsii.String(\"name\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tScopes: []interface{}{\n\t\t&ResourceServerScopeTypeProperty{\n\t\t\tScopeDescription: jsii.String(\"scopeDescription\"),\n\t\t\tScopeName: jsii.String(\"scopeName\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolResourceServer = new cognito.CfnUserPoolResourceServer(this, 'MyCfnUserPoolResourceServer', {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolResourceServer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolResourceServer","@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolResourceServer = new cognito.CfnUserPoolResourceServer(this, 'MyCfnUserPoolResourceServer', {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":10,"104":1,"192":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"59f3c524e56e3065374f63c147f98d84837455f8dbc88e4a4b6c964434048552"},"4f099ce184d61b020b9095c40c3525e03bddefed1398a51fde7834ee1067a873":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nresource_server_scope_type_property = cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty(\n    scope_description=\"scopeDescription\",\n    scope_name=\"scopeName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar resourceServerScopeTypeProperty = new ResourceServerScopeTypeProperty {\n    ScopeDescription = \"scopeDescription\",\n    ScopeName = \"scopeName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nResourceServerScopeTypeProperty resourceServerScopeTypeProperty = ResourceServerScopeTypeProperty.builder()\n        .scopeDescription(\"scopeDescription\")\n        .scopeName(\"scopeName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nresourceServerScopeTypeProperty := &ResourceServerScopeTypeProperty{\n\tScopeDescription: jsii.String(\"scopeDescription\"),\n\tScopeName: jsii.String(\"scopeName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst resourceServerScopeTypeProperty: cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceServerScopeTypeProperty: cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"60c347c4210fe5b81429b59372271487f8eea2bde939a980400e5d9e3eb94618"},"d1276f573458b5d67a90dcee36c0199d5fd604955f3f0cb0b31004bbb795ff88":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_resource_server_props = cognito.CfnUserPoolResourceServerProps(\n    identifier=\"identifier\",\n    name=\"name\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    scopes=[cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty(\n        scope_description=\"scopeDescription\",\n        scope_name=\"scopeName\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolResourceServerProps = new CfnUserPoolResourceServerProps {\n    Identifier = \"identifier\",\n    Name = \"name\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Scopes = new [] { new ResourceServerScopeTypeProperty {\n        ScopeDescription = \"scopeDescription\",\n        ScopeName = \"scopeName\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolResourceServerProps cfnUserPoolResourceServerProps = CfnUserPoolResourceServerProps.builder()\n        .identifier(\"identifier\")\n        .name(\"name\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .scopes(List.of(ResourceServerScopeTypeProperty.builder()\n                .scopeDescription(\"scopeDescription\")\n                .scopeName(\"scopeName\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolResourceServerProps := &CfnUserPoolResourceServerProps{\n\tIdentifier: jsii.String(\"identifier\"),\n\tName: jsii.String(\"name\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tScopes: []interface{}{\n\t\t&ResourceServerScopeTypeProperty{\n\t\t\tScopeDescription: jsii.String(\"scopeDescription\"),\n\t\t\tScopeName: jsii.String(\"scopeName\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolResourceServerProps: cognito.CfnUserPoolResourceServerProps = {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolResourceServerProps: cognito.CfnUserPoolResourceServerProps = {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":1,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"42962b8b42e1b29aa51ac06caf548564cf3b25021e70c5649f1ab350d2a13981"},"d456993781f382653b2731702a69a88b0622bcafc0ffebec3a1386df77976b6a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_risk_configuration_attachment = cognito.CfnUserPoolRiskConfigurationAttachment(self, \"MyCfnUserPoolRiskConfigurationAttachment\",\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    account_takeover_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n            high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            )\n        ),\n\n        # the properties below are optional\n        notify_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n            source_arn=\"sourceArn\",\n\n            # the properties below are optional\n            block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            from=\"from\",\n            mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            reply_to=\"replyTo\"\n        )\n    ),\n    compromised_credentials_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n            event_action=\"eventAction\"\n        ),\n\n        # the properties below are optional\n        event_filter=[\"eventFilter\"]\n    ),\n    risk_exception_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty(\n        blocked_ip_range_list=[\"blockedIpRangeList\"],\n        skipped_ip_range_list=[\"skippedIpRangeList\"]\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolRiskConfigurationAttachment = new CfnUserPoolRiskConfigurationAttachment(this, \"MyCfnUserPoolRiskConfigurationAttachment\", new CfnUserPoolRiskConfigurationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AccountTakeoverRiskConfiguration = new AccountTakeoverRiskConfigurationTypeProperty {\n        Actions = new AccountTakeoverActionsTypeProperty {\n            HighAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            LowAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            MediumAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            }\n        },\n\n        // the properties below are optional\n        NotifyConfiguration = new NotifyConfigurationTypeProperty {\n            SourceArn = \"sourceArn\",\n\n            // the properties below are optional\n            BlockEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            From = \"from\",\n            MfaEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            NoActionEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            ReplyTo = \"replyTo\"\n        }\n    },\n    CompromisedCredentialsRiskConfiguration = new CompromisedCredentialsRiskConfigurationTypeProperty {\n        Actions = new CompromisedCredentialsActionsTypeProperty {\n            EventAction = \"eventAction\"\n        },\n\n        // the properties below are optional\n        EventFilter = new [] { \"eventFilter\" }\n    },\n    RiskExceptionConfiguration = new RiskExceptionConfigurationTypeProperty {\n        BlockedIpRangeList = new [] { \"blockedIpRangeList\" },\n        SkippedIpRangeList = new [] { \"skippedIpRangeList\" }\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolRiskConfigurationAttachment cfnUserPoolRiskConfigurationAttachment = CfnUserPoolRiskConfigurationAttachment.Builder.create(this, \"MyCfnUserPoolRiskConfigurationAttachment\")\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .accountTakeoverRiskConfiguration(AccountTakeoverRiskConfigurationTypeProperty.builder()\n                .actions(AccountTakeoverActionsTypeProperty.builder()\n                        .highAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .lowAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .notifyConfiguration(NotifyConfigurationTypeProperty.builder()\n                        .sourceArn(\"sourceArn\")\n\n                        // the properties below are optional\n                        .blockEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .from(\"from\")\n                        .mfaEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .noActionEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .replyTo(\"replyTo\")\n                        .build())\n                .build())\n        .compromisedCredentialsRiskConfiguration(CompromisedCredentialsRiskConfigurationTypeProperty.builder()\n                .actions(CompromisedCredentialsActionsTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .build())\n\n                // the properties below are optional\n                .eventFilter(List.of(\"eventFilter\"))\n                .build())\n        .riskExceptionConfiguration(RiskExceptionConfigurationTypeProperty.builder()\n                .blockedIpRangeList(List.of(\"blockedIpRangeList\"))\n                .skippedIpRangeList(List.of(\"skippedIpRangeList\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolRiskConfigurationAttachment := cognito.NewCfnUserPoolRiskConfigurationAttachment(this, jsii.String(\"MyCfnUserPoolRiskConfigurationAttachment\"), &CfnUserPoolRiskConfigurationAttachmentProps{\n\tClientId: jsii.String(\"clientId\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tAccountTakeoverRiskConfiguration: &AccountTakeoverRiskConfigurationTypeProperty{\n\t\tActions: &AccountTakeoverActionsTypeProperty{\n\t\t\tHighAction: &AccountTakeoverActionTypeProperty{\n\t\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\t\tNotify: jsii.Boolean(false),\n\t\t\t},\n\t\t\tLowAction: &AccountTakeoverActionTypeProperty{\n\t\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\t\tNotify: jsii.Boolean(false),\n\t\t\t},\n\t\t\tMediumAction: &AccountTakeoverActionTypeProperty{\n\t\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\t\tNotify: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tNotifyConfiguration: &NotifyConfigurationTypeProperty{\n\t\t\tSourceArn: jsii.String(\"sourceArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tBlockEmail: &NotifyEmailTypeProperty{\n\t\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t\t},\n\t\t\tFrom: jsii.String(\"from\"),\n\t\t\tMfaEmail: &NotifyEmailTypeProperty{\n\t\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t\t},\n\t\t\tNoActionEmail: &NotifyEmailTypeProperty{\n\t\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t\t},\n\t\t\tReplyTo: jsii.String(\"replyTo\"),\n\t\t},\n\t},\n\tCompromisedCredentialsRiskConfiguration: &CompromisedCredentialsRiskConfigurationTypeProperty{\n\t\tActions: &CompromisedCredentialsActionsTypeProperty{\n\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tEventFilter: []*string{\n\t\t\tjsii.String(\"eventFilter\"),\n\t\t},\n\t},\n\tRiskExceptionConfiguration: &RiskExceptionConfigurationTypeProperty{\n\t\tBlockedIpRangeList: []*string{\n\t\t\tjsii.String(\"blockedIpRangeList\"),\n\t\t},\n\t\tSkippedIpRangeList: []*string{\n\t\t\tjsii.String(\"skippedIpRangeList\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolRiskConfigurationAttachment = new cognito.CfnUserPoolRiskConfigurationAttachment(this, 'MyCfnUserPoolRiskConfigurationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment","@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolRiskConfigurationAttachment = new cognito.CfnUserPoolRiskConfigurationAttachment(this, 'MyCfnUserPoolRiskConfigurationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":23,"75":40,"91":3,"104":1,"192":3,"193":13,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":36,"290":1},"fqnsFingerprint":"6b798612a36c3f161936cf249febe692ccdc2196fe8f3f4efef98781ee8c1be9"},"572a372dd53331acf3e760276085ffafe55be27601a458425f10069b85979925":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_takeover_action_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n    event_action=\"eventAction\",\n    notify=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar accountTakeoverActionTypeProperty = new AccountTakeoverActionTypeProperty {\n    EventAction = \"eventAction\",\n    Notify = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountTakeoverActionTypeProperty accountTakeoverActionTypeProperty = AccountTakeoverActionTypeProperty.builder()\n        .eventAction(\"eventAction\")\n        .notify(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\naccountTakeoverActionTypeProperty := &AccountTakeoverActionTypeProperty{\n\tEventAction: jsii.String(\"eventAction\"),\n\tNotify: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverActionTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty = {\n  eventAction: 'eventAction',\n  notify: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountTakeoverActionTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty = {\n  eventAction: 'eventAction',\n  notify: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"17dab47d25a9b48b27934c3727450a918c1ef79dec94847a61f2eec7942f13f7"},"5db4f96ad547706394fad08feca6e6f62066fbc3e6bbf132d3134280bbf9a082":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_takeover_actions_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n    high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n        event_action=\"eventAction\",\n        notify=False\n    ),\n    low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n        event_action=\"eventAction\",\n        notify=False\n    ),\n    medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n        event_action=\"eventAction\",\n        notify=False\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar accountTakeoverActionsTypeProperty = new AccountTakeoverActionsTypeProperty {\n    HighAction = new AccountTakeoverActionTypeProperty {\n        EventAction = \"eventAction\",\n        Notify = false\n    },\n    LowAction = new AccountTakeoverActionTypeProperty {\n        EventAction = \"eventAction\",\n        Notify = false\n    },\n    MediumAction = new AccountTakeoverActionTypeProperty {\n        EventAction = \"eventAction\",\n        Notify = false\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountTakeoverActionsTypeProperty accountTakeoverActionsTypeProperty = AccountTakeoverActionsTypeProperty.builder()\n        .highAction(AccountTakeoverActionTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .notify(false)\n                .build())\n        .lowAction(AccountTakeoverActionTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .notify(false)\n                .build())\n        .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .notify(false)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\naccountTakeoverActionsTypeProperty := &AccountTakeoverActionsTypeProperty{\n\tHighAction: &AccountTakeoverActionTypeProperty{\n\t\tEventAction: jsii.String(\"eventAction\"),\n\t\tNotify: jsii.Boolean(false),\n\t},\n\tLowAction: &AccountTakeoverActionTypeProperty{\n\t\tEventAction: jsii.String(\"eventAction\"),\n\t\tNotify: jsii.Boolean(false),\n\t},\n\tMediumAction: &AccountTakeoverActionTypeProperty{\n\t\tEventAction: jsii.String(\"eventAction\"),\n\t\tNotify: jsii.Boolean(false),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty = {\n  highAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  lowAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  mediumAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountTakeoverActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty = {\n  highAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  lowAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  mediumAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":14,"91":3,"153":2,"169":1,"193":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"051336ab1da679709efd463ca5347052147b62c805cc388cf256f75a6731775d"},"3d05e1b7acc04f336efc2d061852ccd757995a01ef5aa16346348d4b04af482d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_takeover_risk_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty(\n    actions=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n        high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n            event_action=\"eventAction\",\n            notify=False\n        ),\n        low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n            event_action=\"eventAction\",\n            notify=False\n        ),\n        medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n            event_action=\"eventAction\",\n            notify=False\n        )\n    ),\n\n    # the properties below are optional\n    notify_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n        source_arn=\"sourceArn\",\n\n        # the properties below are optional\n        block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n            subject=\"subject\",\n\n            # the properties below are optional\n            html_body=\"htmlBody\",\n            text_body=\"textBody\"\n        ),\n        from=\"from\",\n        mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n            subject=\"subject\",\n\n            # the properties below are optional\n            html_body=\"htmlBody\",\n            text_body=\"textBody\"\n        ),\n        no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n            subject=\"subject\",\n\n            # the properties below are optional\n            html_body=\"htmlBody\",\n            text_body=\"textBody\"\n        ),\n        reply_to=\"replyTo\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar accountTakeoverRiskConfigurationTypeProperty = new AccountTakeoverRiskConfigurationTypeProperty {\n    Actions = new AccountTakeoverActionsTypeProperty {\n        HighAction = new AccountTakeoverActionTypeProperty {\n            EventAction = \"eventAction\",\n            Notify = false\n        },\n        LowAction = new AccountTakeoverActionTypeProperty {\n            EventAction = \"eventAction\",\n            Notify = false\n        },\n        MediumAction = new AccountTakeoverActionTypeProperty {\n            EventAction = \"eventAction\",\n            Notify = false\n        }\n    },\n\n    // the properties below are optional\n    NotifyConfiguration = new NotifyConfigurationTypeProperty {\n        SourceArn = \"sourceArn\",\n\n        // the properties below are optional\n        BlockEmail = new NotifyEmailTypeProperty {\n            Subject = \"subject\",\n\n            // the properties below are optional\n            HtmlBody = \"htmlBody\",\n            TextBody = \"textBody\"\n        },\n        From = \"from\",\n        MfaEmail = new NotifyEmailTypeProperty {\n            Subject = \"subject\",\n\n            // the properties below are optional\n            HtmlBody = \"htmlBody\",\n            TextBody = \"textBody\"\n        },\n        NoActionEmail = new NotifyEmailTypeProperty {\n            Subject = \"subject\",\n\n            // the properties below are optional\n            HtmlBody = \"htmlBody\",\n            TextBody = \"textBody\"\n        },\n        ReplyTo = \"replyTo\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountTakeoverRiskConfigurationTypeProperty accountTakeoverRiskConfigurationTypeProperty = AccountTakeoverRiskConfigurationTypeProperty.builder()\n        .actions(AccountTakeoverActionsTypeProperty.builder()\n                .highAction(AccountTakeoverActionTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .notify(false)\n                        .build())\n                .lowAction(AccountTakeoverActionTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .notify(false)\n                        .build())\n                .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .notify(false)\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .notifyConfiguration(NotifyConfigurationTypeProperty.builder()\n                .sourceArn(\"sourceArn\")\n\n                // the properties below are optional\n                .blockEmail(NotifyEmailTypeProperty.builder()\n                        .subject(\"subject\")\n\n                        // the properties below are optional\n                        .htmlBody(\"htmlBody\")\n                        .textBody(\"textBody\")\n                        .build())\n                .from(\"from\")\n                .mfaEmail(NotifyEmailTypeProperty.builder()\n                        .subject(\"subject\")\n\n                        // the properties below are optional\n                        .htmlBody(\"htmlBody\")\n                        .textBody(\"textBody\")\n                        .build())\n                .noActionEmail(NotifyEmailTypeProperty.builder()\n                        .subject(\"subject\")\n\n                        // the properties below are optional\n                        .htmlBody(\"htmlBody\")\n                        .textBody(\"textBody\")\n                        .build())\n                .replyTo(\"replyTo\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\naccountTakeoverRiskConfigurationTypeProperty := &AccountTakeoverRiskConfigurationTypeProperty{\n\tActions: &AccountTakeoverActionsTypeProperty{\n\t\tHighAction: &AccountTakeoverActionTypeProperty{\n\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\tNotify: jsii.Boolean(false),\n\t\t},\n\t\tLowAction: &AccountTakeoverActionTypeProperty{\n\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\tNotify: jsii.Boolean(false),\n\t\t},\n\t\tMediumAction: &AccountTakeoverActionTypeProperty{\n\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\tNotify: jsii.Boolean(false),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tNotifyConfiguration: &NotifyConfigurationTypeProperty{\n\t\tSourceArn: jsii.String(\"sourceArn\"),\n\n\t\t// the properties below are optional\n\t\tBlockEmail: &NotifyEmailTypeProperty{\n\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t// the properties below are optional\n\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t},\n\t\tFrom: jsii.String(\"from\"),\n\t\tMfaEmail: &NotifyEmailTypeProperty{\n\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t// the properties below are optional\n\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t},\n\t\tNoActionEmail: &NotifyEmailTypeProperty{\n\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t// the properties below are optional\n\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t},\n\t\tReplyTo: jsii.String(\"replyTo\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty = {\n  actions: {\n    highAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    lowAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    mediumAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n  },\n\n  // the properties below are optional\n  notifyConfiguration: {\n    sourceArn: 'sourceArn',\n\n    // the properties below are optional\n    blockEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    from: 'from',\n    mfaEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    noActionEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    replyTo: 'replyTo',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountTakeoverRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty = {\n  actions: {\n    highAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    lowAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    mediumAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n  },\n\n  // the properties below are optional\n  notifyConfiguration: {\n    sourceArn: 'sourceArn',\n\n    // the properties below are optional\n    blockEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    from: 'from',\n    mfaEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    noActionEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    replyTo: 'replyTo',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":16,"75":31,"91":3,"153":2,"169":1,"193":9,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":26,"290":1},"fqnsFingerprint":"4425329356c283aa987955d01d5cdd35a5293815d19f4b9445699eb42ed95585"},"3b6ebab39586fa8bfe025f5ac8438988124af96b97548b4b87958e39f2dec075":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncompromised_credentials_actions_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n    event_action=\"eventAction\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar compromisedCredentialsActionsTypeProperty = new CompromisedCredentialsActionsTypeProperty {\n    EventAction = \"eventAction\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCompromisedCredentialsActionsTypeProperty compromisedCredentialsActionsTypeProperty = CompromisedCredentialsActionsTypeProperty.builder()\n        .eventAction(\"eventAction\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncompromisedCredentialsActionsTypeProperty := &CompromisedCredentialsActionsTypeProperty{\n\tEventAction: jsii.String(\"eventAction\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst compromisedCredentialsActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty = {\n  eventAction: 'eventAction',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst compromisedCredentialsActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty = {\n  eventAction: 'eventAction',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"44188044503bda8c547eb2d1379995969558f256dcaf30738a2496c7097fc358"},"09a63de186975c0ae200ec4b47bffccffee11fda17e9f0256fc2f2f545d2cffc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncompromised_credentials_risk_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty(\n    actions=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n        event_action=\"eventAction\"\n    ),\n\n    # the properties below are optional\n    event_filter=[\"eventFilter\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar compromisedCredentialsRiskConfigurationTypeProperty = new CompromisedCredentialsRiskConfigurationTypeProperty {\n    Actions = new CompromisedCredentialsActionsTypeProperty {\n        EventAction = \"eventAction\"\n    },\n\n    // the properties below are optional\n    EventFilter = new [] { \"eventFilter\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCompromisedCredentialsRiskConfigurationTypeProperty compromisedCredentialsRiskConfigurationTypeProperty = CompromisedCredentialsRiskConfigurationTypeProperty.builder()\n        .actions(CompromisedCredentialsActionsTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .build())\n\n        // the properties below are optional\n        .eventFilter(List.of(\"eventFilter\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncompromisedCredentialsRiskConfigurationTypeProperty := &CompromisedCredentialsRiskConfigurationTypeProperty{\n\tActions: &CompromisedCredentialsActionsTypeProperty{\n\t\tEventAction: jsii.String(\"eventAction\"),\n\t},\n\n\t// the properties below are optional\n\tEventFilter: []*string{\n\t\tjsii.String(\"eventFilter\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst compromisedCredentialsRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty = {\n  actions: {\n    eventAction: 'eventAction',\n  },\n\n  // the properties below are optional\n  eventFilter: ['eventFilter'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst compromisedCredentialsRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty = {\n  actions: {\n    eventAction: 'eventAction',\n  },\n\n  // the properties below are optional\n  eventFilter: ['eventFilter'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"87aae749049bd9d69084b25f0d80d703310a746ede3524e1ca67e3371c2b5eb7"},"6cbc6197063a725da7a7cbc24bec5d6d153f7cf5b6fe08913358d39286cb8e97":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnotify_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n    source_arn=\"sourceArn\",\n\n    # the properties below are optional\n    block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n        subject=\"subject\",\n\n        # the properties below are optional\n        html_body=\"htmlBody\",\n        text_body=\"textBody\"\n    ),\n    from=\"from\",\n    mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n        subject=\"subject\",\n\n        # the properties below are optional\n        html_body=\"htmlBody\",\n        text_body=\"textBody\"\n    ),\n    no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n        subject=\"subject\",\n\n        # the properties below are optional\n        html_body=\"htmlBody\",\n        text_body=\"textBody\"\n    ),\n    reply_to=\"replyTo\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar notifyConfigurationTypeProperty = new NotifyConfigurationTypeProperty {\n    SourceArn = \"sourceArn\",\n\n    // the properties below are optional\n    BlockEmail = new NotifyEmailTypeProperty {\n        Subject = \"subject\",\n\n        // the properties below are optional\n        HtmlBody = \"htmlBody\",\n        TextBody = \"textBody\"\n    },\n    From = \"from\",\n    MfaEmail = new NotifyEmailTypeProperty {\n        Subject = \"subject\",\n\n        // the properties below are optional\n        HtmlBody = \"htmlBody\",\n        TextBody = \"textBody\"\n    },\n    NoActionEmail = new NotifyEmailTypeProperty {\n        Subject = \"subject\",\n\n        // the properties below are optional\n        HtmlBody = \"htmlBody\",\n        TextBody = \"textBody\"\n    },\n    ReplyTo = \"replyTo\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNotifyConfigurationTypeProperty notifyConfigurationTypeProperty = NotifyConfigurationTypeProperty.builder()\n        .sourceArn(\"sourceArn\")\n\n        // the properties below are optional\n        .blockEmail(NotifyEmailTypeProperty.builder()\n                .subject(\"subject\")\n\n                // the properties below are optional\n                .htmlBody(\"htmlBody\")\n                .textBody(\"textBody\")\n                .build())\n        .from(\"from\")\n        .mfaEmail(NotifyEmailTypeProperty.builder()\n                .subject(\"subject\")\n\n                // the properties below are optional\n                .htmlBody(\"htmlBody\")\n                .textBody(\"textBody\")\n                .build())\n        .noActionEmail(NotifyEmailTypeProperty.builder()\n                .subject(\"subject\")\n\n                // the properties below are optional\n                .htmlBody(\"htmlBody\")\n                .textBody(\"textBody\")\n                .build())\n        .replyTo(\"replyTo\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nnotifyConfigurationTypeProperty := &NotifyConfigurationTypeProperty{\n\tSourceArn: jsii.String(\"sourceArn\"),\n\n\t// the properties below are optional\n\tBlockEmail: &NotifyEmailTypeProperty{\n\t\tSubject: jsii.String(\"subject\"),\n\n\t\t// the properties below are optional\n\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\tTextBody: jsii.String(\"textBody\"),\n\t},\n\tFrom: jsii.String(\"from\"),\n\tMfaEmail: &NotifyEmailTypeProperty{\n\t\tSubject: jsii.String(\"subject\"),\n\n\t\t// the properties below are optional\n\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\tTextBody: jsii.String(\"textBody\"),\n\t},\n\tNoActionEmail: &NotifyEmailTypeProperty{\n\t\tSubject: jsii.String(\"subject\"),\n\n\t\t// the properties below are optional\n\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\tTextBody: jsii.String(\"textBody\"),\n\t},\n\tReplyTo: jsii.String(\"replyTo\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst notifyConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty = {\n  sourceArn: 'sourceArn',\n\n  // the properties below are optional\n  blockEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  from: 'from',\n  mfaEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  noActionEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  replyTo: 'replyTo',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notifyConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty = {\n  sourceArn: 'sourceArn',\n\n  // the properties below are optional\n  blockEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  from: 'from',\n  mfaEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  noActionEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  replyTo: 'replyTo',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":13,"75":20,"153":2,"169":1,"193":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":15,"290":1},"fqnsFingerprint":"bd85c793a3de1baf1f63d89ad43dece61254b5aad2cc90d39526be616ee16246"},"9f008ce6844c60d39b2b9553809d35e0a41a4c8d60be66ac045f1860d1066fef":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnotify_email_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n    subject=\"subject\",\n\n    # the properties below are optional\n    html_body=\"htmlBody\",\n    text_body=\"textBody\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar notifyEmailTypeProperty = new NotifyEmailTypeProperty {\n    Subject = \"subject\",\n\n    // the properties below are optional\n    HtmlBody = \"htmlBody\",\n    TextBody = \"textBody\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNotifyEmailTypeProperty notifyEmailTypeProperty = NotifyEmailTypeProperty.builder()\n        .subject(\"subject\")\n\n        // the properties below are optional\n        .htmlBody(\"htmlBody\")\n        .textBody(\"textBody\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nnotifyEmailTypeProperty := &NotifyEmailTypeProperty{\n\tSubject: jsii.String(\"subject\"),\n\n\t// the properties below are optional\n\tHtmlBody: jsii.String(\"htmlBody\"),\n\tTextBody: jsii.String(\"textBody\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst notifyEmailTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty = {\n  subject: 'subject',\n\n  // the properties below are optional\n  htmlBody: 'htmlBody',\n  textBody: 'textBody',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notifyEmailTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty = {\n  subject: 'subject',\n\n  // the properties below are optional\n  htmlBody: 'htmlBody',\n  textBody: 'textBody',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"3d3eee0723a5c00c46ef494a6c7c4de847b66cf350a85902133d9fe3ab48df51"},"01e4d09a47289b73cd9a32c16a3eb5805abb3bdf313f24fe305e45ffecf16a4d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrisk_exception_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty(\n    blocked_ip_range_list=[\"blockedIpRangeList\"],\n    skipped_ip_range_list=[\"skippedIpRangeList\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar riskExceptionConfigurationTypeProperty = new RiskExceptionConfigurationTypeProperty {\n    BlockedIpRangeList = new [] { \"blockedIpRangeList\" },\n    SkippedIpRangeList = new [] { \"skippedIpRangeList\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRiskExceptionConfigurationTypeProperty riskExceptionConfigurationTypeProperty = RiskExceptionConfigurationTypeProperty.builder()\n        .blockedIpRangeList(List.of(\"blockedIpRangeList\"))\n        .skippedIpRangeList(List.of(\"skippedIpRangeList\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nriskExceptionConfigurationTypeProperty := &RiskExceptionConfigurationTypeProperty{\n\tBlockedIpRangeList: []*string{\n\t\tjsii.String(\"blockedIpRangeList\"),\n\t},\n\tSkippedIpRangeList: []*string{\n\t\tjsii.String(\"skippedIpRangeList\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst riskExceptionConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty = {\n  blockedIpRangeList: ['blockedIpRangeList'],\n  skippedIpRangeList: ['skippedIpRangeList'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst riskExceptionConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty = {\n  blockedIpRangeList: ['blockedIpRangeList'],\n  skippedIpRangeList: ['skippedIpRangeList'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"192":2,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"fb5275f3c6a4f5df2eb22d9ddff187405bfa763723cb51f16127afefe2ea6ef5"},"adc76306dfd1c71d145ab074027a871e7a8deae0a3523fa9d32c99ae45eec93d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_risk_configuration_attachment_props = cognito.CfnUserPoolRiskConfigurationAttachmentProps(\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    account_takeover_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n            high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            )\n        ),\n\n        # the properties below are optional\n        notify_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n            source_arn=\"sourceArn\",\n\n            # the properties below are optional\n            block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            from=\"from\",\n            mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            reply_to=\"replyTo\"\n        )\n    ),\n    compromised_credentials_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n            event_action=\"eventAction\"\n        ),\n\n        # the properties below are optional\n        event_filter=[\"eventFilter\"]\n    ),\n    risk_exception_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty(\n        blocked_ip_range_list=[\"blockedIpRangeList\"],\n        skipped_ip_range_list=[\"skippedIpRangeList\"]\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolRiskConfigurationAttachmentProps = new CfnUserPoolRiskConfigurationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AccountTakeoverRiskConfiguration = new AccountTakeoverRiskConfigurationTypeProperty {\n        Actions = new AccountTakeoverActionsTypeProperty {\n            HighAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            LowAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            MediumAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            }\n        },\n\n        // the properties below are optional\n        NotifyConfiguration = new NotifyConfigurationTypeProperty {\n            SourceArn = \"sourceArn\",\n\n            // the properties below are optional\n            BlockEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            From = \"from\",\n            MfaEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            NoActionEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            ReplyTo = \"replyTo\"\n        }\n    },\n    CompromisedCredentialsRiskConfiguration = new CompromisedCredentialsRiskConfigurationTypeProperty {\n        Actions = new CompromisedCredentialsActionsTypeProperty {\n            EventAction = \"eventAction\"\n        },\n\n        // the properties below are optional\n        EventFilter = new [] { \"eventFilter\" }\n    },\n    RiskExceptionConfiguration = new RiskExceptionConfigurationTypeProperty {\n        BlockedIpRangeList = new [] { \"blockedIpRangeList\" },\n        SkippedIpRangeList = new [] { \"skippedIpRangeList\" }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolRiskConfigurationAttachmentProps cfnUserPoolRiskConfigurationAttachmentProps = CfnUserPoolRiskConfigurationAttachmentProps.builder()\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .accountTakeoverRiskConfiguration(AccountTakeoverRiskConfigurationTypeProperty.builder()\n                .actions(AccountTakeoverActionsTypeProperty.builder()\n                        .highAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .lowAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .notifyConfiguration(NotifyConfigurationTypeProperty.builder()\n                        .sourceArn(\"sourceArn\")\n\n                        // the properties below are optional\n                        .blockEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .from(\"from\")\n                        .mfaEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .noActionEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .replyTo(\"replyTo\")\n                        .build())\n                .build())\n        .compromisedCredentialsRiskConfiguration(CompromisedCredentialsRiskConfigurationTypeProperty.builder()\n                .actions(CompromisedCredentialsActionsTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .build())\n\n                // the properties below are optional\n                .eventFilter(List.of(\"eventFilter\"))\n                .build())\n        .riskExceptionConfiguration(RiskExceptionConfigurationTypeProperty.builder()\n                .blockedIpRangeList(List.of(\"blockedIpRangeList\"))\n                .skippedIpRangeList(List.of(\"skippedIpRangeList\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolRiskConfigurationAttachmentProps := &CfnUserPoolRiskConfigurationAttachmentProps{\n\tClientId: jsii.String(\"clientId\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tAccountTakeoverRiskConfiguration: &AccountTakeoverRiskConfigurationTypeProperty{\n\t\tActions: &AccountTakeoverActionsTypeProperty{\n\t\t\tHighAction: &AccountTakeoverActionTypeProperty{\n\t\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\t\tNotify: jsii.Boolean(false),\n\t\t\t},\n\t\t\tLowAction: &AccountTakeoverActionTypeProperty{\n\t\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\t\tNotify: jsii.Boolean(false),\n\t\t\t},\n\t\t\tMediumAction: &AccountTakeoverActionTypeProperty{\n\t\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t\t\tNotify: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tNotifyConfiguration: &NotifyConfigurationTypeProperty{\n\t\t\tSourceArn: jsii.String(\"sourceArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tBlockEmail: &NotifyEmailTypeProperty{\n\t\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t\t},\n\t\t\tFrom: jsii.String(\"from\"),\n\t\t\tMfaEmail: &NotifyEmailTypeProperty{\n\t\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t\t},\n\t\t\tNoActionEmail: &NotifyEmailTypeProperty{\n\t\t\t\tSubject: jsii.String(\"subject\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tHtmlBody: jsii.String(\"htmlBody\"),\n\t\t\t\tTextBody: jsii.String(\"textBody\"),\n\t\t\t},\n\t\t\tReplyTo: jsii.String(\"replyTo\"),\n\t\t},\n\t},\n\tCompromisedCredentialsRiskConfiguration: &CompromisedCredentialsRiskConfigurationTypeProperty{\n\t\tActions: &CompromisedCredentialsActionsTypeProperty{\n\t\t\tEventAction: jsii.String(\"eventAction\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tEventFilter: []*string{\n\t\t\tjsii.String(\"eventFilter\"),\n\t\t},\n\t},\n\tRiskExceptionConfiguration: &RiskExceptionConfigurationTypeProperty{\n\t\tBlockedIpRangeList: []*string{\n\t\t\tjsii.String(\"blockedIpRangeList\"),\n\t\t},\n\t\tSkippedIpRangeList: []*string{\n\t\t\tjsii.String(\"skippedIpRangeList\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolRiskConfigurationAttachmentProps: cognito.CfnUserPoolRiskConfigurationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolRiskConfigurationAttachmentProps: cognito.CfnUserPoolRiskConfigurationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":22,"75":40,"91":3,"153":1,"169":1,"192":3,"193":13,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":36,"290":1},"fqnsFingerprint":"ae973adb79ea75cd390a6596564b8c9fbb788d9d4b4cb99ed9e59dc64cd4595f"},"d1e307c7efecb76426ccbcbd5075387b2169f49ab427098b08eb44e9f4a43217":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_uICustomization_attachment = cognito.CfnUserPoolUICustomizationAttachment(self, \"MyCfnUserPoolUICustomizationAttachment\",\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    css=\"css\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolUICustomizationAttachment = new CfnUserPoolUICustomizationAttachment(this, \"MyCfnUserPoolUICustomizationAttachment\", new CfnUserPoolUICustomizationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Css = \"css\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUICustomizationAttachment cfnUserPoolUICustomizationAttachment = CfnUserPoolUICustomizationAttachment.Builder.create(this, \"MyCfnUserPoolUICustomizationAttachment\")\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .css(\"css\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolUICustomizationAttachment := cognito.NewCfnUserPoolUICustomizationAttachment(this, jsii.String(\"MyCfnUserPoolUICustomizationAttachment\"), &CfnUserPoolUICustomizationAttachmentProps{\n\tClientId: jsii.String(\"clientId\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tCss: jsii.String(\"css\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUICustomizationAttachment = new cognito.CfnUserPoolUICustomizationAttachment(this, 'MyCfnUserPoolUICustomizationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachment","@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUICustomizationAttachment = new cognito.CfnUserPoolUICustomizationAttachment(this, 'MyCfnUserPoolUICustomizationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"12376281ba86f83a67d1db457d30ca8d58be81b7743955ef9f1080a39c4c163c"},"d8922692bc38792052ae246c6f2b45af4b9f6c50451b2fa1aae175efb78e2de2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_uICustomization_attachment_props = cognito.CfnUserPoolUICustomizationAttachmentProps(\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    css=\"css\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolUICustomizationAttachmentProps = new CfnUserPoolUICustomizationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Css = \"css\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUICustomizationAttachmentProps cfnUserPoolUICustomizationAttachmentProps = CfnUserPoolUICustomizationAttachmentProps.builder()\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .css(\"css\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolUICustomizationAttachmentProps := &CfnUserPoolUICustomizationAttachmentProps{\n\tClientId: jsii.String(\"clientId\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tCss: jsii.String(\"css\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUICustomizationAttachmentProps: cognito.CfnUserPoolUICustomizationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUICustomizationAttachmentProps: cognito.CfnUserPoolUICustomizationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"5923214695483af8f87e9b25ef235d59fc23370f6a17a954e8208e163495a83d"},"f33dfdd8bbccc72c62ec4fae906a27edb407c5c33eeb7756f3247ab12e7bcfef":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# client_metadata: Any\n\ncfn_user_pool_user = cognito.CfnUserPoolUser(self, \"MyCfnUserPoolUser\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    client_metadata=client_metadata,\n    desired_delivery_mediums=[\"desiredDeliveryMediums\"],\n    force_alias_creation=False,\n    message_action=\"messageAction\",\n    user_attributes=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    username=\"username\",\n    validation_data=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar clientMetadata;\n\nvar cfnUserPoolUser = new CfnUserPoolUser(this, \"MyCfnUserPoolUser\", new CfnUserPoolUserProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    ClientMetadata = clientMetadata,\n    DesiredDeliveryMediums = new [] { \"desiredDeliveryMediums\" },\n    ForceAliasCreation = false,\n    MessageAction = \"messageAction\",\n    UserAttributes = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    Username = \"username\",\n    ValidationData = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject clientMetadata;\n\nCfnUserPoolUser cfnUserPoolUser = CfnUserPoolUser.Builder.create(this, \"MyCfnUserPoolUser\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .clientMetadata(clientMetadata)\n        .desiredDeliveryMediums(List.of(\"desiredDeliveryMediums\"))\n        .forceAliasCreation(false)\n        .messageAction(\"messageAction\")\n        .userAttributes(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .username(\"username\")\n        .validationData(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar clientMetadata interface{}\n\ncfnUserPoolUser := cognito.NewCfnUserPoolUser(this, jsii.String(\"MyCfnUserPoolUser\"), &CfnUserPoolUserProps{\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tClientMetadata: clientMetadata,\n\tDesiredDeliveryMediums: []*string{\n\t\tjsii.String(\"desiredDeliveryMediums\"),\n\t},\n\tForceAliasCreation: jsii.Boolean(false),\n\tMessageAction: jsii.String(\"messageAction\"),\n\tUserAttributes: []interface{}{\n\t\t&AttributeTypeProperty{\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUsername: jsii.String(\"username\"),\n\tValidationData: []interface{}{\n\t\t&AttributeTypeProperty{\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\nconst cfnUserPoolUser = new cognito.CfnUserPoolUser(this, 'MyCfnUserPoolUser', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUser"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUser","@aws-cdk/aws-cognito.CfnUserPoolUserProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUser = new cognito.CfnUserPoolUser(this, 'MyCfnUserPoolUser', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":18,"91":1,"104":1,"125":1,"130":1,"192":3,"193":3,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"13e18a129e9ac9fa129d6422a1b724013ad07d00f3cd65ccbdfe130b30a0c6a0"},"798481bd27b62aa26264e339bc14d3d22a3a84f94138c177c732fb011236ef62":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nattribute_type_property = cognito.CfnUserPoolUser.AttributeTypeProperty(\n    name=\"name\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar attributeTypeProperty = new AttributeTypeProperty {\n    Name = \"name\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAttributeTypeProperty attributeTypeProperty = AttributeTypeProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nattributeTypeProperty := &AttributeTypeProperty{\n\tName: jsii.String(\"name\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst attributeTypeProperty: cognito.CfnUserPoolUser.AttributeTypeProperty = {\n  name: 'name',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attributeTypeProperty: cognito.CfnUserPoolUser.AttributeTypeProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"d5deb480bcf7024e5a9e530bef4ce4e29a115d98be1afdc33c4d142986a93f38"},"1a387bc467623c109dd4c6885c58b01c13b2aaa015dda58d19a36d1870d2975b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# client_metadata: Any\n\ncfn_user_pool_user_props = cognito.CfnUserPoolUserProps(\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    client_metadata=client_metadata,\n    desired_delivery_mediums=[\"desiredDeliveryMediums\"],\n    force_alias_creation=False,\n    message_action=\"messageAction\",\n    user_attributes=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    username=\"username\",\n    validation_data=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar clientMetadata;\n\nvar cfnUserPoolUserProps = new CfnUserPoolUserProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    ClientMetadata = clientMetadata,\n    DesiredDeliveryMediums = new [] { \"desiredDeliveryMediums\" },\n    ForceAliasCreation = false,\n    MessageAction = \"messageAction\",\n    UserAttributes = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    Username = \"username\",\n    ValidationData = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject clientMetadata;\n\nCfnUserPoolUserProps cfnUserPoolUserProps = CfnUserPoolUserProps.builder()\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .clientMetadata(clientMetadata)\n        .desiredDeliveryMediums(List.of(\"desiredDeliveryMediums\"))\n        .forceAliasCreation(false)\n        .messageAction(\"messageAction\")\n        .userAttributes(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .username(\"username\")\n        .validationData(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar clientMetadata interface{}\n\ncfnUserPoolUserProps := &CfnUserPoolUserProps{\n\tUserPoolId: jsii.String(\"userPoolId\"),\n\n\t// the properties below are optional\n\tClientMetadata: clientMetadata,\n\tDesiredDeliveryMediums: []*string{\n\t\tjsii.String(\"desiredDeliveryMediums\"),\n\t},\n\tForceAliasCreation: jsii.Boolean(false),\n\tMessageAction: jsii.String(\"messageAction\"),\n\tUserAttributes: []interface{}{\n\t\t&AttributeTypeProperty{\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUsername: jsii.String(\"username\"),\n\tValidationData: []interface{}{\n\t\t&AttributeTypeProperty{\n\t\t\tName: jsii.String(\"name\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\nconst cfnUserPoolUserProps: cognito.CfnUserPoolUserProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUserProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUserProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUserProps: cognito.CfnUserPoolUserProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":9,"75":18,"91":1,"125":1,"130":1,"153":1,"169":1,"192":3,"193":3,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"26e7354b15ed6cce7cd823010179d547677540fa93479c46d76a8c76fdb6ed60"},"80da70bff66f9b7fade9c3d616a35b5695fed99f99945ae1e1505426f4f5bb4d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_user_to_group_attachment = cognito.CfnUserPoolUserToGroupAttachment(self, \"MyCfnUserPoolUserToGroupAttachment\",\n    group_name=\"groupName\",\n    username=\"username\",\n    user_pool_id=\"userPoolId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolUserToGroupAttachment = new CfnUserPoolUserToGroupAttachment(this, \"MyCfnUserPoolUserToGroupAttachment\", new CfnUserPoolUserToGroupAttachmentProps {\n    GroupName = \"groupName\",\n    Username = \"username\",\n    UserPoolId = \"userPoolId\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUserToGroupAttachment cfnUserPoolUserToGroupAttachment = CfnUserPoolUserToGroupAttachment.Builder.create(this, \"MyCfnUserPoolUserToGroupAttachment\")\n        .groupName(\"groupName\")\n        .username(\"username\")\n        .userPoolId(\"userPoolId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolUserToGroupAttachment := cognito.NewCfnUserPoolUserToGroupAttachment(this, jsii.String(\"MyCfnUserPoolUserToGroupAttachment\"), &CfnUserPoolUserToGroupAttachmentProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tUsername: jsii.String(\"username\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUserToGroupAttachment = new cognito.CfnUserPoolUserToGroupAttachment(this, 'MyCfnUserPoolUserToGroupAttachment', {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachment","@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUserToGroupAttachment = new cognito.CfnUserPoolUserToGroupAttachment(this, 'MyCfnUserPoolUserToGroupAttachment', {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"5c153b3615f7a68666c7a9d1f1f6c7530e75b221139da29e5afbb40171e73af3"},"d5c62f146e5000d55dfa10e20001dc66b694d7fc105bd9227e84b53c1657e8c2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_user_to_group_attachment_props = cognito.CfnUserPoolUserToGroupAttachmentProps(\n    group_name=\"groupName\",\n    username=\"username\",\n    user_pool_id=\"userPoolId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar cfnUserPoolUserToGroupAttachmentProps = new CfnUserPoolUserToGroupAttachmentProps {\n    GroupName = \"groupName\",\n    Username = \"username\",\n    UserPoolId = \"userPoolId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUserToGroupAttachmentProps cfnUserPoolUserToGroupAttachmentProps = CfnUserPoolUserToGroupAttachmentProps.builder()\n        .groupName(\"groupName\")\n        .username(\"username\")\n        .userPoolId(\"userPoolId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncfnUserPoolUserToGroupAttachmentProps := &CfnUserPoolUserToGroupAttachmentProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tUsername: jsii.String(\"username\"),\n\tUserPoolId: jsii.String(\"userPoolId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUserToGroupAttachmentProps: cognito.CfnUserPoolUserToGroupAttachmentProps = {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUserToGroupAttachmentProps: cognito.CfnUserPoolUserToGroupAttachmentProps = {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"30826491da17885a8d27892304b08ad2324badaf76bfa5786c42712c05921937"},"ad8434c033e8bef4d9f473f57b3f495bc13065dce2a415bd55e8d7d246c2d8f1":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nclient_write_attributes = (cognito.ClientAttributes()).with_standard_attributes(fullname=True, email=True).with_custom_attributes(\"favouritePizza\", \"favouriteBeverage\")\n\nclient_read_attributes = client_write_attributes.with_standard_attributes(email_verified=True).with_custom_attributes(\"pointsEarned\")\n\npool.add_client(\"app-client\",\n    # ...\n    read_attributes=client_read_attributes,\n    write_attributes=client_write_attributes\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar clientWriteAttributes = (new ClientAttributes()).WithStandardAttributes(new StandardAttributesMask { Fullname = true, Email = true }).WithCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nvar clientReadAttributes = clientWriteAttributes.WithStandardAttributes(new StandardAttributesMask { EmailVerified = true }).WithCustomAttributes(\"pointsEarned\");\n\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    ReadAttributes = clientReadAttributes,\n    WriteAttributes = clientWriteAttributes\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nClientAttributes clientWriteAttributes = (new ClientAttributes()).withStandardAttributes(StandardAttributesMask.builder().fullname(true).email(true).build()).withCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nClientAttributes clientReadAttributes = clientWriteAttributes.withStandardAttributes(StandardAttributesMask.builder().emailVerified(true).build()).withCustomAttributes(\"pointsEarned\");\n\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .readAttributes(clientReadAttributes)\n        .writeAttributes(clientWriteAttributes)\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nclientWriteAttributes := (cognito.NewClientAttributes()).WithStandardAttributes(&StandardAttributesMask{\n\tFullname: jsii.Boolean(true),\n\tEmail: jsii.Boolean(true),\n}).WithCustomAttributes(jsii.String(\"favouritePizza\"), jsii.String(\"favouriteBeverage\"))\n\nclientReadAttributes := clientWriteAttributes.WithStandardAttributes(&StandardAttributesMask{\n\tEmailVerified: jsii.Boolean(true),\n}).WithCustomAttributes(jsii.String(\"pointsEarned\"))\n\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tReadAttributes: clientReadAttributes,\n\tWriteAttributes: clientWriteAttributes,\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.ClientAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.ClientAttributes","@aws-cdk/aws-cognito.ClientAttributes#withCustomAttributes","@aws-cdk/aws-cognito.ClientAttributes#withStandardAttributes","@aws-cdk/aws-cognito.StandardAttributesMask","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":1,"106":3,"193":3,"194":7,"196":5,"197":2,"200":1,"225":3,"226":1,"242":3,"243":3,"281":5},"fqnsFingerprint":"cc952ab20d6d1fbc8d95afa56fe0297009acdb2312e5cbe31e2e9e7949652be4"},"99a428335c5cb075b776b6e694c08399ab3e6e1d9c21c0f017094a40febb649a":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nvar certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nvar domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\npool.addDomain(jsii.String(\"CognitoDomain\"), &UserPoolDomainOptions{\n\tCognitoDomain: &CognitoDomainOptions{\n\t\tDomainPrefix: jsii.String(\"my-awesome-app\"),\n\t},\n})\n\ncertificateArn := \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomainCert := certificatemanager.Certificate_FromCertificateArn(this, jsii.String(\"domainCert\"), certificateArn)\npool.addDomain(jsii.String(\"CustomDomain\"), &UserPoolDomainOptions{\n\tCustomDomain: &CustomDomainOptions{\n\t\tDomainName: jsii.String(\"user.myapp.com\"),\n\t\tCertificate: domainCert,\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CognitoDomainOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-cognito.CognitoDomainOptions","@aws-cdk/aws-cognito.CustomDomainOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolDomainOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":19,"104":2,"193":4,"194":5,"196":3,"197":1,"225":3,"226":2,"242":3,"243":3,"281":5},"fqnsFingerprint":"75d60300c871e090ebbd4766b4e5d7d33c6cc29b91ceabc52545256b86d3e142"},"278c95a93456005e1344d5e9e9ecbf49224f359b6a439794f5136a9e700fcfca":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_attribute_config = cognito.CustomAttributeConfig(\n    data_type=\"dataType\",\n\n    # the properties below are optional\n    mutable=False,\n    number_constraints=cognito.NumberAttributeConstraints(\n        max=123,\n        min=123\n    ),\n    string_constraints=cognito.StringAttributeConstraints(\n        max_len=123,\n        min_len=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar customAttributeConfig = new CustomAttributeConfig {\n    DataType = \"dataType\",\n\n    // the properties below are optional\n    Mutable = false,\n    NumberConstraints = new NumberAttributeConstraints {\n        Max = 123,\n        Min = 123\n    },\n    StringConstraints = new StringAttributeConstraints {\n        MaxLen = 123,\n        MinLen = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomAttributeConfig customAttributeConfig = CustomAttributeConfig.builder()\n        .dataType(\"dataType\")\n\n        // the properties below are optional\n        .mutable(false)\n        .numberConstraints(NumberAttributeConstraints.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .stringConstraints(StringAttributeConstraints.builder()\n                .maxLen(123)\n                .minLen(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\ncustomAttributeConfig := &CustomAttributeConfig{\n\tDataType: jsii.String(\"dataType\"),\n\n\t// the properties below are optional\n\tMutable: jsii.Boolean(false),\n\tNumberConstraints: &NumberAttributeConstraints{\n\t\tMax: jsii.Number(123),\n\t\tMin: jsii.Number(123),\n\t},\n\tStringConstraints: &StringAttributeConstraints{\n\t\tMaxLen: jsii.Number(123),\n\t\tMinLen: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customAttributeConfig: cognito.CustomAttributeConfig = {\n  dataType: 'dataType',\n\n  // the properties below are optional\n  mutable: false,\n  numberConstraints: {\n    max: 123,\n    min: 123,\n  },\n  stringConstraints: {\n    maxLen: 123,\n    minLen: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CustomAttributeConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CustomAttributeConfig","@aws-cdk/aws-cognito.NumberAttributeConstraints","@aws-cdk/aws-cognito.StringAttributeConstraints"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customAttributeConfig: cognito.CustomAttributeConfig = {\n  dataType: 'dataType',\n\n  // the properties below are optional\n  mutable: false,\n  numberConstraints: {\n    max: 123,\n    min: 123,\n  },\n  stringConstraints: {\n    maxLen: 123,\n    minLen: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":2,"75":12,"91":1,"153":1,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"0c9502eb4dc07c976ac56ab74cef1ff2ce47d1d255ea28018b958a792d963fea"},"d7cd60533cbb0d21e798b62788d3843864893321404a6a27646fed98701192e5":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CustomAttributeProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"eddaad9e79c56c225f1eec7e2c874a9b52b56c8cc3559e0d45a0a352961d77c8":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nvar certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nvar domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\npool.addDomain(jsii.String(\"CognitoDomain\"), &UserPoolDomainOptions{\n\tCognitoDomain: &CognitoDomainOptions{\n\t\tDomainPrefix: jsii.String(\"my-awesome-app\"),\n\t},\n})\n\ncertificateArn := \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomainCert := certificatemanager.Certificate_FromCertificateArn(this, jsii.String(\"domainCert\"), certificateArn)\npool.addDomain(jsii.String(\"CustomDomain\"), &UserPoolDomainOptions{\n\tCustomDomain: &CustomDomainOptions{\n\t\tDomainName: jsii.String(\"user.myapp.com\"),\n\t\tCertificate: domainCert,\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.CustomDomainOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-cognito.CognitoDomainOptions","@aws-cdk/aws-cognito.CustomDomainOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolDomainOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":19,"104":2,"193":4,"194":5,"196":3,"197":1,"225":3,"226":2,"242":3,"243":3,"281":5},"fqnsFingerprint":"75d60300c871e090ebbd4766b4e5d7d33c6cc29b91ceabc52545256b86d3e142"},"019931aae2bac8aa5985b122c6a41444498fd7f92308a51163f463c26b50ba37":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.DateTimeAttribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"8304d734b31de6c1f5964d64d420fd0a6a47b0ad3a5ba37a9ef744d6e35f68a5":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    device_tracking=cognito.DeviceTracking(\n        challenge_required_on_new_device=True,\n        device_only_remembered_on_user_prompt=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    DeviceTracking = new DeviceTracking {\n        ChallengeRequiredOnNewDevice = true,\n        DeviceOnlyRememberedOnUserPrompt = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .deviceTracking(DeviceTracking.builder()\n                .challengeRequiredOnNewDevice(true)\n                .deviceOnlyRememberedOnUserPrompt(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tDeviceTracking: &DeviceTracking{\n\t\tChallengeRequiredOnNewDevice: jsii.Boolean(true),\n\t\tDeviceOnlyRememberedOnUserPrompt: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.DeviceTracking"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.DeviceTracking","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":5,"104":1,"106":2,"193":2,"194":1,"197":1,"226":1,"281":3},"fqnsFingerprint":"6750bbc2944b5950780b943b0182ca456aa5b8bc659ac64c148295fa5cf64ce9"},"88ba4874ce590f8f09b34005fefdb6581c4a4db2133412099dad95d62ff36caa":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nemail_settings = cognito.EmailSettings(\n    from=\"from\",\n    reply_to=\"replyTo\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar emailSettings = new EmailSettings {\n    From = \"from\",\n    ReplyTo = \"replyTo\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nEmailSettings emailSettings = EmailSettings.builder()\n        .from(\"from\")\n        .replyTo(\"replyTo\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nemailSettings := &EmailSettings{\n\tFrom: jsii.String(\"from\"),\n\tReplyTo: jsii.String(\"replyTo\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst emailSettings: cognito.EmailSettings = {\n  from: 'from',\n  replyTo: 'replyTo',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.EmailSettings"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.EmailSettings"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst emailSettings: cognito.EmailSettings = {\n  from: 'from',\n  replyTo: 'replyTo',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"98064c88ffaed000fe49f4be3293b287f2703b1a80066d779e3e903e8d57b0aa"},"fdd3103ad9540e79dec10f5e3c53b50c5c32f2cfbbb10a1b58c72396caf84e83":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    mfa=cognito.Mfa.REQUIRED,\n    mfa_second_factor=cognito.MfaSecondFactor(\n        sms=True,\n        otp=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    Mfa = Mfa.REQUIRED,\n    MfaSecondFactor = new MfaSecondFactor {\n        Sms = true,\n        Otp = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .mfa(Mfa.REQUIRED)\n        .mfaSecondFactor(MfaSecondFactor.builder()\n                .sms(true)\n                .otp(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tMfa: cognito.Mfa_REQUIRED,\n\tMfaSecondFactor: &MfaSecondFactor{\n\t\tSms: jsii.Boolean(true),\n\t\tOtp: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.Mfa"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.Mfa","@aws-cdk/aws-cognito.Mfa#REQUIRED","@aws-cdk/aws-cognito.MfaSecondFactor","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":9,"104":1,"106":2,"193":2,"194":3,"197":1,"226":1,"281":4},"fqnsFingerprint":"bd9ff0d3386783407f943a2dc8772853774c10f49df316358d81421a6575c1cd"},"2b78e91ee991e8263c3aab36e1c855b744a6c57542adf25931fde028d62c5850":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    mfa=cognito.Mfa.REQUIRED,\n    mfa_second_factor=cognito.MfaSecondFactor(\n        sms=True,\n        otp=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    Mfa = Mfa.REQUIRED,\n    MfaSecondFactor = new MfaSecondFactor {\n        Sms = true,\n        Otp = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .mfa(Mfa.REQUIRED)\n        .mfaSecondFactor(MfaSecondFactor.builder()\n                .sms(true)\n                .otp(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tMfa: cognito.Mfa_REQUIRED,\n\tMfaSecondFactor: &MfaSecondFactor{\n\t\tSms: jsii.Boolean(true),\n\t\tOtp: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.MfaSecondFactor"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.Mfa","@aws-cdk/aws-cognito.Mfa#REQUIRED","@aws-cdk/aws-cognito.MfaSecondFactor","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":9,"104":1,"106":2,"193":2,"194":3,"197":1,"226":1,"281":4},"fqnsFingerprint":"bd9ff0d3386783407f943a2dc8772853774c10f49df316358d81421a6575c1cd"},"6095a15641c15d3f4cada2c8f3f85cc2f22c010bab041786121d0ea63c1963b1":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.NumberAttribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"4014a60c5b6d1de85c3fcb9bc41947d7fe0a4ce4b6955f9e5b31ac5026d4ec88":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnumber_attribute_constraints = cognito.NumberAttributeConstraints(\n    max=123,\n    min=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar numberAttributeConstraints = new NumberAttributeConstraints {\n    Max = 123,\n    Min = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNumberAttributeConstraints numberAttributeConstraints = NumberAttributeConstraints.builder()\n        .max(123)\n        .min(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nnumberAttributeConstraints := &NumberAttributeConstraints{\n\tMax: jsii.Number(123),\n\tMin: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst numberAttributeConstraints: cognito.NumberAttributeConstraints = {\n  max: 123,\n  min: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.NumberAttributeConstraints"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.NumberAttributeConstraints"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst numberAttributeConstraints: cognito.NumberAttributeConstraints = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"260779f8300f2f6faf52364ca5dbd1089a157f21078af03ff98586b9d3a94355"},"25fb102ad31d31ff34ccd8340615550617b7e51cb5f04f78871855ee5cda08e4":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.NumberAttributeProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"85fddf909cce1b072e2693f7358cacdf240362540489f222f2b9dd4ed034aa84":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nvar client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nvar domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nvar signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});","version":"1"},"java":{"source":"UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"UserPool\"), &UserPoolProps{\n})\nclient := userpool.addClient(jsii.String(\"Client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tImplicitCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://myapp.com/home\"),\n\t\t\tjsii.String(\"https://myapp.com/users\"),\n\t\t},\n\t},\n})\ndomain := userpool.addDomain(jsii.String(\"Domain\"), &UserPoolDomainOptions{\n})\nsignInUrl := domain.SignInUrl(client, &SignInUrlOptions{\n\tRedirectUri: jsii.String(\"https://myapp.com/home\"),\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.OAuthFlows"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.SignInUrlOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomain#signInUrl","@aws-cdk/aws-cognito.UserPoolDomainOptions","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":18,"104":1,"106":1,"192":1,"193":6,"194":4,"196":3,"197":1,"225":4,"242":4,"243":4,"281":5},"fqnsFingerprint":"c43089a069e15f8c39a6d969ca2270bcb4ea6dd65989f9ea06b4e5a9ede2500d"},"a977a5003e56c672f59cf8b38be3a364604feb61bf66bafc22b582bbc1645112":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.OAuthScope"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"e36eb6b971f5e9be2809f73af4db07aff6efd024c6eab28ceb3040a73b612c2c":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.OAuthSettings"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"de07b768305cedd30b4b0474142cedd8f0ea85f4de2e641c74ee5d6f13b5d1ca":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\noidc_endpoints = cognito.OidcEndpoints(\n    authorization=\"authorization\",\n    jwks_uri=\"jwksUri\",\n    token=\"token\",\n    user_info=\"userInfo\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar oidcEndpoints = new OidcEndpoints {\n    Authorization = \"authorization\",\n    JwksUri = \"jwksUri\",\n    Token = \"token\",\n    UserInfo = \"userInfo\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nOidcEndpoints oidcEndpoints = OidcEndpoints.builder()\n        .authorization(\"authorization\")\n        .jwksUri(\"jwksUri\")\n        .token(\"token\")\n        .userInfo(\"userInfo\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\noidcEndpoints := &OidcEndpoints{\n\tAuthorization: jsii.String(\"authorization\"),\n\tJwksUri: jsii.String(\"jwksUri\"),\n\tToken: jsii.String(\"token\"),\n\tUserInfo: jsii.String(\"userInfo\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst oidcEndpoints: cognito.OidcEndpoints = {\n  authorization: 'authorization',\n  jwksUri: 'jwksUri',\n  token: 'token',\n  userInfo: 'userInfo',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.OidcEndpoints"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OidcEndpoints"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst oidcEndpoints: cognito.OidcEndpoints = {\n  authorization: 'authorization',\n  jwksUri: 'jwksUri',\n  token: 'token',\n  userInfo: 'userInfo',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":8,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"52e883eb09f0a2d835171efc39d9d451a4b9fa000ec8ae03b3da598d0e5b7376"},"3ee493f06a67dfb23199b0748c7c6f96cc4f04efbe935e071913c1f131ff93e7":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    password_policy=cognito.PasswordPolicy(\n        min_length=12,\n        require_lowercase=True,\n        require_uppercase=True,\n        require_digits=True,\n        require_symbols=True,\n        temp_password_validity=Duration.days(3)\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    PasswordPolicy = new PasswordPolicy {\n        MinLength = 12,\n        RequireLowercase = true,\n        RequireUppercase = true,\n        RequireDigits = true,\n        RequireSymbols = true,\n        TempPasswordValidity = Duration.Days(3)\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .passwordPolicy(PasswordPolicy.builder()\n                .minLength(12)\n                .requireLowercase(true)\n                .requireUppercase(true)\n                .requireDigits(true)\n                .requireSymbols(true)\n                .tempPasswordValidity(Duration.days(3))\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tPasswordPolicy: &PasswordPolicy{\n\t\tMinLength: jsii.Number(12),\n\t\tRequireLowercase: jsii.Boolean(true),\n\t\tRequireUppercase: jsii.Boolean(true),\n\t\tRequireDigits: jsii.Boolean(true),\n\t\tRequireSymbols: jsii.Boolean(true),\n\t\tTempPasswordValidity: awscdkcore.Duration_Days(jsii.Number(3)),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.PasswordPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.PasswordPolicy","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":2,"10":1,"75":11,"104":1,"106":4,"193":2,"194":2,"196":1,"197":1,"226":1,"281":7},"fqnsFingerprint":"c19672cb917f6431dbc93d312e16432dc3620c13c1888f031b95a3177538a3b6"},"85d20060ea2550cc08d12c217c770b7413a6de8307dbe3595682aa2626013c14":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"Pool\")\n\ncognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool,\n    attribute_mapping=cognito.AttributeMapping(\n        email=cognito.ProviderAttribute.AMAZON_EMAIL,\n        website=cognito.ProviderAttribute.other(\"url\"),  # use other() when an attribute is not pre-defined in the CDK\n        custom={\n            # custom user pool attributes go here\n            \"unique_id\": cognito.ProviderAttribute.AMAZON_USER_ID\n        }\n    )\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"Pool\");\n\nnew UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool,\n    AttributeMapping = new AttributeMapping {\n        Email = ProviderAttribute.AMAZON_EMAIL,\n        Website = ProviderAttribute.Other(\"url\"),  // use other() when an attribute is not pre-defined in the CDK\n        Custom = new Dictionary<string, ProviderAttribute> {\n            // custom user pool attributes go here\n            { \"uniqueId\", ProviderAttribute.AMAZON_USER_ID }\n        }\n    }\n});","version":"1"},"java":{"source":"UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .attributeMapping(AttributeMapping.builder()\n                .email(ProviderAttribute.AMAZON_EMAIL)\n                .website(ProviderAttribute.other(\"url\")) // use other() when an attribute is not pre-defined in the CDK\n                .custom(Map.of(\n                        // custom user pool attributes go here\n                        \"uniqueId\", ProviderAttribute.AMAZON_USER_ID))\n                .build())\n        .build();","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\ncognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n\tUserPool: userpool,\n\tAttributeMapping: &AttributeMapping{\n\t\tEmail: cognito.ProviderAttribute_AMAZON_EMAIL(),\n\t\tWebsite: cognito.ProviderAttribute_Other(jsii.String(\"url\")),\n\t\t // use other() when an attribute is not pre-defined in the CDK\n\t\tCustom: map[string]providerAttribute{\n\t\t\t// custom user pool attributes go here\n\t\t\t\"uniqueId\": cognito.*providerAttribute_AMAZON_USER_ID(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.ProviderAttribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_EMAIL","@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_USER_ID","@aws-cdk/aws-cognito.ProviderAttribute#other","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":23,"104":2,"193":3,"194":8,"196":1,"197":2,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"78e0a8c9150290b231791390ad87871719d6b4733828c7e215318f4a35fda4bf"},"46bbeb30d0fbd0657a75aeee41536eb6cf2ddc218c001677c2a4d75ef99d0dd1":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.ResourceServerScope"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"8b10cb8102c4852a2ed514c930ae9f105c660090a2805e35beb8cd5aa095b30d":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.ResourceServerScopeProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"8cd28568293c3d33c4233df4749484770951faee6406425fec0995f924b9a89b":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(\n        username=True,\n        email=True\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases {\n        Username = true,\n        Email = true\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder()\n                .username(true)\n                .email(true)\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\t// ...\n\tSignInAliases: &SignInAliases{\n\t\tUsername: jsii.Boolean(true),\n\t\tEmail: jsii.Boolean(true),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.SignInAliases"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.SignInAliases","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":5,"104":1,"106":2,"193":2,"194":1,"197":1,"226":1,"281":3},"fqnsFingerprint":"9e4de072bc8da97a1701718ed0c51934ed62d1a73bee198cf626f0463de75da5"},"f103404f91b32e4c8356e9f37938380f4169e070bbc156faf0dee48985b836f1":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nvar client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nvar domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nvar signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});","version":"1"},"java":{"source":"UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"UserPool\"), &UserPoolProps{\n})\nclient := userpool.addClient(jsii.String(\"Client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tImplicitCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://myapp.com/home\"),\n\t\t\tjsii.String(\"https://myapp.com/users\"),\n\t\t},\n\t},\n})\ndomain := userpool.addDomain(jsii.String(\"Domain\"), &UserPoolDomainOptions{\n})\nsignInUrl := domain.SignInUrl(client, &SignInUrlOptions{\n\tRedirectUri: jsii.String(\"https://myapp.com/home\"),\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.SignInUrlOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.SignInUrlOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomain#signInUrl","@aws-cdk/aws-cognito.UserPoolDomainOptions","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":18,"104":1,"106":1,"192":1,"193":6,"194":4,"196":3,"197":1,"225":4,"242":4,"243":4,"281":5},"fqnsFingerprint":"c43089a069e15f8c39a6d969ca2270bcb4ea6dd65989f9ea06b4e5a9ede2500d"},"dbb75d0532f5b87c77d650b42745cfb1a962db555da4542241e848d808221815":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.StandardAttribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"1b6881c5a07b8ca785b30b0ebb7c3d79d23be3b33c36bf036dcfd1ad59fe82aa":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.StandardAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"fc476f96e4d925dd337a80065db85f5401d9f21ac9ef7e5c9409dc3c6d792b47":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nclient_write_attributes = (cognito.ClientAttributes()).with_standard_attributes(fullname=True, email=True).with_custom_attributes(\"favouritePizza\", \"favouriteBeverage\")\n\nclient_read_attributes = client_write_attributes.with_standard_attributes(email_verified=True).with_custom_attributes(\"pointsEarned\")\n\npool.add_client(\"app-client\",\n    # ...\n    read_attributes=client_read_attributes,\n    write_attributes=client_write_attributes\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar clientWriteAttributes = (new ClientAttributes()).WithStandardAttributes(new StandardAttributesMask { Fullname = true, Email = true }).WithCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nvar clientReadAttributes = clientWriteAttributes.WithStandardAttributes(new StandardAttributesMask { EmailVerified = true }).WithCustomAttributes(\"pointsEarned\");\n\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    ReadAttributes = clientReadAttributes,\n    WriteAttributes = clientWriteAttributes\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nClientAttributes clientWriteAttributes = (new ClientAttributes()).withStandardAttributes(StandardAttributesMask.builder().fullname(true).email(true).build()).withCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nClientAttributes clientReadAttributes = clientWriteAttributes.withStandardAttributes(StandardAttributesMask.builder().emailVerified(true).build()).withCustomAttributes(\"pointsEarned\");\n\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .readAttributes(clientReadAttributes)\n        .writeAttributes(clientWriteAttributes)\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nclientWriteAttributes := (cognito.NewClientAttributes()).WithStandardAttributes(&StandardAttributesMask{\n\tFullname: jsii.Boolean(true),\n\tEmail: jsii.Boolean(true),\n}).WithCustomAttributes(jsii.String(\"favouritePizza\"), jsii.String(\"favouriteBeverage\"))\n\nclientReadAttributes := clientWriteAttributes.WithStandardAttributes(&StandardAttributesMask{\n\tEmailVerified: jsii.Boolean(true),\n}).WithCustomAttributes(jsii.String(\"pointsEarned\"))\n\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tReadAttributes: clientReadAttributes,\n\tWriteAttributes: clientWriteAttributes,\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.StandardAttributesMask"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.ClientAttributes","@aws-cdk/aws-cognito.ClientAttributes#withCustomAttributes","@aws-cdk/aws-cognito.ClientAttributes#withStandardAttributes","@aws-cdk/aws-cognito.StandardAttributesMask","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new cognito.ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":1,"106":3,"193":3,"194":7,"196":5,"197":2,"200":1,"225":3,"226":1,"242":3,"243":3,"281":5},"fqnsFingerprint":"cc952ab20d6d1fbc8d95afa56fe0297009acdb2312e5cbe31e2e9e7949652be4"},"dc2cb929e00274e1f42001f40a50488e27db43f76e1d4c956e4ae205c515f44a":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.StringAttribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"fa9ee38cbeeeb386b8d36616b01d3a2e66d0506fcbb590c8623d8e7664a0c74e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nstring_attribute_constraints = cognito.StringAttributeConstraints(\n    max_len=123,\n    min_len=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar stringAttributeConstraints = new StringAttributeConstraints {\n    MaxLen = 123,\n    MinLen = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nStringAttributeConstraints stringAttributeConstraints = StringAttributeConstraints.builder()\n        .maxLen(123)\n        .minLen(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nstringAttributeConstraints := &StringAttributeConstraints{\n\tMaxLen: jsii.Number(123),\n\tMinLen: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst stringAttributeConstraints: cognito.StringAttributeConstraints = {\n  maxLen: 123,\n  minLen: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.StringAttributeConstraints"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.StringAttributeConstraints"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stringAttributeConstraints: cognito.StringAttributeConstraints = {\n  maxLen: 123,\n  minLen: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"c69cf929c6caff4e8ef0a2389f11247fbfe74f0f22814502c41c74cc1f20c2e2"},"e43c896cb5096c72058508f16e27da579e31166aa1bcd38547fcdcafbcd04042":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"isEmployee\": cognito.BooleanAttribute(mutable=True),\n        \"joinedOn\": cognito.DateTimeAttribute()\n    }\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tStandardAttributes: &StandardAttributes{\n\t\tFullname: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(true),\n\t\t\tMutable: jsii.Boolean(false),\n\t\t},\n\t\tAddress: &StandardAttribute{\n\t\t\tRequired: jsii.Boolean(false),\n\t\t\tMutable: jsii.Boolean(true),\n\t\t},\n\t},\n\tCustomAttributes: map[string]iCustomAttribute{\n\t\t\"myappid\": cognito.NewStringAttribute(&StringAttributeProps{\n\t\t\t\"minLen\": jsii.Number(5),\n\t\t\t\"maxLen\": jsii.Number(15),\n\t\t\t\"mutable\": jsii.Boolean(false),\n\t\t}),\n\t\t\"callingcode\": cognito.NewNumberAttribute(&NumberAttributeProps{\n\t\t\t\"min\": jsii.Number(1),\n\t\t\t\"max\": jsii.Number(3),\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"isEmployee\": cognito.NewBooleanAttribute(&CustomAttributeProps{\n\t\t\t\"mutable\": jsii.Boolean(true),\n\t\t}),\n\t\t\"joinedOn\": cognito.NewDateTimeAttribute(),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.StringAttributeProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.BooleanAttribute","@aws-cdk/aws-cognito.CustomAttributeProps","@aws-cdk/aws-cognito.DateTimeAttribute","@aws-cdk/aws-cognito.ICustomAttribute","@aws-cdk/aws-cognito.NumberAttribute","@aws-cdk/aws-cognito.NumberAttributeProps","@aws-cdk/aws-cognito.StandardAttribute","@aws-cdk/aws-cognito.StandardAttributes","@aws-cdk/aws-cognito.StringAttribute","@aws-cdk/aws-cognito.StringAttributeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":4,"10":5,"75":25,"91":3,"104":1,"106":4,"193":8,"194":5,"197":5,"226":1,"281":19},"fqnsFingerprint":"9c8c91bdad547f267073ce6d01f7807b75e0deda064591b978a1229feb5a0f27"},"0982f037c2e707856fe2875123b09e02fed6c93516e98203349b37eb1d3306bb":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    user_invitation=cognito.UserInvitationConfig(\n        email_subject=\"Invite to join our awesome app!\",\n        email_body=\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        sms_message=\"Hello {username}, your temporary password for our awesome app is {####}\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    UserInvitation = new UserInvitationConfig {\n        EmailSubject = \"Invite to join our awesome app!\",\n        EmailBody = \"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        SmsMessage = \"Hello {username}, your temporary password for our awesome app is {####}\"\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .userInvitation(UserInvitationConfig.builder()\n                .emailSubject(\"Invite to join our awesome app!\")\n                .emailBody(\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\")\n                .smsMessage(\"Hello {username}, your temporary password for our awesome app is {####}\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tUserInvitation: &UserInvitationConfig{\n\t\tEmailSubject: jsii.String(\"Invite to join our awesome app!\"),\n\t\tEmailBody: jsii.String(\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\"),\n\t\tSmsMessage: jsii.String(\"Hello {username}, your temporary password for our awesome app is {####}\"),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserInvitationConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserInvitationConfig","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":2,"194":1,"197":1,"226":1,"281":4},"fqnsFingerprint":"5d786f2fdd14724e3302179a0890ac05615f0d2538d22b40164050639d74d0e1"},"3b1e08b0da12b730bde05ff596a5bdc2cb8f324dcbfbaf3b19d41ffab9c9fbf2":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tAuthorizationCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_OPENID(),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://my-app-domain.com/welcome\"),\n\t\t},\n\t\tLogoutUrls: []*string{\n\t\t\tjsii.String(\"https://my-app-domain.com/signin\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPool"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#OPENID","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":14,"104":1,"106":1,"192":3,"193":3,"194":4,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":6},"fqnsFingerprint":"82a968d0c8b9587d5a118331b009bfeb69588d20d3adf2421cfb9417a3696185"},"cf26e0923f8681307a8d0969fb0a5249c88f7fbd6af503be080a77095283ca2a":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\nprovider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    user_pool=pool,\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\"\n)\n\nclient = pool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n)\n\nclient.node.add_dependency(provider)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\nvar provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    UserPool = pool,\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\"\n});\n\nvar client = pool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n});\n\nclient.Node.AddDependency(provider);","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\nUserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .userPool(pool)\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .build();\n\nUserPoolClient client = pool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON))\n        .build());\n\nclient.node.addDependency(provider);","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\nprovider := cognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tUserPool: pool,\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n})\n\nclient := pool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tSupportedIdentityProviders: []userPoolClientIdentityProvider{\n\t\tcognito.*userPoolClientIdentityProvider_AMAZON(),\n\t},\n})\n\nclient.Node.AddDependency(provider)","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolClient"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","@aws-cdk/core.Construct#node","@aws-cdk/core.ConstructNode#addDependency","@aws-cdk/core.IDependable","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":2,"192":1,"193":2,"194":7,"196":2,"197":2,"225":3,"226":1,"242":3,"243":3,"281":4},"fqnsFingerprint":"1e94ad3c35e6c6958cc7b7278e44d5e27a00aee8148da25c20cf326bb6cc64c8"},"b324fffa24697b75d80dc94943eb71a49da558252ace90f6aa3b54dd8f53097f":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON, cognito.UserPoolClientIdentityProvider.COGNITO\n    ]\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO))\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tSupportedIdentityProviders: []userPoolClientIdentityProvider{\n\t\tcognito.*userPoolClientIdentityProvider_AMAZON(),\n\t\tcognito.*userPoolClientIdentityProvider_COGNITO(),\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#COGNITO","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":12,"104":1,"192":1,"193":1,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"37cc9c5e782711ed3aa7fd74cd92385d97438f63255d9fc254e99551dcbb73df"},"0dcf29f6bbf8f03bc569fe4b4fa7bd5f041b3293e8e0c835a0579d284de7a42b":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\npool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tAuthorizationCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_OPENID(),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://my-app-domain.com/welcome\"),\n\t\t},\n\t\tLogoutUrls: []*string{\n\t\t\tjsii.String(\"https://my-app-domain.com/signin\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolClientOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#OPENID","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClientOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":14,"104":1,"106":1,"192":3,"193":3,"194":4,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":6},"fqnsFingerprint":"82a968d0c8b9587d5a118331b009bfeb69588d20d3adf2421cfb9417a3696185"},"6df70e89c8fd0d5e8adad9ea8dff2da432b2ab254121ab97d707a1a34083b456":{"translations":{"python":{"source":"imported_pool = cognito.UserPool.from_user_pool_id(self, \"imported-pool\", \"us-east-1_oiuR12Abd\")\ncognito.UserPoolClient(self, \"customer-app-client\",\n    user_pool=imported_pool\n)","version":"2"},"csharp":{"source":"var importedPool = UserPool.FromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nnew UserPoolClient(this, \"customer-app-client\", new UserPoolClientProps {\n    UserPool = importedPool\n});","version":"1"},"java":{"source":"IUserPool importedPool = UserPool.fromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nUserPoolClient.Builder.create(this, \"customer-app-client\")\n        .userPool(importedPool)\n        .build();","version":"1"},"go":{"source":"importedPool := cognito.UserPool_FromUserPoolId(this, jsii.String(\"imported-pool\"), jsii.String(\"us-east-1_oiuR12Abd\"))\ncognito.NewUserPoolClient(this, jsii.String(\"customer-app-client\"), &UserPoolClientProps{\n\tUserPool: importedPool,\n})","version":"1"},"$":{"source":"const importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolClientProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#fromUserPoolId","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":8,"104":2,"193":1,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"6608efe5830657b52b6fb2309db27ab1c1ed51e24d64900627caef7db0327103"},"de3a56b6bc5e9de99e95ead350ae012a9d95bb281889ed6c1d68c31113a5d1f5":{"translations":{"python":{"source":"userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)","version":"2"},"csharp":{"source":"var userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nvar client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nvar domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nvar signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});","version":"1"},"java":{"source":"UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());","version":"1"},"go":{"source":"userpool := cognito.NewUserPool(this, jsii.String(\"UserPool\"), &UserPoolProps{\n})\nclient := userpool.addClient(jsii.String(\"Client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tImplicitCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tjsii.String(\"https://myapp.com/home\"),\n\t\t\tjsii.String(\"https://myapp.com/users\"),\n\t\t},\n\t},\n})\ndomain := userpool.addDomain(jsii.String(\"Domain\"), &UserPoolDomainOptions{\n})\nsignInUrl := domain.SignInUrl(client, &SignInUrlOptions{\n\tRedirectUri: jsii.String(\"https://myapp.com/home\"),\n})","version":"1"},"$":{"source":"const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolDomain"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.SignInUrlOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomain#signInUrl","@aws-cdk/aws-cognito.UserPoolDomainOptions","@aws-cdk/aws-cognito.UserPoolProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ],\n  },\n});\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":18,"104":1,"106":1,"192":1,"193":6,"194":4,"196":3,"197":1,"225":4,"242":4,"243":4,"281":5},"fqnsFingerprint":"c43089a069e15f8c39a6d969ca2270bcb4ea6dd65989f9ea06b4e5a9ede2500d"},"e1f7537a6ba4ef5b38b33decfb6a92823dd70e2c9026d214b782aca6b77ca1f4":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nvar certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nvar domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\npool.addDomain(jsii.String(\"CognitoDomain\"), &UserPoolDomainOptions{\n\tCognitoDomain: &CognitoDomainOptions{\n\t\tDomainPrefix: jsii.String(\"my-awesome-app\"),\n\t},\n})\n\ncertificateArn := \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomainCert := certificatemanager.Certificate_FromCertificateArn(this, jsii.String(\"domainCert\"), certificateArn)\npool.addDomain(jsii.String(\"CustomDomain\"), &UserPoolDomainOptions{\n\tCustomDomain: &CustomDomainOptions{\n\t\tDomainName: jsii.String(\"user.myapp.com\"),\n\t\tCertificate: domainCert,\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolDomainOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-cognito.CognitoDomainOptions","@aws-cdk/aws-cognito.CustomDomainOptions","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolDomainOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":19,"104":2,"193":4,"194":5,"196":3,"197":1,"225":3,"226":2,"242":3,"243":3,"281":5},"fqnsFingerprint":"75d60300c871e090ebbd4766b4e5d7d33c6cc29b91ceabc52545256b86d3e142"},"38bd6ddd3164bf28d1be5b61998828ee35fe6069d033b790044035430596ab04":{"translations":{"python":{"source":"import aws_cdk.aws_cognito as cognito\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nfrom aws_cdk.core import App, CfnOutput, Stack\nfrom constructs import Construct\nimport aws_cdk.aws_elasticloadbalancingv2_actions as actions\n\nStack): lb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\nuser_pool = cognito.UserPool(self, \"UserPool\")\nuser_pool_client = cognito.UserPoolClient(self, \"Client\",\n    user_pool=user_pool,\n\n    # Required minimal configuration for use with an ELB\n    generate_secret=True,\n    auth_flows=cognito.AuthFlow(\n        user_password=True\n    ),\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.EMAIL],\n        callback_urls=[f\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\"\n        ]\n    )\n)\ncfn_client = user_pool_client.node.default_child\ncfn_client.add_property_override(\"RefreshTokenValidity\", 1)\ncfn_client.add_property_override(\"SupportedIdentityProviders\", [\"COGNITO\"])\n\nuser_pool_domain = cognito.UserPoolDomain(self, \"Domain\",\n    user_pool=user_pool,\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"test-cdk-prefix\"\n    )\n)\n\nlb.add_listener(\"Listener\",\n    port=443,\n    certificates=[certificate],\n    default_action=actions.AuthenticateCognitoAction(\n        user_pool=user_pool,\n        user_pool_client=user_pool_client,\n        user_pool_domain=user_pool_domain,\n        next=elbv2.ListenerAction.fixed_response(200,\n            content_type=\"text/plain\",\n            message_body=\"Authenticated\"\n        )\n    )\n)\n\nCfnOutput(self, \"DNS\",\n    value=lb.load_balancer_dns_name\n)\n\napp = App()\nCognitoStack(app, \"integ-cognito\")\napp.synth()","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Cognito;\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\nusing Constructs;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions;\n\nCognitoStack : Stack\n{var lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\nvar userPool = new UserPool(this, \"UserPool\");\nvar userPoolClient = new UserPoolClient(this, \"Client\", new UserPoolClientProps {\n    UserPool = userPool,\n\n    // Required minimal configuration for use with an ELB\n    GenerateSecret = true,\n    AuthFlows = new AuthFlow {\n        UserPassword = true\n    },\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.EMAIL },\n        CallbackUrls = new [] { $\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\" }\n    }\n});\nvar cfnClient = (CfnUserPoolClient)userPoolClient.Node.DefaultChild;\ncfnClient.AddPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.AddPropertyOverride(\"SupportedIdentityProviders\", new [] { \"COGNITO\" });\n\nvar userPoolDomain = new UserPoolDomain(this, \"Domain\", new UserPoolDomainProps {\n    UserPool = userPool,\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"test-cdk-prefix\"\n    }\n});\n\nlb.AddListener(\"Listener\", new BaseApplicationListenerProps {\n    Port = 443,\n    Certificates = new [] { certificate },\n    DefaultAction = new AuthenticateCognitoAction(new AuthenticateCognitoActionProps {\n        UserPool = userPool,\n        UserPoolClient = userPoolClient,\n        UserPoolDomain = userPoolDomain,\n        Next = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n            ContentType = \"text/plain\",\n            MessageBody = \"Authenticated\"\n        })\n    })\n});\n\nnew CfnOutput(this, \"DNS\", new CfnOutputProps {\n    Value = lb.LoadBalancerDnsName\n});\n\nvar app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.Synth();","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cognito.*;\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.App;\nimport software.amazon.awscdk.core.CfnOutput;\nimport software.amazon.awscdk.core.Stack;\nimport software.constructs.Construct;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.actions.*;\n\nCognitoStack extends Stack {CognitoStack(ApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\nUserPool userPool = new UserPool(this, \"UserPool\");\nUserPoolClient userPoolClient = UserPoolClient.Builder.create(this, \"Client\")\n        .userPool(userPool)\n\n        // Required minimal configuration for use with an ELB\n        .generateSecret(true)\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .build())\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.EMAIL))\n                .callbackUrls(List.of(String.format(\"https://%s/oauth2/idpresponse\", lb.getLoadBalancerDnsName())))\n                .build())\n        .build();\nCfnUserPoolClient cfnClient = (CfnUserPoolClient)userPoolClient.getNode().getDefaultChild();\ncfnClient.addPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.addPropertyOverride(\"SupportedIdentityProviders\", List.of(\"COGNITO\"));\n\nUserPoolDomain userPoolDomain = UserPoolDomain.Builder.create(this, \"Domain\")\n        .userPool(userPool)\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"test-cdk-prefix\")\n                .build())\n        .build();\n\nlb.addListener(\"Listener\", BaseApplicationListenerProps.builder()\n        .port(443)\n        .certificates(List.of(certificate))\n        .defaultAction(AuthenticateCognitoAction.Builder.create()\n                .userPool(userPool)\n                .userPoolClient(userPoolClient)\n                .userPoolDomain(userPoolDomain)\n                .next(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                        .contentType(\"text/plain\")\n                        .messageBody(\"Authenticated\")\n                        .build()))\n                .build())\n        .build());\n\nCfnOutput.Builder.create(this, \"DNS\")\n        .value(lb.getLoadBalancerDnsName())\n        .build();\n\nApp app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.synth();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawscognito\"\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\nimport \"github.com/aws/constructs-go/constructs\"\nimport actions \"github.com/aws-samples/dummy/lib\"\n\ncognitoStack struct {\nstack\n}\n\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &ApplicationLoadBalancerProps{\n\tVpc: Vpc,\n\tInternetFacing: jsii.Boolean(true),\n})\n\nuserPool := cognito.NewUserPool(this, jsii.String(\"UserPool\"))\nuserPoolClient := cognito.NewUserPoolClient(this, jsii.String(\"Client\"), &UserPoolClientProps{\n\tUserPool: UserPool,\n\n\t// Required minimal configuration for use with an ELB\n\tGenerateSecret: jsii.Boolean(true),\n\tAuthFlows: &AuthFlow{\n\t\tUserPassword: jsii.Boolean(true),\n\t},\n\tOAuth: &OAuthSettings{\n\t\tFlows: &OAuthFlows{\n\t\t\tAuthorizationCodeGrant: jsii.Boolean(true),\n\t\t},\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_EMAIL(),\n\t\t},\n\t\tCallbackUrls: []*string{\n\t\t\tfmt.Sprintf(\"https://%v/oauth2/idpresponse\", lb.LoadBalancerDnsName),\n\t\t},\n\t},\n})\ncfnClient := userPoolClient.Node.defaultChild.(cfnUserPoolClient)\ncfnClient.AddPropertyOverride(jsii.String(\"RefreshTokenValidity\"), jsii.Number(1))\ncfnClient.AddPropertyOverride(jsii.String(\"SupportedIdentityProviders\"), []interface{}{\n\tjsii.String(\"COGNITO\"),\n})\n\nuserPoolDomain := cognito.NewUserPoolDomain(this, jsii.String(\"Domain\"), &UserPoolDomainProps{\n\tUserPool: UserPool,\n\tCognitoDomain: &CognitoDomainOptions{\n\t\tDomainPrefix: jsii.String(\"test-cdk-prefix\"),\n\t},\n})\n\nlb.AddListener(jsii.String(\"Listener\"), &BaseApplicationListenerProps{\n\tPort: jsii.Number(443),\n\tCertificates: []iListenerCertificate{\n\t\tcertificate,\n\t},\n\tDefaultAction: actions.NewAuthenticateCognitoAction(&AuthenticateCognitoActionProps{\n\t\tUserPool: *UserPool,\n\t\tUserPoolClient: *UserPoolClient,\n\t\tUserPoolDomain: *UserPoolDomain,\n\t\tNext: elbv2.ListenerAction_FixedResponse(jsii.Number(200), &FixedResponseOptions{\n\t\t\tContentType: jsii.String(\"text/plain\"),\n\t\t\tMessageBody: jsii.String(\"Authenticated\"),\n\t\t}),\n\t}),\n})\n\nawscdkcore.NewCfnOutput(this, jsii.String(\"DNS\"), &CfnOutputProps{\n\tValue: lb.*LoadBalancerDnsName,\n})\n\napp := awscdkcore.NewApp()\nNewCognitoStack(app, jsii.String(\"integ-cognito\"))\napp.Synth()","version":"1"},"$":{"source":"    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolDomainProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AuthFlow","@aws-cdk/aws-cognito.CfnUserPoolClient","@aws-cdk/aws-cognito.CognitoDomainOptions","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.IUserPoolClient","@aws-cdk/aws-cognito.IUserPoolDomain","@aws-cdk/aws-cognito.OAuthFlows","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#EMAIL","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientProps","@aws-cdk/aws-cognito.UserPoolDomain","@aws-cdk/aws-cognito.UserPoolDomainProps","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoAction","@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoActionProps","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps","@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps","@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer#loadBalancerDnsName","@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions","@aws-cdk/aws-elasticloadbalancingv2.ListenerAction","@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse","@aws-cdk/core.App","@aws-cdk/core.CfnOutput","@aws-cdk/core.CfnOutputProps","@aws-cdk/core.CfnResource#addPropertyOverride","@aws-cdk/core.Construct#node","@aws-cdk/core.Stage#synth","constructs.Construct"],"fullSource":"import * as cognito from '@aws-cdk/aws-cognito';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport { App, CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '../lib';\n\nclass CognitoStack extends Stack {\n\n  /// !hide\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'Stack', {\n      maxAzs: 2,\n    });\n\n    const certificate: elbv2.IListenerCertificate = {\n      certificateArn: process.env.SELF_SIGNED_CERT_ARN ?? '',\n    };\n\n    /// !show\n    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();","syntaxKindCounter":{"8":3,"10":19,"15":1,"17":1,"75":78,"104":5,"106":4,"153":1,"169":1,"192":4,"193":11,"194":17,"196":5,"197":8,"211":1,"216":1,"217":1,"221":1,"225":6,"226":6,"242":6,"243":6,"245":1,"254":6,"255":6,"256":4,"257":2,"258":4,"279":1,"281":18,"282":6,"290":1},"fqnsFingerprint":"d069a5f15d467e2a2e2895788a7249a448ce6ee72a9c48011d1fdb701522977c"},"2bed70f8ea85afd5592cf509d1688dec403fe55cc8692d23a4fa5a54b115cbff":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    email=cognito.UserPoolEmail.with_sES(\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new UserPoolSESOptions {\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(UserPoolSESOptions.builder()\n                .fromEmail(\"noreply@myawesomeapp.com\")\n                .fromName(\"Awesome App\")\n                .replyTo(\"support@myawesomeapp.com\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tEmail: cognito.UserPoolEmail_WithSES(&UserPoolSESOptions{\n\t\tFromEmail: jsii.String(\"noreply@myawesomeapp.com\"),\n\t\tFromName: jsii.String(\"Awesome App\"),\n\t\tReplyTo: jsii.String(\"support@myawesomeapp.com\"),\n\t}),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolEmail"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolEmail","@aws-cdk/aws-cognito.UserPoolEmail#withSES","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolSESOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":9,"104":1,"193":2,"194":3,"196":1,"197":1,"226":1,"281":4},"fqnsFingerprint":"b3aa2d2216fb49407722bdaf7509979363cf49923111c080f8358655f0e5504e"},"8243b5881dda44925b6e5082f886df2da5e8830618b51bc4d0683aabd1f8f179":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\nprovider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    user_pool=pool,\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\"\n)\n\nclient = pool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n)\n\nclient.node.add_dependency(provider)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\nvar provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    UserPool = pool,\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\"\n});\n\nvar client = pool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n});\n\nclient.Node.AddDependency(provider);","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\nUserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .userPool(pool)\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .build();\n\nUserPoolClient client = pool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON))\n        .build());\n\nclient.node.addDependency(provider);","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\nprovider := cognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tUserPool: pool,\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n})\n\nclient := pool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tSupportedIdentityProviders: []userPoolClientIdentityProvider{\n\t\tcognito.*userPoolClientIdentityProvider_AMAZON(),\n\t},\n})\n\nclient.Node.AddDependency(provider)","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","@aws-cdk/core.Construct#node","@aws-cdk/core.ConstructNode#addDependency","@aws-cdk/core.IDependable","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":2,"192":1,"193":2,"194":7,"196":2,"197":2,"225":3,"226":1,"242":3,"243":3,"281":4},"fqnsFingerprint":"1e94ad3c35e6c6958cc7b7278e44d5e27a00aee8148da25c20cf326bb6cc64c8"},"7d01ea669d2b568dfa8c105e9caecb47e4438a274fbbdb2acdbe9e080df3f0bd":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\nprovider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    user_pool=pool,\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\"\n)\n\nclient = pool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n)\n\nclient.node.add_dependency(provider)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\nvar provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    UserPool = pool,\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\"\n});\n\nvar client = pool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n});\n\nclient.Node.AddDependency(provider);","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\nUserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .userPool(pool)\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .build();\n\nUserPoolClient client = pool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON))\n        .build());\n\nclient.node.addDependency(provider);","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\nprovider := cognito.NewUserPoolIdentityProviderAmazon(this, jsii.String(\"Amazon\"), &UserPoolIdentityProviderAmazonProps{\n\tUserPool: pool,\n\tClientId: jsii.String(\"amzn-client-id\"),\n\tClientSecret: jsii.String(\"amzn-client-secret\"),\n})\n\nclient := pool.addClient(jsii.String(\"app-client\"), &UserPoolClientOptions{\n\t// ...\n\tSupportedIdentityProviders: []userPoolClientIdentityProvider{\n\t\tcognito.*userPoolClientIdentityProvider_AMAZON(),\n\t},\n})\n\nclient.Node.AddDependency(provider)","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider","@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon","@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps","@aws-cdk/core.Construct#node","@aws-cdk/core.ConstructNode#addDependency","@aws-cdk/core.IDependable","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  userPool: pool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n});\n\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n});\n\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":21,"104":2,"192":1,"193":2,"194":7,"196":2,"197":2,"225":3,"226":1,"242":3,"243":3,"281":4},"fqnsFingerprint":"1e94ad3c35e6c6958cc7b7278e44d5e27a00aee8148da25c20cf326bb6cc64c8"},"65cc8672455564ca81f9c344fab99e890ee92ccb8f00f080952107c5df57c913":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_apple = cognito.UserPoolIdentityProviderApple(self, \"MyUserPoolIdentityProviderApple\",\n    client_id=\"clientId\",\n    key_id=\"keyId\",\n    private_key=\"privateKey\",\n    team_id=\"teamId\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderApple = new UserPoolIdentityProviderApple(this, \"MyUserPoolIdentityProviderApple\", new UserPoolIdentityProviderAppleProps {\n    ClientId = \"clientId\",\n    KeyId = \"keyId\",\n    PrivateKey = \"privateKey\",\n    TeamId = \"teamId\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderApple userPoolIdentityProviderApple = UserPoolIdentityProviderApple.Builder.create(this, \"MyUserPoolIdentityProviderApple\")\n        .clientId(\"clientId\")\n        .keyId(\"keyId\")\n        .privateKey(\"privateKey\")\n        .teamId(\"teamId\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderApple := cognito.NewUserPoolIdentityProviderApple(this, jsii.String(\"MyUserPoolIdentityProviderApple\"), &UserPoolIdentityProviderAppleProps{\n\tClientId: jsii.String(\"clientId\"),\n\tKeyId: jsii.String(\"keyId\"),\n\tPrivateKey: jsii.String(\"privateKey\"),\n\tTeamId: jsii.String(\"teamId\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderApple = new cognito.UserPoolIdentityProviderApple(this, 'MyUserPoolIdentityProviderApple', {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderApple"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderApple","@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderApple = new cognito.UserPoolIdentityProviderApple(this, 'MyUserPoolIdentityProviderApple', {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":55,"104":1,"130":2,"153":2,"169":2,"192":1,"193":3,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":26,"290":1},"fqnsFingerprint":"0ab1343a46db877606921d4038db4bbfbf4602e1f19a98eb19b20addcaaf163a"},"046dd8f7ba686e4e6a4a2df862eda7776fa6b45f01866068d9af7d7aef568c5c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_apple_props = cognito.UserPoolIdentityProviderAppleProps(\n    client_id=\"clientId\",\n    key_id=\"keyId\",\n    private_key=\"privateKey\",\n    team_id=\"teamId\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderAppleProps = new UserPoolIdentityProviderAppleProps {\n    ClientId = \"clientId\",\n    KeyId = \"keyId\",\n    PrivateKey = \"privateKey\",\n    TeamId = \"teamId\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderAppleProps userPoolIdentityProviderAppleProps = UserPoolIdentityProviderAppleProps.builder()\n        .clientId(\"clientId\")\n        .keyId(\"keyId\")\n        .privateKey(\"privateKey\")\n        .teamId(\"teamId\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderAppleProps := &UserPoolIdentityProviderAppleProps{\n\tClientId: jsii.String(\"clientId\"),\n\tKeyId: jsii.String(\"keyId\"),\n\tPrivateKey: jsii.String(\"privateKey\"),\n\tTeamId: jsii.String(\"teamId\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderAppleProps: cognito.UserPoolIdentityProviderAppleProps = {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderAppleProps: cognito.UserPoolIdentityProviderAppleProps = {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":55,"130":2,"153":3,"169":3,"192":1,"193":3,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":26,"290":1},"fqnsFingerprint":"05027bfb163098ef5b4991747b29cfec28d22771eb7c1bbf485eac68f1b15d86"},"fd638f3a48371e5684bb0b4677ac420d835ab7212e0defab219d29a6287da98a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_facebook = cognito.UserPoolIdentityProviderFacebook(self, \"MyUserPoolIdentityProviderFacebook\",\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    api_version=\"apiVersion\",\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderFacebook = new UserPoolIdentityProviderFacebook(this, \"MyUserPoolIdentityProviderFacebook\", new UserPoolIdentityProviderFacebookProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    ApiVersion = \"apiVersion\",\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderFacebook userPoolIdentityProviderFacebook = UserPoolIdentityProviderFacebook.Builder.create(this, \"MyUserPoolIdentityProviderFacebook\")\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .apiVersion(\"apiVersion\")\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderFacebook := cognito.NewUserPoolIdentityProviderFacebook(this, jsii.String(\"MyUserPoolIdentityProviderFacebook\"), &UserPoolIdentityProviderFacebookProps{\n\tClientId: jsii.String(\"clientId\"),\n\tClientSecret: jsii.String(\"clientSecret\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tApiVersion: jsii.String(\"apiVersion\"),\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderFacebook = new cognito.UserPoolIdentityProviderFacebook(this, 'MyUserPoolIdentityProviderFacebook', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebook"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebook","@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderFacebook = new cognito.UserPoolIdentityProviderFacebook(this, 'MyUserPoolIdentityProviderFacebook', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":54,"104":1,"130":2,"153":2,"169":2,"192":1,"193":3,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":25,"290":1},"fqnsFingerprint":"d32773d9d708d7dfab122e25f3a789e9e703dd0732bad9b633518a51ac112e21"},"d2e7b837a920e06f4e460c9c77f60317c9e27c94f73f24c7cb56255d48608506":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_facebook_props = cognito.UserPoolIdentityProviderFacebookProps(\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    api_version=\"apiVersion\",\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderFacebookProps = new UserPoolIdentityProviderFacebookProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    ApiVersion = \"apiVersion\",\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderFacebookProps userPoolIdentityProviderFacebookProps = UserPoolIdentityProviderFacebookProps.builder()\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .apiVersion(\"apiVersion\")\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderFacebookProps := &UserPoolIdentityProviderFacebookProps{\n\tClientId: jsii.String(\"clientId\"),\n\tClientSecret: jsii.String(\"clientSecret\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tApiVersion: jsii.String(\"apiVersion\"),\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderFacebookProps: cognito.UserPoolIdentityProviderFacebookProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderFacebookProps: cognito.UserPoolIdentityProviderFacebookProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":54,"130":2,"153":3,"169":3,"192":1,"193":3,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":25,"290":1},"fqnsFingerprint":"5e3b896851e93b59db14a363d0cf61011163f4c295f13438969f0712f2f1ce6e"},"19b9dd9602469cd6079b1407f21f24d03c374ea461cc891bac1208ea62d3e374":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_google = cognito.UserPoolIdentityProviderGoogle(self, \"MyUserPoolIdentityProviderGoogle\",\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderGoogle = new UserPoolIdentityProviderGoogle(this, \"MyUserPoolIdentityProviderGoogle\", new UserPoolIdentityProviderGoogleProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderGoogle userPoolIdentityProviderGoogle = UserPoolIdentityProviderGoogle.Builder.create(this, \"MyUserPoolIdentityProviderGoogle\")\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderGoogle := cognito.NewUserPoolIdentityProviderGoogle(this, jsii.String(\"MyUserPoolIdentityProviderGoogle\"), &UserPoolIdentityProviderGoogleProps{\n\tClientId: jsii.String(\"clientId\"),\n\tClientSecret: jsii.String(\"clientSecret\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderGoogle = new cognito.UserPoolIdentityProviderGoogle(this, 'MyUserPoolIdentityProviderGoogle', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogle"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogle","@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderGoogle = new cognito.UserPoolIdentityProviderGoogle(this, 'MyUserPoolIdentityProviderGoogle', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":53,"104":1,"130":2,"153":2,"169":2,"192":1,"193":3,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":24,"290":1},"fqnsFingerprint":"4432d2ed4d738c033f3f33902dd05589a1c2b2121653919fbbefe64cc6c116a2"},"759b4dc02dd9f40732758991dd47535821f3bd9f7f06b66ecc404f049abc7f05":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_google_props = cognito.UserPoolIdentityProviderGoogleProps(\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderGoogleProps = new UserPoolIdentityProviderGoogleProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderGoogleProps userPoolIdentityProviderGoogleProps = UserPoolIdentityProviderGoogleProps.builder()\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderGoogleProps := &UserPoolIdentityProviderGoogleProps{\n\tClientId: jsii.String(\"clientId\"),\n\tClientSecret: jsii.String(\"clientSecret\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderGoogleProps: cognito.UserPoolIdentityProviderGoogleProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderGoogleProps: cognito.UserPoolIdentityProviderGoogleProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":53,"130":2,"153":3,"169":3,"192":1,"193":3,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":24,"290":1},"fqnsFingerprint":"796d42a56b1011198c028beb17a28628821e0c3a1c02ea62bdcd0f632774c5a3"},"fc9613f942b3875907d9f4bf05214147cb8c7fdcdca6b52ce2742eb55e65f865":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_oidc = cognito.UserPoolIdentityProviderOidc(self, \"MyUserPoolIdentityProviderOidc\",\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    issuer_url=\"issuerUrl\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    attribute_request_method=cognito.OidcAttributeRequestMethod.GET,\n    endpoints=cognito.OidcEndpoints(\n        authorization=\"authorization\",\n        jwks_uri=\"jwksUri\",\n        token=\"token\",\n        user_info=\"userInfo\"\n    ),\n    identifiers=[\"identifiers\"],\n    name=\"name\",\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderOidc = new UserPoolIdentityProviderOidc(this, \"MyUserPoolIdentityProviderOidc\", new UserPoolIdentityProviderOidcProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    IssuerUrl = \"issuerUrl\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    AttributeRequestMethod = OidcAttributeRequestMethod.GET,\n    Endpoints = new OidcEndpoints {\n        Authorization = \"authorization\",\n        JwksUri = \"jwksUri\",\n        Token = \"token\",\n        UserInfo = \"userInfo\"\n    },\n    Identifiers = new [] { \"identifiers\" },\n    Name = \"name\",\n    Scopes = new [] { \"scopes\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderOidc userPoolIdentityProviderOidc = UserPoolIdentityProviderOidc.Builder.create(this, \"MyUserPoolIdentityProviderOidc\")\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .issuerUrl(\"issuerUrl\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .attributeRequestMethod(OidcAttributeRequestMethod.GET)\n        .endpoints(OidcEndpoints.builder()\n                .authorization(\"authorization\")\n                .jwksUri(\"jwksUri\")\n                .token(\"token\")\n                .userInfo(\"userInfo\")\n                .build())\n        .identifiers(List.of(\"identifiers\"))\n        .name(\"name\")\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderOidc := cognito.NewUserPoolIdentityProviderOidc(this, jsii.String(\"MyUserPoolIdentityProviderOidc\"), &UserPoolIdentityProviderOidcProps{\n\tClientId: jsii.String(\"clientId\"),\n\tClientSecret: jsii.String(\"clientSecret\"),\n\tIssuerUrl: jsii.String(\"issuerUrl\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tAttributeRequestMethod: cognito.OidcAttributeRequestMethod_GET,\n\tEndpoints: &OidcEndpoints{\n\t\tAuthorization: jsii.String(\"authorization\"),\n\t\tJwksUri: jsii.String(\"jwksUri\"),\n\t\tToken: jsii.String(\"token\"),\n\t\tUserInfo: jsii.String(\"userInfo\"),\n\t},\n\tIdentifiers: []*string{\n\t\tjsii.String(\"identifiers\"),\n\t},\n\tName: jsii.String(\"name\"),\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderOidc = new cognito.UserPoolIdentityProviderOidc(this, 'MyUserPoolIdentityProviderOidc', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  issuerUrl: 'issuerUrl',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  attributeRequestMethod: cognito.OidcAttributeRequestMethod.GET,\n  endpoints: {\n    authorization: 'authorization',\n    jwksUri: 'jwksUri',\n    token: 'token',\n    userInfo: 'userInfo',\n  },\n  identifiers: ['identifiers'],\n  name: 'name',\n  scopes: ['scopes'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderOidc"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.OidcAttributeRequestMethod","@aws-cdk/aws-cognito.OidcAttributeRequestMethod#GET","@aws-cdk/aws-cognito.OidcEndpoints","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderOidc","@aws-cdk/aws-cognito.UserPoolIdentityProviderOidcProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderOidc = new cognito.UserPoolIdentityProviderOidc(this, 'MyUserPoolIdentityProviderOidc', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  issuerUrl: 'issuerUrl',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  attributeRequestMethod: cognito.OidcAttributeRequestMethod.GET,\n  endpoints: {\n    authorization: 'authorization',\n    jwksUri: 'jwksUri',\n    token: 'token',\n    userInfo: 'userInfo',\n  },\n  identifiers: ['identifiers'],\n  name: 'name',\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":12,"75":65,"104":1,"130":2,"153":2,"169":2,"192":2,"193":4,"194":3,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":33,"290":1},"fqnsFingerprint":"0a2cdc8af7cefe1f0932b7112e689e0763f2f3ac968289fe23c607c028a0b0d1"},"d5fa1701eb2b3d3e9075050030d2d6b8959998a3673aab062892fef6d0f3abf1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_oidc_props = cognito.UserPoolIdentityProviderOidcProps(\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    issuer_url=\"issuerUrl\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    attribute_request_method=cognito.OidcAttributeRequestMethod.GET,\n    endpoints=cognito.OidcEndpoints(\n        authorization=\"authorization\",\n        jwks_uri=\"jwksUri\",\n        token=\"token\",\n        user_info=\"userInfo\"\n    ),\n    identifiers=[\"identifiers\"],\n    name=\"name\",\n    scopes=[\"scopes\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderOidcProps = new UserPoolIdentityProviderOidcProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    IssuerUrl = \"issuerUrl\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    AttributeRequestMethod = OidcAttributeRequestMethod.GET,\n    Endpoints = new OidcEndpoints {\n        Authorization = \"authorization\",\n        JwksUri = \"jwksUri\",\n        Token = \"token\",\n        UserInfo = \"userInfo\"\n    },\n    Identifiers = new [] { \"identifiers\" },\n    Name = \"name\",\n    Scopes = new [] { \"scopes\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderOidcProps userPoolIdentityProviderOidcProps = UserPoolIdentityProviderOidcProps.builder()\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .issuerUrl(\"issuerUrl\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .attributeRequestMethod(OidcAttributeRequestMethod.GET)\n        .endpoints(OidcEndpoints.builder()\n                .authorization(\"authorization\")\n                .jwksUri(\"jwksUri\")\n                .token(\"token\")\n                .userInfo(\"userInfo\")\n                .build())\n        .identifiers(List.of(\"identifiers\"))\n        .name(\"name\")\n        .scopes(List.of(\"scopes\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderOidcProps := &UserPoolIdentityProviderOidcProps{\n\tClientId: jsii.String(\"clientId\"),\n\tClientSecret: jsii.String(\"clientSecret\"),\n\tIssuerUrl: jsii.String(\"issuerUrl\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n\tAttributeRequestMethod: cognito.OidcAttributeRequestMethod_GET,\n\tEndpoints: &OidcEndpoints{\n\t\tAuthorization: jsii.String(\"authorization\"),\n\t\tJwksUri: jsii.String(\"jwksUri\"),\n\t\tToken: jsii.String(\"token\"),\n\t\tUserInfo: jsii.String(\"userInfo\"),\n\t},\n\tIdentifiers: []*string{\n\t\tjsii.String(\"identifiers\"),\n\t},\n\tName: jsii.String(\"name\"),\n\tScopes: []*string{\n\t\tjsii.String(\"scopes\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderOidcProps: cognito.UserPoolIdentityProviderOidcProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  issuerUrl: 'issuerUrl',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  attributeRequestMethod: cognito.OidcAttributeRequestMethod.GET,\n  endpoints: {\n    authorization: 'authorization',\n    jwksUri: 'jwksUri',\n    token: 'token',\n    userInfo: 'userInfo',\n  },\n  identifiers: ['identifiers'],\n  name: 'name',\n  scopes: ['scopes'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderOidcProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.OidcAttributeRequestMethod","@aws-cdk/aws-cognito.OidcAttributeRequestMethod#GET","@aws-cdk/aws-cognito.OidcEndpoints","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderOidcProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderOidcProps: cognito.UserPoolIdentityProviderOidcProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  issuerUrl: 'issuerUrl',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  attributeRequestMethod: cognito.OidcAttributeRequestMethod.GET,\n  endpoints: {\n    authorization: 'authorization',\n    jwksUri: 'jwksUri',\n    token: 'token',\n    userInfo: 'userInfo',\n  },\n  identifiers: ['identifiers'],\n  name: 'name',\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":11,"75":65,"130":2,"153":3,"169":3,"192":2,"193":4,"194":2,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":33,"290":1},"fqnsFingerprint":"8cf3b1604622530a607f6b7245315be8e44e1527543b6b7e308dc5dd9610fced"},"be20be50003970aabd4323232a4361e3da33224f02e94c92f8c3d71ff7be520f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute: cognito.ProviderAttribute\n# user_pool: cognito.UserPool\n\nuser_pool_identity_provider_props = cognito.UserPoolIdentityProviderProps(\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nvar userPoolIdentityProviderProps = new UserPoolIdentityProviderProps {\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderProps userPoolIdentityProviderProps = UserPoolIdentityProviderProps.builder()\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar providerAttribute providerAttribute\nvar userPool userPool\n\nuserPoolIdentityProviderProps := &UserPoolIdentityProviderProps{\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tAttributeMapping: &AttributeMapping{\n\t\tAddress: providerAttribute,\n\t\tBirthdate: providerAttribute,\n\t\tCustom: map[string]*providerAttribute{\n\t\t\t\"customKey\": providerAttribute,\n\t\t},\n\t\tEmail: providerAttribute,\n\t\tFamilyName: providerAttribute,\n\t\tFullname: providerAttribute,\n\t\tGender: providerAttribute,\n\t\tGivenName: providerAttribute,\n\t\tLastUpdateTime: providerAttribute,\n\t\tLocale: providerAttribute,\n\t\tMiddleName: providerAttribute,\n\t\tNickname: providerAttribute,\n\t\tPhoneNumber: providerAttribute,\n\t\tPreferredUsername: providerAttribute,\n\t\tProfilePage: providerAttribute,\n\t\tProfilePicture: providerAttribute,\n\t\tTimezone: providerAttribute,\n\t\tWebsite: providerAttribute,\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderProps: cognito.UserPoolIdentityProviderProps = {\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.AttributeMapping","@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.ProviderAttribute","@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderProps: cognito.UserPoolIdentityProviderProps = {\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":50,"130":2,"153":3,"169":3,"193":3,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":21,"290":1},"fqnsFingerprint":"b3c29e276ea4d34e720b00d582cdbbe95dbd98db760ede8348d2f6d952a33654"},"55ff2ab5245bdb822c0c75b8c7fe35e6a2975d49ae5ac06b393f364fc9fb2840":{"translations":{"python":{"source":"auth_challenge_fn = lambda_.Function(self, \"authChallengeFn\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"path/to/asset\"))\n)\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    # ...\n    lambda_triggers=cognito.UserPoolTriggers(\n        create_auth_challenge=auth_challenge_fn\n    )\n)\n\nuserpool.add_trigger(cognito.UserPoolOperation.USER_MIGRATION, lambda_.Function(self, \"userMigrationFn\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"path/to/asset\"))\n))","version":"2"},"csharp":{"source":"var authChallengeFn = new Function(this, \"authChallengeFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"path/to/asset\"))\n});\n\nvar userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    LambdaTriggers = new UserPoolTriggers {\n        CreateAuthChallenge = authChallengeFn\n    }\n});\n\nuserpool.AddTrigger(UserPoolOperation.USER_MIGRATION, new Function(this, \"userMigrationFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"path/to/asset\"))\n}));","version":"1"},"java":{"source":"Function authChallengeFn = Function.Builder.create(this, \"authChallengeFn\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"path/to/asset\")))\n        .build();\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .createAuthChallenge(authChallengeFn)\n                .build())\n        .build();\n\nuserpool.addTrigger(UserPoolOperation.USER_MIGRATION, Function.Builder.create(this, \"userMigrationFn\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"path/to/asset\")))\n        .build());","version":"1"},"go":{"source":"authChallengeFn := lambda.NewFunction(this, jsii.String(\"authChallengeFn\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_FromAsset(path.join(__dirname, jsii.String(\"path/to/asset\"))),\n})\n\nuserpool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tLambdaTriggers: &UserPoolTriggers{\n\t\tCreateAuthChallenge: authChallengeFn,\n\t},\n})\n\nuserpool.AddTrigger(cognito.UserPoolOperation_USER_MIGRATION(), lambda.NewFunction(this, jsii.String(\"userMigrationFn\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_*FromAsset(path.join(__dirname, jsii.String(\"path/to/asset\"))),\n}))","version":"1"},"$":{"source":"const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolOperation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#addTrigger","@aws-cdk/aws-cognito.UserPoolOperation","@aws-cdk/aws-cognito.UserPoolOperation#USER_MIGRATION","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolTriggers","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Code#fromAsset","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#NODEJS_14_X","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":40,"104":3,"193":4,"194":16,"196":5,"197":3,"225":2,"226":1,"242":2,"243":2,"281":8},"fqnsFingerprint":"f516b6f6eed07f1e809f2aca6e8d3e87734f26ee162071561d55703de0d4ac4c"},"5bb65e5fbbafdadf683a892d3f4b19a0bb8b2f1874ce22c0f627ae224e02d225":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tSelfSignUpEnabled: jsii.Boolean(true),\n\tUserVerification: &UserVerificationConfig{\n\t\tEmailSubject: jsii.String(\"Verify your email for our awesome app!\"),\n\t\tEmailBody: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t\tEmailStyle: cognito.VerificationEmailStyle_CODE,\n\t\tSmsMessage: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserVerificationConfig","@aws-cdk/aws-cognito.VerificationEmailStyle","@aws-cdk/aws-cognito.VerificationEmailStyle#CODE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":11,"104":1,"106":1,"193":2,"194":3,"197":1,"226":1,"281":6},"fqnsFingerprint":"324589d39db344c12a2a7b9f1a0ce57c2b67b3f8baa3d60cf6fcf1ce86fbfd6c"},"6e893a9a58e7ef1bf011001225d6fc6a41a896ad8852001cdbae65b3cb4ca1b0":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolResourceServer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"60d90190e57e1c95e20a7c32e9429e0cd93738537f823507d318cda6dc764171":{"translations":{"python":{"source":"pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = cognito.ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = cognito.ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[cognito.OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)","version":"2"},"csharp":{"source":"var pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new ResourceServerScopeProps { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nvar userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nvar readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nvar fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});","version":"1"},"java":{"source":"UserPool pool = new UserPool(this, \"Pool\");\n\nResourceServerScope readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nResourceServerScope fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());","version":"1"},"go":{"source":"pool := cognito.NewUserPool(this, jsii.String(\"Pool\"))\n\nreadOnlyScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"read\"),\n\tScopeDescription: jsii.String(\"Read-only access\"),\n})\nfullAccessScope := cognito.NewResourceServerScope(&ResourceServerScopeProps{\n\tScopeName: jsii.String(\"*\"),\n\tScopeDescription: jsii.String(\"Full access\"),\n})\n\nuserServer := pool.addResourceServer(jsii.String(\"ResourceServer\"), &UserPoolResourceServerOptions{\n\tIdentifier: jsii.String(\"users\"),\n\tScopes: []resourceServerScope{\n\t\treadOnlyScope,\n\t\tfullAccessScope,\n\t},\n})\n\nreadOnlyClient := pool.addClient(jsii.String(\"read-only-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []oAuthScope{\n\t\t\tcognito.*oAuthScope_ResourceServer(userServer, readOnlyScope),\n\t\t},\n\t},\n})\n\nfullAccessClient := pool.addClient(jsii.String(\"full-access-client\"), &UserPoolClientOptions{\n\t// ...\n\tOAuth: &OAuthSettings{\n\t\t// ...\n\t\tScopes: []*oAuthScope{\n\t\t\tcognito.*oAuthScope_*ResourceServer(userServer, fullAccessScope),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolResourceServerOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPoolResourceServer","@aws-cdk/aws-cognito.OAuthScope","@aws-cdk/aws-cognito.OAuthScope#resourceServer","@aws-cdk/aws-cognito.OAuthSettings","@aws-cdk/aws-cognito.ResourceServerScope","@aws-cdk/aws-cognito.ResourceServerScopeProps","@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolClient","@aws-cdk/aws-cognito.UserPoolClientOptions","@aws-cdk/aws-cognito.UserPoolResourceServer","@aws-cdk/aws-cognito.UserPoolResourceServerOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new cognito.ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new cognito.ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ cognito.OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":1,"192":3,"193":7,"194":10,"196":5,"197":3,"225":6,"242":6,"243":6,"281":10},"fqnsFingerprint":"f29d6b859bf7f40445a180b26fdde550d8f37f22bcd58adb4da9f6df7192ed7e"},"18c6673da26618277e33d2e257bef67c2f4849bf8dab1c8c29e018542fc96745":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# resource_server_scope: cognito.ResourceServerScope\n# user_pool: cognito.UserPool\n\nuser_pool_resource_server_props = cognito.UserPoolResourceServerProps(\n    identifier=\"identifier\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    scopes=[resource_server_scope],\n    user_pool_resource_server_name=\"userPoolResourceServerName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nResourceServerScope resourceServerScope;\nUserPool userPool;\n\nvar userPoolResourceServerProps = new UserPoolResourceServerProps {\n    Identifier = \"identifier\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    Scopes = new [] { resourceServerScope },\n    UserPoolResourceServerName = \"userPoolResourceServerName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nResourceServerScope resourceServerScope;\nUserPool userPool;\n\nUserPoolResourceServerProps userPoolResourceServerProps = UserPoolResourceServerProps.builder()\n        .identifier(\"identifier\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .scopes(List.of(resourceServerScope))\n        .userPoolResourceServerName(\"userPoolResourceServerName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar resourceServerScope resourceServerScope\nvar userPool userPool\n\nuserPoolResourceServerProps := &UserPoolResourceServerProps{\n\tIdentifier: jsii.String(\"identifier\"),\n\tUserPool: userPool,\n\n\t// the properties below are optional\n\tScopes: []*resourceServerScope{\n\t\tresourceServerScope,\n\t},\n\tUserPoolResourceServerName: jsii.String(\"userPoolResourceServerName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const resourceServerScope: cognito.ResourceServerScope;\ndeclare const userPool: cognito.UserPool;\nconst userPoolResourceServerProps: cognito.UserPoolResourceServerProps = {\n  identifier: 'identifier',\n  userPool: userPool,\n\n  // the properties below are optional\n  scopes: [resourceServerScope],\n  userPoolResourceServerName: 'userPoolResourceServerName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolResourceServerProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.IUserPool","@aws-cdk/aws-cognito.UserPoolResourceServerProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const resourceServerScope: cognito.ResourceServerScope;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolResourceServerProps: cognito.UserPoolResourceServerProps = {\n  identifier: 'identifier',\n  userPool: userPool,\n\n  // the properties below are optional\n  scopes: [resourceServerScope],\n  userPoolResourceServerName: 'userPoolResourceServerName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":16,"130":2,"153":3,"169":3,"192":1,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"96c8ed23b50d7d25e268d9680a7524ade4f7eaddde59b384df3b9a4ab1a525e1"},"e41edfe3eafaa15a787c0d81cd7a81a93cb4ed25e07492e40c937d3f89a44ba4":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    email=cognito.UserPoolEmail.with_sES(\n        ses_region=\"us-east-1\",\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new UserPoolSESOptions {\n        SesRegion = \"us-east-1\",\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(UserPoolSESOptions.builder()\n                .sesRegion(\"us-east-1\")\n                .fromEmail(\"noreply@myawesomeapp.com\")\n                .fromName(\"Awesome App\")\n                .replyTo(\"support@myawesomeapp.com\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tEmail: cognito.UserPoolEmail_WithSES(&UserPoolSESOptions{\n\t\tSesRegion: jsii.String(\"us-east-1\"),\n\t\tFromEmail: jsii.String(\"noreply@myawesomeapp.com\"),\n\t\tFromName: jsii.String(\"Awesome App\"),\n\t\tReplyTo: jsii.String(\"support@myawesomeapp.com\"),\n\t}),\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolSESOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolEmail","@aws-cdk/aws-cognito.UserPoolEmail#withSES","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolSESOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: cognito.UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":10,"104":1,"193":2,"194":3,"196":1,"197":1,"226":1,"281":5},"fqnsFingerprint":"b3aa2d2216fb49407722bdaf7509979363cf49923111c080f8358655f0e5504e"},"ffee7963cf94ed37ea013b084efc8edd4f20783b09753f60057a8e8c827cd2c5":{"translations":{"python":{"source":"auth_challenge_fn = lambda_.Function(self, \"authChallengeFn\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"path/to/asset\"))\n)\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    # ...\n    lambda_triggers=cognito.UserPoolTriggers(\n        create_auth_challenge=auth_challenge_fn\n    )\n)\n\nuserpool.add_trigger(cognito.UserPoolOperation.USER_MIGRATION, lambda_.Function(self, \"userMigrationFn\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"path/to/asset\"))\n))","version":"2"},"csharp":{"source":"var authChallengeFn = new Function(this, \"authChallengeFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"path/to/asset\"))\n});\n\nvar userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    LambdaTriggers = new UserPoolTriggers {\n        CreateAuthChallenge = authChallengeFn\n    }\n});\n\nuserpool.AddTrigger(UserPoolOperation.USER_MIGRATION, new Function(this, \"userMigrationFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"path/to/asset\"))\n}));","version":"1"},"java":{"source":"Function authChallengeFn = Function.Builder.create(this, \"authChallengeFn\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"path/to/asset\")))\n        .build();\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .createAuthChallenge(authChallengeFn)\n                .build())\n        .build();\n\nuserpool.addTrigger(UserPoolOperation.USER_MIGRATION, Function.Builder.create(this, \"userMigrationFn\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"path/to/asset\")))\n        .build());","version":"1"},"go":{"source":"authChallengeFn := lambda.NewFunction(this, jsii.String(\"authChallengeFn\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_FromAsset(path.join(__dirname, jsii.String(\"path/to/asset\"))),\n})\n\nuserpool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tLambdaTriggers: &UserPoolTriggers{\n\t\tCreateAuthChallenge: authChallengeFn,\n\t},\n})\n\nuserpool.AddTrigger(cognito.UserPoolOperation_USER_MIGRATION(), lambda.NewFunction(this, jsii.String(\"userMigrationFn\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_*FromAsset(path.join(__dirname, jsii.String(\"path/to/asset\"))),\n}))","version":"1"},"$":{"source":"const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserPoolTriggers"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#addTrigger","@aws-cdk/aws-cognito.UserPoolOperation","@aws-cdk/aws-cognito.UserPoolOperation#USER_MIGRATION","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolTriggers","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Code#fromAsset","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#NODEJS_14_X","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  },\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'path/to/asset')),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":40,"104":3,"193":4,"194":16,"196":5,"197":3,"225":2,"226":1,"242":2,"243":2,"281":8},"fqnsFingerprint":"f516b6f6eed07f1e809f2aca6e8d3e87734f26ee162071561d55703de0d4ac4c"},"275fa9a6f337a3377926d29ecc197e10c9ef6e002a5516d6e2f31fa33af54bde":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tSelfSignUpEnabled: jsii.Boolean(true),\n\tUserVerification: &UserVerificationConfig{\n\t\tEmailSubject: jsii.String(\"Verify your email for our awesome app!\"),\n\t\tEmailBody: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t\tEmailStyle: cognito.VerificationEmailStyle_CODE,\n\t\tSmsMessage: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.UserVerificationConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserVerificationConfig","@aws-cdk/aws-cognito.VerificationEmailStyle","@aws-cdk/aws-cognito.VerificationEmailStyle#CODE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":11,"104":1,"106":1,"193":2,"194":3,"197":1,"226":1,"281":6},"fqnsFingerprint":"324589d39db344c12a2a7b9f1a0ce57c2b67b3f8baa3d60cf6fcf1ce86fbfd6c"},"777785d471e9cff454f3ceb837125d3bdd4a3f29f7f1b82ce5d95cb466151328":{"translations":{"python":{"source":"cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)","version":"2"},"csharp":{"source":"new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});","version":"1"},"java":{"source":"UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();","version":"1"},"go":{"source":"cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\t// ...\n\tSelfSignUpEnabled: jsii.Boolean(true),\n\tUserVerification: &UserVerificationConfig{\n\t\tEmailSubject: jsii.String(\"Verify your email for our awesome app!\"),\n\t\tEmailBody: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t\tEmailStyle: cognito.VerificationEmailStyle_CODE,\n\t\tSmsMessage: jsii.String(\"Thanks for signing up to our awesome app! Your verification code is {####}\"),\n\t},\n})","version":"1"},"$":{"source":"new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cognito.VerificationEmailStyle"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserVerificationConfig","@aws-cdk/aws-cognito.VerificationEmailStyle","@aws-cdk/aws-cognito.VerificationEmailStyle#CODE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":11,"104":1,"106":1,"193":2,"194":3,"197":1,"226":1,"281":6},"fqnsFingerprint":"324589d39db344c12a2a7b9f1a0ce57c2b67b3f8baa3d60cf6fcf1ce86fbfd6c"}}}