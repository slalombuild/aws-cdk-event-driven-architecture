"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderAttribute = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * An attribute available from a third party identity provider.
 */
class ProviderAttribute {
    constructor(attributeName) {
        this.attributeName = attributeName;
    }
    /**
     * Use this to specify an attribute from the identity provider that is not pre-defined in the CDK.
     * @param attributeName the attribute value string as recognized by the provider
     */
    static other(attributeName) {
        return new ProviderAttribute(attributeName);
    }
}
exports.ProviderAttribute = ProviderAttribute;
_a = JSII_RTTI_SYMBOL_1;
ProviderAttribute[_a] = { fqn: "@aws-cdk/aws-cognito.ProviderAttribute", version: "1.199.0" };
/** The email attribute provided by Apple */
ProviderAttribute.APPLE_EMAIL = new ProviderAttribute('email');
/** The name attribute provided by Apple */
ProviderAttribute.APPLE_NAME = new ProviderAttribute('name');
/** The first name attribute provided by Apple */
ProviderAttribute.APPLE_FIRST_NAME = new ProviderAttribute('firstName');
/** The last name attribute provided by Apple */
ProviderAttribute.APPLE_LAST_NAME = new ProviderAttribute('lastName');
/** The user id attribute provided by Amazon */
ProviderAttribute.AMAZON_USER_ID = new ProviderAttribute('user_id');
/** The email attribute provided by Amazon */
ProviderAttribute.AMAZON_EMAIL = new ProviderAttribute('email');
/** The name attribute provided by Amazon */
ProviderAttribute.AMAZON_NAME = new ProviderAttribute('name');
/** The postal code attribute provided by Amazon */
ProviderAttribute.AMAZON_POSTAL_CODE = new ProviderAttribute('postal_code');
/** The user id attribute provided by Facebook */
ProviderAttribute.FACEBOOK_ID = new ProviderAttribute('id');
/** The birthday attribute provided by Facebook */
ProviderAttribute.FACEBOOK_BIRTHDAY = new ProviderAttribute('birthday');
/** The email attribute provided by Facebook */
ProviderAttribute.FACEBOOK_EMAIL = new ProviderAttribute('email');
/** The name attribute provided by Facebook */
ProviderAttribute.FACEBOOK_NAME = new ProviderAttribute('name');
/** The first name attribute provided by Facebook */
ProviderAttribute.FACEBOOK_FIRST_NAME = new ProviderAttribute('first_name');
/** The last name attribute provided by Facebook */
ProviderAttribute.FACEBOOK_LAST_NAME = new ProviderAttribute('last_name');
/** The middle name attribute provided by Facebook */
ProviderAttribute.FACEBOOK_MIDDLE_NAME = new ProviderAttribute('middle_name');
/** The gender attribute provided by Facebook */
ProviderAttribute.FACEBOOK_GENDER = new ProviderAttribute('gender');
/** The locale attribute provided by Facebook */
ProviderAttribute.FACEBOOK_LOCALE = new ProviderAttribute('locale');
/** The name attribute provided by Google */
ProviderAttribute.GOOGLE_NAMES = new ProviderAttribute('names');
/** The gender attribute provided by Google */
ProviderAttribute.GOOGLE_GENDER = new ProviderAttribute('gender');
/** The birthday attribute provided by Google */
ProviderAttribute.GOOGLE_BIRTHDAYS = new ProviderAttribute('birthdays');
/** The phone number attribute provided by Google */
ProviderAttribute.GOOGLE_PHONE_NUMBERS = new ProviderAttribute('phoneNumbers');
/** The email attribute provided by Google */
ProviderAttribute.GOOGLE_EMAIL = new ProviderAttribute('email');
/** The name attribute provided by Google */
ProviderAttribute.GOOGLE_NAME = new ProviderAttribute('name');
/** The picture attribute provided by Google */
ProviderAttribute.GOOGLE_PICTURE = new ProviderAttribute('picture');
/** The given name attribute provided by Google */
ProviderAttribute.GOOGLE_GIVEN_NAME = new ProviderAttribute('given_name');
/** The family name attribute provided by Google */
ProviderAttribute.GOOGLE_FAMILY_NAME = new ProviderAttribute('family_name');
//# sourceMappingURL=data:application/json;base64,