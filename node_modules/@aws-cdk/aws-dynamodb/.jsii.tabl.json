{"version":"2","toolVersion":"1.80.0","snippets":{"5f99a73bbab87a7778e98e67cac5bed07b9f0041c98965758958c44ab52b5d0d":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING)\n)","version":"2"},"csharp":{"source":"var table = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING }\n});","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .build();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n})","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":16}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":9,"104":1,"193":2,"194":3,"197":1,"225":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"813b92e702b9522f42947062337d126cace0959d4583c51d5454f7d90ac3af42"},"3752a96bc1729afec6597b23fb5a96f88c59e1f37eec091c9482f3bef0479c0a":{"translations":{"python":{"source":"# user: iam.User\n\ntable = dynamodb.Table.from_table_arn(self, \"ImportedTable\", \"arn:aws:dynamodb:us-east-1:111111111:table/my-table\")\n# now you can just call methods on the table\ntable.grant_read_write_data(user)","version":"2"},"csharp":{"source":"User user;\n\nvar table = Table.FromTableArn(this, \"ImportedTable\", \"arn:aws:dynamodb:us-east-1:111111111:table/my-table\");\n// now you can just call methods on the table\ntable.GrantReadWriteData(user);","version":"1"},"java":{"source":"User user;\n\nITable table = Table.fromTableArn(this, \"ImportedTable\", \"arn:aws:dynamodb:us-east-1:111111111:table/my-table\");\n// now you can just call methods on the table\ntable.grantReadWriteData(user);","version":"1"},"go":{"source":"var user user\n\ntable := dynamodb.Table_FromTableArn(this, jsii.String(\"ImportedTable\"), jsii.String(\"arn:aws:dynamodb:us-east-1:111111111:table/my-table\"))\n// now you can just call methods on the table\ntable.GrantReadWriteData(user)","version":"1"},"$":{"source":"declare const user: iam.User;\nconst table = dynamodb.Table.fromTableArn(this, 'ImportedTable', 'arn:aws:dynamodb:us-east-1:111111111:table/my-table');\n// now you can just call methods on the table\ntable.grantReadWriteData(user);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":28}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.ITable","@aws-cdk/aws-dynamodb.ITable#grantReadWriteData","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#fromTableArn","@aws-cdk/aws-iam.IGrantable","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const user: iam.User;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst table = dynamodb.Table.fromTableArn(this, 'ImportedTable', 'arn:aws:dynamodb:us-east-1:111111111:table/my-table');\n// now you can just call methods on the table\ntable.grantReadWriteData(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":10,"104":1,"130":1,"153":1,"169":1,"194":3,"196":2,"225":2,"226":1,"242":2,"243":2,"290":1},"fqnsFingerprint":"01f8f0a82ea6c405a0c8d5918b559d68b7727a1fd5f10c0d838b609a4617d7f7"},"a3c8ceb7753f4c5803144390143fd4cd210136819fdc6f103a6ae7d600ce0f69":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    billing_mode=dynamodb.BillingMode.PAY_PER_REQUEST\n)","version":"2"},"csharp":{"source":"var table = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    BillingMode = BillingMode.PAY_PER_REQUEST\n});","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .billingMode(BillingMode.PAY_PER_REQUEST)\n        .build();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tBillingMode: dynamodb.BillingMode_PAY_PER_REQUEST,\n})","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":51}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PAY_PER_REQUEST","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":13,"104":1,"193":2,"194":5,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"ac1e6706cec8344672e297e095a2a84a73a6b1990c8db4197172146723e24e96"},"4ddef096261651c5908dff3d3fa6aae2ea104fa8571769b4b3a0e37102319790":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    table_class=dynamodb.TableClass.STANDARD_INFREQUENT_ACCESS\n)","version":"2"},"csharp":{"source":"var table = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    TableClass = TableClass.STANDARD_INFREQUENT_ACCESS\n});","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .tableClass(TableClass.STANDARD_INFREQUENT_ACCESS)\n        .build();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tTableClass: dynamodb.TableClass_STANDARD_INFREQUENT_ACCESS,\n})","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  tableClass: dynamodb.TableClass.STANDARD_INFREQUENT_ACCESS,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":68}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableClass","@aws-cdk/aws-dynamodb.TableClass#STANDARD_INFREQUENT_ACCESS","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  tableClass: dynamodb.TableClass.STANDARD_INFREQUENT_ACCESS,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":13,"104":1,"193":2,"194":5,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"457ff3be0d0a744647f5db55ded43a0d0a5d0d314e927ad17a32edd8ddbcd91d"},"a693f0310ecc2e1197f703a762f9e62d59e8c27118bf74581874b9f81f54800d":{"translations":{"python":{"source":"read_scaling = table.auto_scale_read_capacity(min_capacity=1, max_capacity=50)\n\nread_scaling.scale_on_utilization(\n    target_utilization_percent=50\n)\n\nread_scaling.scale_on_schedule(\"ScaleUpInTheMorning\",\n    schedule=appscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)\n\nread_scaling.scale_on_schedule(\"ScaleDownAtNight\",\n    schedule=appscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    max_capacity=20\n)","version":"2"},"csharp":{"source":"var readScaling = table.AutoScaleReadCapacity(new EnableScalingProps { MinCapacity = 1, MaxCapacity = 50 });\n\nreadScaling.ScaleOnUtilization(new UtilizationScalingProps {\n    TargetUtilizationPercent = 50\n});\n\nreadScaling.ScaleOnSchedule(\"ScaleUpInTheMorning\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});\n\nreadScaling.ScaleOnSchedule(\"ScaleDownAtNight\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MaxCapacity = 20\n});","version":"1"},"java":{"source":"IScalableTableAttribute readScaling = table.autoScaleReadCapacity(EnableScalingProps.builder().minCapacity(1).maxCapacity(50).build());\n\nreadScaling.scaleOnUtilization(UtilizationScalingProps.builder()\n        .targetUtilizationPercent(50)\n        .build());\n\nreadScaling.scaleOnSchedule(\"ScaleUpInTheMorning\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());\n\nreadScaling.scaleOnSchedule(\"ScaleDownAtNight\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .maxCapacity(20)\n        .build());","version":"1"},"go":{"source":"readScaling := table.AutoScaleReadCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(50),\n})\n\nreadScaling.ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(50),\n})\n\nreadScaling.ScaleOnSchedule(jsii.String(\"ScaleUpInTheMorning\"), &ScalingSchedule{\n\tSchedule: appscaling.Schedule_Cron(&CronOptions{\n\t\tHour: jsii.String(\"8\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMinCapacity: jsii.Number(20),\n})\n\nreadScaling.ScaleOnSchedule(jsii.String(\"ScaleDownAtNight\"), &ScalingSchedule{\n\tSchedule: appscaling.Schedule_*Cron(&CronOptions{\n\t\tHour: jsii.String(\"20\"),\n\t\tMinute: jsii.String(\"0\"),\n\t}),\n\tMaxCapacity: jsii.Number(20),\n})","version":"1"},"$":{"source":"const readScaling = table.autoScaleReadCapacity({ minCapacity: 1, maxCapacity: 50 });\n\nreadScaling.scaleOnUtilization({\n  targetUtilizationPercent: 50,\n});\n\nreadScaling.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nreadScaling.scaleOnSchedule('ScaleDownAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  maxCapacity: 20,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":87}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.CronOptions","@aws-cdk/aws-applicationautoscaling.ScalingSchedule","@aws-cdk/aws-applicationautoscaling.Schedule","@aws-cdk/aws-applicationautoscaling.Schedule#cron","@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnSchedule","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table#autoScaleReadCapacity","@aws-cdk/aws-dynamodb.UtilizationScalingProps","@aws-cdk/core.RemovalPolicy"],"fullSource":"import * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\nimport * as dynamodb from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-dynamodb');\n\nconst table = new dynamodb.Table(stack, 'Table', {\n  partitionKey: { name: 'hashKey', type: dynamodb.AttributeType.STRING },\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\n/// !show\nconst readScaling = table.autoScaleReadCapacity({ minCapacity: 1, maxCapacity: 50 });\n\nreadScaling.scaleOnUtilization({\n  targetUtilizationPercent: 50,\n});\n\nreadScaling.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nreadScaling.scaleOnSchedule('ScaleDownAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  maxCapacity: 20,\n});\n/// !hide\n\napp.synth();\n","syntaxKindCounter":{"8":5,"10":6,"75":26,"193":6,"194":8,"196":6,"225":1,"226":3,"242":1,"243":1,"281":11},"fqnsFingerprint":"fcd01ac80d76df6d44bd7042c065e5cf30ad70c5e6eabc98f84c3224e7062a81"},"54b1bbe42d8ba3097c3f1021df0b66a9d4603ace5ac48e4edab1486c45b1a50e":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"]\n)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" }\n});","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .build();","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":113}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":10,"104":1,"192":1,"193":2,"194":3,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"813b92e702b9522f42947062337d126cace0959d4583c51d5454f7d90ac3af42"},"0addff6825a44a1a0f6e9fd6d6666810eb073a9f9614c547fd1cb66c46f0987b":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":127}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"},"c05c094c41f8539ff1d27129f4b4d404306badf1e548e7feea04fbb4828930a5":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    replication_timeout=Duration.hours(2)\n)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    ReplicationTimeout = Duration.Hours(2)\n});","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .replicationTimeout(Duration.hours(2))\n        .build();","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tReplicationTimeout: awscdkcore.Duration_Hours(jsii.Number(2)),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  replicationTimeout: Duration.hours(2), // defaults to Duration.minutes(30)\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":143}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#hours","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  replicationTimeout: Duration.hours(2), // defaults to Duration.minutes(30)\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":1,"10":5,"75":13,"104":1,"192":1,"193":2,"194":4,"196":1,"197":1,"225":1,"242":1,"243":1,"281":5},"fqnsFingerprint":"98056b2076e6b6fc6ab837eee21732a969e713f7680e99fd5c9ee9883779d902"},"39ddcad52841dcde85be9107aea646fa59279b0950153eb84063de6c55e312c0":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"MyTable\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    encryption=dynamodb.TableEncryption.CUSTOMER_MANAGED\n)\n\n# You can access the CMK that was added to the stack on your behalf by the Table construct via:\ntable_encryption_key = table.encryption_key","version":"2"},"csharp":{"source":"var table = new Table(this, \"MyTable\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    Encryption = TableEncryption.CUSTOMER_MANAGED\n});\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nvar tableEncryptionKey = table.EncryptionKey;","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"MyTable\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .encryption(TableEncryption.CUSTOMER_MANAGED)\n        .build();\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nIKey tableEncryptionKey = table.getEncryptionKey();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"MyTable\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tEncryption: dynamodb.TableEncryption_CUSTOMER_MANAGED,\n})\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\ntableEncryptionKey := table.EncryptionKey","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.CUSTOMER_MANAGED,\n});\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nconst tableEncryptionKey = table.encryptionKey;","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":161}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#encryptionKey","@aws-cdk/aws-dynamodb.TableEncryption","@aws-cdk/aws-dynamodb.TableEncryption#CUSTOMER_MANAGED","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.CUSTOMER_MANAGED,\n});\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nconst tableEncryptionKey = table.encryptionKey;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":16,"104":1,"193":2,"194":6,"197":1,"225":2,"242":2,"243":2,"281":4},"fqnsFingerprint":"a32b90e6eca2774728f1e01dc9233b6b1102e1607c0ed204dd12c7072808e2c8"},"3896ed901499b173e276795df900dcbfd85fc06492fda10463e681172a048591":{"translations":{"python":{"source":"import aws_cdk.aws_kms as kms\n\n\nencryption_key = kms.Key(self, \"Key\",\n    enable_key_rotation=True\n)\ntable = dynamodb.Table(self, \"MyTable\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    encryption=dynamodb.TableEncryption.CUSTOMER_MANAGED,\n    encryption_key=encryption_key\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.KMS;\n\n\nvar encryptionKey = new Key(this, \"Key\", new KeyProps {\n    EnableKeyRotation = true\n});\nvar table = new Table(this, \"MyTable\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    Encryption = TableEncryption.CUSTOMER_MANAGED,\n    EncryptionKey = encryptionKey\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.kms.*;\n\n\nKey encryptionKey = Key.Builder.create(this, \"Key\")\n        .enableKeyRotation(true)\n        .build();\nTable table = Table.Builder.create(this, \"MyTable\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .encryption(TableEncryption.CUSTOMER_MANAGED)\n        .encryptionKey(encryptionKey)\n        .build();","version":"1"},"go":{"source":"import kms \"github.com/aws-samples/dummy/awscdkawskms\"\n\n\nencryptionKey := kms.NewKey(this, jsii.String(\"Key\"), &KeyProps{\n\tEnableKeyRotation: jsii.Boolean(true),\n})\ntable := dynamodb.NewTable(this, jsii.String(\"MyTable\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tEncryption: dynamodb.TableEncryption_CUSTOMER_MANAGED,\n\tEncryptionKey: EncryptionKey,\n})","version":"1"},"$":{"source":"import * as kms from '@aws-cdk/aws-kms';\n\nconst encryptionKey = new kms.Key(this, 'Key', {\n  enableKeyRotation: true,\n});\nconst table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.CUSTOMER_MANAGED,\n  encryptionKey, // This will be exposed as table.encryptionKey\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":173}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableEncryption","@aws-cdk/aws-dynamodb.TableEncryption#CUSTOMER_MANAGED","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","@aws-cdk/aws-kms.KeyProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as kms from '@aws-cdk/aws-kms';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst encryptionKey = new kms.Key(this, 'Key', {\n  enableKeyRotation: true,\n});\nconst table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.CUSTOMER_MANAGED,\n  encryptionKey, // This will be exposed as table.encryptionKey\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":19,"104":2,"106":1,"193":3,"194":6,"197":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"282":1,"290":1},"fqnsFingerprint":"76fea3cde1ec69480038a0bc76681f69a6f0c55ff8b27b50b28089f356c5c6cc"},"4b5e085927c73559d60bc2091e50c1bf2ed95f64879a50a477a699105a8ae53f":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"MyTable\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    encryption=dynamodb.TableEncryption.AWS_MANAGED\n)","version":"2"},"csharp":{"source":"var table = new Table(this, \"MyTable\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    Encryption = TableEncryption.AWS_MANAGED\n});","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"MyTable\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .encryption(TableEncryption.AWS_MANAGED)\n        .build();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"MyTable\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tEncryption: dynamodb.TableEncryption_AWS_MANAGED,\n})","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.AWS_MANAGED,\n});\n\n// In this case, the CMK _cannot_ be accessed through table.encryptionKey.","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":188}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableEncryption","@aws-cdk/aws-dynamodb.TableEncryption#AWS_MANAGED","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.AWS_MANAGED,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":13,"104":1,"193":2,"194":5,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"61133c6cf2d4b30dc12ce339e246f2f1f7b55b518b4e2861be17d37f8945b28e"},"55a103e0956f2682190460d5d0ff5fc777bb5cbeda8dcf0f824097e1d5e35a10":{"translations":{"python":{"source":"# table: dynamodb.Table\n\nschema = table.schema()\npartition_key = schema.partition_key\nsort_key = schema.sort_key","version":"2"},"csharp":{"source":"Table table;\n\nvar schema = table.Schema();\nvar partitionKey = schema.PartitionKey;\nvar sortKey = schema.SortKey;","version":"1"},"java":{"source":"Table table;\n\nSchemaOptions schema = table.schema();\nAttribute partitionKey = schema.getPartitionKey();\nAttribute sortKey = schema.getSortKey();","version":"1"},"go":{"source":"var table table\n\nschema := table.Schema()\npartitionKey := schema.PartitionKey\nsortKey := schema.SortKey","version":"1"},"$":{"source":"declare const table: dynamodb.Table;\nconst schema = table.schema();\nconst partitionKey = schema.partitionKey;\nconst sortKey = schema.sortKey;\n\n// In case you want to get schema details for any secondary index\n// const { partitionKey, sortKey } = table.schema(INDEX_NAME);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":201}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.SchemaOptions","@aws-cdk/aws-dynamodb.SchemaOptions#partitionKey","@aws-cdk/aws-dynamodb.SchemaOptions#sortKey","@aws-cdk/aws-dynamodb.Table#schema"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const table: dynamodb.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst schema = table.schema();\nconst partitionKey = schema.partitionKey;\nconst sortKey = schema.sortKey;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"75":12,"130":1,"153":1,"169":1,"194":3,"196":1,"225":4,"242":4,"243":4,"290":1},"fqnsFingerprint":"bc3abe0e48d5d964a7aa644af5331e564ba931daf972d94cc0eb3403af328fb5"},"e761eb72ebae9960c3b1d4f7f984b24a337dd9304ffd89845a73b2b93c450929":{"translations":{"python":{"source":"import aws_cdk.aws_kinesis as kinesis\n\n\nstream = kinesis.Stream(self, \"Stream\")\n\ntable = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    kinesis_stream=stream\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Kinesis;\n\n\nvar stream = new Stream(this, \"Stream\");\n\nvar table = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    KinesisStream = stream\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.kinesis.*;\n\n\nStream stream = new Stream(this, \"Stream\");\n\nTable table = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .kinesisStream(stream)\n        .build();","version":"1"},"go":{"source":"import kinesis \"github.com/aws-samples/dummy/awscdkawskinesis\"\n\n\nstream := kinesis.NewStream(this, jsii.String(\"Stream\"))\n\ntable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tKinesisStream: stream,\n})","version":"1"},"$":{"source":"import * as kinesis from '@aws-cdk/aws-kinesis';\n\nconst stream = new kinesis.Stream(this, 'Stream');\n\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  kinesisStream: stream,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-dynamodb"},"field":{"field":"markdown","line":215}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-kinesis.IStream","@aws-cdk/aws-kinesis.Stream","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as kinesis from '@aws-cdk/aws-kinesis';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst stream = new kinesis.Stream(this, 'Stream');\n\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  kinesisStream: stream,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":15,"104":2,"193":2,"194":4,"197":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"99a07477c2d8a99d48358b85f27cf37db73e55f7af0e6b26a3a451bb5ac6cddc"},"d53d74de9c4040cc214f48e260652fef4d45282d276d463896566d6b585f8b4b":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.Attribute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"},"794482840a27f833a239967299f4e1d1b7454a19aa301ec2100426d3cd870d98":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.AttributeType"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"},"8451775db304911f83d4b943da1203876ea9e5700dc50629e88bf1320e013a99":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    billing_mode=dynamodb.BillingMode.PAY_PER_REQUEST\n)","version":"2"},"csharp":{"source":"var table = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    BillingMode = BillingMode.PAY_PER_REQUEST\n});","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .billingMode(BillingMode.PAY_PER_REQUEST)\n        .build();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tBillingMode: dynamodb.BillingMode_PAY_PER_REQUEST,\n})","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.BillingMode"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PAY_PER_REQUEST","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":13,"104":1,"193":2,"194":5,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"ac1e6706cec8344672e297e095a2a84a73a6b1990c8db4197172146723e24e96"},"3500ac3ed5728ebb46497adf4d8748232294307816fb8bddbc2a6ce230f28df0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncfn_global_table = dynamodb.CfnGlobalTable(self, \"MyCfnGlobalTable\",\n    attribute_definitions=[dynamodb.CfnGlobalTable.AttributeDefinitionProperty(\n        attribute_name=\"attributeName\",\n        attribute_type=\"attributeType\"\n    )],\n    key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n    replicas=[dynamodb.CfnGlobalTable.ReplicaSpecificationProperty(\n        region=\"region\",\n\n        # the properties below are optional\n        contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n            enabled=False\n        ),\n        deletion_protection_enabled=False,\n        global_secondary_indexes=[dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty(\n            index_name=\"indexName\",\n\n            # the properties below are optional\n            contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n                enabled=False\n            ),\n            read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n                read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                    max_capacity=123,\n                    min_capacity=123,\n                    target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                        target_value=123,\n\n                        # the properties below are optional\n                        disable_scale_in=False,\n                        scale_in_cooldown=123,\n                        scale_out_cooldown=123\n                    ),\n\n                    # the properties below are optional\n                    seed_capacity=123\n                ),\n                read_capacity_units=123\n            )\n        )],\n        kinesis_stream_specification=dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty(\n            stream_arn=\"streamArn\"\n        ),\n        point_in_time_recovery_specification=dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty(\n            point_in_time_recovery_enabled=False\n        ),\n        read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n            read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                max_capacity=123,\n                min_capacity=123,\n                target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                    target_value=123,\n\n                    # the properties below are optional\n                    disable_scale_in=False,\n                    scale_in_cooldown=123,\n                    scale_out_cooldown=123\n                ),\n\n                # the properties below are optional\n                seed_capacity=123\n            ),\n            read_capacity_units=123\n        ),\n        sse_specification=dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty(\n            kms_master_key_id=\"kmsMasterKeyId\"\n        ),\n        table_class=\"tableClass\",\n        tags=[CfnTag(\n            key=\"key\",\n            value=\"value\"\n        )]\n    )],\n\n    # the properties below are optional\n    billing_mode=\"billingMode\",\n    global_secondary_indexes=[dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnGlobalTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        ),\n\n        # the properties below are optional\n        write_provisioned_throughput_settings=dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty(\n            write_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                max_capacity=123,\n                min_capacity=123,\n                target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                    target_value=123,\n\n                    # the properties below are optional\n                    disable_scale_in=False,\n                    scale_in_cooldown=123,\n                    scale_out_cooldown=123\n                ),\n\n                # the properties below are optional\n                seed_capacity=123\n            )\n        )\n    )],\n    local_secondary_indexes=[dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnGlobalTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        )\n    )],\n    sse_specification=dynamodb.CfnGlobalTable.SSESpecificationProperty(\n        sse_enabled=False,\n\n        # the properties below are optional\n        sse_type=\"sseType\"\n    ),\n    stream_specification=dynamodb.CfnGlobalTable.StreamSpecificationProperty(\n        stream_view_type=\"streamViewType\"\n    ),\n    table_name=\"tableName\",\n    time_to_live_specification=dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty(\n        enabled=False,\n\n        # the properties below are optional\n        attribute_name=\"attributeName\"\n    ),\n    write_provisioned_throughput_settings=dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty(\n        write_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n            max_capacity=123,\n            min_capacity=123,\n            target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                target_value=123,\n\n                # the properties below are optional\n                disable_scale_in=False,\n                scale_in_cooldown=123,\n                scale_out_cooldown=123\n            ),\n\n            # the properties below are optional\n            seed_capacity=123\n        )\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar cfnGlobalTable = new CfnGlobalTable(this, \"MyCfnGlobalTable\", new CfnGlobalTableProps {\n    AttributeDefinitions = new [] { new AttributeDefinitionProperty {\n        AttributeName = \"attributeName\",\n        AttributeType = \"attributeType\"\n    } },\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n    Replicas = new [] { new ReplicaSpecificationProperty {\n        Region = \"region\",\n\n        // the properties below are optional\n        ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n            Enabled = false\n        },\n        DeletionProtectionEnabled = false,\n        GlobalSecondaryIndexes = new [] { new ReplicaGlobalSecondaryIndexSpecificationProperty {\n            IndexName = \"indexName\",\n\n            // the properties below are optional\n            ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n                Enabled = false\n            },\n            ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n                ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                    MaxCapacity = 123,\n                    MinCapacity = 123,\n                    TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                        TargetValue = 123,\n\n                        // the properties below are optional\n                        DisableScaleIn = false,\n                        ScaleInCooldown = 123,\n                        ScaleOutCooldown = 123\n                    },\n\n                    // the properties below are optional\n                    SeedCapacity = 123\n                },\n                ReadCapacityUnits = 123\n            }\n        } },\n        KinesisStreamSpecification = new KinesisStreamSpecificationProperty {\n            StreamArn = \"streamArn\"\n        },\n        PointInTimeRecoverySpecification = new PointInTimeRecoverySpecificationProperty {\n            PointInTimeRecoveryEnabled = false\n        },\n        ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n            ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                MaxCapacity = 123,\n                MinCapacity = 123,\n                TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                    TargetValue = 123,\n\n                    // the properties below are optional\n                    DisableScaleIn = false,\n                    ScaleInCooldown = 123,\n                    ScaleOutCooldown = 123\n                },\n\n                // the properties below are optional\n                SeedCapacity = 123\n            },\n            ReadCapacityUnits = 123\n        },\n        SseSpecification = new ReplicaSSESpecificationProperty {\n            KmsMasterKeyId = \"kmsMasterKeyId\"\n        },\n        TableClass = \"tableClass\",\n        Tags = new [] { new CfnTag {\n            Key = \"key\",\n            Value = \"value\"\n        } }\n    } },\n\n    // the properties below are optional\n    BillingMode = \"billingMode\",\n    GlobalSecondaryIndexes = new [] { new GlobalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        },\n\n        // the properties below are optional\n        WriteProvisionedThroughputSettings = new WriteProvisionedThroughputSettingsProperty {\n            WriteCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                MaxCapacity = 123,\n                MinCapacity = 123,\n                TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                    TargetValue = 123,\n\n                    // the properties below are optional\n                    DisableScaleIn = false,\n                    ScaleInCooldown = 123,\n                    ScaleOutCooldown = 123\n                },\n\n                // the properties below are optional\n                SeedCapacity = 123\n            }\n        }\n    } },\n    LocalSecondaryIndexes = new [] { new LocalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        }\n    } },\n    SseSpecification = new SSESpecificationProperty {\n        SseEnabled = false,\n\n        // the properties below are optional\n        SseType = \"sseType\"\n    },\n    StreamSpecification = new StreamSpecificationProperty {\n        StreamViewType = \"streamViewType\"\n    },\n    TableName = \"tableName\",\n    TimeToLiveSpecification = new TimeToLiveSpecificationProperty {\n        Enabled = false,\n\n        // the properties below are optional\n        AttributeName = \"attributeName\"\n    },\n    WriteProvisionedThroughputSettings = new WriteProvisionedThroughputSettingsProperty {\n        WriteCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123,\n            TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                TargetValue = 123,\n\n                // the properties below are optional\n                DisableScaleIn = false,\n                ScaleInCooldown = 123,\n                ScaleOutCooldown = 123\n            },\n\n            // the properties below are optional\n            SeedCapacity = 123\n        }\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nCfnGlobalTable cfnGlobalTable = CfnGlobalTable.Builder.create(this, \"MyCfnGlobalTable\")\n        .attributeDefinitions(List.of(AttributeDefinitionProperty.builder()\n                .attributeName(\"attributeName\")\n                .attributeType(\"attributeType\")\n                .build()))\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n        .replicas(List.of(ReplicaSpecificationProperty.builder()\n                .region(\"region\")\n\n                // the properties below are optional\n                .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deletionProtectionEnabled(false)\n                .globalSecondaryIndexes(List.of(ReplicaGlobalSecondaryIndexSpecificationProperty.builder()\n                        .indexName(\"indexName\")\n\n                        // the properties below are optional\n                        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                                .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                        .maxCapacity(123)\n                                        .minCapacity(123)\n                                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                                .targetValue(123)\n\n                                                // the properties below are optional\n                                                .disableScaleIn(false)\n                                                .scaleInCooldown(123)\n                                                .scaleOutCooldown(123)\n                                                .build())\n\n                                        // the properties below are optional\n                                        .seedCapacity(123)\n                                        .build())\n                                .readCapacityUnits(123)\n                                .build())\n                        .build()))\n                .kinesisStreamSpecification(KinesisStreamSpecificationProperty.builder()\n                        .streamArn(\"streamArn\")\n                        .build())\n                .pointInTimeRecoverySpecification(PointInTimeRecoverySpecificationProperty.builder()\n                        .pointInTimeRecoveryEnabled(false)\n                        .build())\n                .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                        .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                .maxCapacity(123)\n                                .minCapacity(123)\n                                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                        .targetValue(123)\n\n                                        // the properties below are optional\n                                        .disableScaleIn(false)\n                                        .scaleInCooldown(123)\n                                        .scaleOutCooldown(123)\n                                        .build())\n\n                                // the properties below are optional\n                                .seedCapacity(123)\n                                .build())\n                        .readCapacityUnits(123)\n                        .build())\n                .sseSpecification(ReplicaSSESpecificationProperty.builder()\n                        .kmsMasterKeyId(\"kmsMasterKeyId\")\n                        .build())\n                .tableClass(\"tableClass\")\n                .tags(List.of(CfnTag.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .build()))\n\n        // the properties below are optional\n        .billingMode(\"billingMode\")\n        .globalSecondaryIndexes(List.of(GlobalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n\n                // the properties below are optional\n                .writeProvisionedThroughputSettings(WriteProvisionedThroughputSettingsProperty.builder()\n                        .writeCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                .maxCapacity(123)\n                                .minCapacity(123)\n                                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                        .targetValue(123)\n\n                                        // the properties below are optional\n                                        .disableScaleIn(false)\n                                        .scaleInCooldown(123)\n                                        .scaleOutCooldown(123)\n                                        .build())\n\n                                // the properties below are optional\n                                .seedCapacity(123)\n                                .build())\n                        .build())\n                .build()))\n        .localSecondaryIndexes(List.of(LocalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n                .build()))\n        .sseSpecification(SSESpecificationProperty.builder()\n                .sseEnabled(false)\n\n                // the properties below are optional\n                .sseType(\"sseType\")\n                .build())\n        .streamSpecification(StreamSpecificationProperty.builder()\n                .streamViewType(\"streamViewType\")\n                .build())\n        .tableName(\"tableName\")\n        .timeToLiveSpecification(TimeToLiveSpecificationProperty.builder()\n                .enabled(false)\n\n                // the properties below are optional\n                .attributeName(\"attributeName\")\n                .build())\n        .writeProvisionedThroughputSettings(WriteProvisionedThroughputSettingsProperty.builder()\n                .writeCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                .targetValue(123)\n\n                                // the properties below are optional\n                                .disableScaleIn(false)\n                                .scaleInCooldown(123)\n                                .scaleOutCooldown(123)\n                                .build())\n\n                        // the properties below are optional\n                        .seedCapacity(123)\n                        .build())\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncfnGlobalTable := dynamodb.NewCfnGlobalTable(this, jsii.String(\"MyCfnGlobalTable\"), &CfnGlobalTableProps{\n\tAttributeDefinitions: []interface{}{\n\t\t&AttributeDefinitionProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tAttributeType: jsii.String(\"attributeType\"),\n\t\t},\n\t},\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\tReplicas: []interface{}{\n\t\t&ReplicaSpecificationProperty{\n\t\t\tRegion: jsii.String(\"region\"),\n\n\t\t\t// the properties below are optional\n\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tDeletionProtectionEnabled: jsii.Boolean(false),\n\t\t\tGlobalSecondaryIndexes: []interface{}{\n\t\t\t\t&ReplicaGlobalSecondaryIndexSpecificationProperty{\n\t\t\t\t\tIndexName: jsii.String(\"indexName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\t\t\t\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tKinesisStreamSpecification: &KinesisStreamSpecificationProperty{\n\t\t\t\tStreamArn: jsii.String(\"streamArn\"),\n\t\t\t},\n\t\t\tPointInTimeRecoverySpecification: &PointInTimeRecoverySpecificationProperty{\n\t\t\t\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\t\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t},\n\t\t\tSseSpecification: &ReplicaSSESpecificationProperty{\n\t\t\t\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t\t\t},\n\t\t\tTableClass: jsii.String(\"tableClass\"),\n\t\t\tTags: []cfnTag{\n\t\t\t\t&cfnTag{\n\t\t\t\t\tKey: jsii.String(\"key\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tBillingMode: jsii.String(\"billingMode\"),\n\tGlobalSecondaryIndexes: []interface{}{\n\t\t&GlobalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tWriteProvisionedThroughputSettings: &WriteProvisionedThroughputSettingsProperty{\n\t\t\t\tWriteCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tLocalSecondaryIndexes: []interface{}{\n\t\t&LocalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\t\t},\n\t},\n\tSseSpecification: &SSESpecificationProperty{\n\t\tSseEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tSseType: jsii.String(\"sseType\"),\n\t},\n\tStreamSpecification: &StreamSpecificationProperty{\n\t\tStreamViewType: jsii.String(\"streamViewType\"),\n\t},\n\tTableName: jsii.String(\"tableName\"),\n\tTimeToLiveSpecification: &TimeToLiveSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tAttributeName: jsii.String(\"attributeName\"),\n\t},\n\tWriteProvisionedThroughputSettings: &WriteProvisionedThroughputSettingsProperty{\n\t\tWriteCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\tMinCapacity: jsii.Number(123),\n\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tSeedCapacity: jsii.Number(123),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst cfnGlobalTable = new dynamodb.CfnGlobalTable(this, 'MyCfnGlobalTable', {\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  replicas: [{\n    region: 'region',\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    deletionProtectionEnabled: false,\n    globalSecondaryIndexes: [{\n      indexName: 'indexName',\n\n      // the properties below are optional\n      contributorInsightsSpecification: {\n        enabled: false,\n      },\n      readProvisionedThroughputSettings: {\n        readCapacityAutoScalingSettings: {\n          maxCapacity: 123,\n          minCapacity: 123,\n          targetTrackingScalingPolicyConfiguration: {\n            targetValue: 123,\n\n            // the properties below are optional\n            disableScaleIn: false,\n            scaleInCooldown: 123,\n            scaleOutCooldown: 123,\n          },\n\n          // the properties below are optional\n          seedCapacity: 123,\n        },\n        readCapacityUnits: 123,\n      },\n    }],\n    kinesisStreamSpecification: {\n      streamArn: 'streamArn',\n    },\n    pointInTimeRecoverySpecification: {\n      pointInTimeRecoveryEnabled: false,\n    },\n    readProvisionedThroughputSettings: {\n      readCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n      readCapacityUnits: 123,\n    },\n    sseSpecification: {\n      kmsMasterKeyId: 'kmsMasterKeyId',\n    },\n    tableClass: 'tableClass',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n\n  // the properties below are optional\n  billingMode: 'billingMode',\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    writeProvisionedThroughputSettings: {\n      writeCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n    },\n  }],\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableName: 'tableName',\n  timeToLiveSpecification: {\n    enabled: false,\n\n    // the properties below are optional\n    attributeName: 'attributeName',\n  },\n  writeProvisionedThroughputSettings: {\n    writeCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable","@aws-cdk/aws-dynamodb.CfnGlobalTableProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnGlobalTable = new dynamodb.CfnGlobalTable(this, 'MyCfnGlobalTable', {\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  replicas: [{\n    region: 'region',\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    deletionProtectionEnabled: false,\n    globalSecondaryIndexes: [{\n      indexName: 'indexName',\n\n      // the properties below are optional\n      contributorInsightsSpecification: {\n        enabled: false,\n      },\n      readProvisionedThroughputSettings: {\n        readCapacityAutoScalingSettings: {\n          maxCapacity: 123,\n          minCapacity: 123,\n          targetTrackingScalingPolicyConfiguration: {\n            targetValue: 123,\n\n            // the properties below are optional\n            disableScaleIn: false,\n            scaleInCooldown: 123,\n            scaleOutCooldown: 123,\n          },\n\n          // the properties below are optional\n          seedCapacity: 123,\n        },\n        readCapacityUnits: 123,\n      },\n    }],\n    kinesisStreamSpecification: {\n      streamArn: 'streamArn',\n    },\n    pointInTimeRecoverySpecification: {\n      pointInTimeRecoveryEnabled: false,\n    },\n    readProvisionedThroughputSettings: {\n      readCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n      readCapacityUnits: 123,\n    },\n    sseSpecification: {\n      kmsMasterKeyId: 'kmsMasterKeyId',\n    },\n    tableClass: 'tableClass',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n\n  // the properties below are optional\n  billingMode: 'billingMode',\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    writeProvisionedThroughputSettings: {\n      writeCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n    },\n  }],\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableName: 'tableName',\n  timeToLiveSpecification: {\n    enabled: false,\n\n    // the properties below are optional\n    attributeName: 'attributeName',\n  },\n  writeProvisionedThroughputSettings: {\n    writeCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":26,"10":28,"75":97,"91":10,"104":1,"192":11,"193":32,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":93,"290":1},"fqnsFingerprint":"bb08218ee04ef800edd89cb85520bb60e68e53f1e7d9fec0fb43dcf37e15c386"},"51d9acec6c332ce2abcec2de53170aaa8ef26c610ea92b1f95c729a409416638":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nattribute_definition_property = dynamodb.CfnGlobalTable.AttributeDefinitionProperty(\n    attribute_name=\"attributeName\",\n    attribute_type=\"attributeType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar attributeDefinitionProperty = new AttributeDefinitionProperty {\n    AttributeName = \"attributeName\",\n    AttributeType = \"attributeType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nAttributeDefinitionProperty attributeDefinitionProperty = AttributeDefinitionProperty.builder()\n        .attributeName(\"attributeName\")\n        .attributeType(\"attributeType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nattributeDefinitionProperty := &AttributeDefinitionProperty{\n\tAttributeName: jsii.String(\"attributeName\"),\n\tAttributeType: jsii.String(\"attributeType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst attributeDefinitionProperty: dynamodb.CfnGlobalTable.AttributeDefinitionProperty = {\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.AttributeDefinitionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.AttributeDefinitionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attributeDefinitionProperty: dynamodb.CfnGlobalTable.AttributeDefinitionProperty = {\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"faff7bd659c32e8ebaabcda4e23e4feead193d5a28514c4bd174f6ef07f123e1"},"9873eadc4a71e64d1db2f4ccb5314d677ce2e833f59e2d4c60d96e8a711c9091":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncapacity_auto_scaling_settings_property = dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n    max_capacity=123,\n    min_capacity=123,\n    target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n        target_value=123,\n\n        # the properties below are optional\n        disable_scale_in=False,\n        scale_in_cooldown=123,\n        scale_out_cooldown=123\n    ),\n\n    # the properties below are optional\n    seed_capacity=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar capacityAutoScalingSettingsProperty = new CapacityAutoScalingSettingsProperty {\n    MaxCapacity = 123,\n    MinCapacity = 123,\n    TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n        TargetValue = 123,\n\n        // the properties below are optional\n        DisableScaleIn = false,\n        ScaleInCooldown = 123,\n        ScaleOutCooldown = 123\n    },\n\n    // the properties below are optional\n    SeedCapacity = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nCapacityAutoScalingSettingsProperty capacityAutoScalingSettingsProperty = CapacityAutoScalingSettingsProperty.builder()\n        .maxCapacity(123)\n        .minCapacity(123)\n        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                .targetValue(123)\n\n                // the properties below are optional\n                .disableScaleIn(false)\n                .scaleInCooldown(123)\n                .scaleOutCooldown(123)\n                .build())\n\n        // the properties below are optional\n        .seedCapacity(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncapacityAutoScalingSettingsProperty := &CapacityAutoScalingSettingsProperty{\n\tMaxCapacity: jsii.Number(123),\n\tMinCapacity: jsii.Number(123),\n\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\tTargetValue: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tDisableScaleIn: jsii.Boolean(false),\n\t\tScaleInCooldown: jsii.Number(123),\n\t\tScaleOutCooldown: jsii.Number(123),\n\t},\n\n\t// the properties below are optional\n\tSeedCapacity: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst capacityAutoScalingSettingsProperty: dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    disableScaleIn: false,\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n\n  // the properties below are optional\n  seedCapacity: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst capacityAutoScalingSettingsProperty: dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n  targetTrackingScalingPolicyConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    disableScaleIn: false,\n    scaleInCooldown: 123,\n    scaleOutCooldown: 123,\n  },\n\n  // the properties below are optional\n  seedCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":6,"10":1,"75":13,"91":1,"153":2,"169":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"fbff3db371771fff0882ed0dbd988a9ef60a15d53d647403a241bb9c6106ee5d"},"582423d8b281896970d15612c88c590665558842f89bbdc5df60dee65fcecd03":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncontributor_insights_specification_property = dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n    enabled=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar contributorInsightsSpecificationProperty = new ContributorInsightsSpecificationProperty {\n    Enabled = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nContributorInsightsSpecificationProperty contributorInsightsSpecificationProperty = ContributorInsightsSpecificationProperty.builder()\n        .enabled(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncontributorInsightsSpecificationProperty := &ContributorInsightsSpecificationProperty{\n\tEnabled: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst contributorInsightsSpecificationProperty: dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty = {\n  enabled: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst contributorInsightsSpecificationProperty: dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"6dc0266c70fcc85d22a740057f5cbf15e82b2c5df029de701fa46bd7c313c9e9"},"3c7a10948e95136e1c583797720a79a50d1afba48f878dcbe6d42658b2b9be56":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nglobal_secondary_index_property = dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty(\n    index_name=\"indexName\",\n    key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n    projection=dynamodb.CfnGlobalTable.ProjectionProperty(\n        non_key_attributes=[\"nonKeyAttributes\"],\n        projection_type=\"projectionType\"\n    ),\n\n    # the properties below are optional\n    write_provisioned_throughput_settings=dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty(\n        write_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n            max_capacity=123,\n            min_capacity=123,\n            target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                target_value=123,\n\n                # the properties below are optional\n                disable_scale_in=False,\n                scale_in_cooldown=123,\n                scale_out_cooldown=123\n            ),\n\n            # the properties below are optional\n            seed_capacity=123\n        )\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar globalSecondaryIndexProperty = new GlobalSecondaryIndexProperty {\n    IndexName = \"indexName\",\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n    Projection = new ProjectionProperty {\n        NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n        ProjectionType = \"projectionType\"\n    },\n\n    // the properties below are optional\n    WriteProvisionedThroughputSettings = new WriteProvisionedThroughputSettingsProperty {\n        WriteCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123,\n            TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                TargetValue = 123,\n\n                // the properties below are optional\n                DisableScaleIn = false,\n                ScaleInCooldown = 123,\n                ScaleOutCooldown = 123\n            },\n\n            // the properties below are optional\n            SeedCapacity = 123\n        }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nGlobalSecondaryIndexProperty globalSecondaryIndexProperty = GlobalSecondaryIndexProperty.builder()\n        .indexName(\"indexName\")\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n        .projection(ProjectionProperty.builder()\n                .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                .projectionType(\"projectionType\")\n                .build())\n\n        // the properties below are optional\n        .writeProvisionedThroughputSettings(WriteProvisionedThroughputSettingsProperty.builder()\n                .writeCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                .targetValue(123)\n\n                                // the properties below are optional\n                                .disableScaleIn(false)\n                                .scaleInCooldown(123)\n                                .scaleOutCooldown(123)\n                                .build())\n\n                        // the properties below are optional\n                        .seedCapacity(123)\n                        .build())\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nglobalSecondaryIndexProperty := &GlobalSecondaryIndexProperty{\n\tIndexName: jsii.String(\"indexName\"),\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\tProjection: &ProjectionProperty{\n\t\tNonKeyAttributes: []*string{\n\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t},\n\t\tProjectionType: jsii.String(\"projectionType\"),\n\t},\n\n\t// the properties below are optional\n\tWriteProvisionedThroughputSettings: &WriteProvisionedThroughputSettingsProperty{\n\t\tWriteCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\tMinCapacity: jsii.Number(123),\n\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tSeedCapacity: jsii.Number(123),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst globalSecondaryIndexProperty: dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n\n  // the properties below are optional\n  writeProvisionedThroughputSettings: {\n    writeCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst globalSecondaryIndexProperty: dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n\n  // the properties below are optional\n  writeProvisionedThroughputSettings: {\n    writeCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":6,"10":6,"75":22,"91":1,"153":2,"169":1,"192":2,"193":6,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":17,"290":1},"fqnsFingerprint":"9e1d4eab8705e4a2eadcef225653694781fb81bfc4f1a81415e0d8dca1de0c06"},"d533f87fa3bbf695919f83e16d70a6baec2f40e1a7bff10e0b791f1ed0d1cfde":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nkey_schema_property = dynamodb.CfnGlobalTable.KeySchemaProperty(\n    attribute_name=\"attributeName\",\n    key_type=\"keyType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar keySchemaProperty = new KeySchemaProperty {\n    AttributeName = \"attributeName\",\n    KeyType = \"keyType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nKeySchemaProperty keySchemaProperty = KeySchemaProperty.builder()\n        .attributeName(\"attributeName\")\n        .keyType(\"keyType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nkeySchemaProperty := &KeySchemaProperty{\n\tAttributeName: jsii.String(\"attributeName\"),\n\tKeyType: jsii.String(\"keyType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst keySchemaProperty: dynamodb.CfnGlobalTable.KeySchemaProperty = {\n  attributeName: 'attributeName',\n  keyType: 'keyType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.KeySchemaProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.KeySchemaProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst keySchemaProperty: dynamodb.CfnGlobalTable.KeySchemaProperty = {\n  attributeName: 'attributeName',\n  keyType: 'keyType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"a7a308cb13e92dd2b5e8110111a789912000063ef7d423351d91c1b97c8d4f8e"},"7109abe2dc71437c4e490711641cb5a0edca04c8b1dbd6810dbe28f2dae38a95":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nkinesis_stream_specification_property = dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty(\n    stream_arn=\"streamArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar kinesisStreamSpecificationProperty = new KinesisStreamSpecificationProperty {\n    StreamArn = \"streamArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nKinesisStreamSpecificationProperty kinesisStreamSpecificationProperty = KinesisStreamSpecificationProperty.builder()\n        .streamArn(\"streamArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nkinesisStreamSpecificationProperty := &KinesisStreamSpecificationProperty{\n\tStreamArn: jsii.String(\"streamArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst kinesisStreamSpecificationProperty: dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty = {\n  streamArn: 'streamArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamSpecificationProperty: dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty = {\n  streamArn: 'streamArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"84f15f99ba23c5ff0fbca76e1235310a78adab2dd0d2fa3539d904025313ba12"},"9e5aabb3ccee3eee4ca04d6c867332d6c95603fce26c0281d757ad2be2ac94e3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nlocal_secondary_index_property = dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty(\n    index_name=\"indexName\",\n    key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n    projection=dynamodb.CfnGlobalTable.ProjectionProperty(\n        non_key_attributes=[\"nonKeyAttributes\"],\n        projection_type=\"projectionType\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar localSecondaryIndexProperty = new LocalSecondaryIndexProperty {\n    IndexName = \"indexName\",\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n    Projection = new ProjectionProperty {\n        NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n        ProjectionType = \"projectionType\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nLocalSecondaryIndexProperty localSecondaryIndexProperty = LocalSecondaryIndexProperty.builder()\n        .indexName(\"indexName\")\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n        .projection(ProjectionProperty.builder()\n                .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                .projectionType(\"projectionType\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nlocalSecondaryIndexProperty := &LocalSecondaryIndexProperty{\n\tIndexName: jsii.String(\"indexName\"),\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\tProjection: &ProjectionProperty{\n\t\tNonKeyAttributes: []*string{\n\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t},\n\t\tProjectionType: jsii.String(\"projectionType\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst localSecondaryIndexProperty: dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst localSecondaryIndexProperty: dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":12,"153":2,"169":1,"192":2,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"601161d4cee1ebc1009dbdee53b32590afd7bae5074a51130dcd4d417642bd36"},"c1e57db56ab1e1467e24c1a9c943e2f3add3366517e3b5bb5ed0723eb52478ad":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\npoint_in_time_recovery_specification_property = dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty(\n    point_in_time_recovery_enabled=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar pointInTimeRecoverySpecificationProperty = new PointInTimeRecoverySpecificationProperty {\n    PointInTimeRecoveryEnabled = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nPointInTimeRecoverySpecificationProperty pointInTimeRecoverySpecificationProperty = PointInTimeRecoverySpecificationProperty.builder()\n        .pointInTimeRecoveryEnabled(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\npointInTimeRecoverySpecificationProperty := &PointInTimeRecoverySpecificationProperty{\n\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst pointInTimeRecoverySpecificationProperty: dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty = {\n  pointInTimeRecoveryEnabled: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pointInTimeRecoverySpecificationProperty: dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty = {\n  pointInTimeRecoveryEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"5eb1a44a32a0aed6dffa6ebb61c14dc9121446a714575839b4758a98adf87f73"},"cb271b3720848e66f666587fcc4bd8afe81a14b1fcfd27b551088f80050a8f50":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nprojection_property = dynamodb.CfnGlobalTable.ProjectionProperty(\n    non_key_attributes=[\"nonKeyAttributes\"],\n    projection_type=\"projectionType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar projectionProperty = new ProjectionProperty {\n    NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n    ProjectionType = \"projectionType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nProjectionProperty projectionProperty = ProjectionProperty.builder()\n        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n        .projectionType(\"projectionType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nprojectionProperty := &ProjectionProperty{\n\tNonKeyAttributes: []*string{\n\t\tjsii.String(\"nonKeyAttributes\"),\n\t},\n\tProjectionType: jsii.String(\"projectionType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst projectionProperty: dynamodb.CfnGlobalTable.ProjectionProperty = {\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: 'projectionType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.ProjectionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.ProjectionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst projectionProperty: dynamodb.CfnGlobalTable.ProjectionProperty = {\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: 'projectionType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"1a76c8e1164d6d35a5975ff0c88b67643648e99eea99e81872d8bd3f8606ac8d"},"35d153b418686403424cb45fc1d7c74b60030399e32db014aaa6eac96b3d761e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nread_provisioned_throughput_settings_property = dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n    read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n        max_capacity=123,\n        min_capacity=123,\n        target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n            target_value=123,\n\n            # the properties below are optional\n            disable_scale_in=False,\n            scale_in_cooldown=123,\n            scale_out_cooldown=123\n        ),\n\n        # the properties below are optional\n        seed_capacity=123\n    ),\n    read_capacity_units=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar readProvisionedThroughputSettingsProperty = new ReadProvisionedThroughputSettingsProperty {\n    ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n        MaxCapacity = 123,\n        MinCapacity = 123,\n        TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n            TargetValue = 123,\n\n            // the properties below are optional\n            DisableScaleIn = false,\n            ScaleInCooldown = 123,\n            ScaleOutCooldown = 123\n        },\n\n        // the properties below are optional\n        SeedCapacity = 123\n    },\n    ReadCapacityUnits = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nReadProvisionedThroughputSettingsProperty readProvisionedThroughputSettingsProperty = ReadProvisionedThroughputSettingsProperty.builder()\n        .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                .maxCapacity(123)\n                .minCapacity(123)\n                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                        .targetValue(123)\n\n                        // the properties below are optional\n                        .disableScaleIn(false)\n                        .scaleInCooldown(123)\n                        .scaleOutCooldown(123)\n                        .build())\n\n                // the properties below are optional\n                .seedCapacity(123)\n                .build())\n        .readCapacityUnits(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nreadProvisionedThroughputSettingsProperty := &ReadProvisionedThroughputSettingsProperty{\n\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\tMaxCapacity: jsii.Number(123),\n\t\tMinCapacity: jsii.Number(123),\n\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tSeedCapacity: jsii.Number(123),\n\t},\n\tReadCapacityUnits: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst readProvisionedThroughputSettingsProperty: dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty = {\n  readCapacityAutoScalingSettings: {\n    maxCapacity: 123,\n    minCapacity: 123,\n    targetTrackingScalingPolicyConfiguration: {\n      targetValue: 123,\n\n      // the properties below are optional\n      disableScaleIn: false,\n      scaleInCooldown: 123,\n      scaleOutCooldown: 123,\n    },\n\n    // the properties below are optional\n    seedCapacity: 123,\n  },\n  readCapacityUnits: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst readProvisionedThroughputSettingsProperty: dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty = {\n  readCapacityAutoScalingSettings: {\n    maxCapacity: 123,\n    minCapacity: 123,\n    targetTrackingScalingPolicyConfiguration: {\n      targetValue: 123,\n\n      // the properties below are optional\n      disableScaleIn: false,\n      scaleInCooldown: 123,\n      scaleOutCooldown: 123,\n    },\n\n    // the properties below are optional\n    seedCapacity: 123,\n  },\n  readCapacityUnits: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":7,"10":1,"75":15,"91":1,"153":2,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":10,"290":1},"fqnsFingerprint":"d5e6bbe070f8fcdf14f98e48ed18b2742346b5e30442db89fa0217d997a84989"},"ceb2bf41fe7116422e6ee8e9fbbc40e383942c9b68be532661792f4320e7eeb9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nreplica_global_secondary_index_specification_property = dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty(\n    index_name=\"indexName\",\n\n    # the properties below are optional\n    contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n        enabled=False\n    ),\n    read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n        read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n            max_capacity=123,\n            min_capacity=123,\n            target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                target_value=123,\n\n                # the properties below are optional\n                disable_scale_in=False,\n                scale_in_cooldown=123,\n                scale_out_cooldown=123\n            ),\n\n            # the properties below are optional\n            seed_capacity=123\n        ),\n        read_capacity_units=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar replicaGlobalSecondaryIndexSpecificationProperty = new ReplicaGlobalSecondaryIndexSpecificationProperty {\n    IndexName = \"indexName\",\n\n    // the properties below are optional\n    ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n        Enabled = false\n    },\n    ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n        ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123,\n            TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                TargetValue = 123,\n\n                // the properties below are optional\n                DisableScaleIn = false,\n                ScaleInCooldown = 123,\n                ScaleOutCooldown = 123\n            },\n\n            // the properties below are optional\n            SeedCapacity = 123\n        },\n        ReadCapacityUnits = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nReplicaGlobalSecondaryIndexSpecificationProperty replicaGlobalSecondaryIndexSpecificationProperty = ReplicaGlobalSecondaryIndexSpecificationProperty.builder()\n        .indexName(\"indexName\")\n\n        // the properties below are optional\n        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                .enabled(false)\n                .build())\n        .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                .targetValue(123)\n\n                                // the properties below are optional\n                                .disableScaleIn(false)\n                                .scaleInCooldown(123)\n                                .scaleOutCooldown(123)\n                                .build())\n\n                        // the properties below are optional\n                        .seedCapacity(123)\n                        .build())\n                .readCapacityUnits(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nreplicaGlobalSecondaryIndexSpecificationProperty := &ReplicaGlobalSecondaryIndexSpecificationProperty{\n\tIndexName: jsii.String(\"indexName\"),\n\n\t// the properties below are optional\n\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\t},\n\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\tMinCapacity: jsii.Number(123),\n\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tSeedCapacity: jsii.Number(123),\n\t\t},\n\t\tReadCapacityUnits: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst replicaGlobalSecondaryIndexSpecificationProperty: dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty = {\n  indexName: 'indexName',\n\n  // the properties below are optional\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  readProvisionedThroughputSettings: {\n    readCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n    readCapacityUnits: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicaGlobalSecondaryIndexSpecificationProperty: dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty = {\n  indexName: 'indexName',\n\n  // the properties below are optional\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  readProvisionedThroughputSettings: {\n    readCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n    readCapacityUnits: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":7,"10":2,"75":19,"91":2,"153":2,"169":1,"193":5,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":14,"290":1},"fqnsFingerprint":"2d8e415aa993f69879279eda7baf0f43e906d7d90f2a7e129e19c88b3f5e127e"},"0bdc74e8f8c35a19b8f85ed202923d30e384551e7850d2caae19e0787d7d0c00":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nreplica_sSESpecification_property = dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty(\n    kms_master_key_id=\"kmsMasterKeyId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar replicaSSESpecificationProperty = new ReplicaSSESpecificationProperty {\n    KmsMasterKeyId = \"kmsMasterKeyId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nReplicaSSESpecificationProperty replicaSSESpecificationProperty = ReplicaSSESpecificationProperty.builder()\n        .kmsMasterKeyId(\"kmsMasterKeyId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nreplicaSSESpecificationProperty := &ReplicaSSESpecificationProperty{\n\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst replicaSSESpecificationProperty: dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty = {\n  kmsMasterKeyId: 'kmsMasterKeyId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicaSSESpecificationProperty: dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty = {\n  kmsMasterKeyId: 'kmsMasterKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"c50d2c4d1a280e965c58e73f29982e90886dd5b812a6d0650c4243f6f2129152"},"c3f813d89f431e9b795435c8cb076e55186ab23e3c80727434ac331be3fd724c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nreplica_specification_property = dynamodb.CfnGlobalTable.ReplicaSpecificationProperty(\n    region=\"region\",\n\n    # the properties below are optional\n    contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n        enabled=False\n    ),\n    deletion_protection_enabled=False,\n    global_secondary_indexes=[dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty(\n        index_name=\"indexName\",\n\n        # the properties below are optional\n        contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n            enabled=False\n        ),\n        read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n            read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                max_capacity=123,\n                min_capacity=123,\n                target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                    target_value=123,\n\n                    # the properties below are optional\n                    disable_scale_in=False,\n                    scale_in_cooldown=123,\n                    scale_out_cooldown=123\n                ),\n\n                # the properties below are optional\n                seed_capacity=123\n            ),\n            read_capacity_units=123\n        )\n    )],\n    kinesis_stream_specification=dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty(\n        stream_arn=\"streamArn\"\n    ),\n    point_in_time_recovery_specification=dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty(\n        point_in_time_recovery_enabled=False\n    ),\n    read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n        read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n            max_capacity=123,\n            min_capacity=123,\n            target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                target_value=123,\n\n                # the properties below are optional\n                disable_scale_in=False,\n                scale_in_cooldown=123,\n                scale_out_cooldown=123\n            ),\n\n            # the properties below are optional\n            seed_capacity=123\n        ),\n        read_capacity_units=123\n    ),\n    sse_specification=dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty(\n        kms_master_key_id=\"kmsMasterKeyId\"\n    ),\n    table_class=\"tableClass\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar replicaSpecificationProperty = new ReplicaSpecificationProperty {\n    Region = \"region\",\n\n    // the properties below are optional\n    ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n        Enabled = false\n    },\n    DeletionProtectionEnabled = false,\n    GlobalSecondaryIndexes = new [] { new ReplicaGlobalSecondaryIndexSpecificationProperty {\n        IndexName = \"indexName\",\n\n        // the properties below are optional\n        ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n            Enabled = false\n        },\n        ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n            ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                MaxCapacity = 123,\n                MinCapacity = 123,\n                TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                    TargetValue = 123,\n\n                    // the properties below are optional\n                    DisableScaleIn = false,\n                    ScaleInCooldown = 123,\n                    ScaleOutCooldown = 123\n                },\n\n                // the properties below are optional\n                SeedCapacity = 123\n            },\n            ReadCapacityUnits = 123\n        }\n    } },\n    KinesisStreamSpecification = new KinesisStreamSpecificationProperty {\n        StreamArn = \"streamArn\"\n    },\n    PointInTimeRecoverySpecification = new PointInTimeRecoverySpecificationProperty {\n        PointInTimeRecoveryEnabled = false\n    },\n    ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n        ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123,\n            TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                TargetValue = 123,\n\n                // the properties below are optional\n                DisableScaleIn = false,\n                ScaleInCooldown = 123,\n                ScaleOutCooldown = 123\n            },\n\n            // the properties below are optional\n            SeedCapacity = 123\n        },\n        ReadCapacityUnits = 123\n    },\n    SseSpecification = new ReplicaSSESpecificationProperty {\n        KmsMasterKeyId = \"kmsMasterKeyId\"\n    },\n    TableClass = \"tableClass\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nReplicaSpecificationProperty replicaSpecificationProperty = ReplicaSpecificationProperty.builder()\n        .region(\"region\")\n\n        // the properties below are optional\n        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                .enabled(false)\n                .build())\n        .deletionProtectionEnabled(false)\n        .globalSecondaryIndexes(List.of(ReplicaGlobalSecondaryIndexSpecificationProperty.builder()\n                .indexName(\"indexName\")\n\n                // the properties below are optional\n                .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                        .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                .maxCapacity(123)\n                                .minCapacity(123)\n                                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                        .targetValue(123)\n\n                                        // the properties below are optional\n                                        .disableScaleIn(false)\n                                        .scaleInCooldown(123)\n                                        .scaleOutCooldown(123)\n                                        .build())\n\n                                // the properties below are optional\n                                .seedCapacity(123)\n                                .build())\n                        .readCapacityUnits(123)\n                        .build())\n                .build()))\n        .kinesisStreamSpecification(KinesisStreamSpecificationProperty.builder()\n                .streamArn(\"streamArn\")\n                .build())\n        .pointInTimeRecoverySpecification(PointInTimeRecoverySpecificationProperty.builder()\n                .pointInTimeRecoveryEnabled(false)\n                .build())\n        .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                .targetValue(123)\n\n                                // the properties below are optional\n                                .disableScaleIn(false)\n                                .scaleInCooldown(123)\n                                .scaleOutCooldown(123)\n                                .build())\n\n                        // the properties below are optional\n                        .seedCapacity(123)\n                        .build())\n                .readCapacityUnits(123)\n                .build())\n        .sseSpecification(ReplicaSSESpecificationProperty.builder()\n                .kmsMasterKeyId(\"kmsMasterKeyId\")\n                .build())\n        .tableClass(\"tableClass\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nreplicaSpecificationProperty := &ReplicaSpecificationProperty{\n\tRegion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\t},\n\tDeletionProtectionEnabled: jsii.Boolean(false),\n\tGlobalSecondaryIndexes: []interface{}{\n\t\t&ReplicaGlobalSecondaryIndexSpecificationProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\t\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tKinesisStreamSpecification: &KinesisStreamSpecificationProperty{\n\t\tStreamArn: jsii.String(\"streamArn\"),\n\t},\n\tPointInTimeRecoverySpecification: &PointInTimeRecoverySpecificationProperty{\n\t\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n\t},\n\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\tMinCapacity: jsii.Number(123),\n\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tSeedCapacity: jsii.Number(123),\n\t\t},\n\t\tReadCapacityUnits: jsii.Number(123),\n\t},\n\tSseSpecification: &ReplicaSSESpecificationProperty{\n\t\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t},\n\tTableClass: jsii.String(\"tableClass\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst replicaSpecificationProperty: dynamodb.CfnGlobalTable.ReplicaSpecificationProperty = {\n  region: 'region',\n\n  // the properties below are optional\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  deletionProtectionEnabled: false,\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    readProvisionedThroughputSettings: {\n      readCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n      readCapacityUnits: 123,\n    },\n  }],\n  kinesisStreamSpecification: {\n    streamArn: 'streamArn',\n  },\n  pointInTimeRecoverySpecification: {\n    pointInTimeRecoveryEnabled: false,\n  },\n  readProvisionedThroughputSettings: {\n    readCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n    readCapacityUnits: 123,\n  },\n  sseSpecification: {\n    kmsMasterKeyId: 'kmsMasterKeyId',\n  },\n  tableClass: 'tableClass',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.ReplicaSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.ReplicaSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicaSpecificationProperty: dynamodb.CfnGlobalTable.ReplicaSpecificationProperty = {\n  region: 'region',\n\n  // the properties below are optional\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  deletionProtectionEnabled: false,\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    readProvisionedThroughputSettings: {\n      readCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n      readCapacityUnits: 123,\n    },\n  }],\n  kinesisStreamSpecification: {\n    streamArn: 'streamArn',\n  },\n  pointInTimeRecoverySpecification: {\n    pointInTimeRecoveryEnabled: false,\n  },\n  readProvisionedThroughputSettings: {\n    readCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n    readCapacityUnits: 123,\n  },\n  sseSpecification: {\n    kmsMasterKeyId: 'kmsMasterKeyId',\n  },\n  tableClass: 'tableClass',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":14,"10":8,"75":45,"91":6,"153":2,"169":1,"192":2,"193":14,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":40,"290":1},"fqnsFingerprint":"d709ef1a36a0ed97ff73aa87d2857f226eebade6820010d7230aa4e4c005a9f4"},"883e14bac8af8f4c840f3115c581120e79655d86bfb7d27b4427fa82c840bf19":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ns_sESpecification_property = dynamodb.CfnGlobalTable.SSESpecificationProperty(\n    sse_enabled=False,\n\n    # the properties below are optional\n    sse_type=\"sseType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar sSESpecificationProperty = new SSESpecificationProperty {\n    SseEnabled = false,\n\n    // the properties below are optional\n    SseType = \"sseType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nSSESpecificationProperty sSESpecificationProperty = SSESpecificationProperty.builder()\n        .sseEnabled(false)\n\n        // the properties below are optional\n        .sseType(\"sseType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nsSESpecificationProperty := &SSESpecificationProperty{\n\tSseEnabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tSseType: jsii.String(\"sseType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst sSESpecificationProperty: dynamodb.CfnGlobalTable.SSESpecificationProperty = {\n  sseEnabled: false,\n\n  // the properties below are optional\n  sseType: 'sseType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.SSESpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.SSESpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sSESpecificationProperty: dynamodb.CfnGlobalTable.SSESpecificationProperty = {\n  sseEnabled: false,\n\n  // the properties below are optional\n  sseType: 'sseType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"9c381cbded3d0281838e54ea0982267e12e985e130ba63a8580c7416e3268982"},"ba6d976d245d2a21b592aa68a8d5b6c342f23b046633e5cca713e29886c7110e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nstream_specification_property = dynamodb.CfnGlobalTable.StreamSpecificationProperty(\n    stream_view_type=\"streamViewType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar streamSpecificationProperty = new StreamSpecificationProperty {\n    StreamViewType = \"streamViewType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nStreamSpecificationProperty streamSpecificationProperty = StreamSpecificationProperty.builder()\n        .streamViewType(\"streamViewType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nstreamSpecificationProperty := &StreamSpecificationProperty{\n\tStreamViewType: jsii.String(\"streamViewType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst streamSpecificationProperty: dynamodb.CfnGlobalTable.StreamSpecificationProperty = {\n  streamViewType: 'streamViewType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.StreamSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.StreamSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst streamSpecificationProperty: dynamodb.CfnGlobalTable.StreamSpecificationProperty = {\n  streamViewType: 'streamViewType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"9789c62dc72e6c057bb1e4c71c4be8782aca16402e84b2a91640493d4f00b1bc"},"fec08454b2da43532d161630815be906d8efc7b12fd6f53ccc9b0da0e690c529":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ntarget_tracking_scaling_policy_configuration_property = dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n    target_value=123,\n\n    # the properties below are optional\n    disable_scale_in=False,\n    scale_in_cooldown=123,\n    scale_out_cooldown=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar targetTrackingScalingPolicyConfigurationProperty = new TargetTrackingScalingPolicyConfigurationProperty {\n    TargetValue = 123,\n\n    // the properties below are optional\n    DisableScaleIn = false,\n    ScaleInCooldown = 123,\n    ScaleOutCooldown = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nTargetTrackingScalingPolicyConfigurationProperty targetTrackingScalingPolicyConfigurationProperty = TargetTrackingScalingPolicyConfigurationProperty.builder()\n        .targetValue(123)\n\n        // the properties below are optional\n        .disableScaleIn(false)\n        .scaleInCooldown(123)\n        .scaleOutCooldown(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ntargetTrackingScalingPolicyConfigurationProperty := &TargetTrackingScalingPolicyConfigurationProperty{\n\tTargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tDisableScaleIn: jsii.Boolean(false),\n\tScaleInCooldown: jsii.Number(123),\n\tScaleOutCooldown: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst targetTrackingScalingPolicyConfigurationProperty: dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  disableScaleIn: false,\n  scaleInCooldown: 123,\n  scaleOutCooldown: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingScalingPolicyConfigurationProperty: dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  disableScaleIn: false,\n  scaleInCooldown: 123,\n  scaleOutCooldown: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":1,"75":9,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"877120e680f9ff25239d0d317afc6746844ba43e36e4b711818a29907b4f796d"},"54da6812295bcad601e46dc4286b0423d7d931d862abd0b2ae057f0c52c52ccf":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ntime_to_live_specification_property = dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty(\n    enabled=False,\n\n    # the properties below are optional\n    attribute_name=\"attributeName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar timeToLiveSpecificationProperty = new TimeToLiveSpecificationProperty {\n    Enabled = false,\n\n    // the properties below are optional\n    AttributeName = \"attributeName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nTimeToLiveSpecificationProperty timeToLiveSpecificationProperty = TimeToLiveSpecificationProperty.builder()\n        .enabled(false)\n\n        // the properties below are optional\n        .attributeName(\"attributeName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ntimeToLiveSpecificationProperty := &TimeToLiveSpecificationProperty{\n\tEnabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tAttributeName: jsii.String(\"attributeName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst timeToLiveSpecificationProperty: dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  attributeName: 'attributeName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timeToLiveSpecificationProperty: dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  attributeName: 'attributeName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"62e8599c95600631da6e4e288a6f904e77df47f9779ff17799bdc1858540afe3"},"38a73665bd21029585be79ea683c2d187908749b68d366e31fd20049052e977c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nwrite_provisioned_throughput_settings_property = dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty(\n    write_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n        max_capacity=123,\n        min_capacity=123,\n        target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n            target_value=123,\n\n            # the properties below are optional\n            disable_scale_in=False,\n            scale_in_cooldown=123,\n            scale_out_cooldown=123\n        ),\n\n        # the properties below are optional\n        seed_capacity=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar writeProvisionedThroughputSettingsProperty = new WriteProvisionedThroughputSettingsProperty {\n    WriteCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n        MaxCapacity = 123,\n        MinCapacity = 123,\n        TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n            TargetValue = 123,\n\n            // the properties below are optional\n            DisableScaleIn = false,\n            ScaleInCooldown = 123,\n            ScaleOutCooldown = 123\n        },\n\n        // the properties below are optional\n        SeedCapacity = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nWriteProvisionedThroughputSettingsProperty writeProvisionedThroughputSettingsProperty = WriteProvisionedThroughputSettingsProperty.builder()\n        .writeCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                .maxCapacity(123)\n                .minCapacity(123)\n                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                        .targetValue(123)\n\n                        // the properties below are optional\n                        .disableScaleIn(false)\n                        .scaleInCooldown(123)\n                        .scaleOutCooldown(123)\n                        .build())\n\n                // the properties below are optional\n                .seedCapacity(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nwriteProvisionedThroughputSettingsProperty := &WriteProvisionedThroughputSettingsProperty{\n\tWriteCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\tMaxCapacity: jsii.Number(123),\n\t\tMinCapacity: jsii.Number(123),\n\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tSeedCapacity: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst writeProvisionedThroughputSettingsProperty: dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty = {\n  writeCapacityAutoScalingSettings: {\n    maxCapacity: 123,\n    minCapacity: 123,\n    targetTrackingScalingPolicyConfiguration: {\n      targetValue: 123,\n\n      // the properties below are optional\n      disableScaleIn: false,\n      scaleInCooldown: 123,\n      scaleOutCooldown: 123,\n    },\n\n    // the properties below are optional\n    seedCapacity: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst writeProvisionedThroughputSettingsProperty: dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty = {\n  writeCapacityAutoScalingSettings: {\n    maxCapacity: 123,\n    minCapacity: 123,\n    targetTrackingScalingPolicyConfiguration: {\n      targetValue: 123,\n\n      // the properties below are optional\n      disableScaleIn: false,\n      scaleInCooldown: 123,\n      scaleOutCooldown: 123,\n    },\n\n    // the properties below are optional\n    seedCapacity: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":6,"10":1,"75":14,"91":1,"153":2,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"a0e914c7d11d81fffd82a524ed4c472b2442e3bd0533fe0d453861a41bf15703"},"8067fb7b2dfa43cf0f100dfd96cbe8d4ac41078146f3649939badba868d1e809":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncfn_global_table_props = dynamodb.CfnGlobalTableProps(\n    attribute_definitions=[dynamodb.CfnGlobalTable.AttributeDefinitionProperty(\n        attribute_name=\"attributeName\",\n        attribute_type=\"attributeType\"\n    )],\n    key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n    replicas=[dynamodb.CfnGlobalTable.ReplicaSpecificationProperty(\n        region=\"region\",\n\n        # the properties below are optional\n        contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n            enabled=False\n        ),\n        deletion_protection_enabled=False,\n        global_secondary_indexes=[dynamodb.CfnGlobalTable.ReplicaGlobalSecondaryIndexSpecificationProperty(\n            index_name=\"indexName\",\n\n            # the properties below are optional\n            contributor_insights_specification=dynamodb.CfnGlobalTable.ContributorInsightsSpecificationProperty(\n                enabled=False\n            ),\n            read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n                read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                    max_capacity=123,\n                    min_capacity=123,\n                    target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                        target_value=123,\n\n                        # the properties below are optional\n                        disable_scale_in=False,\n                        scale_in_cooldown=123,\n                        scale_out_cooldown=123\n                    ),\n\n                    # the properties below are optional\n                    seed_capacity=123\n                ),\n                read_capacity_units=123\n            )\n        )],\n        kinesis_stream_specification=dynamodb.CfnGlobalTable.KinesisStreamSpecificationProperty(\n            stream_arn=\"streamArn\"\n        ),\n        point_in_time_recovery_specification=dynamodb.CfnGlobalTable.PointInTimeRecoverySpecificationProperty(\n            point_in_time_recovery_enabled=False\n        ),\n        read_provisioned_throughput_settings=dynamodb.CfnGlobalTable.ReadProvisionedThroughputSettingsProperty(\n            read_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                max_capacity=123,\n                min_capacity=123,\n                target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                    target_value=123,\n\n                    # the properties below are optional\n                    disable_scale_in=False,\n                    scale_in_cooldown=123,\n                    scale_out_cooldown=123\n                ),\n\n                # the properties below are optional\n                seed_capacity=123\n            ),\n            read_capacity_units=123\n        ),\n        sse_specification=dynamodb.CfnGlobalTable.ReplicaSSESpecificationProperty(\n            kms_master_key_id=\"kmsMasterKeyId\"\n        ),\n        table_class=\"tableClass\",\n        tags=[CfnTag(\n            key=\"key\",\n            value=\"value\"\n        )]\n    )],\n\n    # the properties below are optional\n    billing_mode=\"billingMode\",\n    global_secondary_indexes=[dynamodb.CfnGlobalTable.GlobalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnGlobalTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        ),\n\n        # the properties below are optional\n        write_provisioned_throughput_settings=dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty(\n            write_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n                max_capacity=123,\n                min_capacity=123,\n                target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                    target_value=123,\n\n                    # the properties below are optional\n                    disable_scale_in=False,\n                    scale_in_cooldown=123,\n                    scale_out_cooldown=123\n                ),\n\n                # the properties below are optional\n                seed_capacity=123\n            )\n        )\n    )],\n    local_secondary_indexes=[dynamodb.CfnGlobalTable.LocalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnGlobalTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnGlobalTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        )\n    )],\n    sse_specification=dynamodb.CfnGlobalTable.SSESpecificationProperty(\n        sse_enabled=False,\n\n        # the properties below are optional\n        sse_type=\"sseType\"\n    ),\n    stream_specification=dynamodb.CfnGlobalTable.StreamSpecificationProperty(\n        stream_view_type=\"streamViewType\"\n    ),\n    table_name=\"tableName\",\n    time_to_live_specification=dynamodb.CfnGlobalTable.TimeToLiveSpecificationProperty(\n        enabled=False,\n\n        # the properties below are optional\n        attribute_name=\"attributeName\"\n    ),\n    write_provisioned_throughput_settings=dynamodb.CfnGlobalTable.WriteProvisionedThroughputSettingsProperty(\n        write_capacity_auto_scaling_settings=dynamodb.CfnGlobalTable.CapacityAutoScalingSettingsProperty(\n            max_capacity=123,\n            min_capacity=123,\n            target_tracking_scaling_policy_configuration=dynamodb.CfnGlobalTable.TargetTrackingScalingPolicyConfigurationProperty(\n                target_value=123,\n\n                # the properties below are optional\n                disable_scale_in=False,\n                scale_in_cooldown=123,\n                scale_out_cooldown=123\n            ),\n\n            # the properties below are optional\n            seed_capacity=123\n        )\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar cfnGlobalTableProps = new CfnGlobalTableProps {\n    AttributeDefinitions = new [] { new AttributeDefinitionProperty {\n        AttributeName = \"attributeName\",\n        AttributeType = \"attributeType\"\n    } },\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n    Replicas = new [] { new ReplicaSpecificationProperty {\n        Region = \"region\",\n\n        // the properties below are optional\n        ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n            Enabled = false\n        },\n        DeletionProtectionEnabled = false,\n        GlobalSecondaryIndexes = new [] { new ReplicaGlobalSecondaryIndexSpecificationProperty {\n            IndexName = \"indexName\",\n\n            // the properties below are optional\n            ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n                Enabled = false\n            },\n            ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n                ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                    MaxCapacity = 123,\n                    MinCapacity = 123,\n                    TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                        TargetValue = 123,\n\n                        // the properties below are optional\n                        DisableScaleIn = false,\n                        ScaleInCooldown = 123,\n                        ScaleOutCooldown = 123\n                    },\n\n                    // the properties below are optional\n                    SeedCapacity = 123\n                },\n                ReadCapacityUnits = 123\n            }\n        } },\n        KinesisStreamSpecification = new KinesisStreamSpecificationProperty {\n            StreamArn = \"streamArn\"\n        },\n        PointInTimeRecoverySpecification = new PointInTimeRecoverySpecificationProperty {\n            PointInTimeRecoveryEnabled = false\n        },\n        ReadProvisionedThroughputSettings = new ReadProvisionedThroughputSettingsProperty {\n            ReadCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                MaxCapacity = 123,\n                MinCapacity = 123,\n                TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                    TargetValue = 123,\n\n                    // the properties below are optional\n                    DisableScaleIn = false,\n                    ScaleInCooldown = 123,\n                    ScaleOutCooldown = 123\n                },\n\n                // the properties below are optional\n                SeedCapacity = 123\n            },\n            ReadCapacityUnits = 123\n        },\n        SseSpecification = new ReplicaSSESpecificationProperty {\n            KmsMasterKeyId = \"kmsMasterKeyId\"\n        },\n        TableClass = \"tableClass\",\n        Tags = new [] { new CfnTag {\n            Key = \"key\",\n            Value = \"value\"\n        } }\n    } },\n\n    // the properties below are optional\n    BillingMode = \"billingMode\",\n    GlobalSecondaryIndexes = new [] { new GlobalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        },\n\n        // the properties below are optional\n        WriteProvisionedThroughputSettings = new WriteProvisionedThroughputSettingsProperty {\n            WriteCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n                MaxCapacity = 123,\n                MinCapacity = 123,\n                TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                    TargetValue = 123,\n\n                    // the properties below are optional\n                    DisableScaleIn = false,\n                    ScaleInCooldown = 123,\n                    ScaleOutCooldown = 123\n                },\n\n                // the properties below are optional\n                SeedCapacity = 123\n            }\n        }\n    } },\n    LocalSecondaryIndexes = new [] { new LocalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        }\n    } },\n    SseSpecification = new SSESpecificationProperty {\n        SseEnabled = false,\n\n        // the properties below are optional\n        SseType = \"sseType\"\n    },\n    StreamSpecification = new StreamSpecificationProperty {\n        StreamViewType = \"streamViewType\"\n    },\n    TableName = \"tableName\",\n    TimeToLiveSpecification = new TimeToLiveSpecificationProperty {\n        Enabled = false,\n\n        // the properties below are optional\n        AttributeName = \"attributeName\"\n    },\n    WriteProvisionedThroughputSettings = new WriteProvisionedThroughputSettingsProperty {\n        WriteCapacityAutoScalingSettings = new CapacityAutoScalingSettingsProperty {\n            MaxCapacity = 123,\n            MinCapacity = 123,\n            TargetTrackingScalingPolicyConfiguration = new TargetTrackingScalingPolicyConfigurationProperty {\n                TargetValue = 123,\n\n                // the properties below are optional\n                DisableScaleIn = false,\n                ScaleInCooldown = 123,\n                ScaleOutCooldown = 123\n            },\n\n            // the properties below are optional\n            SeedCapacity = 123\n        }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nCfnGlobalTableProps cfnGlobalTableProps = CfnGlobalTableProps.builder()\n        .attributeDefinitions(List.of(AttributeDefinitionProperty.builder()\n                .attributeName(\"attributeName\")\n                .attributeType(\"attributeType\")\n                .build()))\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n        .replicas(List.of(ReplicaSpecificationProperty.builder()\n                .region(\"region\")\n\n                // the properties below are optional\n                .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deletionProtectionEnabled(false)\n                .globalSecondaryIndexes(List.of(ReplicaGlobalSecondaryIndexSpecificationProperty.builder()\n                        .indexName(\"indexName\")\n\n                        // the properties below are optional\n                        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                                .enabled(false)\n                                .build())\n                        .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                                .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                        .maxCapacity(123)\n                                        .minCapacity(123)\n                                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                                .targetValue(123)\n\n                                                // the properties below are optional\n                                                .disableScaleIn(false)\n                                                .scaleInCooldown(123)\n                                                .scaleOutCooldown(123)\n                                                .build())\n\n                                        // the properties below are optional\n                                        .seedCapacity(123)\n                                        .build())\n                                .readCapacityUnits(123)\n                                .build())\n                        .build()))\n                .kinesisStreamSpecification(KinesisStreamSpecificationProperty.builder()\n                        .streamArn(\"streamArn\")\n                        .build())\n                .pointInTimeRecoverySpecification(PointInTimeRecoverySpecificationProperty.builder()\n                        .pointInTimeRecoveryEnabled(false)\n                        .build())\n                .readProvisionedThroughputSettings(ReadProvisionedThroughputSettingsProperty.builder()\n                        .readCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                .maxCapacity(123)\n                                .minCapacity(123)\n                                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                        .targetValue(123)\n\n                                        // the properties below are optional\n                                        .disableScaleIn(false)\n                                        .scaleInCooldown(123)\n                                        .scaleOutCooldown(123)\n                                        .build())\n\n                                // the properties below are optional\n                                .seedCapacity(123)\n                                .build())\n                        .readCapacityUnits(123)\n                        .build())\n                .sseSpecification(ReplicaSSESpecificationProperty.builder()\n                        .kmsMasterKeyId(\"kmsMasterKeyId\")\n                        .build())\n                .tableClass(\"tableClass\")\n                .tags(List.of(CfnTag.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .build()))\n\n        // the properties below are optional\n        .billingMode(\"billingMode\")\n        .globalSecondaryIndexes(List.of(GlobalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n\n                // the properties below are optional\n                .writeProvisionedThroughputSettings(WriteProvisionedThroughputSettingsProperty.builder()\n                        .writeCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                                .maxCapacity(123)\n                                .minCapacity(123)\n                                .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                        .targetValue(123)\n\n                                        // the properties below are optional\n                                        .disableScaleIn(false)\n                                        .scaleInCooldown(123)\n                                        .scaleOutCooldown(123)\n                                        .build())\n\n                                // the properties below are optional\n                                .seedCapacity(123)\n                                .build())\n                        .build())\n                .build()))\n        .localSecondaryIndexes(List.of(LocalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n                .build()))\n        .sseSpecification(SSESpecificationProperty.builder()\n                .sseEnabled(false)\n\n                // the properties below are optional\n                .sseType(\"sseType\")\n                .build())\n        .streamSpecification(StreamSpecificationProperty.builder()\n                .streamViewType(\"streamViewType\")\n                .build())\n        .tableName(\"tableName\")\n        .timeToLiveSpecification(TimeToLiveSpecificationProperty.builder()\n                .enabled(false)\n\n                // the properties below are optional\n                .attributeName(\"attributeName\")\n                .build())\n        .writeProvisionedThroughputSettings(WriteProvisionedThroughputSettingsProperty.builder()\n                .writeCapacityAutoScalingSettings(CapacityAutoScalingSettingsProperty.builder()\n                        .maxCapacity(123)\n                        .minCapacity(123)\n                        .targetTrackingScalingPolicyConfiguration(TargetTrackingScalingPolicyConfigurationProperty.builder()\n                                .targetValue(123)\n\n                                // the properties below are optional\n                                .disableScaleIn(false)\n                                .scaleInCooldown(123)\n                                .scaleOutCooldown(123)\n                                .build())\n\n                        // the properties below are optional\n                        .seedCapacity(123)\n                        .build())\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncfnGlobalTableProps := &CfnGlobalTableProps{\n\tAttributeDefinitions: []interface{}{\n\t\t&AttributeDefinitionProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tAttributeType: jsii.String(\"attributeType\"),\n\t\t},\n\t},\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\tReplicas: []interface{}{\n\t\t&ReplicaSpecificationProperty{\n\t\t\tRegion: jsii.String(\"region\"),\n\n\t\t\t// the properties below are optional\n\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tDeletionProtectionEnabled: jsii.Boolean(false),\n\t\t\tGlobalSecondaryIndexes: []interface{}{\n\t\t\t\t&ReplicaGlobalSecondaryIndexSpecificationProperty{\n\t\t\t\t\tIndexName: jsii.String(\"indexName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\t\t\t\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tKinesisStreamSpecification: &KinesisStreamSpecificationProperty{\n\t\t\t\tStreamArn: jsii.String(\"streamArn\"),\n\t\t\t},\n\t\t\tPointInTimeRecoverySpecification: &PointInTimeRecoverySpecificationProperty{\n\t\t\t\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tReadProvisionedThroughputSettings: &ReadProvisionedThroughputSettingsProperty{\n\t\t\t\tReadCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t},\n\t\t\tSseSpecification: &ReplicaSSESpecificationProperty{\n\t\t\t\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t\t\t},\n\t\t\tTableClass: jsii.String(\"tableClass\"),\n\t\t\tTags: []cfnTag{\n\t\t\t\t&cfnTag{\n\t\t\t\t\tKey: jsii.String(\"key\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tBillingMode: jsii.String(\"billingMode\"),\n\tGlobalSecondaryIndexes: []interface{}{\n\t\t&GlobalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tWriteProvisionedThroughputSettings: &WriteProvisionedThroughputSettingsProperty{\n\t\t\t\tWriteCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\t\t\tMinCapacity: jsii.Number(123),\n\t\t\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tSeedCapacity: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tLocalSecondaryIndexes: []interface{}{\n\t\t&LocalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\t\t},\n\t},\n\tSseSpecification: &SSESpecificationProperty{\n\t\tSseEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tSseType: jsii.String(\"sseType\"),\n\t},\n\tStreamSpecification: &StreamSpecificationProperty{\n\t\tStreamViewType: jsii.String(\"streamViewType\"),\n\t},\n\tTableName: jsii.String(\"tableName\"),\n\tTimeToLiveSpecification: &TimeToLiveSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tAttributeName: jsii.String(\"attributeName\"),\n\t},\n\tWriteProvisionedThroughputSettings: &WriteProvisionedThroughputSettingsProperty{\n\t\tWriteCapacityAutoScalingSettings: &CapacityAutoScalingSettingsProperty{\n\t\t\tMaxCapacity: jsii.Number(123),\n\t\t\tMinCapacity: jsii.Number(123),\n\t\t\tTargetTrackingScalingPolicyConfiguration: &TargetTrackingScalingPolicyConfigurationProperty{\n\t\t\t\tTargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tDisableScaleIn: jsii.Boolean(false),\n\t\t\t\tScaleInCooldown: jsii.Number(123),\n\t\t\t\tScaleOutCooldown: jsii.Number(123),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tSeedCapacity: jsii.Number(123),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst cfnGlobalTableProps: dynamodb.CfnGlobalTableProps = {\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  replicas: [{\n    region: 'region',\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    deletionProtectionEnabled: false,\n    globalSecondaryIndexes: [{\n      indexName: 'indexName',\n\n      // the properties below are optional\n      contributorInsightsSpecification: {\n        enabled: false,\n      },\n      readProvisionedThroughputSettings: {\n        readCapacityAutoScalingSettings: {\n          maxCapacity: 123,\n          minCapacity: 123,\n          targetTrackingScalingPolicyConfiguration: {\n            targetValue: 123,\n\n            // the properties below are optional\n            disableScaleIn: false,\n            scaleInCooldown: 123,\n            scaleOutCooldown: 123,\n          },\n\n          // the properties below are optional\n          seedCapacity: 123,\n        },\n        readCapacityUnits: 123,\n      },\n    }],\n    kinesisStreamSpecification: {\n      streamArn: 'streamArn',\n    },\n    pointInTimeRecoverySpecification: {\n      pointInTimeRecoveryEnabled: false,\n    },\n    readProvisionedThroughputSettings: {\n      readCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n      readCapacityUnits: 123,\n    },\n    sseSpecification: {\n      kmsMasterKeyId: 'kmsMasterKeyId',\n    },\n    tableClass: 'tableClass',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n\n  // the properties below are optional\n  billingMode: 'billingMode',\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    writeProvisionedThroughputSettings: {\n      writeCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n    },\n  }],\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableName: 'tableName',\n  timeToLiveSpecification: {\n    enabled: false,\n\n    // the properties below are optional\n    attributeName: 'attributeName',\n  },\n  writeProvisionedThroughputSettings: {\n    writeCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnGlobalTableProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnGlobalTableProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnGlobalTableProps: dynamodb.CfnGlobalTableProps = {\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  replicas: [{\n    region: 'region',\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    deletionProtectionEnabled: false,\n    globalSecondaryIndexes: [{\n      indexName: 'indexName',\n\n      // the properties below are optional\n      contributorInsightsSpecification: {\n        enabled: false,\n      },\n      readProvisionedThroughputSettings: {\n        readCapacityAutoScalingSettings: {\n          maxCapacity: 123,\n          minCapacity: 123,\n          targetTrackingScalingPolicyConfiguration: {\n            targetValue: 123,\n\n            // the properties below are optional\n            disableScaleIn: false,\n            scaleInCooldown: 123,\n            scaleOutCooldown: 123,\n          },\n\n          // the properties below are optional\n          seedCapacity: 123,\n        },\n        readCapacityUnits: 123,\n      },\n    }],\n    kinesisStreamSpecification: {\n      streamArn: 'streamArn',\n    },\n    pointInTimeRecoverySpecification: {\n      pointInTimeRecoveryEnabled: false,\n    },\n    readProvisionedThroughputSettings: {\n      readCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n      readCapacityUnits: 123,\n    },\n    sseSpecification: {\n      kmsMasterKeyId: 'kmsMasterKeyId',\n    },\n    tableClass: 'tableClass',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n\n  // the properties below are optional\n  billingMode: 'billingMode',\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    writeProvisionedThroughputSettings: {\n      writeCapacityAutoScalingSettings: {\n        maxCapacity: 123,\n        minCapacity: 123,\n        targetTrackingScalingPolicyConfiguration: {\n          targetValue: 123,\n\n          // the properties below are optional\n          disableScaleIn: false,\n          scaleInCooldown: 123,\n          scaleOutCooldown: 123,\n        },\n\n        // the properties below are optional\n        seedCapacity: 123,\n      },\n    },\n  }],\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableName: 'tableName',\n  timeToLiveSpecification: {\n    enabled: false,\n\n    // the properties below are optional\n    attributeName: 'attributeName',\n  },\n  writeProvisionedThroughputSettings: {\n    writeCapacityAutoScalingSettings: {\n      maxCapacity: 123,\n      minCapacity: 123,\n      targetTrackingScalingPolicyConfiguration: {\n        targetValue: 123,\n\n        // the properties below are optional\n        disableScaleIn: false,\n        scaleInCooldown: 123,\n        scaleOutCooldown: 123,\n      },\n\n      // the properties below are optional\n      seedCapacity: 123,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":26,"10":27,"75":97,"91":10,"153":1,"169":1,"192":11,"193":32,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":93,"290":1},"fqnsFingerprint":"fd5ad42ed0b0aea10bb2f1190dc1a22f92dfb11fbfe70ac273387bc1923fb3cd"},"c6358bc017bc03e68861163c91c55b73c8b77fba877d0247d643d0aa7fe1bd47":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncfn_table = dynamodb.CfnTable(self, \"MyCfnTable\",\n    key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n\n    # the properties below are optional\n    attribute_definitions=[dynamodb.CfnTable.AttributeDefinitionProperty(\n        attribute_name=\"attributeName\",\n        attribute_type=\"attributeType\"\n    )],\n    billing_mode=\"billingMode\",\n    contributor_insights_specification=dynamodb.CfnTable.ContributorInsightsSpecificationProperty(\n        enabled=False\n    ),\n    deletion_protection_enabled=False,\n    global_secondary_indexes=[dynamodb.CfnTable.GlobalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        ),\n\n        # the properties below are optional\n        contributor_insights_specification=dynamodb.CfnTable.ContributorInsightsSpecificationProperty(\n            enabled=False\n        ),\n        provisioned_throughput=dynamodb.CfnTable.ProvisionedThroughputProperty(\n            read_capacity_units=123,\n            write_capacity_units=123\n        )\n    )],\n    import_source_specification=dynamodb.CfnTable.ImportSourceSpecificationProperty(\n        input_format=\"inputFormat\",\n        s3_bucket_source=dynamodb.CfnTable.S3BucketSourceProperty(\n            s3_bucket=\"s3Bucket\",\n\n            # the properties below are optional\n            s3_bucket_owner=\"s3BucketOwner\",\n            s3_key_prefix=\"s3KeyPrefix\"\n        ),\n\n        # the properties below are optional\n        input_compression_type=\"inputCompressionType\",\n        input_format_options=dynamodb.CfnTable.InputFormatOptionsProperty(\n            csv=dynamodb.CfnTable.CsvProperty(\n                delimiter=\"delimiter\",\n                header_list=[\"headerList\"]\n            )\n        )\n    ),\n    kinesis_stream_specification=dynamodb.CfnTable.KinesisStreamSpecificationProperty(\n        stream_arn=\"streamArn\"\n    ),\n    local_secondary_indexes=[dynamodb.CfnTable.LocalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        )\n    )],\n    point_in_time_recovery_specification=dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty(\n        point_in_time_recovery_enabled=False\n    ),\n    provisioned_throughput=dynamodb.CfnTable.ProvisionedThroughputProperty(\n        read_capacity_units=123,\n        write_capacity_units=123\n    ),\n    sse_specification=dynamodb.CfnTable.SSESpecificationProperty(\n        sse_enabled=False,\n\n        # the properties below are optional\n        kms_master_key_id=\"kmsMasterKeyId\",\n        sse_type=\"sseType\"\n    ),\n    stream_specification=dynamodb.CfnTable.StreamSpecificationProperty(\n        stream_view_type=\"streamViewType\"\n    ),\n    table_class=\"tableClass\",\n    table_name=\"tableName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    time_to_live_specification=dynamodb.CfnTable.TimeToLiveSpecificationProperty(\n        attribute_name=\"attributeName\",\n        enabled=False\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar cfnTable = new CfnTable(this, \"MyCfnTable\", new CfnTableProps {\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n\n    // the properties below are optional\n    AttributeDefinitions = new [] { new AttributeDefinitionProperty {\n        AttributeName = \"attributeName\",\n        AttributeType = \"attributeType\"\n    } },\n    BillingMode = \"billingMode\",\n    ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n        Enabled = false\n    },\n    DeletionProtectionEnabled = false,\n    GlobalSecondaryIndexes = new [] { new GlobalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        },\n\n        // the properties below are optional\n        ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n            Enabled = false\n        },\n        ProvisionedThroughput = new ProvisionedThroughputProperty {\n            ReadCapacityUnits = 123,\n            WriteCapacityUnits = 123\n        }\n    } },\n    ImportSourceSpecification = new ImportSourceSpecificationProperty {\n        InputFormat = \"inputFormat\",\n        S3BucketSource = new S3BucketSourceProperty {\n            S3Bucket = \"s3Bucket\",\n\n            // the properties below are optional\n            S3BucketOwner = \"s3BucketOwner\",\n            S3KeyPrefix = \"s3KeyPrefix\"\n        },\n\n        // the properties below are optional\n        InputCompressionType = \"inputCompressionType\",\n        InputFormatOptions = new InputFormatOptionsProperty {\n            Csv = new CsvProperty {\n                Delimiter = \"delimiter\",\n                HeaderList = new [] { \"headerList\" }\n            }\n        }\n    },\n    KinesisStreamSpecification = new KinesisStreamSpecificationProperty {\n        StreamArn = \"streamArn\"\n    },\n    LocalSecondaryIndexes = new [] { new LocalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        }\n    } },\n    PointInTimeRecoverySpecification = new PointInTimeRecoverySpecificationProperty {\n        PointInTimeRecoveryEnabled = false\n    },\n    ProvisionedThroughput = new ProvisionedThroughputProperty {\n        ReadCapacityUnits = 123,\n        WriteCapacityUnits = 123\n    },\n    SseSpecification = new SSESpecificationProperty {\n        SseEnabled = false,\n\n        // the properties below are optional\n        KmsMasterKeyId = \"kmsMasterKeyId\",\n        SseType = \"sseType\"\n    },\n    StreamSpecification = new StreamSpecificationProperty {\n        StreamViewType = \"streamViewType\"\n    },\n    TableClass = \"tableClass\",\n    TableName = \"tableName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TimeToLiveSpecification = new TimeToLiveSpecificationProperty {\n        AttributeName = \"attributeName\",\n        Enabled = false\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nCfnTable cfnTable = CfnTable.Builder.create(this, \"MyCfnTable\")\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n\n        // the properties below are optional\n        .attributeDefinitions(List.of(AttributeDefinitionProperty.builder()\n                .attributeName(\"attributeName\")\n                .attributeType(\"attributeType\")\n                .build()))\n        .billingMode(\"billingMode\")\n        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                .enabled(false)\n                .build())\n        .deletionProtectionEnabled(false)\n        .globalSecondaryIndexes(List.of(GlobalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n\n                // the properties below are optional\n                .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                        .readCapacityUnits(123)\n                        .writeCapacityUnits(123)\n                        .build())\n                .build()))\n        .importSourceSpecification(ImportSourceSpecificationProperty.builder()\n                .inputFormat(\"inputFormat\")\n                .s3BucketSource(S3BucketSourceProperty.builder()\n                        .s3Bucket(\"s3Bucket\")\n\n                        // the properties below are optional\n                        .s3BucketOwner(\"s3BucketOwner\")\n                        .s3KeyPrefix(\"s3KeyPrefix\")\n                        .build())\n\n                // the properties below are optional\n                .inputCompressionType(\"inputCompressionType\")\n                .inputFormatOptions(InputFormatOptionsProperty.builder()\n                        .csv(CsvProperty.builder()\n                                .delimiter(\"delimiter\")\n                                .headerList(List.of(\"headerList\"))\n                                .build())\n                        .build())\n                .build())\n        .kinesisStreamSpecification(KinesisStreamSpecificationProperty.builder()\n                .streamArn(\"streamArn\")\n                .build())\n        .localSecondaryIndexes(List.of(LocalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n                .build()))\n        .pointInTimeRecoverySpecification(PointInTimeRecoverySpecificationProperty.builder()\n                .pointInTimeRecoveryEnabled(false)\n                .build())\n        .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                .readCapacityUnits(123)\n                .writeCapacityUnits(123)\n                .build())\n        .sseSpecification(SSESpecificationProperty.builder()\n                .sseEnabled(false)\n\n                // the properties below are optional\n                .kmsMasterKeyId(\"kmsMasterKeyId\")\n                .sseType(\"sseType\")\n                .build())\n        .streamSpecification(StreamSpecificationProperty.builder()\n                .streamViewType(\"streamViewType\")\n                .build())\n        .tableClass(\"tableClass\")\n        .tableName(\"tableName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .timeToLiveSpecification(TimeToLiveSpecificationProperty.builder()\n                .attributeName(\"attributeName\")\n                .enabled(false)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncfnTable := dynamodb.NewCfnTable(this, jsii.String(\"MyCfnTable\"), &CfnTableProps{\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tAttributeDefinitions: []interface{}{\n\t\t&AttributeDefinitionProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tAttributeType: jsii.String(\"attributeType\"),\n\t\t},\n\t},\n\tBillingMode: jsii.String(\"billingMode\"),\n\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\t},\n\tDeletionProtectionEnabled: jsii.Boolean(false),\n\tGlobalSecondaryIndexes: []interface{}{\n\t\t&GlobalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tProvisionedThroughput: &ProvisionedThroughputProperty{\n\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t\tWriteCapacityUnits: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tImportSourceSpecification: &ImportSourceSpecificationProperty{\n\t\tInputFormat: jsii.String(\"inputFormat\"),\n\t\tS3BucketSource: &S3BucketSourceProperty{\n\t\t\tS3Bucket: jsii.String(\"s3Bucket\"),\n\n\t\t\t// the properties below are optional\n\t\t\tS3BucketOwner: jsii.String(\"s3BucketOwner\"),\n\t\t\tS3KeyPrefix: jsii.String(\"s3KeyPrefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tInputCompressionType: jsii.String(\"inputCompressionType\"),\n\t\tInputFormatOptions: &InputFormatOptionsProperty{\n\t\t\tCsv: &CsvProperty{\n\t\t\t\tDelimiter: jsii.String(\"delimiter\"),\n\t\t\t\tHeaderList: []*string{\n\t\t\t\t\tjsii.String(\"headerList\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tKinesisStreamSpecification: &KinesisStreamSpecificationProperty{\n\t\tStreamArn: jsii.String(\"streamArn\"),\n\t},\n\tLocalSecondaryIndexes: []interface{}{\n\t\t&LocalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\t\t},\n\t},\n\tPointInTimeRecoverySpecification: &PointInTimeRecoverySpecificationProperty{\n\t\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n\t},\n\tProvisionedThroughput: &ProvisionedThroughputProperty{\n\t\tReadCapacityUnits: jsii.Number(123),\n\t\tWriteCapacityUnits: jsii.Number(123),\n\t},\n\tSseSpecification: &SSESpecificationProperty{\n\t\tSseEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t\tSseType: jsii.String(\"sseType\"),\n\t},\n\tStreamSpecification: &StreamSpecificationProperty{\n\t\tStreamViewType: jsii.String(\"streamViewType\"),\n\t},\n\tTableClass: jsii.String(\"tableClass\"),\n\tTableName: jsii.String(\"tableName\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tTimeToLiveSpecification: &TimeToLiveSpecificationProperty{\n\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\tEnabled: jsii.Boolean(false),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst cfnTable = new dynamodb.CfnTable(this, 'MyCfnTable', {\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n\n  // the properties below are optional\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  billingMode: 'billingMode',\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  deletionProtectionEnabled: false,\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    provisionedThroughput: {\n      readCapacityUnits: 123,\n      writeCapacityUnits: 123,\n    },\n  }],\n  importSourceSpecification: {\n    inputFormat: 'inputFormat',\n    s3BucketSource: {\n      s3Bucket: 's3Bucket',\n\n      // the properties below are optional\n      s3BucketOwner: 's3BucketOwner',\n      s3KeyPrefix: 's3KeyPrefix',\n    },\n\n    // the properties below are optional\n    inputCompressionType: 'inputCompressionType',\n    inputFormatOptions: {\n      csv: {\n        delimiter: 'delimiter',\n        headerList: ['headerList'],\n      },\n    },\n  },\n  kinesisStreamSpecification: {\n    streamArn: 'streamArn',\n  },\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  pointInTimeRecoverySpecification: {\n    pointInTimeRecoveryEnabled: false,\n  },\n  provisionedThroughput: {\n    readCapacityUnits: 123,\n    writeCapacityUnits: 123,\n  },\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    kmsMasterKeyId: 'kmsMasterKeyId',\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableClass: 'tableClass',\n  tableName: 'tableName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeToLiveSpecification: {\n    attributeName: 'attributeName',\n    enabled: false,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable","@aws-cdk/aws-dynamodb.CfnTableProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTable = new dynamodb.CfnTable(this, 'MyCfnTable', {\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n\n  // the properties below are optional\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  billingMode: 'billingMode',\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  deletionProtectionEnabled: false,\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    provisionedThroughput: {\n      readCapacityUnits: 123,\n      writeCapacityUnits: 123,\n    },\n  }],\n  importSourceSpecification: {\n    inputFormat: 'inputFormat',\n    s3BucketSource: {\n      s3Bucket: 's3Bucket',\n\n      // the properties below are optional\n      s3BucketOwner: 's3BucketOwner',\n      s3KeyPrefix: 's3KeyPrefix',\n    },\n\n    // the properties below are optional\n    inputCompressionType: 'inputCompressionType',\n    inputFormatOptions: {\n      csv: {\n        delimiter: 'delimiter',\n        headerList: ['headerList'],\n      },\n    },\n  },\n  kinesisStreamSpecification: {\n    streamArn: 'streamArn',\n  },\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  pointInTimeRecoverySpecification: {\n    pointInTimeRecoveryEnabled: false,\n  },\n  provisionedThroughput: {\n    readCapacityUnits: 123,\n    writeCapacityUnits: 123,\n  },\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    kmsMasterKeyId: 'kmsMasterKeyId',\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableClass: 'tableClass',\n  tableName: 'tableName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeToLiveSpecification: {\n    attributeName: 'attributeName',\n    enabled: false,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":33,"75":67,"91":6,"104":1,"192":10,"193":23,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":63,"290":1},"fqnsFingerprint":"64fac68641448f96974e6cd4e7640c86390ceca081edda9c4faac25d444e7f01"},"36c09d589b9f2d41991488f642be6d5e03ea1bf7841d3d3637df529eaac712a0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nattribute_definition_property = dynamodb.CfnTable.AttributeDefinitionProperty(\n    attribute_name=\"attributeName\",\n    attribute_type=\"attributeType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar attributeDefinitionProperty = new AttributeDefinitionProperty {\n    AttributeName = \"attributeName\",\n    AttributeType = \"attributeType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nAttributeDefinitionProperty attributeDefinitionProperty = AttributeDefinitionProperty.builder()\n        .attributeName(\"attributeName\")\n        .attributeType(\"attributeType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nattributeDefinitionProperty := &AttributeDefinitionProperty{\n\tAttributeName: jsii.String(\"attributeName\"),\n\tAttributeType: jsii.String(\"attributeType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst attributeDefinitionProperty: dynamodb.CfnTable.AttributeDefinitionProperty = {\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.AttributeDefinitionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.AttributeDefinitionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attributeDefinitionProperty: dynamodb.CfnTable.AttributeDefinitionProperty = {\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"71fafc41ae514f1b6ddafa7c5ccbd9b62b7b067a850faa6c18f9b67162ecad61"},"189dc5a0452292365c3b78d9b8624f63472c0ab3b04912612c5e1c152f8080df":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncontributor_insights_specification_property = dynamodb.CfnTable.ContributorInsightsSpecificationProperty(\n    enabled=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar contributorInsightsSpecificationProperty = new ContributorInsightsSpecificationProperty {\n    Enabled = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nContributorInsightsSpecificationProperty contributorInsightsSpecificationProperty = ContributorInsightsSpecificationProperty.builder()\n        .enabled(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncontributorInsightsSpecificationProperty := &ContributorInsightsSpecificationProperty{\n\tEnabled: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst contributorInsightsSpecificationProperty: dynamodb.CfnTable.ContributorInsightsSpecificationProperty = {\n  enabled: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.ContributorInsightsSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.ContributorInsightsSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst contributorInsightsSpecificationProperty: dynamodb.CfnTable.ContributorInsightsSpecificationProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"b82c0b397e9adc15481f7c90ce4486f1fb46e5fe104f768b13cf939de547ddd3"},"5cd3c07fe37fc037256c9ca627e0178f7817d4b1326f3461e6d7b6c5ceca90a5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncsv_property = dynamodb.CfnTable.CsvProperty(\n    delimiter=\"delimiter\",\n    header_list=[\"headerList\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar csvProperty = new CsvProperty {\n    Delimiter = \"delimiter\",\n    HeaderList = new [] { \"headerList\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nCsvProperty csvProperty = CsvProperty.builder()\n        .delimiter(\"delimiter\")\n        .headerList(List.of(\"headerList\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncsvProperty := &CsvProperty{\n\tDelimiter: jsii.String(\"delimiter\"),\n\tHeaderList: []*string{\n\t\tjsii.String(\"headerList\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst csvProperty: dynamodb.CfnTable.CsvProperty = {\n  delimiter: 'delimiter',\n  headerList: ['headerList'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.CsvProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.CsvProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst csvProperty: dynamodb.CfnTable.CsvProperty = {\n  delimiter: 'delimiter',\n  headerList: ['headerList'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"79cf8393dfcdf570d0f29cab918c2454c0ce0f214920cdc9e6cb3924bd52e65c"},"f547bc3cd67c12b2796e4e15ce4c903855a13e6e58ad7f237d9740d019088f6b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nglobal_secondary_index_property = dynamodb.CfnTable.GlobalSecondaryIndexProperty(\n    index_name=\"indexName\",\n    key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n    projection=dynamodb.CfnTable.ProjectionProperty(\n        non_key_attributes=[\"nonKeyAttributes\"],\n        projection_type=\"projectionType\"\n    ),\n\n    # the properties below are optional\n    contributor_insights_specification=dynamodb.CfnTable.ContributorInsightsSpecificationProperty(\n        enabled=False\n    ),\n    provisioned_throughput=dynamodb.CfnTable.ProvisionedThroughputProperty(\n        read_capacity_units=123,\n        write_capacity_units=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar globalSecondaryIndexProperty = new GlobalSecondaryIndexProperty {\n    IndexName = \"indexName\",\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n    Projection = new ProjectionProperty {\n        NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n        ProjectionType = \"projectionType\"\n    },\n\n    // the properties below are optional\n    ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n        Enabled = false\n    },\n    ProvisionedThroughput = new ProvisionedThroughputProperty {\n        ReadCapacityUnits = 123,\n        WriteCapacityUnits = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nGlobalSecondaryIndexProperty globalSecondaryIndexProperty = GlobalSecondaryIndexProperty.builder()\n        .indexName(\"indexName\")\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n        .projection(ProjectionProperty.builder()\n                .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                .projectionType(\"projectionType\")\n                .build())\n\n        // the properties below are optional\n        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                .enabled(false)\n                .build())\n        .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                .readCapacityUnits(123)\n                .writeCapacityUnits(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nglobalSecondaryIndexProperty := &GlobalSecondaryIndexProperty{\n\tIndexName: jsii.String(\"indexName\"),\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\tProjection: &ProjectionProperty{\n\t\tNonKeyAttributes: []*string{\n\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t},\n\t\tProjectionType: jsii.String(\"projectionType\"),\n\t},\n\n\t// the properties below are optional\n\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\t},\n\tProvisionedThroughput: &ProvisionedThroughputProperty{\n\t\tReadCapacityUnits: jsii.Number(123),\n\t\tWriteCapacityUnits: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst globalSecondaryIndexProperty: dynamodb.CfnTable.GlobalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n\n  // the properties below are optional\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  provisionedThroughput: {\n    readCapacityUnits: 123,\n    writeCapacityUnits: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.GlobalSecondaryIndexProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.GlobalSecondaryIndexProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst globalSecondaryIndexProperty: dynamodb.CfnTable.GlobalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n\n  // the properties below are optional\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  provisionedThroughput: {\n    readCapacityUnits: 123,\n    writeCapacityUnits: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":6,"75":17,"91":1,"153":2,"169":1,"192":2,"193":5,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"0d9649818b7b12c0a4318354d87e052bf4b83ec6cc065de5a69b097996708032"},"a1c98a2418ddf1fa143531863584f0207f64ff19fc7f2d6b259a7a0f95d27382":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nimport_source_specification_property = dynamodb.CfnTable.ImportSourceSpecificationProperty(\n    input_format=\"inputFormat\",\n    s3_bucket_source=dynamodb.CfnTable.S3BucketSourceProperty(\n        s3_bucket=\"s3Bucket\",\n\n        # the properties below are optional\n        s3_bucket_owner=\"s3BucketOwner\",\n        s3_key_prefix=\"s3KeyPrefix\"\n    ),\n\n    # the properties below are optional\n    input_compression_type=\"inputCompressionType\",\n    input_format_options=dynamodb.CfnTable.InputFormatOptionsProperty(\n        csv=dynamodb.CfnTable.CsvProperty(\n            delimiter=\"delimiter\",\n            header_list=[\"headerList\"]\n        )\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar importSourceSpecificationProperty = new ImportSourceSpecificationProperty {\n    InputFormat = \"inputFormat\",\n    S3BucketSource = new S3BucketSourceProperty {\n        S3Bucket = \"s3Bucket\",\n\n        // the properties below are optional\n        S3BucketOwner = \"s3BucketOwner\",\n        S3KeyPrefix = \"s3KeyPrefix\"\n    },\n\n    // the properties below are optional\n    InputCompressionType = \"inputCompressionType\",\n    InputFormatOptions = new InputFormatOptionsProperty {\n        Csv = new CsvProperty {\n            Delimiter = \"delimiter\",\n            HeaderList = new [] { \"headerList\" }\n        }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nImportSourceSpecificationProperty importSourceSpecificationProperty = ImportSourceSpecificationProperty.builder()\n        .inputFormat(\"inputFormat\")\n        .s3BucketSource(S3BucketSourceProperty.builder()\n                .s3Bucket(\"s3Bucket\")\n\n                // the properties below are optional\n                .s3BucketOwner(\"s3BucketOwner\")\n                .s3KeyPrefix(\"s3KeyPrefix\")\n                .build())\n\n        // the properties below are optional\n        .inputCompressionType(\"inputCompressionType\")\n        .inputFormatOptions(InputFormatOptionsProperty.builder()\n                .csv(CsvProperty.builder()\n                        .delimiter(\"delimiter\")\n                        .headerList(List.of(\"headerList\"))\n                        .build())\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nimportSourceSpecificationProperty := &ImportSourceSpecificationProperty{\n\tInputFormat: jsii.String(\"inputFormat\"),\n\tS3BucketSource: &S3BucketSourceProperty{\n\t\tS3Bucket: jsii.String(\"s3Bucket\"),\n\n\t\t// the properties below are optional\n\t\tS3BucketOwner: jsii.String(\"s3BucketOwner\"),\n\t\tS3KeyPrefix: jsii.String(\"s3KeyPrefix\"),\n\t},\n\n\t// the properties below are optional\n\tInputCompressionType: jsii.String(\"inputCompressionType\"),\n\tInputFormatOptions: &InputFormatOptionsProperty{\n\t\tCsv: &CsvProperty{\n\t\t\tDelimiter: jsii.String(\"delimiter\"),\n\t\t\tHeaderList: []*string{\n\t\t\t\tjsii.String(\"headerList\"),\n\t\t\t},\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst importSourceSpecificationProperty: dynamodb.CfnTable.ImportSourceSpecificationProperty = {\n  inputFormat: 'inputFormat',\n  s3BucketSource: {\n    s3Bucket: 's3Bucket',\n\n    // the properties below are optional\n    s3BucketOwner: 's3BucketOwner',\n    s3KeyPrefix: 's3KeyPrefix',\n  },\n\n  // the properties below are optional\n  inputCompressionType: 'inputCompressionType',\n  inputFormatOptions: {\n    csv: {\n      delimiter: 'delimiter',\n      headerList: ['headerList'],\n    },\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.ImportSourceSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.ImportSourceSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst importSourceSpecificationProperty: dynamodb.CfnTable.ImportSourceSpecificationProperty = {\n  inputFormat: 'inputFormat',\n  s3BucketSource: {\n    s3Bucket: 's3Bucket',\n\n    // the properties below are optional\n    s3BucketOwner: 's3BucketOwner',\n    s3KeyPrefix: 's3KeyPrefix',\n  },\n\n  // the properties below are optional\n  inputCompressionType: 'inputCompressionType',\n  inputFormatOptions: {\n    csv: {\n      delimiter: 'delimiter',\n      headerList: ['headerList'],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":8,"75":15,"153":2,"169":1,"192":1,"193":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":10,"290":1},"fqnsFingerprint":"0208053d511c3cae9c7459209d34dc222c647bd4d7030f3359b0891fcd9a6025"},"92ff8059583b4c195828d381dd39d08f200244411bc119e51804eeea5b381704":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ninput_format_options_property = dynamodb.CfnTable.InputFormatOptionsProperty(\n    csv=dynamodb.CfnTable.CsvProperty(\n        delimiter=\"delimiter\",\n        header_list=[\"headerList\"]\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar inputFormatOptionsProperty = new InputFormatOptionsProperty {\n    Csv = new CsvProperty {\n        Delimiter = \"delimiter\",\n        HeaderList = new [] { \"headerList\" }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nInputFormatOptionsProperty inputFormatOptionsProperty = InputFormatOptionsProperty.builder()\n        .csv(CsvProperty.builder()\n                .delimiter(\"delimiter\")\n                .headerList(List.of(\"headerList\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ninputFormatOptionsProperty := &InputFormatOptionsProperty{\n\tCsv: &CsvProperty{\n\t\tDelimiter: jsii.String(\"delimiter\"),\n\t\tHeaderList: []*string{\n\t\t\tjsii.String(\"headerList\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst inputFormatOptionsProperty: dynamodb.CfnTable.InputFormatOptionsProperty = {\n  csv: {\n    delimiter: 'delimiter',\n    headerList: ['headerList'],\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.InputFormatOptionsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.InputFormatOptionsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputFormatOptionsProperty: dynamodb.CfnTable.InputFormatOptionsProperty = {\n  csv: {\n    delimiter: 'delimiter',\n    headerList: ['headerList'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"e94e82957b780294baa71e563f43a654ffd531ae33f3a5c26b7f54a5f8882057"},"97f12500303364cde91881fc1b56a32193fb9353b4be37d79fdd34c9e896bcad":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nkey_schema_property = dynamodb.CfnTable.KeySchemaProperty(\n    attribute_name=\"attributeName\",\n    key_type=\"keyType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar keySchemaProperty = new KeySchemaProperty {\n    AttributeName = \"attributeName\",\n    KeyType = \"keyType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nKeySchemaProperty keySchemaProperty = KeySchemaProperty.builder()\n        .attributeName(\"attributeName\")\n        .keyType(\"keyType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nkeySchemaProperty := &KeySchemaProperty{\n\tAttributeName: jsii.String(\"attributeName\"),\n\tKeyType: jsii.String(\"keyType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst keySchemaProperty: dynamodb.CfnTable.KeySchemaProperty = {\n  attributeName: 'attributeName',\n  keyType: 'keyType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.KeySchemaProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.KeySchemaProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst keySchemaProperty: dynamodb.CfnTable.KeySchemaProperty = {\n  attributeName: 'attributeName',\n  keyType: 'keyType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"a4668fa84ae14ccf64b8e7dee40a325ad773197cdc7354f7cc2649167f7fcc2b"},"66c6e3dbf55142232c597efe6147204155f1c9d0df737bf91b3c502d87cc8503":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nkinesis_stream_specification_property = dynamodb.CfnTable.KinesisStreamSpecificationProperty(\n    stream_arn=\"streamArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar kinesisStreamSpecificationProperty = new KinesisStreamSpecificationProperty {\n    StreamArn = \"streamArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nKinesisStreamSpecificationProperty kinesisStreamSpecificationProperty = KinesisStreamSpecificationProperty.builder()\n        .streamArn(\"streamArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nkinesisStreamSpecificationProperty := &KinesisStreamSpecificationProperty{\n\tStreamArn: jsii.String(\"streamArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst kinesisStreamSpecificationProperty: dynamodb.CfnTable.KinesisStreamSpecificationProperty = {\n  streamArn: 'streamArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.KinesisStreamSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.KinesisStreamSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamSpecificationProperty: dynamodb.CfnTable.KinesisStreamSpecificationProperty = {\n  streamArn: 'streamArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"a8549299f81a627be82cccd813ef87344e808f0524fcdf33f18c93321b32eb52"},"e3348fadf49879a1ad40d2fd160162fb9dc597f961662f95c9d30310706bcbc7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nlocal_secondary_index_property = dynamodb.CfnTable.LocalSecondaryIndexProperty(\n    index_name=\"indexName\",\n    key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n    projection=dynamodb.CfnTable.ProjectionProperty(\n        non_key_attributes=[\"nonKeyAttributes\"],\n        projection_type=\"projectionType\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar localSecondaryIndexProperty = new LocalSecondaryIndexProperty {\n    IndexName = \"indexName\",\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n    Projection = new ProjectionProperty {\n        NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n        ProjectionType = \"projectionType\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nLocalSecondaryIndexProperty localSecondaryIndexProperty = LocalSecondaryIndexProperty.builder()\n        .indexName(\"indexName\")\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n        .projection(ProjectionProperty.builder()\n                .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                .projectionType(\"projectionType\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nlocalSecondaryIndexProperty := &LocalSecondaryIndexProperty{\n\tIndexName: jsii.String(\"indexName\"),\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\tProjection: &ProjectionProperty{\n\t\tNonKeyAttributes: []*string{\n\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t},\n\t\tProjectionType: jsii.String(\"projectionType\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst localSecondaryIndexProperty: dynamodb.CfnTable.LocalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.LocalSecondaryIndexProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.LocalSecondaryIndexProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst localSecondaryIndexProperty: dynamodb.CfnTable.LocalSecondaryIndexProperty = {\n  indexName: 'indexName',\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n  projection: {\n    nonKeyAttributes: ['nonKeyAttributes'],\n    projectionType: 'projectionType',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":12,"153":2,"169":1,"192":2,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"ce5e49d83ab7c18a4958697c24c648b33843654fdb002de4d609556723bbf61a"},"ed97064973a39bd8f023e9659ed8c82d84fdc20cb0069f2cb745b6d495c2734e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\npoint_in_time_recovery_specification_property = dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty(\n    point_in_time_recovery_enabled=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar pointInTimeRecoverySpecificationProperty = new PointInTimeRecoverySpecificationProperty {\n    PointInTimeRecoveryEnabled = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nPointInTimeRecoverySpecificationProperty pointInTimeRecoverySpecificationProperty = PointInTimeRecoverySpecificationProperty.builder()\n        .pointInTimeRecoveryEnabled(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\npointInTimeRecoverySpecificationProperty := &PointInTimeRecoverySpecificationProperty{\n\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst pointInTimeRecoverySpecificationProperty: dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty = {\n  pointInTimeRecoveryEnabled: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pointInTimeRecoverySpecificationProperty: dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty = {\n  pointInTimeRecoveryEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"4d66e7b03c21daeb8c76a8a8413b1309371ba8bee98555b2c604aa0ca0e54cd7"},"5ecaf342f10f9b1699e34017e69c2f34e9093d5f782f82b381fe61503b680b68":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nprojection_property = dynamodb.CfnTable.ProjectionProperty(\n    non_key_attributes=[\"nonKeyAttributes\"],\n    projection_type=\"projectionType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar projectionProperty = new ProjectionProperty {\n    NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n    ProjectionType = \"projectionType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nProjectionProperty projectionProperty = ProjectionProperty.builder()\n        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n        .projectionType(\"projectionType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nprojectionProperty := &ProjectionProperty{\n\tNonKeyAttributes: []*string{\n\t\tjsii.String(\"nonKeyAttributes\"),\n\t},\n\tProjectionType: jsii.String(\"projectionType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst projectionProperty: dynamodb.CfnTable.ProjectionProperty = {\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: 'projectionType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.ProjectionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.ProjectionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst projectionProperty: dynamodb.CfnTable.ProjectionProperty = {\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: 'projectionType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"d3253eafb8784e24fe452a6e0ce93a1c04a5697c1278c2c3e977be9ba14b0830"},"e15e4f76dd6958b8ff5388776f6e981c3bc803494d7db15387db67df516a0d01":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nprovisioned_throughput_property = dynamodb.CfnTable.ProvisionedThroughputProperty(\n    read_capacity_units=123,\n    write_capacity_units=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar provisionedThroughputProperty = new ProvisionedThroughputProperty {\n    ReadCapacityUnits = 123,\n    WriteCapacityUnits = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nProvisionedThroughputProperty provisionedThroughputProperty = ProvisionedThroughputProperty.builder()\n        .readCapacityUnits(123)\n        .writeCapacityUnits(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nprovisionedThroughputProperty := &ProvisionedThroughputProperty{\n\tReadCapacityUnits: jsii.Number(123),\n\tWriteCapacityUnits: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst provisionedThroughputProperty: dynamodb.CfnTable.ProvisionedThroughputProperty = {\n  readCapacityUnits: 123,\n  writeCapacityUnits: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.ProvisionedThroughputProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.ProvisionedThroughputProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst provisionedThroughputProperty: dynamodb.CfnTable.ProvisionedThroughputProperty = {\n  readCapacityUnits: 123,\n  writeCapacityUnits: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"97cc8944372865d5c3decc175abded2ea86dbabf92e233c2a8560645f129fcd2"},"d4ffad32ab149e0a2252d56b87c117fdb3e11a985ff88b1977dd0f9ceb6058c6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ns3_bucket_source_property = dynamodb.CfnTable.S3BucketSourceProperty(\n    s3_bucket=\"s3Bucket\",\n\n    # the properties below are optional\n    s3_bucket_owner=\"s3BucketOwner\",\n    s3_key_prefix=\"s3KeyPrefix\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar s3BucketSourceProperty = new S3BucketSourceProperty {\n    S3Bucket = \"s3Bucket\",\n\n    // the properties below are optional\n    S3BucketOwner = \"s3BucketOwner\",\n    S3KeyPrefix = \"s3KeyPrefix\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nS3BucketSourceProperty s3BucketSourceProperty = S3BucketSourceProperty.builder()\n        .s3Bucket(\"s3Bucket\")\n\n        // the properties below are optional\n        .s3BucketOwner(\"s3BucketOwner\")\n        .s3KeyPrefix(\"s3KeyPrefix\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ns3BucketSourceProperty := &S3BucketSourceProperty{\n\tS3Bucket: jsii.String(\"s3Bucket\"),\n\n\t// the properties below are optional\n\tS3BucketOwner: jsii.String(\"s3BucketOwner\"),\n\tS3KeyPrefix: jsii.String(\"s3KeyPrefix\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst s3BucketSourceProperty: dynamodb.CfnTable.S3BucketSourceProperty = {\n  s3Bucket: 's3Bucket',\n\n  // the properties below are optional\n  s3BucketOwner: 's3BucketOwner',\n  s3KeyPrefix: 's3KeyPrefix',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.S3BucketSourceProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.S3BucketSourceProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3BucketSourceProperty: dynamodb.CfnTable.S3BucketSourceProperty = {\n  s3Bucket: 's3Bucket',\n\n  // the properties below are optional\n  s3BucketOwner: 's3BucketOwner',\n  s3KeyPrefix: 's3KeyPrefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"e0ad4b18a4a1f5794504d2b8677028e27f253fd0140334942c6292ed532f8b81"},"e5487b1278136504fef291c394f1d81309d0ce12c4f8cede489b56c5a95424ef":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ns_sESpecification_property = dynamodb.CfnTable.SSESpecificationProperty(\n    sse_enabled=False,\n\n    # the properties below are optional\n    kms_master_key_id=\"kmsMasterKeyId\",\n    sse_type=\"sseType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar sSESpecificationProperty = new SSESpecificationProperty {\n    SseEnabled = false,\n\n    // the properties below are optional\n    KmsMasterKeyId = \"kmsMasterKeyId\",\n    SseType = \"sseType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nSSESpecificationProperty sSESpecificationProperty = SSESpecificationProperty.builder()\n        .sseEnabled(false)\n\n        // the properties below are optional\n        .kmsMasterKeyId(\"kmsMasterKeyId\")\n        .sseType(\"sseType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nsSESpecificationProperty := &SSESpecificationProperty{\n\tSseEnabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\tSseType: jsii.String(\"sseType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst sSESpecificationProperty: dynamodb.CfnTable.SSESpecificationProperty = {\n  sseEnabled: false,\n\n  // the properties below are optional\n  kmsMasterKeyId: 'kmsMasterKeyId',\n  sseType: 'sseType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.SSESpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.SSESpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sSESpecificationProperty: dynamodb.CfnTable.SSESpecificationProperty = {\n  sseEnabled: false,\n\n  // the properties below are optional\n  kmsMasterKeyId: 'kmsMasterKeyId',\n  sseType: 'sseType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"0bb3064c5aaccfb932fe7bdb0425cbcf088af2564b97ee2a1e6bf51f048b8ec2"},"709142f1b0968a1b24b7bfb20746e3abb7c2b62c89471aa04de096ec3fc438e3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nstream_specification_property = dynamodb.CfnTable.StreamSpecificationProperty(\n    stream_view_type=\"streamViewType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar streamSpecificationProperty = new StreamSpecificationProperty {\n    StreamViewType = \"streamViewType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nStreamSpecificationProperty streamSpecificationProperty = StreamSpecificationProperty.builder()\n        .streamViewType(\"streamViewType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nstreamSpecificationProperty := &StreamSpecificationProperty{\n\tStreamViewType: jsii.String(\"streamViewType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst streamSpecificationProperty: dynamodb.CfnTable.StreamSpecificationProperty = {\n  streamViewType: 'streamViewType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.StreamSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.StreamSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst streamSpecificationProperty: dynamodb.CfnTable.StreamSpecificationProperty = {\n  streamViewType: 'streamViewType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"a922927bc926fb9dfc3d27bcbccbe8b832007afd395b92c7dca96a25d450e645"},"b4206dae78f1ad3f292b736980f7447804b86995590a11a6138b3ffa7e2b49ee":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ntime_to_live_specification_property = dynamodb.CfnTable.TimeToLiveSpecificationProperty(\n    attribute_name=\"attributeName\",\n    enabled=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar timeToLiveSpecificationProperty = new TimeToLiveSpecificationProperty {\n    AttributeName = \"attributeName\",\n    Enabled = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nTimeToLiveSpecificationProperty timeToLiveSpecificationProperty = TimeToLiveSpecificationProperty.builder()\n        .attributeName(\"attributeName\")\n        .enabled(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ntimeToLiveSpecificationProperty := &TimeToLiveSpecificationProperty{\n\tAttributeName: jsii.String(\"attributeName\"),\n\tEnabled: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst timeToLiveSpecificationProperty: dynamodb.CfnTable.TimeToLiveSpecificationProperty = {\n  attributeName: 'attributeName',\n  enabled: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTable.TimeToLiveSpecificationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTable.TimeToLiveSpecificationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timeToLiveSpecificationProperty: dynamodb.CfnTable.TimeToLiveSpecificationProperty = {\n  attributeName: 'attributeName',\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"83427587f6d2098b4cb2c101819c20df0627fe8ae6642e6627f4f8353616fed4"},"b0e2b28f3dddd062be4378b4c2498f1e7dd688939f65d95a734408370da06253":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\ncfn_table_props = dynamodb.CfnTableProps(\n    key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n        attribute_name=\"attributeName\",\n        key_type=\"keyType\"\n    )],\n\n    # the properties below are optional\n    attribute_definitions=[dynamodb.CfnTable.AttributeDefinitionProperty(\n        attribute_name=\"attributeName\",\n        attribute_type=\"attributeType\"\n    )],\n    billing_mode=\"billingMode\",\n    contributor_insights_specification=dynamodb.CfnTable.ContributorInsightsSpecificationProperty(\n        enabled=False\n    ),\n    deletion_protection_enabled=False,\n    global_secondary_indexes=[dynamodb.CfnTable.GlobalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        ),\n\n        # the properties below are optional\n        contributor_insights_specification=dynamodb.CfnTable.ContributorInsightsSpecificationProperty(\n            enabled=False\n        ),\n        provisioned_throughput=dynamodb.CfnTable.ProvisionedThroughputProperty(\n            read_capacity_units=123,\n            write_capacity_units=123\n        )\n    )],\n    import_source_specification=dynamodb.CfnTable.ImportSourceSpecificationProperty(\n        input_format=\"inputFormat\",\n        s3_bucket_source=dynamodb.CfnTable.S3BucketSourceProperty(\n            s3_bucket=\"s3Bucket\",\n\n            # the properties below are optional\n            s3_bucket_owner=\"s3BucketOwner\",\n            s3_key_prefix=\"s3KeyPrefix\"\n        ),\n\n        # the properties below are optional\n        input_compression_type=\"inputCompressionType\",\n        input_format_options=dynamodb.CfnTable.InputFormatOptionsProperty(\n            csv=dynamodb.CfnTable.CsvProperty(\n                delimiter=\"delimiter\",\n                header_list=[\"headerList\"]\n            )\n        )\n    ),\n    kinesis_stream_specification=dynamodb.CfnTable.KinesisStreamSpecificationProperty(\n        stream_arn=\"streamArn\"\n    ),\n    local_secondary_indexes=[dynamodb.CfnTable.LocalSecondaryIndexProperty(\n        index_name=\"indexName\",\n        key_schema=[dynamodb.CfnTable.KeySchemaProperty(\n            attribute_name=\"attributeName\",\n            key_type=\"keyType\"\n        )],\n        projection=dynamodb.CfnTable.ProjectionProperty(\n            non_key_attributes=[\"nonKeyAttributes\"],\n            projection_type=\"projectionType\"\n        )\n    )],\n    point_in_time_recovery_specification=dynamodb.CfnTable.PointInTimeRecoverySpecificationProperty(\n        point_in_time_recovery_enabled=False\n    ),\n    provisioned_throughput=dynamodb.CfnTable.ProvisionedThroughputProperty(\n        read_capacity_units=123,\n        write_capacity_units=123\n    ),\n    sse_specification=dynamodb.CfnTable.SSESpecificationProperty(\n        sse_enabled=False,\n\n        # the properties below are optional\n        kms_master_key_id=\"kmsMasterKeyId\",\n        sse_type=\"sseType\"\n    ),\n    stream_specification=dynamodb.CfnTable.StreamSpecificationProperty(\n        stream_view_type=\"streamViewType\"\n    ),\n    table_class=\"tableClass\",\n    table_name=\"tableName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    time_to_live_specification=dynamodb.CfnTable.TimeToLiveSpecificationProperty(\n        attribute_name=\"attributeName\",\n        enabled=False\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar cfnTableProps = new CfnTableProps {\n    KeySchema = new [] { new KeySchemaProperty {\n        AttributeName = \"attributeName\",\n        KeyType = \"keyType\"\n    } },\n\n    // the properties below are optional\n    AttributeDefinitions = new [] { new AttributeDefinitionProperty {\n        AttributeName = \"attributeName\",\n        AttributeType = \"attributeType\"\n    } },\n    BillingMode = \"billingMode\",\n    ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n        Enabled = false\n    },\n    DeletionProtectionEnabled = false,\n    GlobalSecondaryIndexes = new [] { new GlobalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        },\n\n        // the properties below are optional\n        ContributorInsightsSpecification = new ContributorInsightsSpecificationProperty {\n            Enabled = false\n        },\n        ProvisionedThroughput = new ProvisionedThroughputProperty {\n            ReadCapacityUnits = 123,\n            WriteCapacityUnits = 123\n        }\n    } },\n    ImportSourceSpecification = new ImportSourceSpecificationProperty {\n        InputFormat = \"inputFormat\",\n        S3BucketSource = new S3BucketSourceProperty {\n            S3Bucket = \"s3Bucket\",\n\n            // the properties below are optional\n            S3BucketOwner = \"s3BucketOwner\",\n            S3KeyPrefix = \"s3KeyPrefix\"\n        },\n\n        // the properties below are optional\n        InputCompressionType = \"inputCompressionType\",\n        InputFormatOptions = new InputFormatOptionsProperty {\n            Csv = new CsvProperty {\n                Delimiter = \"delimiter\",\n                HeaderList = new [] { \"headerList\" }\n            }\n        }\n    },\n    KinesisStreamSpecification = new KinesisStreamSpecificationProperty {\n        StreamArn = \"streamArn\"\n    },\n    LocalSecondaryIndexes = new [] { new LocalSecondaryIndexProperty {\n        IndexName = \"indexName\",\n        KeySchema = new [] { new KeySchemaProperty {\n            AttributeName = \"attributeName\",\n            KeyType = \"keyType\"\n        } },\n        Projection = new ProjectionProperty {\n            NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n            ProjectionType = \"projectionType\"\n        }\n    } },\n    PointInTimeRecoverySpecification = new PointInTimeRecoverySpecificationProperty {\n        PointInTimeRecoveryEnabled = false\n    },\n    ProvisionedThroughput = new ProvisionedThroughputProperty {\n        ReadCapacityUnits = 123,\n        WriteCapacityUnits = 123\n    },\n    SseSpecification = new SSESpecificationProperty {\n        SseEnabled = false,\n\n        // the properties below are optional\n        KmsMasterKeyId = \"kmsMasterKeyId\",\n        SseType = \"sseType\"\n    },\n    StreamSpecification = new StreamSpecificationProperty {\n        StreamViewType = \"streamViewType\"\n    },\n    TableClass = \"tableClass\",\n    TableName = \"tableName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TimeToLiveSpecification = new TimeToLiveSpecificationProperty {\n        AttributeName = \"attributeName\",\n        Enabled = false\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nCfnTableProps cfnTableProps = CfnTableProps.builder()\n        .keySchema(List.of(KeySchemaProperty.builder()\n                .attributeName(\"attributeName\")\n                .keyType(\"keyType\")\n                .build()))\n\n        // the properties below are optional\n        .attributeDefinitions(List.of(AttributeDefinitionProperty.builder()\n                .attributeName(\"attributeName\")\n                .attributeType(\"attributeType\")\n                .build()))\n        .billingMode(\"billingMode\")\n        .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                .enabled(false)\n                .build())\n        .deletionProtectionEnabled(false)\n        .globalSecondaryIndexes(List.of(GlobalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n\n                // the properties below are optional\n                .contributorInsightsSpecification(ContributorInsightsSpecificationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                        .readCapacityUnits(123)\n                        .writeCapacityUnits(123)\n                        .build())\n                .build()))\n        .importSourceSpecification(ImportSourceSpecificationProperty.builder()\n                .inputFormat(\"inputFormat\")\n                .s3BucketSource(S3BucketSourceProperty.builder()\n                        .s3Bucket(\"s3Bucket\")\n\n                        // the properties below are optional\n                        .s3BucketOwner(\"s3BucketOwner\")\n                        .s3KeyPrefix(\"s3KeyPrefix\")\n                        .build())\n\n                // the properties below are optional\n                .inputCompressionType(\"inputCompressionType\")\n                .inputFormatOptions(InputFormatOptionsProperty.builder()\n                        .csv(CsvProperty.builder()\n                                .delimiter(\"delimiter\")\n                                .headerList(List.of(\"headerList\"))\n                                .build())\n                        .build())\n                .build())\n        .kinesisStreamSpecification(KinesisStreamSpecificationProperty.builder()\n                .streamArn(\"streamArn\")\n                .build())\n        .localSecondaryIndexes(List.of(LocalSecondaryIndexProperty.builder()\n                .indexName(\"indexName\")\n                .keySchema(List.of(KeySchemaProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .keyType(\"keyType\")\n                        .build()))\n                .projection(ProjectionProperty.builder()\n                        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n                        .projectionType(\"projectionType\")\n                        .build())\n                .build()))\n        .pointInTimeRecoverySpecification(PointInTimeRecoverySpecificationProperty.builder()\n                .pointInTimeRecoveryEnabled(false)\n                .build())\n        .provisionedThroughput(ProvisionedThroughputProperty.builder()\n                .readCapacityUnits(123)\n                .writeCapacityUnits(123)\n                .build())\n        .sseSpecification(SSESpecificationProperty.builder()\n                .sseEnabled(false)\n\n                // the properties below are optional\n                .kmsMasterKeyId(\"kmsMasterKeyId\")\n                .sseType(\"sseType\")\n                .build())\n        .streamSpecification(StreamSpecificationProperty.builder()\n                .streamViewType(\"streamViewType\")\n                .build())\n        .tableClass(\"tableClass\")\n        .tableName(\"tableName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .timeToLiveSpecification(TimeToLiveSpecificationProperty.builder()\n                .attributeName(\"attributeName\")\n                .enabled(false)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\ncfnTableProps := &CfnTableProps{\n\tKeySchema: []interface{}{\n\t\t&KeySchemaProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tAttributeDefinitions: []interface{}{\n\t\t&AttributeDefinitionProperty{\n\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\tAttributeType: jsii.String(\"attributeType\"),\n\t\t},\n\t},\n\tBillingMode: jsii.String(\"billingMode\"),\n\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\tEnabled: jsii.Boolean(false),\n\t},\n\tDeletionProtectionEnabled: jsii.Boolean(false),\n\tGlobalSecondaryIndexes: []interface{}{\n\t\t&GlobalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tContributorInsightsSpecification: &ContributorInsightsSpecificationProperty{\n\t\t\t\tEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tProvisionedThroughput: &ProvisionedThroughputProperty{\n\t\t\t\tReadCapacityUnits: jsii.Number(123),\n\t\t\t\tWriteCapacityUnits: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tImportSourceSpecification: &ImportSourceSpecificationProperty{\n\t\tInputFormat: jsii.String(\"inputFormat\"),\n\t\tS3BucketSource: &S3BucketSourceProperty{\n\t\t\tS3Bucket: jsii.String(\"s3Bucket\"),\n\n\t\t\t// the properties below are optional\n\t\t\tS3BucketOwner: jsii.String(\"s3BucketOwner\"),\n\t\t\tS3KeyPrefix: jsii.String(\"s3KeyPrefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tInputCompressionType: jsii.String(\"inputCompressionType\"),\n\t\tInputFormatOptions: &InputFormatOptionsProperty{\n\t\t\tCsv: &CsvProperty{\n\t\t\t\tDelimiter: jsii.String(\"delimiter\"),\n\t\t\t\tHeaderList: []*string{\n\t\t\t\t\tjsii.String(\"headerList\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tKinesisStreamSpecification: &KinesisStreamSpecificationProperty{\n\t\tStreamArn: jsii.String(\"streamArn\"),\n\t},\n\tLocalSecondaryIndexes: []interface{}{\n\t\t&LocalSecondaryIndexProperty{\n\t\t\tIndexName: jsii.String(\"indexName\"),\n\t\t\tKeySchema: []interface{}{\n\t\t\t\t&KeySchemaProperty{\n\t\t\t\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tKeyType: jsii.String(\"keyType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProjection: &ProjectionProperty{\n\t\t\t\tNonKeyAttributes: []*string{\n\t\t\t\t\tjsii.String(\"nonKeyAttributes\"),\n\t\t\t\t},\n\t\t\t\tProjectionType: jsii.String(\"projectionType\"),\n\t\t\t},\n\t\t},\n\t},\n\tPointInTimeRecoverySpecification: &PointInTimeRecoverySpecificationProperty{\n\t\tPointInTimeRecoveryEnabled: jsii.Boolean(false),\n\t},\n\tProvisionedThroughput: &ProvisionedThroughputProperty{\n\t\tReadCapacityUnits: jsii.Number(123),\n\t\tWriteCapacityUnits: jsii.Number(123),\n\t},\n\tSseSpecification: &SSESpecificationProperty{\n\t\tSseEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tKmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t\tSseType: jsii.String(\"sseType\"),\n\t},\n\tStreamSpecification: &StreamSpecificationProperty{\n\t\tStreamViewType: jsii.String(\"streamViewType\"),\n\t},\n\tTableClass: jsii.String(\"tableClass\"),\n\tTableName: jsii.String(\"tableName\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tTimeToLiveSpecification: &TimeToLiveSpecificationProperty{\n\t\tAttributeName: jsii.String(\"attributeName\"),\n\t\tEnabled: jsii.Boolean(false),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst cfnTableProps: dynamodb.CfnTableProps = {\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n\n  // the properties below are optional\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  billingMode: 'billingMode',\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  deletionProtectionEnabled: false,\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    provisionedThroughput: {\n      readCapacityUnits: 123,\n      writeCapacityUnits: 123,\n    },\n  }],\n  importSourceSpecification: {\n    inputFormat: 'inputFormat',\n    s3BucketSource: {\n      s3Bucket: 's3Bucket',\n\n      // the properties below are optional\n      s3BucketOwner: 's3BucketOwner',\n      s3KeyPrefix: 's3KeyPrefix',\n    },\n\n    // the properties below are optional\n    inputCompressionType: 'inputCompressionType',\n    inputFormatOptions: {\n      csv: {\n        delimiter: 'delimiter',\n        headerList: ['headerList'],\n      },\n    },\n  },\n  kinesisStreamSpecification: {\n    streamArn: 'streamArn',\n  },\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  pointInTimeRecoverySpecification: {\n    pointInTimeRecoveryEnabled: false,\n  },\n  provisionedThroughput: {\n    readCapacityUnits: 123,\n    writeCapacityUnits: 123,\n  },\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    kmsMasterKeyId: 'kmsMasterKeyId',\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableClass: 'tableClass',\n  tableName: 'tableName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeToLiveSpecification: {\n    attributeName: 'attributeName',\n    enabled: false,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.CfnTableProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.CfnTableProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTableProps: dynamodb.CfnTableProps = {\n  keySchema: [{\n    attributeName: 'attributeName',\n    keyType: 'keyType',\n  }],\n\n  // the properties below are optional\n  attributeDefinitions: [{\n    attributeName: 'attributeName',\n    attributeType: 'attributeType',\n  }],\n  billingMode: 'billingMode',\n  contributorInsightsSpecification: {\n    enabled: false,\n  },\n  deletionProtectionEnabled: false,\n  globalSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n\n    // the properties below are optional\n    contributorInsightsSpecification: {\n      enabled: false,\n    },\n    provisionedThroughput: {\n      readCapacityUnits: 123,\n      writeCapacityUnits: 123,\n    },\n  }],\n  importSourceSpecification: {\n    inputFormat: 'inputFormat',\n    s3BucketSource: {\n      s3Bucket: 's3Bucket',\n\n      // the properties below are optional\n      s3BucketOwner: 's3BucketOwner',\n      s3KeyPrefix: 's3KeyPrefix',\n    },\n\n    // the properties below are optional\n    inputCompressionType: 'inputCompressionType',\n    inputFormatOptions: {\n      csv: {\n        delimiter: 'delimiter',\n        headerList: ['headerList'],\n      },\n    },\n  },\n  kinesisStreamSpecification: {\n    streamArn: 'streamArn',\n  },\n  localSecondaryIndexes: [{\n    indexName: 'indexName',\n    keySchema: [{\n      attributeName: 'attributeName',\n      keyType: 'keyType',\n    }],\n    projection: {\n      nonKeyAttributes: ['nonKeyAttributes'],\n      projectionType: 'projectionType',\n    },\n  }],\n  pointInTimeRecoverySpecification: {\n    pointInTimeRecoveryEnabled: false,\n  },\n  provisionedThroughput: {\n    readCapacityUnits: 123,\n    writeCapacityUnits: 123,\n  },\n  sseSpecification: {\n    sseEnabled: false,\n\n    // the properties below are optional\n    kmsMasterKeyId: 'kmsMasterKeyId',\n    sseType: 'sseType',\n  },\n  streamSpecification: {\n    streamViewType: 'streamViewType',\n  },\n  tableClass: 'tableClass',\n  tableName: 'tableName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeToLiveSpecification: {\n    attributeName: 'attributeName',\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":4,"10":32,"75":67,"91":6,"153":1,"169":1,"192":10,"193":23,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":63,"290":1},"fqnsFingerprint":"209d88e9255fc744a26fb4c00e72e9fa64bbfb6559513306fc907ecd13d28c18"},"ea72aad82e4306245fa3cdeb20ddb197d1554ce27823b293bf445f3ca5e7ebc5":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.EnableScalingProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"},"a8f5d39dc4977f32461c4485b72b2f4a1cfa4f1a9e1150430ba1195d116761a6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nglobal_secondary_index_props = dynamodb.GlobalSecondaryIndexProps(\n    index_name=\"indexName\",\n    partition_key=dynamodb.Attribute(\n        name=\"name\",\n        type=dynamodb.AttributeType.BINARY\n    ),\n\n    # the properties below are optional\n    non_key_attributes=[\"nonKeyAttributes\"],\n    projection_type=dynamodb.ProjectionType.KEYS_ONLY,\n    read_capacity=123,\n    sort_key=dynamodb.Attribute(\n        name=\"name\",\n        type=dynamodb.AttributeType.BINARY\n    ),\n    write_capacity=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar globalSecondaryIndexProps = new GlobalSecondaryIndexProps {\n    IndexName = \"indexName\",\n    PartitionKey = new Attribute {\n        Name = \"name\",\n        Type = AttributeType.BINARY\n    },\n\n    // the properties below are optional\n    NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n    ProjectionType = ProjectionType.KEYS_ONLY,\n    ReadCapacity = 123,\n    SortKey = new Attribute {\n        Name = \"name\",\n        Type = AttributeType.BINARY\n    },\n    WriteCapacity = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nGlobalSecondaryIndexProps globalSecondaryIndexProps = GlobalSecondaryIndexProps.builder()\n        .indexName(\"indexName\")\n        .partitionKey(Attribute.builder()\n                .name(\"name\")\n                .type(AttributeType.BINARY)\n                .build())\n\n        // the properties below are optional\n        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n        .projectionType(ProjectionType.KEYS_ONLY)\n        .readCapacity(123)\n        .sortKey(Attribute.builder()\n                .name(\"name\")\n                .type(AttributeType.BINARY)\n                .build())\n        .writeCapacity(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nglobalSecondaryIndexProps := &GlobalSecondaryIndexProps{\n\tIndexName: jsii.String(\"indexName\"),\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"name\"),\n\t\tType: dynamodb.AttributeType_BINARY,\n\t},\n\n\t// the properties below are optional\n\tNonKeyAttributes: []*string{\n\t\tjsii.String(\"nonKeyAttributes\"),\n\t},\n\tProjectionType: dynamodb.ProjectionType_KEYS_ONLY,\n\tReadCapacity: jsii.Number(123),\n\tSortKey: &Attribute{\n\t\tName: jsii.String(\"name\"),\n\t\tType: dynamodb.AttributeType_BINARY,\n\t},\n\tWriteCapacity: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst globalSecondaryIndexProps: dynamodb.GlobalSecondaryIndexProps = {\n  indexName: 'indexName',\n  partitionKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n\n  // the properties below are optional\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: dynamodb.ProjectionType.KEYS_ONLY,\n  readCapacity: 123,\n  sortKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n  writeCapacity: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.GlobalSecondaryIndexProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#BINARY","@aws-cdk/aws-dynamodb.GlobalSecondaryIndexProps","@aws-cdk/aws-dynamodb.ProjectionType","@aws-cdk/aws-dynamodb.ProjectionType#KEYS_ONLY"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst globalSecondaryIndexProps: dynamodb.GlobalSecondaryIndexProps = {\n  indexName: 'indexName',\n  partitionKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n\n  // the properties below are optional\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: dynamodb.ProjectionType.KEYS_ONLY,\n  readCapacity: 123,\n  sortKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n  writeCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":5,"75":24,"153":1,"169":1,"192":1,"193":3,"194":6,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"3829cfb3ff9741dc8490b955d3a3b599ee5adc5860a981a138478d8ceac85e46"},"5817c11e6160b0865f4d2f0b49334923f157aa2c12d84fe108a751e8cd48e020":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nlocal_secondary_index_props = dynamodb.LocalSecondaryIndexProps(\n    index_name=\"indexName\",\n    sort_key=dynamodb.Attribute(\n        name=\"name\",\n        type=dynamodb.AttributeType.BINARY\n    ),\n\n    # the properties below are optional\n    non_key_attributes=[\"nonKeyAttributes\"],\n    projection_type=dynamodb.ProjectionType.KEYS_ONLY\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar localSecondaryIndexProps = new LocalSecondaryIndexProps {\n    IndexName = \"indexName\",\n    SortKey = new Attribute {\n        Name = \"name\",\n        Type = AttributeType.BINARY\n    },\n\n    // the properties below are optional\n    NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n    ProjectionType = ProjectionType.KEYS_ONLY\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nLocalSecondaryIndexProps localSecondaryIndexProps = LocalSecondaryIndexProps.builder()\n        .indexName(\"indexName\")\n        .sortKey(Attribute.builder()\n                .name(\"name\")\n                .type(AttributeType.BINARY)\n                .build())\n\n        // the properties below are optional\n        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n        .projectionType(ProjectionType.KEYS_ONLY)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nlocalSecondaryIndexProps := &LocalSecondaryIndexProps{\n\tIndexName: jsii.String(\"indexName\"),\n\tSortKey: &Attribute{\n\t\tName: jsii.String(\"name\"),\n\t\tType: dynamodb.AttributeType_BINARY,\n\t},\n\n\t// the properties below are optional\n\tNonKeyAttributes: []*string{\n\t\tjsii.String(\"nonKeyAttributes\"),\n\t},\n\tProjectionType: dynamodb.ProjectionType_KEYS_ONLY,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst localSecondaryIndexProps: dynamodb.LocalSecondaryIndexProps = {\n  indexName: 'indexName',\n  sortKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n\n  // the properties below are optional\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: dynamodb.ProjectionType.KEYS_ONLY,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.LocalSecondaryIndexProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#BINARY","@aws-cdk/aws-dynamodb.LocalSecondaryIndexProps","@aws-cdk/aws-dynamodb.ProjectionType","@aws-cdk/aws-dynamodb.ProjectionType#KEYS_ONLY"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst localSecondaryIndexProps: dynamodb.LocalSecondaryIndexProps = {\n  indexName: 'indexName',\n  sortKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n\n  // the properties below are optional\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: dynamodb.ProjectionType.KEYS_ONLY,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":16,"153":1,"169":1,"192":1,"193":2,"194":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"7f91e5e435153da230260dfbf7d85c952ec1ab030043d6600719b9db25b94ace"},"1b1c301f160345a4930ffdbd66a3fa9a2106a55c2d37d4dfcc928bc0b3ce309f":{"translations":{"python":{"source":"# table: dynamodb.Table\n\nschema = table.schema()\npartition_key = schema.partition_key\nsort_key = schema.sort_key","version":"2"},"csharp":{"source":"Table table;\n\nvar schema = table.Schema();\nvar partitionKey = schema.PartitionKey;\nvar sortKey = schema.SortKey;","version":"1"},"java":{"source":"Table table;\n\nSchemaOptions schema = table.schema();\nAttribute partitionKey = schema.getPartitionKey();\nAttribute sortKey = schema.getSortKey();","version":"1"},"go":{"source":"var table table\n\nschema := table.Schema()\npartitionKey := schema.PartitionKey\nsortKey := schema.SortKey","version":"1"},"$":{"source":"declare const table: dynamodb.Table;\nconst schema = table.schema();\nconst partitionKey = schema.partitionKey;\nconst sortKey = schema.sortKey;\n\n// In case you want to get schema details for any secondary index\n// const { partitionKey, sortKey } = table.schema(INDEX_NAME);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.SchemaOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.SchemaOptions","@aws-cdk/aws-dynamodb.SchemaOptions#partitionKey","@aws-cdk/aws-dynamodb.SchemaOptions#sortKey","@aws-cdk/aws-dynamodb.Table#schema"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const table: dynamodb.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst schema = table.schema();\nconst partitionKey = schema.partitionKey;\nconst sortKey = schema.sortKey;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"75":12,"130":1,"153":1,"169":1,"194":3,"196":1,"225":4,"242":4,"243":4,"290":1},"fqnsFingerprint":"bc3abe0e48d5d964a7aa644af5331e564ba931daf972d94cc0eb3403af328fb5"},"8e237b5a1f11a574ad5697c29666cad2bd67bf6b532713670310581b88271131":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\n\nsecondary_index_props = dynamodb.SecondaryIndexProps(\n    index_name=\"indexName\",\n\n    # the properties below are optional\n    non_key_attributes=[\"nonKeyAttributes\"],\n    projection_type=dynamodb.ProjectionType.KEYS_ONLY\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\n\nvar secondaryIndexProps = new SecondaryIndexProps {\n    IndexName = \"indexName\",\n\n    // the properties below are optional\n    NonKeyAttributes = new [] { \"nonKeyAttributes\" },\n    ProjectionType = ProjectionType.KEYS_ONLY\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\n\nSecondaryIndexProps secondaryIndexProps = SecondaryIndexProps.builder()\n        .indexName(\"indexName\")\n\n        // the properties below are optional\n        .nonKeyAttributes(List.of(\"nonKeyAttributes\"))\n        .projectionType(ProjectionType.KEYS_ONLY)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\n\nsecondaryIndexProps := &SecondaryIndexProps{\n\tIndexName: jsii.String(\"indexName\"),\n\n\t// the properties below are optional\n\tNonKeyAttributes: []*string{\n\t\tjsii.String(\"nonKeyAttributes\"),\n\t},\n\tProjectionType: dynamodb.ProjectionType_KEYS_ONLY,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nconst secondaryIndexProps: dynamodb.SecondaryIndexProps = {\n  indexName: 'indexName',\n\n  // the properties below are optional\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: dynamodb.ProjectionType.KEYS_ONLY,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.SecondaryIndexProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.ProjectionType","@aws-cdk/aws-dynamodb.ProjectionType#KEYS_ONLY","@aws-cdk/aws-dynamodb.SecondaryIndexProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst secondaryIndexProps: dynamodb.SecondaryIndexProps = {\n  indexName: 'indexName',\n\n  // the properties below are optional\n  nonKeyAttributes: ['nonKeyAttributes'],\n  projectionType: dynamodb.ProjectionType.KEYS_ONLY,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":10,"153":1,"169":1,"192":1,"193":1,"194":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"8e60a6c7e8fde50f5673b2d37aeca2f69e3139616766fabaac8d5ccacb156c2f"},"45de5e201cbe10932bca880c735f77619db749020026b28ae4f93753cc1cee4f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.aws_dynamodb as dynamodb\nimport aws_cdk.core as cdk\n\n# dimensions: Any\n\nsystem_errors_for_operations_metric_options = dynamodb.SystemErrorsForOperationsMetricOptions(\n    account=\"account\",\n    color=\"color\",\n    dimensions={\n        \"dimensions_key\": dimensions\n    },\n    dimensions_map={\n        \"dimensions_map_key\": \"dimensionsMap\"\n    },\n    label=\"label\",\n    operations=[dynamodb.Operation.GET_ITEM],\n    period=cdk.Duration.minutes(30),\n    region=\"region\",\n    statistic=\"statistic\",\n    unit=cloudwatch.Unit.SECONDS\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK.AWS.DynamoDB;\nusing Amazon.CDK;\n\nvar dimensions;\nvar systemErrorsForOperationsMetricOptions = new SystemErrorsForOperationsMetricOptions {\n    Account = \"account\",\n    Color = \"color\",\n    Dimensions = new Dictionary<string, object> {\n        { \"dimensionsKey\", dimensions }\n    },\n    DimensionsMap = new Dictionary<string, string> {\n        { \"dimensionsMapKey\", \"dimensionsMap\" }\n    },\n    Label = \"label\",\n    Operations = new [] { Operation.GET_ITEM },\n    Period = Duration.Minutes(30),\n    Region = \"region\",\n    Statistic = \"statistic\",\n    Unit = Unit.SECONDS\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.services.dynamodb.*;\nimport software.amazon.awscdk.core.*;\n\nObject dimensions;\n\nSystemErrorsForOperationsMetricOptions systemErrorsForOperationsMetricOptions = SystemErrorsForOperationsMetricOptions.builder()\n        .account(\"account\")\n        .color(\"color\")\n        .dimensions(Map.of(\n                \"dimensionsKey\", dimensions))\n        .dimensionsMap(Map.of(\n                \"dimensionsMapKey\", \"dimensionsMap\"))\n        .label(\"label\")\n        .operations(List.of(Operation.GET_ITEM))\n        .period(Duration.minutes(30))\n        .region(\"region\")\n        .statistic(\"statistic\")\n        .unit(Unit.SECONDS)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar dimensions interface{}\n\nsystemErrorsForOperationsMetricOptions := &SystemErrorsForOperationsMetricOptions{\n\tAccount: jsii.String(\"account\"),\n\tColor: jsii.String(\"color\"),\n\tDimensions: map[string]interface{}{\n\t\t\"dimensionsKey\": dimensions,\n\t},\n\tDimensionsMap: map[string]*string{\n\t\t\"dimensionsMapKey\": jsii.String(\"dimensionsMap\"),\n\t},\n\tLabel: jsii.String(\"label\"),\n\tOperations: []operation{\n\t\tdynamodb.*operation_GET_ITEM,\n\t},\n\tPeriod: cdk.Duration_Minutes(jsii.Number(30)),\n\tRegion: jsii.String(\"region\"),\n\tStatistic: jsii.String(\"statistic\"),\n\tUnit: cloudwatch.Unit_SECONDS,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dimensions: any;\nconst systemErrorsForOperationsMetricOptions: dynamodb.SystemErrorsForOperationsMetricOptions = {\n  account: 'account',\n  color: 'color',\n  dimensions: {\n    dimensionsKey: dimensions,\n  },\n  dimensionsMap: {\n    dimensionsMapKey: 'dimensionsMap',\n  },\n  label: 'label',\n  operations: [dynamodb.Operation.GET_ITEM],\n  period: cdk.Duration.minutes(30),\n  region: 'region',\n  statistic: 'statistic',\n  unit: cloudwatch.Unit.SECONDS,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.SystemErrorsForOperationsMetricOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch.Unit","@aws-cdk/aws-cloudwatch.Unit#SECONDS","@aws-cdk/aws-dynamodb.Operation","@aws-cdk/aws-dynamodb.Operation#GET_ITEM","@aws-cdk/aws-dynamodb.SystemErrorsForOperationsMetricOptions","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dimensions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst systemErrorsForOperationsMetricOptions: dynamodb.SystemErrorsForOperationsMetricOptions = {\n  account: 'account',\n  color: 'color',\n  dimensions: {\n    dimensionsKey: dimensions,\n  },\n  dimensionsMap: {\n    dimensionsMapKey: 'dimensionsMap',\n  },\n  label: 'label',\n  operations: [dynamodb.Operation.GET_ITEM],\n  period: cdk.Duration.minutes(30),\n  region: 'region',\n  statistic: 'statistic',\n  unit: cloudwatch.Unit.SECONDS,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":9,"75":29,"125":1,"130":1,"153":1,"169":1,"192":1,"193":3,"194":6,"196":1,"225":2,"242":2,"243":2,"254":3,"255":3,"256":3,"281":12,"290":1},"fqnsFingerprint":"77057ef413a10478e0b0c4d3cf92609f74d91fdbb0b7e78d16718cc0fd243740"},"128133fad3c664d468722635bd04787589a5baaed6f2351f82f015f31f190fd1":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.Table"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"},"c3a9b87bf37bcd993c9cf502b03033f59ffa93000c0fe9483d7f766ae45491b0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\nimport aws_cdk.aws_kms as kms\n\n# key: kms.Key\n\ntable_attributes = dynamodb.TableAttributes(\n    encryption_key=key,\n    global_indexes=[\"globalIndexes\"],\n    local_indexes=[\"localIndexes\"],\n    table_arn=\"tableArn\",\n    table_name=\"tableName\",\n    table_stream_arn=\"tableStreamArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\nusing Amazon.CDK.AWS.KMS;\n\nKey key;\n\nvar tableAttributes = new TableAttributes {\n    EncryptionKey = key,\n    GlobalIndexes = new [] { \"globalIndexes\" },\n    LocalIndexes = new [] { \"localIndexes\" },\n    TableArn = \"tableArn\",\n    TableName = \"tableName\",\n    TableStreamArn = \"tableStreamArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\nimport software.amazon.awscdk.services.kms.*;\n\nKey key;\n\nTableAttributes tableAttributes = TableAttributes.builder()\n        .encryptionKey(key)\n        .globalIndexes(List.of(\"globalIndexes\"))\n        .localIndexes(List.of(\"localIndexes\"))\n        .tableArn(\"tableArn\")\n        .tableName(\"tableName\")\n        .tableStreamArn(\"tableStreamArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport dynamodb \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\n\nvar key key\n\ntableAttributes := &TableAttributes{\n\tEncryptionKey: key,\n\tGlobalIndexes: []*string{\n\t\tjsii.String(\"globalIndexes\"),\n\t},\n\tLocalIndexes: []*string{\n\t\tjsii.String(\"localIndexes\"),\n\t},\n\tTableArn: jsii.String(\"tableArn\"),\n\tTableName: jsii.String(\"tableName\"),\n\tTableStreamArn: jsii.String(\"tableStreamArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as kms from '@aws-cdk/aws-kms';\n\ndeclare const key: kms.Key;\nconst tableAttributes: dynamodb.TableAttributes = {\n  encryptionKey: key,\n  globalIndexes: ['globalIndexes'],\n  localIndexes: ['localIndexes'],\n  tableArn: 'tableArn',\n  tableName: 'tableName',\n  tableStreamArn: 'tableStreamArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.TableAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.TableAttributes","@aws-cdk/aws-kms.IKey"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as kms from '@aws-cdk/aws-kms';\n\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tableAttributes: dynamodb.TableAttributes = {\n  encryptionKey: key,\n  globalIndexes: ['globalIndexes'],\n  localIndexes: ['localIndexes'],\n  tableArn: 'tableArn',\n  tableName: 'tableName',\n  tableStreamArn: 'tableStreamArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":15,"130":1,"153":2,"169":2,"192":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":6,"290":1},"fqnsFingerprint":"c706946a2c40336c60ae7548b07512338cf3c9a9588cd7a1469c35b06c733fb0"},"35833aff99e4ffa044725c4d25d9afe3868baa21b682541dc7af7c23a3e9d1f5":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    table_class=dynamodb.TableClass.STANDARD_INFREQUENT_ACCESS\n)","version":"2"},"csharp":{"source":"var table = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    TableClass = TableClass.STANDARD_INFREQUENT_ACCESS\n});","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .tableClass(TableClass.STANDARD_INFREQUENT_ACCESS)\n        .build();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tTableClass: dynamodb.TableClass_STANDARD_INFREQUENT_ACCESS,\n})","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  tableClass: dynamodb.TableClass.STANDARD_INFREQUENT_ACCESS,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.TableClass"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.TableClass","@aws-cdk/aws-dynamodb.TableClass#STANDARD_INFREQUENT_ACCESS","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  tableClass: dynamodb.TableClass.STANDARD_INFREQUENT_ACCESS,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":13,"104":1,"193":2,"194":5,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"457ff3be0d0a744647f5db55ded43a0d0a5d0d314e927ad17a32edd8ddbcd91d"},"e6d627ee7d2a83287dca69fef67f7bb589355e16a45e81661d742e66d48a8733":{"translations":{"python":{"source":"table = dynamodb.Table(self, \"MyTable\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    encryption=dynamodb.TableEncryption.CUSTOMER_MANAGED\n)\n\n# You can access the CMK that was added to the stack on your behalf by the Table construct via:\ntable_encryption_key = table.encryption_key","version":"2"},"csharp":{"source":"var table = new Table(this, \"MyTable\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    Encryption = TableEncryption.CUSTOMER_MANAGED\n});\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nvar tableEncryptionKey = table.EncryptionKey;","version":"1"},"java":{"source":"Table table = Table.Builder.create(this, \"MyTable\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .encryption(TableEncryption.CUSTOMER_MANAGED)\n        .build();\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nIKey tableEncryptionKey = table.getEncryptionKey();","version":"1"},"go":{"source":"table := dynamodb.NewTable(this, jsii.String(\"MyTable\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tEncryption: dynamodb.TableEncryption_CUSTOMER_MANAGED,\n})\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\ntableEncryptionKey := table.EncryptionKey","version":"1"},"$":{"source":"const table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.CUSTOMER_MANAGED,\n});\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nconst tableEncryptionKey = table.encryptionKey;","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.TableEncryption"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#encryptionKey","@aws-cdk/aws-dynamodb.TableEncryption","@aws-cdk/aws-dynamodb.TableEncryption#CUSTOMER_MANAGED","@aws-cdk/aws-dynamodb.TableProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst table = new dynamodb.Table(this, 'MyTable', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  encryption: dynamodb.TableEncryption.CUSTOMER_MANAGED,\n});\n\n// You can access the CMK that was added to the stack on your behalf by the Table construct via:\nconst tableEncryptionKey = table.encryptionKey;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":16,"104":1,"193":2,"194":6,"197":1,"225":2,"242":2,"243":2,"281":4},"fqnsFingerprint":"a32b90e6eca2774728f1e01dc9233b6b1102e1607c0ed204dd12c7072808e2c8"},"0466d4f68bac41801a7adc08a32069e04e35802306a96f9c900d92e6f1b3fb94":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_dynamodb as dynamodb\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.core as cdk\n\n# key: kms.Key\n\ntable_options = dynamodb.TableOptions(\n    partition_key=dynamodb.Attribute(\n        name=\"name\",\n        type=dynamodb.AttributeType.BINARY\n    ),\n\n    # the properties below are optional\n    billing_mode=dynamodb.BillingMode.PAY_PER_REQUEST,\n    contributor_insights_enabled=False,\n    encryption=dynamodb.TableEncryption.DEFAULT,\n    encryption_key=key,\n    point_in_time_recovery=False,\n    read_capacity=123,\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    replication_regions=[\"replicationRegions\"],\n    replication_timeout=cdk.Duration.minutes(30),\n    server_side_encryption=False,\n    sort_key=dynamodb.Attribute(\n        name=\"name\",\n        type=dynamodb.AttributeType.BINARY\n    ),\n    stream=dynamodb.StreamViewType.NEW_IMAGE,\n    table_class=dynamodb.TableClass.STANDARD,\n    time_to_live_attribute=\"timeToLiveAttribute\",\n    wait_for_replication_to_finish=False,\n    write_capacity=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.DynamoDB;\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK;\n\nKey key;\nvar tableOptions = new TableOptions {\n    PartitionKey = new Attribute {\n        Name = \"name\",\n        Type = AttributeType.BINARY\n    },\n\n    // the properties below are optional\n    BillingMode = BillingMode.PAY_PER_REQUEST,\n    ContributorInsightsEnabled = false,\n    Encryption = TableEncryption.DEFAULT,\n    EncryptionKey = key,\n    PointInTimeRecovery = false,\n    ReadCapacity = 123,\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    ReplicationRegions = new [] { \"replicationRegions\" },\n    ReplicationTimeout = Duration.Minutes(30),\n    ServerSideEncryption = false,\n    SortKey = new Attribute {\n        Name = \"name\",\n        Type = AttributeType.BINARY\n    },\n    Stream = StreamViewType.NEW_IMAGE,\n    TableClass = TableClass.STANDARD,\n    TimeToLiveAttribute = \"timeToLiveAttribute\",\n    WaitForReplicationToFinish = false,\n    WriteCapacity = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.dynamodb.*;\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.core.*;\n\nKey key;\n\nTableOptions tableOptions = TableOptions.builder()\n        .partitionKey(Attribute.builder()\n                .name(\"name\")\n                .type(AttributeType.BINARY)\n                .build())\n\n        // the properties below are optional\n        .billingMode(BillingMode.PAY_PER_REQUEST)\n        .contributorInsightsEnabled(false)\n        .encryption(TableEncryption.DEFAULT)\n        .encryptionKey(key)\n        .pointInTimeRecovery(false)\n        .readCapacity(123)\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .replicationRegions(List.of(\"replicationRegions\"))\n        .replicationTimeout(Duration.minutes(30))\n        .serverSideEncryption(false)\n        .sortKey(Attribute.builder()\n                .name(\"name\")\n                .type(AttributeType.BINARY)\n                .build())\n        .stream(StreamViewType.NEW_IMAGE)\n        .tableClass(TableClass.STANDARD)\n        .timeToLiveAttribute(\"timeToLiveAttribute\")\n        .waitForReplicationToFinish(false)\n        .writeCapacity(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsdynamodb\"\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar key key\n\ntableOptions := &TableOptions{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"name\"),\n\t\tType: dynamodb.AttributeType_BINARY,\n\t},\n\n\t// the properties below are optional\n\tBillingMode: dynamodb.BillingMode_PAY_PER_REQUEST,\n\tContributorInsightsEnabled: jsii.Boolean(false),\n\tEncryption: dynamodb.TableEncryption_DEFAULT,\n\tEncryptionKey: key,\n\tPointInTimeRecovery: jsii.Boolean(false),\n\tReadCapacity: jsii.Number(123),\n\tRemovalPolicy: cdk.RemovalPolicy_DESTROY,\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"replicationRegions\"),\n\t},\n\tReplicationTimeout: cdk.Duration_Minutes(jsii.Number(30)),\n\tServerSideEncryption: jsii.Boolean(false),\n\tSortKey: &Attribute{\n\t\tName: jsii.String(\"name\"),\n\t\tType: dynamodb.AttributeType_BINARY,\n\t},\n\tStream: dynamodb.StreamViewType_NEW_IMAGE,\n\tTableClass: dynamodb.TableClass_STANDARD,\n\tTimeToLiveAttribute: jsii.String(\"timeToLiveAttribute\"),\n\tWaitForReplicationToFinish: jsii.Boolean(false),\n\tWriteCapacity: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const key: kms.Key;\nconst tableOptions: dynamodb.TableOptions = {\n  partitionKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n\n  // the properties below are optional\n  billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,\n  contributorInsightsEnabled: false,\n  encryption: dynamodb.TableEncryption.DEFAULT,\n  encryptionKey: key,\n  pointInTimeRecovery: false,\n  readCapacity: 123,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  replicationRegions: ['replicationRegions'],\n  replicationTimeout: cdk.Duration.minutes(30),\n  serverSideEncryption: false,\n  sortKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n  stream: dynamodb.StreamViewType.NEW_IMAGE,\n  tableClass: dynamodb.TableClass.STANDARD,\n  timeToLiveAttribute: 'timeToLiveAttribute',\n  waitForReplicationToFinish: false,\n  writeCapacity: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.TableOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#BINARY","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PAY_PER_REQUEST","@aws-cdk/aws-dynamodb.StreamViewType","@aws-cdk/aws-dynamodb.StreamViewType#NEW_IMAGE","@aws-cdk/aws-dynamodb.TableClass","@aws-cdk/aws-dynamodb.TableClass#STANDARD","@aws-cdk/aws-dynamodb.TableEncryption","@aws-cdk/aws-dynamodb.TableEncryption#DEFAULT","@aws-cdk/aws-dynamodb.TableOptions","@aws-cdk/aws-kms.IKey","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","@aws-cdk/core.RemovalPolicy","@aws-cdk/core.RemovalPolicy#DESTROY"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tableOptions: dynamodb.TableOptions = {\n  partitionKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n\n  // the properties below are optional\n  billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,\n  contributorInsightsEnabled: false,\n  encryption: dynamodb.TableEncryption.DEFAULT,\n  encryptionKey: key,\n  pointInTimeRecovery: false,\n  readCapacity: 123,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  replicationRegions: ['replicationRegions'],\n  replicationTimeout: cdk.Duration.minutes(30),\n  serverSideEncryption: false,\n  sortKey: {\n    name: 'name',\n    type: dynamodb.AttributeType.BINARY,\n  },\n  stream: dynamodb.StreamViewType.NEW_IMAGE,\n  tableClass: dynamodb.TableClass.STANDARD,\n  timeToLiveAttribute: 'timeToLiveAttribute',\n  waitForReplicationToFinish: false,\n  writeCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":7,"75":55,"91":4,"130":1,"153":2,"169":2,"192":1,"193":3,"194":16,"196":1,"225":2,"242":2,"243":2,"254":3,"255":3,"256":3,"281":21,"290":1},"fqnsFingerprint":"5883cb9218be9285a42ed625eb9b1292b9d81cf3155530c38a857fd24216c722"},"d9c697c653779e41df83d4d2a37848d2cb0340d72f40b58755bb002198b52583":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.TableProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"},"247542d957ea4d68723297979312d1084a09e6f43b7e6933b19502070fc1808c":{"translations":{"python":{"source":"global_table = dynamodb.Table(self, \"Table\",\n    partition_key=dynamodb.Attribute(name=\"id\", type=dynamodb.AttributeType.STRING),\n    replication_regions=[\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n    billing_mode=dynamodb.BillingMode.PROVISIONED\n)\n\nglobal_table.auto_scale_write_capacity(\n    min_capacity=1,\n    max_capacity=10\n).scale_on_utilization(target_utilization_percent=75)","version":"2"},"csharp":{"source":"var globalTable = new Table(this, \"Table\", new TableProps {\n    PartitionKey = new Attribute { Name = \"id\", Type = AttributeType.STRING },\n    ReplicationRegions = new [] { \"us-east-1\", \"us-east-2\", \"us-west-2\" },\n    BillingMode = BillingMode.PROVISIONED\n});\n\nglobalTable.AutoScaleWriteCapacity(new EnableScalingProps {\n    MinCapacity = 1,\n    MaxCapacity = 10\n}).ScaleOnUtilization(new UtilizationScalingProps { TargetUtilizationPercent = 75 });","version":"1"},"java":{"source":"Table globalTable = Table.Builder.create(this, \"Table\")\n        .partitionKey(Attribute.builder().name(\"id\").type(AttributeType.STRING).build())\n        .replicationRegions(List.of(\"us-east-1\", \"us-east-2\", \"us-west-2\"))\n        .billingMode(BillingMode.PROVISIONED)\n        .build();\n\nglobalTable.autoScaleWriteCapacity(EnableScalingProps.builder()\n        .minCapacity(1)\n        .maxCapacity(10)\n        .build()).scaleOnUtilization(UtilizationScalingProps.builder().targetUtilizationPercent(75).build());","version":"1"},"go":{"source":"globalTable := dynamodb.NewTable(this, jsii.String(\"Table\"), &TableProps{\n\tPartitionKey: &Attribute{\n\t\tName: jsii.String(\"id\"),\n\t\tType: dynamodb.AttributeType_STRING,\n\t},\n\tReplicationRegions: []*string{\n\t\tjsii.String(\"us-east-1\"),\n\t\tjsii.String(\"us-east-2\"),\n\t\tjsii.String(\"us-west-2\"),\n\t},\n\tBillingMode: dynamodb.BillingMode_PROVISIONED,\n})\n\nglobalTable.AutoScaleWriteCapacity(&EnableScalingProps{\n\tMinCapacity: jsii.Number(1),\n\tMaxCapacity: jsii.Number(10),\n}).ScaleOnUtilization(&UtilizationScalingProps{\n\tTargetUtilizationPercent: jsii.Number(75),\n})","version":"1"},"$":{"source":"const globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-dynamodb.UtilizationScalingProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-dynamodb.Attribute","@aws-cdk/aws-dynamodb.AttributeType","@aws-cdk/aws-dynamodb.AttributeType#STRING","@aws-cdk/aws-dynamodb.BillingMode","@aws-cdk/aws-dynamodb.BillingMode#PROVISIONED","@aws-cdk/aws-dynamodb.EnableScalingProps","@aws-cdk/aws-dynamodb.IScalableTableAttribute#scaleOnUtilization","@aws-cdk/aws-dynamodb.Table","@aws-cdk/aws-dynamodb.Table#autoScaleWriteCapacity","@aws-cdk/aws-dynamodb.TableProps","@aws-cdk/aws-dynamodb.UtilizationScalingProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport dynamodb = require('@aws-cdk/aws-dynamodb');\nimport iam = require('@aws-cdk/aws-iam');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst globalTable = new dynamodb.Table(this, 'Table', {\n  partitionKey: { name: 'id', type: dynamodb.AttributeType.STRING },\n  replicationRegions: ['us-east-1', 'us-east-2', 'us-west-2'],\n  billingMode: dynamodb.BillingMode.PROVISIONED,\n});\n\nglobalTable.autoScaleWriteCapacity({\n  minCapacity: 1,\n  maxCapacity: 10,\n}).scaleOnUtilization({ targetUtilizationPercent: 75 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":3,"10":5,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":8},"fqnsFingerprint":"853273a5a1580b862f31210ce8ce69eb270a94500d19757a45e6143cbbfb6f0a"}}}