{"version":"2","toolVersion":"1.80.0","snippets":{"4823475de19078521a896e9702ecf039f0a3b37445401c96018f77c51fcd7a8d":{"translations":{"python":{"source":"repository = ecr.Repository(self, \"Repository\")","version":"2"},"csharp":{"source":"var repository = new Repository(this, \"Repository\");","version":"1"},"java":{"source":"Repository repository = new Repository(this, \"Repository\");","version":"1"},"go":{"source":"repository := ecr.NewRepository(this, jsii.String(\"Repository\"))","version":"1"},"$":{"source":"const repository = new ecr.Repository(this, 'Repository');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":21}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst repository = new ecr.Repository(this, 'Repository');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":3,"104":1,"194":1,"197":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"99b40290f3330360a9278ac5c66688a1c40c5259e7b222145764d8db9aff0c30"},"8bf5fcdff556b6a85cf447a53acbfa121e6514c0d254686885e5936ca5140278":{"translations":{"python":{"source":"repository = ecr.Repository(self, \"Repo\",\n    image_scan_on_push=True\n)","version":"2"},"csharp":{"source":"var repository = new Repository(this, \"Repo\", new RepositoryProps {\n    ImageScanOnPush = true\n});","version":"1"},"java":{"source":"Repository repository = Repository.Builder.create(this, \"Repo\")\n        .imageScanOnPush(true)\n        .build();","version":"1"},"go":{"source":"repository := ecr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tImageScanOnPush: jsii.Boolean(true),\n})","version":"1"},"$":{"source":"const repository = new ecr.Repository(this, 'Repo', {\n  imageScanOnPush: true,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":29}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst repository = new ecr.Repository(this, 'Repo', {\n  imageScanOnPush: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":4,"104":1,"106":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"e28a9cf58d35b04c2f00681e1d8713e4095017f00c885f2b594d69fdf99072c7"},"bfa1aa04610375f1ab35afab5a32906ea939efca37b42eaebefaec29a97c452c":{"translations":{"python":{"source":"# repository: ecr.Repository\n# target: SomeTarget\n\n\nrepository.on_image_scan_completed(\"ImageScanComplete\").add_target(target)","version":"2"},"csharp":{"source":"Repository repository;\nSomeTarget target;\n\n\nrepository.OnImageScanCompleted(\"ImageScanComplete\").AddTarget(target);","version":"1"},"java":{"source":"Repository repository;\nSomeTarget target;\n\n\nrepository.onImageScanCompleted(\"ImageScanComplete\").addTarget(target);","version":"1"},"go":{"source":"var repository repository\nvar target someTarget\n\n\nrepository.OnImageScanCompleted(jsii.String(\"ImageScanComplete\")).AddTarget(target)","version":"1"},"$":{"source":"declare const repository: ecr.Repository;\ndeclare const target: SomeTarget;\n\nrepository.onImageScanCompleted('ImageScanComplete')\n  .addTarget(target);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":37}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.RepositoryBase#onImageScanCompleted","@aws-cdk/aws-events.IRuleTarget","@aws-cdk/aws-events.Rule#addTarget"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const repository: ecr.Repository;\ndeclare const target: SomeTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nrepository.onImageScanCompleted('ImageScanComplete')\n  .addTarget(target);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":9,"130":2,"153":1,"169":2,"194":2,"196":2,"225":2,"226":1,"242":2,"243":2,"290":1},"fqnsFingerprint":"37fbda4d063125d241f44b2e653f98beefa654c38ecc38ff7838ba1e1848d4cb"},"29538a22f39fa661a37302612ba8d50d2b578ce3c059a1ffb67e286f571d3fe9":{"translations":{"python":{"source":"user = iam.User(self, \"User\")\necr.AuthorizationToken.grant_read(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"User\");\nAuthorizationToken.GrantRead(user);","version":"1"},"java":{"source":"User user = new User(this, \"User\");\nAuthorizationToken.grantRead(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"User\"))\necr.AuthorizationToken_GrantRead(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'User');\necr.AuthorizationToken.grantRead(user);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":55}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.AuthorizationToken","@aws-cdk/aws-ecr.AuthorizationToken#grantRead","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'User');\necr.AuthorizationToken.grantRead(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":7,"104":1,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"7966102f89263664201905bd867dc24c73fc3142ce30c6170bd2793243e878e2"},"adbb4ee0637f10dc4ed379761c7aff09e0d6365e4b4ce12f4e0db6054ad083aa":{"translations":{"python":{"source":"user = iam.User(self, \"User\")\necr.PublicGalleryAuthorizationToken.grant_read(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"User\");\nPublicGalleryAuthorizationToken.GrantRead(user);","version":"1"},"java":{"source":"User user = new User(this, \"User\");\nPublicGalleryAuthorizationToken.grantRead(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"User\"))\necr.PublicGalleryAuthorizationToken_GrantRead(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'User');\necr.PublicGalleryAuthorizationToken.grantRead(user);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":67}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken","@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken#grantRead","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'User');\necr.PublicGalleryAuthorizationToken.grantRead(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":7,"104":1,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"78dff6a0349cccd444d61e296aba192a0eb4e3adf9d2f44b188133b7a614f8e8"},"51211ad8e85330839860d3d701adfe184bb31c82b63341b7b16280a54d2152b8":{"translations":{"python":{"source":"ecr.Repository(self, \"Repo\", image_tag_mutability=ecr.TagMutability.IMMUTABLE)","version":"2"},"csharp":{"source":"new Repository(this, \"Repo\", new RepositoryProps { ImageTagMutability = TagMutability.IMMUTABLE });","version":"1"},"java":{"source":"Repository.Builder.create(this, \"Repo\").imageTagMutability(TagMutability.IMMUTABLE).build();","version":"1"},"go":{"source":"ecr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tImageTagMutability: ecr.TagMutability_IMMUTABLE,\n})","version":"1"},"$":{"source":"new ecr.Repository(this, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":78}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryProps","@aws-cdk/aws-ecr.TagMutability","@aws-cdk/aws-ecr.TagMutability#IMMUTABLE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ecr.Repository(this, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"095483bf8ea404a28262171a41617e9bf0ec0415d67dc338026da1ab133a98e8"},"d9e051c2d42a2735821af6524cf40cb83a333a0a5888d77c9b7696b93af9ce0c":{"translations":{"python":{"source":"ecr.Repository(self, \"Repo\",\n    encryption=ecr.RepositoryEncryption.KMS\n)","version":"2"},"csharp":{"source":"new Repository(this, \"Repo\", new RepositoryProps {\n    Encryption = RepositoryEncryption.KMS\n});","version":"1"},"java":{"source":"Repository.Builder.create(this, \"Repo\")\n        .encryption(RepositoryEncryption.KMS)\n        .build();","version":"1"},"go":{"source":"ecr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tEncryption: ecr.RepositoryEncryption_KMS(),\n})","version":"1"},"$":{"source":"new ecr.Repository(this, 'Repo', {\n  encryption: ecr.RepositoryEncryption.KMS\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":92}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryEncryption","@aws-cdk/aws-ecr.RepositoryEncryption#KMS","@aws-cdk/aws-ecr.RepositoryProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ecr.Repository(this, 'Repo', {\n  encryption: ecr.RepositoryEncryption.KMS\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"353599cbecb02c6cd52bf437b9424c337b3ee9a19f121c811f4d34eea590f978"},"579fb23b64d6b36159e8c264a1f6bdce4cf3bdc1410012d6bb22ada4a13bcc77":{"translations":{"python":{"source":"import aws_cdk.aws_kms as kms\n\n\necr.Repository(self, \"Repo\",\n    encryption_key=kms.Key(self, \"Key\")\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.KMS;\n\n\nnew Repository(this, \"Repo\", new RepositoryProps {\n    EncryptionKey = new Key(this, \"Key\")\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.kms.*;\n\n\nRepository.Builder.create(this, \"Repo\")\n        .encryptionKey(new Key(this, \"Key\"))\n        .build();","version":"1"},"go":{"source":"import kms \"github.com/aws-samples/dummy/awscdkawskms\"\n\n\necr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tEncryptionKey: kms.NewKey(this, jsii.String(\"Key\")),\n})","version":"1"},"$":{"source":"import * as kms from '@aws-cdk/aws-kms';\n\nnew ecr.Repository(this, 'Repo', {\n  encryptionKey: new kms.Key(this, 'Key'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":100}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryProps","@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as kms from '@aws-cdk/aws-kms';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew ecr.Repository(this, 'Repo', {\n  encryptionKey: new kms.Key(this, 'Key'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":3,"75":6,"104":2,"193":1,"194":2,"197":2,"226":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"db636d09e7e72929daf808cb5baebee0bbb9c93d52893b2cadaff3baa4991b3e"},"cb5d77680fe0c9711e66d6e8fb2b0f52b8dc6fec52fa4bd121486f5e7e5e3fc4":{"translations":{"python":{"source":"# repository: ecr.Repository\n\nrepository.add_lifecycle_rule(tag_prefix_list=[\"prod\"], max_image_count=9999)\nrepository.add_lifecycle_rule(max_image_age=Duration.days(30))","version":"2"},"csharp":{"source":"Repository repository;\n\nrepository.AddLifecycleRule(new LifecycleRule { TagPrefixList = new [] { \"prod\" }, MaxImageCount = 9999 });\nrepository.AddLifecycleRule(new LifecycleRule { MaxImageAge = Duration.Days(30) });","version":"1"},"java":{"source":"Repository repository;\n\nrepository.addLifecycleRule(LifecycleRule.builder().tagPrefixList(List.of(\"prod\")).maxImageCount(9999).build());\nrepository.addLifecycleRule(LifecycleRule.builder().maxImageAge(Duration.days(30)).build());","version":"1"},"go":{"source":"var repository repository\n\nrepository.AddLifecycleRule(&LifecycleRule{\n\tTagPrefixList: []*string{\n\t\tjsii.String(\"prod\"),\n\t},\n\tMaxImageCount: jsii.Number(9999),\n})\nrepository.AddLifecycleRule(&LifecycleRule{\n\tMaxImageAge: awscdkcore.Duration_Days(jsii.Number(30)),\n})","version":"1"},"$":{"source":"declare const repository: ecr.Repository;\nrepository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });\nrepository.addLifecycleRule({ maxImageAge: Duration.days(30) });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-ecr"},"field":{"field":"markdown","line":116}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.LifecycleRule","@aws-cdk/aws-ecr.Repository#addLifecycleRule","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const repository: ecr.Repository;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nrepository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });\nrepository.addLifecycleRule({ maxImageAge: Duration.days(30) });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":2,"10":1,"75":12,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":3,"225":1,"226":2,"242":1,"243":1,"281":3,"290":1},"fqnsFingerprint":"b84e37f0bc65cac2085fd8a603be77f6723a93851501057a74032e616c614ab0"},"a6d4340431fd6d78632e6a7d282ba459d6bec5f792f53ed45050cb0fd192d42f":{"translations":{"python":{"source":"user = iam.User(self, \"User\")\necr.AuthorizationToken.grant_read(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"User\");\nAuthorizationToken.GrantRead(user);","version":"1"},"java":{"source":"User user = new User(this, \"User\");\nAuthorizationToken.grantRead(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"User\"))\necr.AuthorizationToken_GrantRead(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'User');\necr.AuthorizationToken.grantRead(user);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.AuthorizationToken"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.AuthorizationToken","@aws-cdk/aws-ecr.AuthorizationToken#grantRead","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'User');\necr.AuthorizationToken.grantRead(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":7,"104":1,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"7966102f89263664201905bd867dc24c73fc3142ce30c6170bd2793243e878e2"},"6b24b5c9f0740ab246d3cd91937f706c5c4c9ba9098f8933533e6243eff16b60":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\n# repository_catalog_data: Any\n# repository_policy_text: Any\n\ncfn_public_repository = ecr.CfnPublicRepository(self, \"MyCfnPublicRepository\",\n    repository_catalog_data=repository_catalog_data,\n    repository_name=\"repositoryName\",\n    repository_policy_text=repository_policy_text,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryCatalogData;\nvar repositoryPolicyText;\n\nvar cfnPublicRepository = new CfnPublicRepository(this, \"MyCfnPublicRepository\", new CfnPublicRepositoryProps {\n    RepositoryCatalogData = repositoryCatalogData,\n    RepositoryName = \"repositoryName\",\n    RepositoryPolicyText = repositoryPolicyText,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nObject repositoryCatalogData;\nObject repositoryPolicyText;\n\nCfnPublicRepository cfnPublicRepository = CfnPublicRepository.Builder.create(this, \"MyCfnPublicRepository\")\n        .repositoryCatalogData(repositoryCatalogData)\n        .repositoryName(\"repositoryName\")\n        .repositoryPolicyText(repositoryPolicyText)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nvar repositoryCatalogData interface{}\nvar repositoryPolicyText interface{}\n\ncfnPublicRepository := ecr.NewCfnPublicRepository(this, jsii.String(\"MyCfnPublicRepository\"), &CfnPublicRepositoryProps{\n\tRepositoryCatalogData: repositoryCatalogData,\n\tRepositoryName: jsii.String(\"repositoryName\"),\n\tRepositoryPolicyText: repositoryPolicyText,\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryCatalogData: any;\ndeclare const repositoryPolicyText: any;\nconst cfnPublicRepository = new ecr.CfnPublicRepository(this, 'MyCfnPublicRepository', /* all optional props */ {\n  repositoryCatalogData: repositoryCatalogData,\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnPublicRepository"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnPublicRepository","@aws-cdk/aws-ecr.CfnPublicRepositoryProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryCatalogData: any;\ndeclare const repositoryPolicyText: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPublicRepository = new ecr.CfnPublicRepository(this, 'MyCfnPublicRepository', /* all optional props */ {\n  repositoryCatalogData: repositoryCatalogData,\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":14,"104":1,"125":2,"130":2,"192":1,"193":2,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"f418264bf3437c7e2c7e27c5e8c3487111e7928c1d67262b7d0ce6d15480f942"},"3bf35107de4da64c1ab68c0ef94ca581ba259435619e8b33c550b3cdc862775d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nrepository_catalog_data_property = ecr.CfnPublicRepository.RepositoryCatalogDataProperty(\n    about_text=\"aboutText\",\n    architectures=[\"architectures\"],\n    operating_systems=[\"operatingSystems\"],\n    repository_description=\"repositoryDescription\",\n    usage_text=\"usageText\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryCatalogDataProperty = new RepositoryCatalogDataProperty {\n    AboutText = \"aboutText\",\n    Architectures = new [] { \"architectures\" },\n    OperatingSystems = new [] { \"operatingSystems\" },\n    RepositoryDescription = \"repositoryDescription\",\n    UsageText = \"usageText\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nRepositoryCatalogDataProperty repositoryCatalogDataProperty = RepositoryCatalogDataProperty.builder()\n        .aboutText(\"aboutText\")\n        .architectures(List.of(\"architectures\"))\n        .operatingSystems(List.of(\"operatingSystems\"))\n        .repositoryDescription(\"repositoryDescription\")\n        .usageText(\"usageText\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nrepositoryCatalogDataProperty := &RepositoryCatalogDataProperty{\n\tAboutText: jsii.String(\"aboutText\"),\n\tArchitectures: []*string{\n\t\tjsii.String(\"architectures\"),\n\t},\n\tOperatingSystems: []*string{\n\t\tjsii.String(\"operatingSystems\"),\n\t},\n\tRepositoryDescription: jsii.String(\"repositoryDescription\"),\n\tUsageText: jsii.String(\"usageText\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst repositoryCatalogDataProperty: ecr.CfnPublicRepository.RepositoryCatalogDataProperty = {\n  aboutText: 'aboutText',\n  architectures: ['architectures'],\n  operatingSystems: ['operatingSystems'],\n  repositoryDescription: 'repositoryDescription',\n  usageText: 'usageText',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnPublicRepository.RepositoryCatalogDataProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnPublicRepository.RepositoryCatalogDataProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst repositoryCatalogDataProperty: ecr.CfnPublicRepository.RepositoryCatalogDataProperty = {\n  aboutText: 'aboutText',\n  architectures: ['architectures'],\n  operatingSystems: ['operatingSystems'],\n  repositoryDescription: 'repositoryDescription',\n  usageText: 'usageText',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":2,"169":1,"192":2,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"552abd6533951f3c2b0c489616afb656498a23861254380a16dc4738d78c5a8f"},"b8eee853803a7b8b18da909a332aae8972120139673fbd422e76d6a0c7590cbf":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\n# repository_catalog_data: Any\n# repository_policy_text: Any\n\ncfn_public_repository_props = ecr.CfnPublicRepositoryProps(\n    repository_catalog_data=repository_catalog_data,\n    repository_name=\"repositoryName\",\n    repository_policy_text=repository_policy_text,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryCatalogData;\nvar repositoryPolicyText;\n\nvar cfnPublicRepositoryProps = new CfnPublicRepositoryProps {\n    RepositoryCatalogData = repositoryCatalogData,\n    RepositoryName = \"repositoryName\",\n    RepositoryPolicyText = repositoryPolicyText,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nObject repositoryCatalogData;\nObject repositoryPolicyText;\n\nCfnPublicRepositoryProps cfnPublicRepositoryProps = CfnPublicRepositoryProps.builder()\n        .repositoryCatalogData(repositoryCatalogData)\n        .repositoryName(\"repositoryName\")\n        .repositoryPolicyText(repositoryPolicyText)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nvar repositoryCatalogData interface{}\nvar repositoryPolicyText interface{}\n\ncfnPublicRepositoryProps := &CfnPublicRepositoryProps{\n\tRepositoryCatalogData: repositoryCatalogData,\n\tRepositoryName: jsii.String(\"repositoryName\"),\n\tRepositoryPolicyText: repositoryPolicyText,\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryCatalogData: any;\ndeclare const repositoryPolicyText: any;\nconst cfnPublicRepositoryProps: ecr.CfnPublicRepositoryProps = {\n  repositoryCatalogData: repositoryCatalogData,\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnPublicRepositoryProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnPublicRepositoryProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryCatalogData: any;\ndeclare const repositoryPolicyText: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPublicRepositoryProps: ecr.CfnPublicRepositoryProps = {\n  repositoryCatalogData: repositoryCatalogData,\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":14,"125":2,"130":2,"153":1,"169":1,"192":1,"193":2,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"c4bb16548514ac7c4c55a77e4dd02107fe97d7c286bfafb600cea27cea8f6f8c"},"e70df391eb8c342bc4bb3eb494cfbe0ee7d68837ce7c244c1c22df75fcd62264":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\ncfn_pull_through_cache_rule = ecr.CfnPullThroughCacheRule(self, \"MyCfnPullThroughCacheRule\",\n    ecr_repository_prefix=\"ecrRepositoryPrefix\",\n    upstream_registry_url=\"upstreamRegistryUrl\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar cfnPullThroughCacheRule = new CfnPullThroughCacheRule(this, \"MyCfnPullThroughCacheRule\", new CfnPullThroughCacheRuleProps {\n    EcrRepositoryPrefix = \"ecrRepositoryPrefix\",\n    UpstreamRegistryUrl = \"upstreamRegistryUrl\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nCfnPullThroughCacheRule cfnPullThroughCacheRule = CfnPullThroughCacheRule.Builder.create(this, \"MyCfnPullThroughCacheRule\")\n        .ecrRepositoryPrefix(\"ecrRepositoryPrefix\")\n        .upstreamRegistryUrl(\"upstreamRegistryUrl\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\ncfnPullThroughCacheRule := ecr.NewCfnPullThroughCacheRule(this, jsii.String(\"MyCfnPullThroughCacheRule\"), &CfnPullThroughCacheRuleProps{\n\tEcrRepositoryPrefix: jsii.String(\"ecrRepositoryPrefix\"),\n\tUpstreamRegistryUrl: jsii.String(\"upstreamRegistryUrl\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst cfnPullThroughCacheRule = new ecr.CfnPullThroughCacheRule(this, 'MyCfnPullThroughCacheRule', /* all optional props */ {\n  ecrRepositoryPrefix: 'ecrRepositoryPrefix',\n  upstreamRegistryUrl: 'upstreamRegistryUrl',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnPullThroughCacheRule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnPullThroughCacheRule","@aws-cdk/aws-ecr.CfnPullThroughCacheRuleProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPullThroughCacheRule = new ecr.CfnPullThroughCacheRule(this, 'MyCfnPullThroughCacheRule', /* all optional props */ {\n  ecrRepositoryPrefix: 'ecrRepositoryPrefix',\n  upstreamRegistryUrl: 'upstreamRegistryUrl',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"81f76d8c23152d9f49804f36e732a9e13c1ba4cdd69e18f453c0ba9559d4a94a"},"7974da780d2e93a094739f99c94ac9d30f0d96f20232fa4cfa7a7443ce53e0cf":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\ncfn_pull_through_cache_rule_props = ecr.CfnPullThroughCacheRuleProps(\n    ecr_repository_prefix=\"ecrRepositoryPrefix\",\n    upstream_registry_url=\"upstreamRegistryUrl\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar cfnPullThroughCacheRuleProps = new CfnPullThroughCacheRuleProps {\n    EcrRepositoryPrefix = \"ecrRepositoryPrefix\",\n    UpstreamRegistryUrl = \"upstreamRegistryUrl\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nCfnPullThroughCacheRuleProps cfnPullThroughCacheRuleProps = CfnPullThroughCacheRuleProps.builder()\n        .ecrRepositoryPrefix(\"ecrRepositoryPrefix\")\n        .upstreamRegistryUrl(\"upstreamRegistryUrl\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\ncfnPullThroughCacheRuleProps := &CfnPullThroughCacheRuleProps{\n\tEcrRepositoryPrefix: jsii.String(\"ecrRepositoryPrefix\"),\n\tUpstreamRegistryUrl: jsii.String(\"upstreamRegistryUrl\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst cfnPullThroughCacheRuleProps: ecr.CfnPullThroughCacheRuleProps = {\n  ecrRepositoryPrefix: 'ecrRepositoryPrefix',\n  upstreamRegistryUrl: 'upstreamRegistryUrl',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnPullThroughCacheRuleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnPullThroughCacheRuleProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPullThroughCacheRuleProps: ecr.CfnPullThroughCacheRuleProps = {\n  ecrRepositoryPrefix: 'ecrRepositoryPrefix',\n  upstreamRegistryUrl: 'upstreamRegistryUrl',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"3bdf9dd36e4422b6f80c2cf97006f418e0309095f75e3750ebfb2b2181937773"},"354056e1931006e70c7cdb10141145c75a6f4e8bb771bdf177527995e73975bd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\n# policy_text: Any\n\ncfn_registry_policy = ecr.CfnRegistryPolicy(self, \"MyCfnRegistryPolicy\",\n    policy_text=policy_text\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar policyText;\n\nvar cfnRegistryPolicy = new CfnRegistryPolicy(this, \"MyCfnRegistryPolicy\", new CfnRegistryPolicyProps {\n    PolicyText = policyText\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nObject policyText;\n\nCfnRegistryPolicy cfnRegistryPolicy = CfnRegistryPolicy.Builder.create(this, \"MyCfnRegistryPolicy\")\n        .policyText(policyText)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nvar policyText interface{}\n\ncfnRegistryPolicy := ecr.NewCfnRegistryPolicy(this, jsii.String(\"MyCfnRegistryPolicy\"), &CfnRegistryPolicyProps{\n\tPolicyText: policyText,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const policyText: any;\nconst cfnRegistryPolicy = new ecr.CfnRegistryPolicy(this, 'MyCfnRegistryPolicy', {\n  policyText: policyText,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRegistryPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRegistryPolicy","@aws-cdk/aws-ecr.CfnRegistryPolicyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const policyText: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRegistryPolicy = new ecr.CfnRegistryPolicy(this, 'MyCfnRegistryPolicy', {\n  policyText: policyText,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"104":1,"125":1,"130":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"87fcb4d12dbe2463182a285a5b808c41988d040fb0bdfc69a2015d22434cd649"},"d20b24c6c608cbed7fa5d8d75646db659b4fcac238f45c058d04c934629a5f88":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\n# policy_text: Any\n\ncfn_registry_policy_props = ecr.CfnRegistryPolicyProps(\n    policy_text=policy_text\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar policyText;\n\nvar cfnRegistryPolicyProps = new CfnRegistryPolicyProps {\n    PolicyText = policyText\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nObject policyText;\n\nCfnRegistryPolicyProps cfnRegistryPolicyProps = CfnRegistryPolicyProps.builder()\n        .policyText(policyText)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nvar policyText interface{}\n\ncfnRegistryPolicyProps := &CfnRegistryPolicyProps{\n\tPolicyText: policyText,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const policyText: any;\nconst cfnRegistryPolicyProps: ecr.CfnRegistryPolicyProps = {\n  policyText: policyText,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRegistryPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRegistryPolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const policyText: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRegistryPolicyProps: ecr.CfnRegistryPolicyProps = {\n  policyText: policyText,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":7,"125":1,"130":1,"153":1,"169":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"65cb431835079f9c7a9cf82a8fbfd6c9fd48c322e9e6b2d95f0ac6c6e0b62f94"},"119c403651fa5e43ac89653e16bcbff9f4e8e916015d2321e78bc9e8a3f2162b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\ncfn_replication_configuration = ecr.CfnReplicationConfiguration(self, \"MyCfnReplicationConfiguration\",\n    replication_configuration=ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty(\n        rules=[ecr.CfnReplicationConfiguration.ReplicationRuleProperty(\n            destinations=[ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(\n                region=\"region\",\n                registry_id=\"registryId\"\n            )],\n\n            # the properties below are optional\n            repository_filters=[ecr.CfnReplicationConfiguration.RepositoryFilterProperty(\n                filter=\"filter\",\n                filter_type=\"filterType\"\n            )]\n        )]\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar cfnReplicationConfiguration = new CfnReplicationConfiguration(this, \"MyCfnReplicationConfiguration\", new CfnReplicationConfigurationProps {\n    ReplicationConfiguration = new ReplicationConfigurationProperty {\n        Rules = new [] { new ReplicationRuleProperty {\n            Destinations = new [] { new ReplicationDestinationProperty {\n                Region = \"region\",\n                RegistryId = \"registryId\"\n            } },\n\n            // the properties below are optional\n            RepositoryFilters = new [] { new RepositoryFilterProperty {\n                Filter = \"filter\",\n                FilterType = \"filterType\"\n            } }\n        } }\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nCfnReplicationConfiguration cfnReplicationConfiguration = CfnReplicationConfiguration.Builder.create(this, \"MyCfnReplicationConfiguration\")\n        .replicationConfiguration(ReplicationConfigurationProperty.builder()\n                .rules(List.of(ReplicationRuleProperty.builder()\n                        .destinations(List.of(ReplicationDestinationProperty.builder()\n                                .region(\"region\")\n                                .registryId(\"registryId\")\n                                .build()))\n\n                        // the properties below are optional\n                        .repositoryFilters(List.of(RepositoryFilterProperty.builder()\n                                .filter(\"filter\")\n                                .filterType(\"filterType\")\n                                .build()))\n                        .build()))\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\ncfnReplicationConfiguration := ecr.NewCfnReplicationConfiguration(this, jsii.String(\"MyCfnReplicationConfiguration\"), &CfnReplicationConfigurationProps{\n\tReplicationConfiguration: &ReplicationConfigurationProperty{\n\t\tRules: []interface{}{\n\t\t\t&ReplicationRuleProperty{\n\t\t\t\tDestinations: []interface{}{\n\t\t\t\t\t&ReplicationDestinationProperty{\n\t\t\t\t\t\tRegion: jsii.String(\"region\"),\n\t\t\t\t\t\tRegistryId: jsii.String(\"registryId\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tRepositoryFilters: []interface{}{\n\t\t\t\t\t&RepositoryFilterProperty{\n\t\t\t\t\t\tFilter: jsii.String(\"filter\"),\n\t\t\t\t\t\tFilterType: jsii.String(\"filterType\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst cfnReplicationConfiguration = new ecr.CfnReplicationConfiguration(this, 'MyCfnReplicationConfiguration', {\n  replicationConfiguration: {\n    rules: [{\n      destinations: [{\n        region: 'region',\n        registryId: 'registryId',\n      }],\n\n      // the properties below are optional\n      repositoryFilters: [{\n        filter: 'filter',\n        filterType: 'filterType',\n      }],\n    }],\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnReplicationConfiguration"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnReplicationConfiguration","@aws-cdk/aws-ecr.CfnReplicationConfigurationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationConfiguration = new ecr.CfnReplicationConfiguration(this, 'MyCfnReplicationConfiguration', {\n  replicationConfiguration: {\n    rules: [{\n      destinations: [{\n        region: 'region',\n        registryId: 'registryId',\n      }],\n\n      // the properties below are optional\n      repositoryFilters: [{\n        filter: 'filter',\n        filterType: 'filterType',\n      }],\n    }],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":12,"104":1,"192":3,"193":5,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"b3c9cad5f3026e31978fca56d9ceac80563f1be7b3af104b4ac5d5ea549c5857"},"068c6954a4c15b265b6207b2435052bec68175dc4e1ccb542115563aa982bfc7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nreplication_configuration_property = ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty(\n    rules=[ecr.CfnReplicationConfiguration.ReplicationRuleProperty(\n        destinations=[ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(\n            region=\"region\",\n            registry_id=\"registryId\"\n        )],\n\n        # the properties below are optional\n        repository_filters=[ecr.CfnReplicationConfiguration.RepositoryFilterProperty(\n            filter=\"filter\",\n            filter_type=\"filterType\"\n        )]\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar replicationConfigurationProperty = new ReplicationConfigurationProperty {\n    Rules = new [] { new ReplicationRuleProperty {\n        Destinations = new [] { new ReplicationDestinationProperty {\n            Region = \"region\",\n            RegistryId = \"registryId\"\n        } },\n\n        // the properties below are optional\n        RepositoryFilters = new [] { new RepositoryFilterProperty {\n            Filter = \"filter\",\n            FilterType = \"filterType\"\n        } }\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nReplicationConfigurationProperty replicationConfigurationProperty = ReplicationConfigurationProperty.builder()\n        .rules(List.of(ReplicationRuleProperty.builder()\n                .destinations(List.of(ReplicationDestinationProperty.builder()\n                        .region(\"region\")\n                        .registryId(\"registryId\")\n                        .build()))\n\n                // the properties below are optional\n                .repositoryFilters(List.of(RepositoryFilterProperty.builder()\n                        .filter(\"filter\")\n                        .filterType(\"filterType\")\n                        .build()))\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nreplicationConfigurationProperty := &ReplicationConfigurationProperty{\n\tRules: []interface{}{\n\t\t&ReplicationRuleProperty{\n\t\t\tDestinations: []interface{}{\n\t\t\t\t&ReplicationDestinationProperty{\n\t\t\t\t\tRegion: jsii.String(\"region\"),\n\t\t\t\t\tRegistryId: jsii.String(\"registryId\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tRepositoryFilters: []interface{}{\n\t\t\t\t&RepositoryFilterProperty{\n\t\t\t\t\tFilter: jsii.String(\"filter\"),\n\t\t\t\t\tFilterType: jsii.String(\"filterType\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst replicationConfigurationProperty: ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty = {\n  rules: [{\n    destinations: [{\n      region: 'region',\n      registryId: 'registryId',\n    }],\n\n    // the properties below are optional\n    repositoryFilters: [{\n      filter: 'filter',\n      filterType: 'filterType',\n    }],\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationConfigurationProperty: ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty = {\n  rules: [{\n    destinations: [{\n      region: 'region',\n      registryId: 'registryId',\n    }],\n\n    // the properties below are optional\n    repositoryFilters: [{\n      filter: 'filter',\n      filterType: 'filterType',\n    }],\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":12,"153":2,"169":1,"192":3,"193":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"a936b502cefa93b79a5e0706c675c54f23915f97f04b022d6ebe183ed296a8b5"},"5ead063f3aa2dbe3bb6accf06a29dd5ff8658267f74ebc188fbe2729668eac63":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nreplication_destination_property = ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(\n    region=\"region\",\n    registry_id=\"registryId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar replicationDestinationProperty = new ReplicationDestinationProperty {\n    Region = \"region\",\n    RegistryId = \"registryId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nReplicationDestinationProperty replicationDestinationProperty = ReplicationDestinationProperty.builder()\n        .region(\"region\")\n        .registryId(\"registryId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nreplicationDestinationProperty := &ReplicationDestinationProperty{\n\tRegion: jsii.String(\"region\"),\n\tRegistryId: jsii.String(\"registryId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst replicationDestinationProperty: ecr.CfnReplicationConfiguration.ReplicationDestinationProperty = {\n  region: 'region',\n  registryId: 'registryId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationDestinationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationDestinationProperty: ecr.CfnReplicationConfiguration.ReplicationDestinationProperty = {\n  region: 'region',\n  registryId: 'registryId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"de50c521f1e9e71e96e47a5839b96ece46094acde65bd7fe39a5a4ab38470e52"},"f9956f5408f3534230cc02e652df026b5ff9b0763ce97338e1603c94c16fbbae":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nreplication_rule_property = ecr.CfnReplicationConfiguration.ReplicationRuleProperty(\n    destinations=[ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(\n        region=\"region\",\n        registry_id=\"registryId\"\n    )],\n\n    # the properties below are optional\n    repository_filters=[ecr.CfnReplicationConfiguration.RepositoryFilterProperty(\n        filter=\"filter\",\n        filter_type=\"filterType\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar replicationRuleProperty = new ReplicationRuleProperty {\n    Destinations = new [] { new ReplicationDestinationProperty {\n        Region = \"region\",\n        RegistryId = \"registryId\"\n    } },\n\n    // the properties below are optional\n    RepositoryFilters = new [] { new RepositoryFilterProperty {\n        Filter = \"filter\",\n        FilterType = \"filterType\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nReplicationRuleProperty replicationRuleProperty = ReplicationRuleProperty.builder()\n        .destinations(List.of(ReplicationDestinationProperty.builder()\n                .region(\"region\")\n                .registryId(\"registryId\")\n                .build()))\n\n        // the properties below are optional\n        .repositoryFilters(List.of(RepositoryFilterProperty.builder()\n                .filter(\"filter\")\n                .filterType(\"filterType\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nreplicationRuleProperty := &ReplicationRuleProperty{\n\tDestinations: []interface{}{\n\t\t&ReplicationDestinationProperty{\n\t\t\tRegion: jsii.String(\"region\"),\n\t\t\tRegistryId: jsii.String(\"registryId\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tRepositoryFilters: []interface{}{\n\t\t&RepositoryFilterProperty{\n\t\t\tFilter: jsii.String(\"filter\"),\n\t\t\tFilterType: jsii.String(\"filterType\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst replicationRuleProperty: ecr.CfnReplicationConfiguration.ReplicationRuleProperty = {\n  destinations: [{\n    region: 'region',\n    registryId: 'registryId',\n  }],\n\n  // the properties below are optional\n  repositoryFilters: [{\n    filter: 'filter',\n    filterType: 'filterType',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnReplicationConfiguration.ReplicationRuleProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationRuleProperty: ecr.CfnReplicationConfiguration.ReplicationRuleProperty = {\n  destinations: [{\n    region: 'region',\n    registryId: 'registryId',\n  }],\n\n  // the properties below are optional\n  repositoryFilters: [{\n    filter: 'filter',\n    filterType: 'filterType',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":11,"153":2,"169":1,"192":2,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"3c0202b40924f0b7deb42596a98dbfa1ae3b60d355d0082466360730be2e7124"},"c55ec84abb39346e0b78e31e9f1df2f97aaf56bd0af7c0a917eb65ae2d51773b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nrepository_filter_property = ecr.CfnReplicationConfiguration.RepositoryFilterProperty(\n    filter=\"filter\",\n    filter_type=\"filterType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryFilterProperty = new RepositoryFilterProperty {\n    Filter = \"filter\",\n    FilterType = \"filterType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nRepositoryFilterProperty repositoryFilterProperty = RepositoryFilterProperty.builder()\n        .filter(\"filter\")\n        .filterType(\"filterType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nrepositoryFilterProperty := &RepositoryFilterProperty{\n\tFilter: jsii.String(\"filter\"),\n\tFilterType: jsii.String(\"filterType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst repositoryFilterProperty: ecr.CfnReplicationConfiguration.RepositoryFilterProperty = {\n  filter: 'filter',\n  filterType: 'filterType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnReplicationConfiguration.RepositoryFilterProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnReplicationConfiguration.RepositoryFilterProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst repositoryFilterProperty: ecr.CfnReplicationConfiguration.RepositoryFilterProperty = {\n  filter: 'filter',\n  filterType: 'filterType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b074832606c2d6bd8a4318cb09821c7b0532f415d141f5e5680f90db4b4451fe"},"25fd02fa04dc921f05cd0fe1ae850839de20c5c471f1bc5eb916e5906017bf88":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\ncfn_replication_configuration_props = ecr.CfnReplicationConfigurationProps(\n    replication_configuration=ecr.CfnReplicationConfiguration.ReplicationConfigurationProperty(\n        rules=[ecr.CfnReplicationConfiguration.ReplicationRuleProperty(\n            destinations=[ecr.CfnReplicationConfiguration.ReplicationDestinationProperty(\n                region=\"region\",\n                registry_id=\"registryId\"\n            )],\n\n            # the properties below are optional\n            repository_filters=[ecr.CfnReplicationConfiguration.RepositoryFilterProperty(\n                filter=\"filter\",\n                filter_type=\"filterType\"\n            )]\n        )]\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar cfnReplicationConfigurationProps = new CfnReplicationConfigurationProps {\n    ReplicationConfiguration = new ReplicationConfigurationProperty {\n        Rules = new [] { new ReplicationRuleProperty {\n            Destinations = new [] { new ReplicationDestinationProperty {\n                Region = \"region\",\n                RegistryId = \"registryId\"\n            } },\n\n            // the properties below are optional\n            RepositoryFilters = new [] { new RepositoryFilterProperty {\n                Filter = \"filter\",\n                FilterType = \"filterType\"\n            } }\n        } }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nCfnReplicationConfigurationProps cfnReplicationConfigurationProps = CfnReplicationConfigurationProps.builder()\n        .replicationConfiguration(ReplicationConfigurationProperty.builder()\n                .rules(List.of(ReplicationRuleProperty.builder()\n                        .destinations(List.of(ReplicationDestinationProperty.builder()\n                                .region(\"region\")\n                                .registryId(\"registryId\")\n                                .build()))\n\n                        // the properties below are optional\n                        .repositoryFilters(List.of(RepositoryFilterProperty.builder()\n                                .filter(\"filter\")\n                                .filterType(\"filterType\")\n                                .build()))\n                        .build()))\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\ncfnReplicationConfigurationProps := &CfnReplicationConfigurationProps{\n\tReplicationConfiguration: &ReplicationConfigurationProperty{\n\t\tRules: []interface{}{\n\t\t\t&ReplicationRuleProperty{\n\t\t\t\tDestinations: []interface{}{\n\t\t\t\t\t&ReplicationDestinationProperty{\n\t\t\t\t\t\tRegion: jsii.String(\"region\"),\n\t\t\t\t\t\tRegistryId: jsii.String(\"registryId\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tRepositoryFilters: []interface{}{\n\t\t\t\t\t&RepositoryFilterProperty{\n\t\t\t\t\t\tFilter: jsii.String(\"filter\"),\n\t\t\t\t\t\tFilterType: jsii.String(\"filterType\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst cfnReplicationConfigurationProps: ecr.CfnReplicationConfigurationProps = {\n  replicationConfiguration: {\n    rules: [{\n      destinations: [{\n        region: 'region',\n        registryId: 'registryId',\n      }],\n\n      // the properties below are optional\n      repositoryFilters: [{\n        filter: 'filter',\n        filterType: 'filterType',\n      }],\n    }],\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnReplicationConfigurationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnReplicationConfigurationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnReplicationConfigurationProps: ecr.CfnReplicationConfigurationProps = {\n  replicationConfiguration: {\n    rules: [{\n      destinations: [{\n        region: 'region',\n        registryId: 'registryId',\n      }],\n\n      // the properties below are optional\n      repositoryFilters: [{\n        filter: 'filter',\n        filterType: 'filterType',\n      }],\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":12,"153":1,"169":1,"192":3,"193":5,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"20d85fa5f4aa835b2a940234b1f8936943865ec182cd5d441bb129adb110d48c"},"2e40f408f52363e3d29fa281f9fce57c6c74cbe95eaac8d25e7d8a1d702501a4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\n# repository_policy_text: Any\n\ncfn_repository = ecr.CfnRepository(self, \"MyCfnRepository\",\n    encryption_configuration=ecr.CfnRepository.EncryptionConfigurationProperty(\n        encryption_type=\"encryptionType\",\n\n        # the properties below are optional\n        kms_key=\"kmsKey\"\n    ),\n    image_scanning_configuration=ecr.CfnRepository.ImageScanningConfigurationProperty(\n        scan_on_push=False\n    ),\n    image_tag_mutability=\"imageTagMutability\",\n    lifecycle_policy=ecr.CfnRepository.LifecyclePolicyProperty(\n        lifecycle_policy_text=\"lifecyclePolicyText\",\n        registry_id=\"registryId\"\n    ),\n    repository_name=\"repositoryName\",\n    repository_policy_text=repository_policy_text,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryPolicyText;\n\nvar cfnRepository = new CfnRepository(this, \"MyCfnRepository\", new CfnRepositoryProps {\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        EncryptionType = \"encryptionType\",\n\n        // the properties below are optional\n        KmsKey = \"kmsKey\"\n    },\n    ImageScanningConfiguration = new ImageScanningConfigurationProperty {\n        ScanOnPush = false\n    },\n    ImageTagMutability = \"imageTagMutability\",\n    LifecyclePolicy = new LifecyclePolicyProperty {\n        LifecyclePolicyText = \"lifecyclePolicyText\",\n        RegistryId = \"registryId\"\n    },\n    RepositoryName = \"repositoryName\",\n    RepositoryPolicyText = repositoryPolicyText,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nObject repositoryPolicyText;\n\nCfnRepository cfnRepository = CfnRepository.Builder.create(this, \"MyCfnRepository\")\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .encryptionType(\"encryptionType\")\n\n                // the properties below are optional\n                .kmsKey(\"kmsKey\")\n                .build())\n        .imageScanningConfiguration(ImageScanningConfigurationProperty.builder()\n                .scanOnPush(false)\n                .build())\n        .imageTagMutability(\"imageTagMutability\")\n        .lifecyclePolicy(LifecyclePolicyProperty.builder()\n                .lifecyclePolicyText(\"lifecyclePolicyText\")\n                .registryId(\"registryId\")\n                .build())\n        .repositoryName(\"repositoryName\")\n        .repositoryPolicyText(repositoryPolicyText)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nvar repositoryPolicyText interface{}\n\ncfnRepository := ecr.NewCfnRepository(this, jsii.String(\"MyCfnRepository\"), &CfnRepositoryProps{\n\tEncryptionConfiguration: &EncryptionConfigurationProperty{\n\t\tEncryptionType: jsii.String(\"encryptionType\"),\n\n\t\t// the properties below are optional\n\t\tKmsKey: jsii.String(\"kmsKey\"),\n\t},\n\tImageScanningConfiguration: &ImageScanningConfigurationProperty{\n\t\tScanOnPush: jsii.Boolean(false),\n\t},\n\tImageTagMutability: jsii.String(\"imageTagMutability\"),\n\tLifecyclePolicy: &LifecyclePolicyProperty{\n\t\tLifecyclePolicyText: jsii.String(\"lifecyclePolicyText\"),\n\t\tRegistryId: jsii.String(\"registryId\"),\n\t},\n\tRepositoryName: jsii.String(\"repositoryName\"),\n\tRepositoryPolicyText: repositoryPolicyText,\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryPolicyText: any;\nconst cfnRepository = new ecr.CfnRepository(this, 'MyCfnRepository', /* all optional props */ {\n  encryptionConfiguration: {\n    encryptionType: 'encryptionType',\n\n    // the properties below are optional\n    kmsKey: 'kmsKey',\n  },\n  imageScanningConfiguration: {\n    scanOnPush: false,\n  },\n  imageTagMutability: 'imageTagMutability',\n  lifecyclePolicy: {\n    lifecyclePolicyText: 'lifecyclePolicyText',\n    registryId: 'registryId',\n  },\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRepository"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRepository","@aws-cdk/aws-ecr.CfnRepositoryProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryPolicyText: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRepository = new ecr.CfnRepository(this, 'MyCfnRepository', /* all optional props */ {\n  encryptionConfiguration: {\n    encryptionType: 'encryptionType',\n\n    // the properties below are optional\n    kmsKey: 'kmsKey',\n  },\n  imageScanningConfiguration: {\n    scanOnPush: false,\n  },\n  imageTagMutability: 'imageTagMutability',\n  lifecyclePolicy: {\n    lifecyclePolicyText: 'lifecyclePolicyText',\n    registryId: 'registryId',\n  },\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":20,"91":1,"104":1,"125":1,"130":1,"192":1,"193":5,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":14,"290":1},"fqnsFingerprint":"95f9aa26e8a045dd2d40806773049e5ffbb504e1ba5b7bedb07f3e9dfa05423d"},"20cf01500093823a2b30413448a5bb3b1e98ce7011b53f096bdcc1a8fcb8aa2a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nencryption_configuration_property = ecr.CfnRepository.EncryptionConfigurationProperty(\n    encryption_type=\"encryptionType\",\n\n    # the properties below are optional\n    kms_key=\"kmsKey\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar encryptionConfigurationProperty = new EncryptionConfigurationProperty {\n    EncryptionType = \"encryptionType\",\n\n    // the properties below are optional\n    KmsKey = \"kmsKey\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = EncryptionConfigurationProperty.builder()\n        .encryptionType(\"encryptionType\")\n\n        // the properties below are optional\n        .kmsKey(\"kmsKey\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nencryptionConfigurationProperty := &EncryptionConfigurationProperty{\n\tEncryptionType: jsii.String(\"encryptionType\"),\n\n\t// the properties below are optional\n\tKmsKey: jsii.String(\"kmsKey\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst encryptionConfigurationProperty: ecr.CfnRepository.EncryptionConfigurationProperty = {\n  encryptionType: 'encryptionType',\n\n  // the properties below are optional\n  kmsKey: 'kmsKey',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRepository.EncryptionConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRepository.EncryptionConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionConfigurationProperty: ecr.CfnRepository.EncryptionConfigurationProperty = {\n  encryptionType: 'encryptionType',\n\n  // the properties below are optional\n  kmsKey: 'kmsKey',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"11c75bee100f06e17caad480b35f01bd943f6044c14e5fe75b2a3e70f282875a"},"f79f4a612a39441c4b4ec3a8fd85c9c47f2fa850ab1a3351fe0e905ea92db430":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nimage_scanning_configuration_property = ecr.CfnRepository.ImageScanningConfigurationProperty(\n    scan_on_push=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar imageScanningConfigurationProperty = new ImageScanningConfigurationProperty {\n    ScanOnPush = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nImageScanningConfigurationProperty imageScanningConfigurationProperty = ImageScanningConfigurationProperty.builder()\n        .scanOnPush(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nimageScanningConfigurationProperty := &ImageScanningConfigurationProperty{\n\tScanOnPush: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst imageScanningConfigurationProperty: ecr.CfnRepository.ImageScanningConfigurationProperty = {\n  scanOnPush: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRepository.ImageScanningConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRepository.ImageScanningConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst imageScanningConfigurationProperty: ecr.CfnRepository.ImageScanningConfigurationProperty = {\n  scanOnPush: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"f229c81c459fc8e627a8f8672ec1b2d4c1db6c1fa9a2b46731026699d8d1fee8"},"0b20df04dc4617fe60d605f3437587c691e221be15e921680da2e9c386ba76f9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nlifecycle_policy_property = ecr.CfnRepository.LifecyclePolicyProperty(\n    lifecycle_policy_text=\"lifecyclePolicyText\",\n    registry_id=\"registryId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar lifecyclePolicyProperty = new LifecyclePolicyProperty {\n    LifecyclePolicyText = \"lifecyclePolicyText\",\n    RegistryId = \"registryId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nLifecyclePolicyProperty lifecyclePolicyProperty = LifecyclePolicyProperty.builder()\n        .lifecyclePolicyText(\"lifecyclePolicyText\")\n        .registryId(\"registryId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nlifecyclePolicyProperty := &LifecyclePolicyProperty{\n\tLifecyclePolicyText: jsii.String(\"lifecyclePolicyText\"),\n\tRegistryId: jsii.String(\"registryId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst lifecyclePolicyProperty: ecr.CfnRepository.LifecyclePolicyProperty = {\n  lifecyclePolicyText: 'lifecyclePolicyText',\n  registryId: 'registryId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecyclePolicyProperty: ecr.CfnRepository.LifecyclePolicyProperty = {\n  lifecyclePolicyText: 'lifecyclePolicyText',\n  registryId: 'registryId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"1c24a468cbc0d4bf8e6bfeef6aca8aa60847e76c7c90631eb5f2ce7dab35de60"},"adaf6321032aa1d517fe1a942d0e1803d2d93a16feec802c78483b2e66ab1473":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\n# repository_policy_text: Any\n\ncfn_repository_props = ecr.CfnRepositoryProps(\n    encryption_configuration=ecr.CfnRepository.EncryptionConfigurationProperty(\n        encryption_type=\"encryptionType\",\n\n        # the properties below are optional\n        kms_key=\"kmsKey\"\n    ),\n    image_scanning_configuration=ecr.CfnRepository.ImageScanningConfigurationProperty(\n        scan_on_push=False\n    ),\n    image_tag_mutability=\"imageTagMutability\",\n    lifecycle_policy=ecr.CfnRepository.LifecyclePolicyProperty(\n        lifecycle_policy_text=\"lifecyclePolicyText\",\n        registry_id=\"registryId\"\n    ),\n    repository_name=\"repositoryName\",\n    repository_policy_text=repository_policy_text,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryPolicyText;\n\nvar cfnRepositoryProps = new CfnRepositoryProps {\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        EncryptionType = \"encryptionType\",\n\n        // the properties below are optional\n        KmsKey = \"kmsKey\"\n    },\n    ImageScanningConfiguration = new ImageScanningConfigurationProperty {\n        ScanOnPush = false\n    },\n    ImageTagMutability = \"imageTagMutability\",\n    LifecyclePolicy = new LifecyclePolicyProperty {\n        LifecyclePolicyText = \"lifecyclePolicyText\",\n        RegistryId = \"registryId\"\n    },\n    RepositoryName = \"repositoryName\",\n    RepositoryPolicyText = repositoryPolicyText,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nObject repositoryPolicyText;\n\nCfnRepositoryProps cfnRepositoryProps = CfnRepositoryProps.builder()\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .encryptionType(\"encryptionType\")\n\n                // the properties below are optional\n                .kmsKey(\"kmsKey\")\n                .build())\n        .imageScanningConfiguration(ImageScanningConfigurationProperty.builder()\n                .scanOnPush(false)\n                .build())\n        .imageTagMutability(\"imageTagMutability\")\n        .lifecyclePolicy(LifecyclePolicyProperty.builder()\n                .lifecyclePolicyText(\"lifecyclePolicyText\")\n                .registryId(\"registryId\")\n                .build())\n        .repositoryName(\"repositoryName\")\n        .repositoryPolicyText(repositoryPolicyText)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nvar repositoryPolicyText interface{}\n\ncfnRepositoryProps := &CfnRepositoryProps{\n\tEncryptionConfiguration: &EncryptionConfigurationProperty{\n\t\tEncryptionType: jsii.String(\"encryptionType\"),\n\n\t\t// the properties below are optional\n\t\tKmsKey: jsii.String(\"kmsKey\"),\n\t},\n\tImageScanningConfiguration: &ImageScanningConfigurationProperty{\n\t\tScanOnPush: jsii.Boolean(false),\n\t},\n\tImageTagMutability: jsii.String(\"imageTagMutability\"),\n\tLifecyclePolicy: &LifecyclePolicyProperty{\n\t\tLifecyclePolicyText: jsii.String(\"lifecyclePolicyText\"),\n\t\tRegistryId: jsii.String(\"registryId\"),\n\t},\n\tRepositoryName: jsii.String(\"repositoryName\"),\n\tRepositoryPolicyText: repositoryPolicyText,\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryPolicyText: any;\nconst cfnRepositoryProps: ecr.CfnRepositoryProps = {\n  encryptionConfiguration: {\n    encryptionType: 'encryptionType',\n\n    // the properties below are optional\n    kmsKey: 'kmsKey',\n  },\n  imageScanningConfiguration: {\n    scanOnPush: false,\n  },\n  imageTagMutability: 'imageTagMutability',\n  lifecyclePolicy: {\n    lifecyclePolicyText: 'lifecyclePolicyText',\n    registryId: 'registryId',\n  },\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.CfnRepositoryProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.CfnRepositoryProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n\ndeclare const repositoryPolicyText: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRepositoryProps: ecr.CfnRepositoryProps = {\n  encryptionConfiguration: {\n    encryptionType: 'encryptionType',\n\n    // the properties below are optional\n    kmsKey: 'kmsKey',\n  },\n  imageScanningConfiguration: {\n    scanOnPush: false,\n  },\n  imageTagMutability: 'imageTagMutability',\n  lifecyclePolicy: {\n    lifecyclePolicyText: 'lifecyclePolicyText',\n    registryId: 'registryId',\n  },\n  repositoryName: 'repositoryName',\n  repositoryPolicyText: repositoryPolicyText,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":9,"75":20,"91":1,"125":1,"130":1,"153":1,"169":1,"192":1,"193":5,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":14,"290":1},"fqnsFingerprint":"5e1caaec06e647485f956a774c2cf3da1bc7a276c4949bd489a44af6feb2345e"},"53ab48ac4869f5b23c26d4d6525b5e1042a3e40efe7a6890dc284df70e503900":{"translations":{"python":{"source":"# repository: ecr.Repository\n\nrepository.add_lifecycle_rule(tag_prefix_list=[\"prod\"], max_image_count=9999)\nrepository.add_lifecycle_rule(max_image_age=Duration.days(30))","version":"2"},"csharp":{"source":"Repository repository;\n\nrepository.AddLifecycleRule(new LifecycleRule { TagPrefixList = new [] { \"prod\" }, MaxImageCount = 9999 });\nrepository.AddLifecycleRule(new LifecycleRule { MaxImageAge = Duration.Days(30) });","version":"1"},"java":{"source":"Repository repository;\n\nrepository.addLifecycleRule(LifecycleRule.builder().tagPrefixList(List.of(\"prod\")).maxImageCount(9999).build());\nrepository.addLifecycleRule(LifecycleRule.builder().maxImageAge(Duration.days(30)).build());","version":"1"},"go":{"source":"var repository repository\n\nrepository.AddLifecycleRule(&LifecycleRule{\n\tTagPrefixList: []*string{\n\t\tjsii.String(\"prod\"),\n\t},\n\tMaxImageCount: jsii.Number(9999),\n})\nrepository.AddLifecycleRule(&LifecycleRule{\n\tMaxImageAge: awscdkcore.Duration_Days(jsii.Number(30)),\n})","version":"1"},"$":{"source":"declare const repository: ecr.Repository;\nrepository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });\nrepository.addLifecycleRule({ maxImageAge: Duration.days(30) });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.LifecycleRule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.LifecycleRule","@aws-cdk/aws-ecr.Repository#addLifecycleRule","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const repository: ecr.Repository;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nrepository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });\nrepository.addLifecycleRule({ maxImageAge: Duration.days(30) });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":2,"10":1,"75":12,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":3,"225":1,"226":2,"242":1,"243":1,"281":3,"290":1},"fqnsFingerprint":"b84e37f0bc65cac2085fd8a603be77f6723a93851501057a74032e616c614ab0"},"25b96751c30f8b67ca16947fccdfcc427fbd224445b59c4c160d1568a2f3d39b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\nimport aws_cdk.aws_events as events\n\n# detail: Any\n# rule_target: events.IRuleTarget\n\non_cloud_trail_image_pushed_options = ecr.OnCloudTrailImagePushedOptions(\n    description=\"description\",\n    event_pattern=events.EventPattern(\n        account=[\"account\"],\n        detail={\n            \"detail_key\": detail\n        },\n        detail_type=[\"detailType\"],\n        id=[\"id\"],\n        region=[\"region\"],\n        resources=[\"resources\"],\n        source=[\"source\"],\n        time=[\"time\"],\n        version=[\"version\"]\n    ),\n    image_tag=\"imageTag\",\n    rule_name=\"ruleName\",\n    target=rule_target\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\nusing Amazon.CDK.AWS.Events;\n\nvar detail;\nIRuleTarget ruleTarget;\n\nvar onCloudTrailImagePushedOptions = new OnCloudTrailImagePushedOptions {\n    Description = \"description\",\n    EventPattern = new EventPattern {\n        Account = new [] { \"account\" },\n        Detail = new Dictionary<string, object> {\n            { \"detailKey\", detail }\n        },\n        DetailType = new [] { \"detailType\" },\n        Id = new [] { \"id\" },\n        Region = new [] { \"region\" },\n        Resources = new [] { \"resources\" },\n        Source = new [] { \"source\" },\n        Time = new [] { \"time\" },\n        Version = new [] { \"version\" }\n    },\n    ImageTag = \"imageTag\",\n    RuleName = \"ruleName\",\n    Target = ruleTarget\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\nimport software.amazon.awscdk.services.events.*;\n\nObject detail;\nIRuleTarget ruleTarget;\n\nOnCloudTrailImagePushedOptions onCloudTrailImagePushedOptions = OnCloudTrailImagePushedOptions.builder()\n        .description(\"description\")\n        .eventPattern(EventPattern.builder()\n                .account(List.of(\"account\"))\n                .detail(Map.of(\n                        \"detailKey\", detail))\n                .detailType(List.of(\"detailType\"))\n                .id(List.of(\"id\"))\n                .region(List.of(\"region\"))\n                .resources(List.of(\"resources\"))\n                .source(List.of(\"source\"))\n                .time(List.of(\"time\"))\n                .version(List.of(\"version\"))\n                .build())\n        .imageTag(\"imageTag\")\n        .ruleName(\"ruleName\")\n        .target(ruleTarget)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\nimport events \"github.com/aws-samples/dummy/awscdkawsevents\"\n\nvar detail interface{}\nvar ruleTarget iRuleTarget\n\nonCloudTrailImagePushedOptions := &OnCloudTrailImagePushedOptions{\n\tDescription: jsii.String(\"description\"),\n\tEventPattern: &EventPattern{\n\t\tAccount: []*string{\n\t\t\tjsii.String(\"account\"),\n\t\t},\n\t\tDetail: map[string]interface{}{\n\t\t\t\"detailKey\": detail,\n\t\t},\n\t\tDetailType: []*string{\n\t\t\tjsii.String(\"detailType\"),\n\t\t},\n\t\tId: []*string{\n\t\t\tjsii.String(\"id\"),\n\t\t},\n\t\tRegion: []*string{\n\t\t\tjsii.String(\"region\"),\n\t\t},\n\t\tResources: []*string{\n\t\t\tjsii.String(\"resources\"),\n\t\t},\n\t\tSource: []*string{\n\t\t\tjsii.String(\"source\"),\n\t\t},\n\t\tTime: []*string{\n\t\t\tjsii.String(\"time\"),\n\t\t},\n\t\tVersion: []*string{\n\t\t\tjsii.String(\"version\"),\n\t\t},\n\t},\n\tImageTag: jsii.String(\"imageTag\"),\n\tRuleName: jsii.String(\"ruleName\"),\n\tTarget: ruleTarget,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const detail: any;\ndeclare const ruleTarget: events.IRuleTarget;\nconst onCloudTrailImagePushedOptions: ecr.OnCloudTrailImagePushedOptions = {\n  description: 'description',\n  eventPattern: {\n    account: ['account'],\n    detail: {\n      detailKey: detail,\n    },\n    detailType: ['detailType'],\n    id: ['id'],\n    region: ['region'],\n    resources: ['resources'],\n    source: ['source'],\n    time: ['time'],\n    version: ['version'],\n  },\n  imageTag: 'imageTag',\n  ruleName: 'ruleName',\n  target: ruleTarget,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions","@aws-cdk/aws-events.EventPattern","@aws-cdk/aws-events.IRuleTarget"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const detail: any;\ndeclare const ruleTarget: events.IRuleTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst onCloudTrailImagePushedOptions: ecr.OnCloudTrailImagePushedOptions = {\n  description: 'description',\n  eventPattern: {\n    account: ['account'],\n    detail: {\n      detailKey: detail,\n    },\n    detailType: ['detailType'],\n    id: ['id'],\n    region: ['region'],\n    resources: ['resources'],\n    source: ['source'],\n    time: ['time'],\n    version: ['version'],\n  },\n  imageTag: 'imageTag',\n  ruleName: 'ruleName',\n  target: ruleTarget,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":13,"75":26,"125":1,"130":2,"153":2,"169":2,"192":8,"193":3,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":15,"290":1},"fqnsFingerprint":"650a9ed9e3b44d2a05c73badbc826839c2a4cb4a3e9f18afed6ee3827fa64581"},"c8301852066009d9737142e6d3e5014ccc7ac545f8da2d07a2c8d2374320ee2d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\nimport aws_cdk.aws_events as events\n\n# detail: Any\n# rule_target: events.IRuleTarget\n\non_image_scan_completed_options = ecr.OnImageScanCompletedOptions(\n    description=\"description\",\n    event_pattern=events.EventPattern(\n        account=[\"account\"],\n        detail={\n            \"detail_key\": detail\n        },\n        detail_type=[\"detailType\"],\n        id=[\"id\"],\n        region=[\"region\"],\n        resources=[\"resources\"],\n        source=[\"source\"],\n        time=[\"time\"],\n        version=[\"version\"]\n    ),\n    image_tags=[\"imageTags\"],\n    rule_name=\"ruleName\",\n    target=rule_target\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\nusing Amazon.CDK.AWS.Events;\n\nvar detail;\nIRuleTarget ruleTarget;\n\nvar onImageScanCompletedOptions = new OnImageScanCompletedOptions {\n    Description = \"description\",\n    EventPattern = new EventPattern {\n        Account = new [] { \"account\" },\n        Detail = new Dictionary<string, object> {\n            { \"detailKey\", detail }\n        },\n        DetailType = new [] { \"detailType\" },\n        Id = new [] { \"id\" },\n        Region = new [] { \"region\" },\n        Resources = new [] { \"resources\" },\n        Source = new [] { \"source\" },\n        Time = new [] { \"time\" },\n        Version = new [] { \"version\" }\n    },\n    ImageTags = new [] { \"imageTags\" },\n    RuleName = \"ruleName\",\n    Target = ruleTarget\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\nimport software.amazon.awscdk.services.events.*;\n\nObject detail;\nIRuleTarget ruleTarget;\n\nOnImageScanCompletedOptions onImageScanCompletedOptions = OnImageScanCompletedOptions.builder()\n        .description(\"description\")\n        .eventPattern(EventPattern.builder()\n                .account(List.of(\"account\"))\n                .detail(Map.of(\n                        \"detailKey\", detail))\n                .detailType(List.of(\"detailType\"))\n                .id(List.of(\"id\"))\n                .region(List.of(\"region\"))\n                .resources(List.of(\"resources\"))\n                .source(List.of(\"source\"))\n                .time(List.of(\"time\"))\n                .version(List.of(\"version\"))\n                .build())\n        .imageTags(List.of(\"imageTags\"))\n        .ruleName(\"ruleName\")\n        .target(ruleTarget)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\nimport events \"github.com/aws-samples/dummy/awscdkawsevents\"\n\nvar detail interface{}\nvar ruleTarget iRuleTarget\n\nonImageScanCompletedOptions := &OnImageScanCompletedOptions{\n\tDescription: jsii.String(\"description\"),\n\tEventPattern: &EventPattern{\n\t\tAccount: []*string{\n\t\t\tjsii.String(\"account\"),\n\t\t},\n\t\tDetail: map[string]interface{}{\n\t\t\t\"detailKey\": detail,\n\t\t},\n\t\tDetailType: []*string{\n\t\t\tjsii.String(\"detailType\"),\n\t\t},\n\t\tId: []*string{\n\t\t\tjsii.String(\"id\"),\n\t\t},\n\t\tRegion: []*string{\n\t\t\tjsii.String(\"region\"),\n\t\t},\n\t\tResources: []*string{\n\t\t\tjsii.String(\"resources\"),\n\t\t},\n\t\tSource: []*string{\n\t\t\tjsii.String(\"source\"),\n\t\t},\n\t\tTime: []*string{\n\t\t\tjsii.String(\"time\"),\n\t\t},\n\t\tVersion: []*string{\n\t\t\tjsii.String(\"version\"),\n\t\t},\n\t},\n\tImageTags: []*string{\n\t\tjsii.String(\"imageTags\"),\n\t},\n\tRuleName: jsii.String(\"ruleName\"),\n\tTarget: ruleTarget,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const detail: any;\ndeclare const ruleTarget: events.IRuleTarget;\nconst onImageScanCompletedOptions: ecr.OnImageScanCompletedOptions = {\n  description: 'description',\n  eventPattern: {\n    account: ['account'],\n    detail: {\n      detailKey: detail,\n    },\n    detailType: ['detailType'],\n    id: ['id'],\n    region: ['region'],\n    resources: ['resources'],\n    source: ['source'],\n    time: ['time'],\n    version: ['version'],\n  },\n  imageTags: ['imageTags'],\n  ruleName: 'ruleName',\n  target: ruleTarget,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.OnImageScanCompletedOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.OnImageScanCompletedOptions","@aws-cdk/aws-events.EventPattern","@aws-cdk/aws-events.IRuleTarget"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const detail: any;\ndeclare const ruleTarget: events.IRuleTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst onImageScanCompletedOptions: ecr.OnImageScanCompletedOptions = {\n  description: 'description',\n  eventPattern: {\n    account: ['account'],\n    detail: {\n      detailKey: detail,\n    },\n    detailType: ['detailType'],\n    id: ['id'],\n    region: ['region'],\n    resources: ['resources'],\n    source: ['source'],\n    time: ['time'],\n    version: ['version'],\n  },\n  imageTags: ['imageTags'],\n  ruleName: 'ruleName',\n  target: ruleTarget,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":13,"75":26,"125":1,"130":2,"153":2,"169":2,"192":9,"193":3,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":15,"290":1},"fqnsFingerprint":"5824965e0e51e719d33ce2df0a139d01385d340e86412aaeaac4042d4e60e46e"},"f7e0f5542e98a9e177e937980148850a01a6d50dd54c819c9c8bae626e55e36f":{"translations":{"python":{"source":"user = iam.User(self, \"User\")\necr.PublicGalleryAuthorizationToken.grant_read(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"User\");\nPublicGalleryAuthorizationToken.GrantRead(user);","version":"1"},"java":{"source":"User user = new User(this, \"User\");\nPublicGalleryAuthorizationToken.grantRead(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"User\"))\necr.PublicGalleryAuthorizationToken_GrantRead(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'User');\necr.PublicGalleryAuthorizationToken.grantRead(user);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken","@aws-cdk/aws-ecr.PublicGalleryAuthorizationToken#grantRead","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'User');\necr.PublicGalleryAuthorizationToken.grantRead(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":7,"104":1,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"78dff6a0349cccd444d61e296aba192a0eb4e3adf9d2f44b188133b7a614f8e8"},"70c210f74582045703a24c61ef3207482797fdc8ecf172eb35049a51b8868435":{"translations":{"python":{"source":"import aws_cdk.aws_ecr as ecr\n\n\napprunner.Service(self, \"Service\",\n    source=apprunner.Source.from_ecr(\n        image_configuration=apprunner.ImageConfiguration(port=80),\n        repository=ecr.Repository.from_repository_name(self, \"NginxRepository\", \"nginx\"),\n        tag_or_digest=\"latest\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.ECR;\n\n\nnew Service(this, \"Service\", new ServiceProps {\n    Source = Source.FromEcr(new EcrProps {\n        ImageConfiguration = new ImageConfiguration { Port = 80 },\n        Repository = Repository.FromRepositoryName(this, \"NginxRepository\", \"nginx\"),\n        TagOrDigest = \"latest\"\n    })\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ecr.*;\n\n\nService.Builder.create(this, \"Service\")\n        .source(Source.fromEcr(EcrProps.builder()\n                .imageConfiguration(ImageConfiguration.builder().port(80).build())\n                .repository(Repository.fromRepositoryName(this, \"NginxRepository\", \"nginx\"))\n                .tagOrDigest(\"latest\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"import ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\n\napprunner.NewService(this, jsii.String(\"Service\"), &ServiceProps{\n\tSource: apprunner.Source_FromEcr(&EcrProps{\n\t\tImageConfiguration: &ImageConfiguration{\n\t\t\tPort: jsii.Number(80),\n\t\t},\n\t\tRepository: ecr.Repository_FromRepositoryName(this, jsii.String(\"NginxRepository\"), jsii.String(\"nginx\")),\n\t\tTagOrDigest: jsii.String(\"latest\"),\n\t}),\n})","version":"1"},"$":{"source":"import * as ecr from '@aws-cdk/aws-ecr';\n\nnew apprunner.Service(this, 'Service', {\n  source: apprunner.Source.fromEcr({\n    imageConfiguration: { port: 80 },\n    repository: ecr.Repository.fromRepositoryName(this, 'NginxRepository', 'nginx'),\n    tagOrDigest: 'latest',\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.Repository"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apprunner.EcrProps","@aws-cdk/aws-apprunner.ImageConfiguration","@aws-cdk/aws-apprunner.Service","@aws-cdk/aws-apprunner.ServiceProps","@aws-cdk/aws-apprunner.Source","@aws-cdk/aws-apprunner.Source#fromEcr","@aws-cdk/aws-ecr.IRepository","@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.Repository#fromRepositoryName","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apprunner from '@aws-cdk/aws-apprunner';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew apprunner.Service(this, 'Service', {\n  source: apprunner.Source.fromEcr({\n    imageConfiguration: { port: 80 },\n    repository: ecr.Repository.fromRepositoryName(this, 'NginxRepository', 'nginx'),\n    tagOrDigest: 'latest',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":5,"75":14,"104":2,"193":3,"194":5,"196":2,"197":1,"226":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"ac2e0e92580905d8ae0d102c79d2d3ae3eb3abffb3fb1e16af73fbe97b10e4f8"},"9348c87ae206b15c766e72d1d8655c409af577ef73a6844f1c2c2ec7255614ae":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ecr as ecr\n\nrepository_attributes = ecr.RepositoryAttributes(\n    repository_arn=\"repositoryArn\",\n    repository_name=\"repositoryName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ECR;\n\nvar repositoryAttributes = new RepositoryAttributes {\n    RepositoryArn = \"repositoryArn\",\n    RepositoryName = \"repositoryName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ecr.*;\n\nRepositoryAttributes repositoryAttributes = RepositoryAttributes.builder()\n        .repositoryArn(\"repositoryArn\")\n        .repositoryName(\"repositoryName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ecr \"github.com/aws-samples/dummy/awscdkawsecr\"\n\nrepositoryAttributes := &RepositoryAttributes{\n\tRepositoryArn: jsii.String(\"repositoryArn\"),\n\tRepositoryName: jsii.String(\"repositoryName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst repositoryAttributes: ecr.RepositoryAttributes = {\n  repositoryArn: 'repositoryArn',\n  repositoryName: 'repositoryName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.RepositoryAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.RepositoryAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst repositoryAttributes: ecr.RepositoryAttributes = {\n  repositoryArn: 'repositoryArn',\n  repositoryName: 'repositoryName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"eb5de0aedd81e6810010109c2cfbaa7fb6581d53c1088f70177454cc67f27b76"},"d95c517ced5882b9571f8e89d083071b517efb4d183f4308b3c5b3788283d5ba":{"translations":{"python":{"source":"ecr.Repository(self, \"Repo\",\n    encryption=ecr.RepositoryEncryption.KMS\n)","version":"2"},"csharp":{"source":"new Repository(this, \"Repo\", new RepositoryProps {\n    Encryption = RepositoryEncryption.KMS\n});","version":"1"},"java":{"source":"Repository.Builder.create(this, \"Repo\")\n        .encryption(RepositoryEncryption.KMS)\n        .build();","version":"1"},"go":{"source":"ecr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tEncryption: ecr.RepositoryEncryption_KMS(),\n})","version":"1"},"$":{"source":"new ecr.Repository(this, 'Repo', {\n  encryption: ecr.RepositoryEncryption.KMS\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.RepositoryEncryption"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryEncryption","@aws-cdk/aws-ecr.RepositoryEncryption#KMS","@aws-cdk/aws-ecr.RepositoryProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ecr.Repository(this, 'Repo', {\n  encryption: ecr.RepositoryEncryption.KMS\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"353599cbecb02c6cd52bf437b9424c337b3ee9a19f121c811f4d34eea590f978"},"1f824dae41174bdd098ba397730c5a9f06b1746e3c8c79126ef52f3f6b98e22d":{"translations":{"python":{"source":"ecr.Repository(self, \"Repo\", image_tag_mutability=ecr.TagMutability.IMMUTABLE)","version":"2"},"csharp":{"source":"new Repository(this, \"Repo\", new RepositoryProps { ImageTagMutability = TagMutability.IMMUTABLE });","version":"1"},"java":{"source":"Repository.Builder.create(this, \"Repo\").imageTagMutability(TagMutability.IMMUTABLE).build();","version":"1"},"go":{"source":"ecr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tImageTagMutability: ecr.TagMutability_IMMUTABLE,\n})","version":"1"},"$":{"source":"new ecr.Repository(this, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.RepositoryProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryProps","@aws-cdk/aws-ecr.TagMutability","@aws-cdk/aws-ecr.TagMutability#IMMUTABLE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ecr.Repository(this, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"095483bf8ea404a28262171a41617e9bf0ec0415d67dc338026da1ab133a98e8"},"161d00499302016863cddb91edb6aa817b576206ebc9e69af5bd14ff9e168233":{"translations":{"python":{"source":"ecr.Repository(self, \"Repo\", image_tag_mutability=ecr.TagMutability.IMMUTABLE)","version":"2"},"csharp":{"source":"new Repository(this, \"Repo\", new RepositoryProps { ImageTagMutability = TagMutability.IMMUTABLE });","version":"1"},"java":{"source":"Repository.Builder.create(this, \"Repo\").imageTagMutability(TagMutability.IMMUTABLE).build();","version":"1"},"go":{"source":"ecr.NewRepository(this, jsii.String(\"Repo\"), &RepositoryProps{\n\tImageTagMutability: ecr.TagMutability_IMMUTABLE,\n})","version":"1"},"$":{"source":"new ecr.Repository(this, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-ecr.TagMutability"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ecr.Repository","@aws-cdk/aws-ecr.RepositoryProps","@aws-cdk/aws-ecr.TagMutability","@aws-cdk/aws-ecr.TagMutability#IMMUTABLE","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as events from '@aws-cdk/aws-events';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass SomeTarget implements events.IRuleTarget {\n  public bind(): events.RuleTargetConfig {\n    return {\n      arn: 'ARN1',\n    };\n  }\n}\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ecr.Repository(this, 'Repo', { imageTagMutability: ecr.TagMutability.IMMUTABLE });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"193":1,"194":3,"197":1,"226":1,"281":1},"fqnsFingerprint":"095483bf8ea404a28262171a41617e9bf0ec0415d67dc338026da1ab133a98e8"}}}