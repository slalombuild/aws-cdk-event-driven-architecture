{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-certificatemanager": "1.199.0",
    "@aws-cdk/aws-cloudwatch": "1.199.0",
    "@aws-cdk/aws-ec2": "1.199.0",
    "@aws-cdk/aws-iam": "1.199.0",
    "@aws-cdk/aws-lambda": "1.199.0",
    "@aws-cdk/aws-route53": "1.199.0",
    "@aws-cdk/aws-s3": "1.199.0",
    "@aws-cdk/cloud-assembly-schema": "1.199.0",
    "@aws-cdk/core": "1.199.0",
    "@aws-cdk/cx-api": "1.199.0",
    "@aws-cdk/region-info": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::ElasticLoadBalancingV2",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "elasticloadbalancingv2"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-elasticloadbalancingv2",
  "readme": {
    "markdown": "# Amazon Elastic Load Balancing V2 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\nThe `@aws-cdk/aws-elasticloadbalancingv2` package provides constructs for\nconfiguring application and network load balancers.\n\nFor more information, see the AWS documentation for\n[Application Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html)\nand [Network Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html).\n\n## Defining an Application Load Balancer\n\nYou define an application load balancer by creating an instance of\n`ApplicationLoadBalancer`, adding a Listener to the load balancer\nand adding Targets to the Listener:\n\n```ts\nimport { AutoScalingGroup } from '@aws-cdk/aws-autoscaling';\ndeclare const asg: AutoScalingGroup;\n\ndeclare const vpc: ec2.Vpc;\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nconst listener = lb.addListener('Listener', {\n  port: 80,\n\n  // 'open: true' is the default, you can leave it out if you want. Set it\n  // to 'false' and use `listener.connections` if you want to be selective\n  // about who can access the load balancer.\n  open: true,\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets('ApplicationFleet', {\n  port: 8080,\n  targets: [asg]\n});\n```\n\nThe security groups of the load balancer and the target are automatically\nupdated to allow the network traffic.\n\nOne (or more) security groups can be associated with the load balancer;\nif a security group isn't provided, one will be automatically created.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst securityGroup1 = new ec2.SecurityGroup(this, 'SecurityGroup1', { vpc });\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n  securityGroup: securityGroup1, // Optional - will be automatically created otherwise\n});\n\nconst securityGroup2 = new ec2.SecurityGroup(this, 'SecurityGroup2', { vpc });\nlb.addSecurityGroup(securityGroup2);\n```\n\n### Conditions\n\nIt's possible to route traffic to targets based on conditions in the incoming\nHTTP request. For example, the following will route requests to the indicated\nAutoScalingGroup only if the requested host in the request is either for\n`example.com/ok` or `example.com/path`:\n\n```ts\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('Example.Com Fleet', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n    elbv2.ListenerCondition.pathPatterns(['/ok', '/path']),\n  ],\n  port: 8080,\n  targets: [asg]\n});\n```\n\nA target with a condition contains either `pathPatterns` or `hostHeader`, or\nboth. If both are specified, both conditions must be met for the requests to\nbe routed to the given target. `priority` is a required field when you add\ntargets with conditions. The lowest number wins.\n\nEvery listener must have at least one target without conditions, which is\nwhere all requests that didn't match any of the conditions will be sent.\n\n### Convenience methods and more complex Actions\n\nRouting traffic from a Load Balancer to a Target involves the following steps:\n\n- Create a Target Group, register the Target into the Target Group\n- Add an Action to the Listener which forwards traffic to the Target Group.\n\nA new listener can be added to the Load Balancer by calling `addListener()`.\nListeners that have been added to the load balancer can be listed using the\n`listeners` property.  Note that the `listeners` property will throw an Error\nfor imported or looked up Load Balancers.\n\nVarious methods on the `Listener` take care of this work for you to a greater\nor lesser extent:\n\n- `addTargets()` performs both steps: automatically creates a Target Group and the\n  required Action.\n- `addTargetGroups()` gives you more control: you create the Target Group (or\n  Target Groups) yourself and the method creates Action that routes traffic to\n  the Target Groups.\n- `addAction()` gives you full control: you supply the Action and wire it up\n  to the Target Groups yourself (or access one of the other ELB routing features).\n\nUsing `addAction()` gives you access to some of the features of an Elastic Load\nBalancer that the other two convenience methods don't:\n\n- **Routing stickiness**: use `ListenerAction.forward()` and supply a\n  `stickinessDuration` to make sure requests are routed to the same target group\n  for a given duration.\n- **Weighted Target Groups**: use `ListenerAction.weightedForward()`\n  to give different weights to different target groups.\n- **Fixed Responses**: use `ListenerAction.fixedResponse()` to serve\n  a static response (ALB only).\n- **Redirects**: use `ListenerAction.redirect()` to serve an HTTP\n  redirect response (ALB only).\n- **Authentication**: use `ListenerAction.authenticateOidc()` to\n  perform OpenID authentication before serving a request (see the\n  `@aws-cdk/aws-elasticloadbalancingv2-actions` package for direct authentication\n  integration with Cognito) (ALB only).\n\nHere's an example of serving a fixed response at the `/ok` URL:\n\n```ts\ndeclare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});\n```\n\nHere's an example of using OIDC authentication before forwarding to a TargetGroup:\n\n```ts\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});\n```\n\nIf you just want to redirect all incoming traffic on one port to another port, you can use the following code:\n\n```ts\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n\nlb.addRedirect({\n  sourceProtocol: elbv2.ApplicationProtocol.HTTPS,\n  sourcePort: 8443,\n  targetProtocol: elbv2.ApplicationProtocol.HTTP,\n  targetPort: 8080,\n});\n```\n\nIf you do not provide any options for this method, it redirects HTTP port 80 to HTTPS port 443.\n\nBy default all ingress traffic will be allowed on the source port. If you want to be more selective with your\ningress rules then set `open: false` and use the listener's `connections` object to selectively grant access to the listener.\n\n## Defining a Network Load Balancer\n\nNetwork Load Balancers are defined in a similar way to Application Load\nBalancers:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.NetworkLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener on a particular port.\nconst listener = lb.addListener('Listener', {\n  port: 443,\n});\n\n// Add targets on a particular port.\nlistener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg]\n});\n```\n\nOne thing to keep in mind is that network load balancers do not have security\ngroups, and no automatic security group configuration is done for you. You will\nhave to configure the security groups of the target yourself to allow traffic by\nclients and/or load balancer instances, depending on your target types.  See\n[Target Groups for your Network Load\nBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html)\nand [Register targets with your Target\nGroup](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/target-group-register-targets.html)\nfor more information.\n\n## Targets and Target Groups\n\nApplication and Network Load Balancers organize load balancing targets in Target\nGroups. If you add your balancing targets (such as AutoScalingGroups, ECS\nservices or individual instances) to your listener directly, the appropriate\n`TargetGroup` will be automatically created for you.\n\nIf you need more control over the Target Groups created, create an instance of\n`ApplicationTargetGroup` or `NetworkTargetGroup`, add the members you desire,\nand add it to the listener by calling `addTargetGroups` instead of `addTargets`.\n\n`addTargets()` will always return the Target Group it just created for you:\n\n```ts\ndeclare const listener: elbv2.NetworkListener;\ndeclare const asg1: autoscaling.AutoScalingGroup;\ndeclare const asg2: autoscaling.AutoScalingGroup;\n\nconst group = listener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg1],\n});\n\ngroup.addTarget(asg2);\n```\n\n### Sticky sessions for your Application Load Balancer\n\nBy default, an Application Load Balancer routes each request independently to a registered target based on the chosen load-balancing algorithm. However, you can use the sticky session feature (also known as session affinity) to enable the load balancer to bind a user's session to a specific target. This ensures that all requests from the user during the session are sent to the same target. This feature is useful for servers that maintain state information in order to provide a continuous experience to clients. To use sticky sessions, the client must support cookies.\n\nApplication Load Balancers support both duration-based cookies (`lb_cookie`) and application-based cookies (`app_cookie`). The key to managing sticky sessions is determining how long your load balancer should consistently route the user's request to the same target. Sticky sessions are enabled at the target group level. You can use a combination of duration-based stickiness, application-based stickiness, and no stickiness across all of your target groups.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});\n```\n\nFor more information see: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/sticky-sessions.html#application-based-stickiness\n\n### Setting the target group protocol version\n\nBy default, Application Load Balancers send requests to targets using HTTP/1.1. You can use the [protocol version](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-protocol-version) to send requests to targets using HTTP/2 or gRPC.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});\n```\n\n## Using Lambda Targets\n\nTo use a Lambda Function as a target, use the integration class in the\n`@aws-cdk/aws-elasticloadbalancingv2-targets` package:\n\n```ts\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as targets from '@aws-cdk/aws-elasticloadbalancingv2-targets';\n\ndeclare const lambdaFunction: lambda.Function;\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n\nconst listener = lb.addListener('Listener', { port: 80 });\nlistener.addTargets('Targets', {\n  targets: [new targets.LambdaTarget(lambdaFunction)],\n\n  // For Lambda Targets, you need to explicitly enable health checks if you\n  // want them.\n  healthCheck: {\n    enabled: true,\n  }\n});\n```\n\nOnly a single Lambda function can be added to a single listener rule.\n\n## Using Application Load Balancer Targets\n\nTo use a single application load balancer as a target for the network load balancer, use the integration class in the\n`@aws-cdk/aws-elasticloadbalancingv2-targets` package:\n\n```ts\nimport * as targets from '@aws-cdk/aws-elasticloadbalancingv2-targets';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as patterns from '@aws-cdk/aws-ecs-patterns';\n\ndeclare const vpc: ec2.Vpc;\n\nconst task = new ecs.FargateTaskDefinition(this, 'Task', { cpu: 256, memoryLimitMiB: 512 });\ntask.addContainer('nginx', {\n  image: ecs.ContainerImage.fromRegistry('public.ecr.aws/nginx/nginx:latest'),\n  portMappings: [{ containerPort: 80 }],\n});\n\nconst svc = new patterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  vpc,\n  taskDefinition: task,\n  publicLoadBalancer: false,\n});\n\nconst nlb = new elbv2.NetworkLoadBalancer(this, 'Nlb', {\n  vpc,\n  crossZoneEnabled: true,\n  internetFacing: true,\n});\n\nconst listener = nlb.addListener('listener', { port: 80 });\n\nlistener.addTargets('Targets', {\n  targets: [new targets.AlbTarget(svc.loadBalancer, 80)],\n  port: 80,\n});\n\nnew CfnOutput(this, 'NlbEndpoint', { value: `http://${nlb.loadBalancerDnsName}`})\n```\n\nOnly the network load balancer is allowed to add the application load balancer as the target.\n\n## Configuring Health Checks\n\nHealth checks are configured upon creation of a target group:\n\n```ts\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('AppFleet', {\n  port: 8080,\n  targets: [asg],\n  healthCheck: {\n    path: '/ping',\n    interval: Duration.minutes(1),\n  }\n});\n```\n\nThe health check can also be configured after creation by calling\n`configureHealthCheck()` on the created object.\n\nNo attempts are made to configure security groups for the port you're\nconfiguring a health check for, but if the health check is on the same port\nyou're routing traffic to, the security group already allows the traffic.\nIf not, you will have to configure the security groups appropriately:\n\n```ts\ndeclare const lb: elbv2.ApplicationLoadBalancer;\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('AppFleet', {\n  port: 8080,\n  targets: [asg],\n  healthCheck: {\n    port: '8088',\n  }\n});\n\nasg.connections.allowFrom(lb, ec2.Port.tcp(8088));\n```\n\n## Using a Load Balancer from a different Stack\n\nIf you want to put your Load Balancer and the Targets it is load balancing to in\ndifferent stacks, you may not be able to use the convenience methods\n`loadBalancer.addListener()` and `listener.addTargets()`.\n\nThe reason is that these methods will create resources in the same Stack as the\nobject they're called on, which may lead to cyclic references between stacks.\nInstead, you will have to create an `ApplicationListener` in the target stack,\nor an empty `TargetGroup` in the load balancer stack that you attach your\nservice to.\n\nFor an example of the alternatives while load balancing to an ECS service, see the\n[ecs/cross-stack-load-balancer\nexample](https://github.com/aws-samples/aws-cdk-examples/tree/master/typescript/ecs/cross-stack-load-balancer/).\n\n## Protocol for Load Balancer Targets\n\nConstructs that want to be a load balancer target should implement\n`IApplicationLoadBalancerTarget` and/or `INetworkLoadBalancerTarget`, and\nprovide an implementation for the function `attachToXxxTargetGroup()`, which can\ncall functions on the load balancer and should return metadata about the\nload balancing target:\n\n```ts\nclass MyTarget implements elbv2.IApplicationLoadBalancerTarget {\n  public attachToApplicationTargetGroup(targetGroup: elbv2.ApplicationTargetGroup): elbv2.LoadBalancerTargetProps {\n    // If we need to add security group rules\n    // targetGroup.registerConnectable(...);\n    return {\n      targetType: elbv2.TargetType.IP,\n      targetJson: { id: '1.2.3.4', port: 8080 },\n    };\n  }\n}\n```\n\n`targetType` should be one of `Instance` or `Ip`. If the target can be\ndirectly added to the target group, `targetJson` should contain the `id` of\nthe target (either instance ID or IP address depending on the type) and\noptionally a `port` or `availabilityZone` override.\n\nApplication load balancer targets can call `registerConnectable()` on the\ntarget group to register themselves for addition to the load balancer's security\ngroup rules.\n\nIf your load balancer target requires that the TargetGroup has been\nassociated with a LoadBalancer before registration can happen (such as is the\ncase for ECS Services for example), take a resource dependency on\n`targetGroup.loadBalancerAttached` as follows:\n\n```ts\ndeclare const resource: Resource;\ndeclare const targetGroup: elbv2.ApplicationTargetGroup;\n\n// Make sure that the listener has been created, and so the TargetGroup\n// has been associated with the LoadBalancer, before 'resource' is created.\n\nNode.of(resource).addDependency(targetGroup.loadBalancerAttached);\n```\n\n## Looking up Load Balancers and Listeners\n\nYou may look up load balancers and load balancer listeners by using one of the\nfollowing lookup methods:\n\n- `ApplicationLoadBalancer.fromlookup(options)` - Look up an application load\n  balancer.\n- `ApplicationListener.fromLookup(options)` - Look up an application load\n  balancer listener.\n- `NetworkLoadBalancer.fromLookup(options)` - Look up a network load balancer.\n- `NetworkListener.fromLookup(options)` - Look up a network load balancer\n  listener.\n\n### Load Balancer lookup options\n\nYou may look up a load balancer by ARN or by associated tags. When you look a\nload balancer up by ARN, that load balancer will be returned unless CDK detects\nthat the load balancer is of the wrong type. When you look up a load balancer by\ntags, CDK will return the load balancer matching all specified tags. If more\nthan one load balancer matches, CDK will throw an error requesting that you\nprovide more specific criteria.\n\n**Look up a Application Load Balancer by ARN**\n\n```ts\nconst loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n});\n```\n\n**Look up an Application Load Balancer by tags**\n\n```ts\nconst loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerTags: {\n    // Finds a load balancer matching all tags.\n    some: 'tag',\n    someother: 'tag',\n  },\n});\n```\n\n## Load Balancer Listener lookup options\n\nYou may look up a load balancer listener by the following criteria:\n\n- Associated load balancer ARN\n- Associated load balancer tags\n- Listener ARN\n- Listener port\n- Listener protocol\n\nThe lookup method will return the matching listener. If more than one listener\nmatches, CDK will throw an error requesting that you specify additional\ncriteria.\n\n**Look up a Listener by associated Load Balancer, Port, and Protocol**\n\n```ts\nconst listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});\n```\n\n**Look up a Listener by associated Load Balancer Tag, Port, and Protocol**\n\n```ts\nconst listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});\n```\n\n**Look up a Network Listener by associated Load Balancer Tag, Port, and Protocol**\n\n```ts\nconst listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-elasticloadbalancingv2",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
      "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
    },
    "java": {
      "maven": {
        "artifactId": "elasticloadbalancingv2",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
    },
    "js": {
      "npm": "@aws-cdk/aws-elasticloadbalancingv2"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-elasticloadbalancingv2",
      "module": "aws_cdk.aws_elasticloadbalancingv2"
    }
  },
  "types": {
    "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding a new action to a listener.",
        "example": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 807
      },
      "name": "AddApplicationActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Action to perform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 811
          },
          "name": "action",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:AddApplicationActionProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding a new target group to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addApplicationTargetGroupsProps: elbv2.AddApplicationTargetGroupsProps = {\n  targetGroups: [applicationTargetGroup],\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 797
      },
      "name": "AddApplicationTargetGroupsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target groups to forward requests to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 801
          },
          "name": "targetGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:AddApplicationTargetGroupsProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding new targets to a listener.",
        "example": "import { AutoScalingGroup } from '@aws-cdk/aws-autoscaling';\ndeclare const asg: AutoScalingGroup;\n\ndeclare const vpc: ec2.Vpc;\n\n// Create the load balancer in a VPC. 'internetFacing' is 'false'\n// by default, which creates an internal load balancer.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\n\n// Add a listener and open up the load balancer's security group\n// to the world.\nconst listener = lb.addListener('Listener', {\n  port: 80,\n\n  // 'open: true' is the default, you can leave it out if you want. Set it\n  // to 'false' and use `listener.connections` if you want to be selective\n  // about who can access the load balancer.\n  open: true,\n});\n\n// Create an AutoScaling group and add it as a load balancing\n// target to the listener.\nlistener.addTargets('ApplicationFleet', {\n  port: 8080,\n  targets: [asg]\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 817
      },
      "name": "AddApplicationTargetsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "The range is 0-3600 seconds.",
            "stability": "stable",
            "summary": "The amount of time for Elastic Load Balancing to wait before deregistering a target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 901
          },
          "name": "deregistrationDelay",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default value for each property in this configuration varies depending on the target.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#aws-resource-elasticloadbalancingv2-targetgroup-properties",
            "stability": "stable",
            "summary": "Health check configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 909
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "round_robin.",
            "stability": "stable",
            "summary": "The load balancing algorithm to select targets for routing requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 916
          },
          "name": "loadBalancingAlgorithmType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupLoadBalancingAlgorithmType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Determined from protocol if known",
            "stability": "stable",
            "summary": "The port on which the listener listens for requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 837
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Determined from port if known",
            "stability": "stable",
            "summary": "The protocol to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 823
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ApplicationProtocolVersion.HTTP1",
            "stability": "stable",
            "summary": "The protocol version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 830
          },
          "name": "protocolVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "The range is 30-900 seconds (15 minutes).",
            "stability": "stable",
            "summary": "The time period during which the load balancer sends a newly registered target a linearly increasing share of the traffic to the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 847
          },
          "name": "slowStart",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Stickiness disabled",
            "remarks": "Setting this value enables load balancer stickiness.\n\nAfter this period, the cookie is considered stale. The minimum value is\n1 second and the maximum value is 7 days (604800 seconds).",
            "stability": "stable",
            "summary": "The stickiness cookie expiration period."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 859
          },
          "name": "stickinessCookieDuration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If `stickinessCookieDuration` is set, a load-balancer generated cookie is used. Otherwise, no stickiness is defined.",
            "remarks": "Names that start with the following prefixes are not allowed: AWSALB, AWSALBAPP,\nand AWSALBTG; they're reserved for use by the load balancer.\n\nNote: `stickinessCookieName` parameter depends on the presence of `stickinessCookieDuration` parameter.\nIf `stickinessCookieDuration` is not set, `stickinessCookieName` will be omitted.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/sticky-sessions.html",
            "stability": "stable",
            "summary": "The name of an application-based stickiness cookie."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 873
          },
          "name": "stickinessCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated",
            "remarks": "This name must be unique per region per account, can have a maximum of\n32 characters, must contain only alphanumeric characters or hyphens, and\nmust not begin or end with a hyphen.",
            "stability": "stable",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 892
          },
          "name": "targetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be `Instance`, `IPAddress`, or any self-registering load balancing\ntarget. All target must be of the same type.",
            "stability": "stable",
            "summary": "The targets to add to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 881
          },
          "name": "targets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:AddApplicationTargetsProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddFixedResponseProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "deprecated": "Use `ApplicationListener.addAction` instead.",
        "stability": "deprecated",
        "summary": "Properties for adding a fixed response to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addFixedResponseProps: elbv2.AddFixedResponseProps = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  contentType: elbv2.ContentType.TEXT_PLAIN,\n  hostHeader: 'hostHeader',\n  messageBody: 'messageBody',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddFixedResponseProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 925
      },
      "name": "AddFixedResponseProps",
      "symbolId": "lib/alb/application-listener:AddFixedResponseProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkActionProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding a new action to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const networkListenerAction: elbv2.NetworkListenerAction;\nconst addNetworkActionProps: elbv2.AddNetworkActionProps = {\n  action: networkListenerAction,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 325
      },
      "name": "AddNetworkActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Action to perform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 329
          },
          "name": "action",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:AddNetworkActionProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding new network targets to a listener.",
        "example": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 335
      },
      "name": "AddNetworkTargetsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Determined from protocol if known",
            "stability": "stable",
            "summary": "The port on which the listener listens for requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 341
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "The range is 0-3600 seconds.",
            "stability": "stable",
            "summary": "The amount of time for Elastic Load Balancing to wait before deregistering a target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 377
          },
          "name": "deregistrationDelay",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default value for each property in this configuration varies depending on the target.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#aws-resource-elasticloadbalancingv2-targetgroup-properties",
            "stability": "stable",
            "summary": "Health check configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 400
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false if the target group type is IP address and the\ntarget group protocol is TCP or TLS. Otherwise, true.",
            "stability": "stable",
            "summary": "Indicates whether client IP preservation is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 392
          },
          "name": "preserveClientIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- inherits the protocol of the listener",
            "stability": "stable",
            "summary": "Protocol for target group, expects TCP, TLS, UDP, or TCP_UDP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 348
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Indicates whether Proxy Protocol version 2 is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 384
          },
          "name": "proxyProtocolV2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated",
            "remarks": "This name must be unique per region per account, can have a maximum of\n32 characters, must contain only alphanumeric characters or hyphens, and\nmust not begin or end with a hyphen.",
            "stability": "stable",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 368
          },
          "name": "targetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be `Instance`, `IPAddress`, or any self-registering load balancing\ntarget. If you use either `Instance` or `IPAddress` as targets, all\ntarget must be of the same type.",
            "stability": "stable",
            "summary": "The targets to add to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 357
          },
          "name": "targets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:AddNetworkTargetsProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddRedirectResponseProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "deprecated": "Use `ApplicationListener.addAction` instead.",
        "stability": "deprecated",
        "summary": "Properties for adding a redirect response to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addRedirectResponseProps: elbv2.AddRedirectResponseProps = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  conditions: [listenerCondition],\n  host: 'host',\n  hostHeader: 'hostHeader',\n  path: 'path',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  port: 'port',\n  priority: 123,\n  protocol: 'protocol',\n  query: 'query',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddRedirectResponseProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps",
        "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 933
      },
      "name": "AddRedirectResponseProps",
      "symbolId": "lib/alb/application-listener:AddRedirectResponseProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding a conditional load balancing rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst addRuleProps: elbv2.AddRuleProps = {\n  conditions: [listenerCondition],\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  priority: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 730
      },
      "name": "AddRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No conditions.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html",
            "stability": "stable",
            "summary": "Rule applies if matches the conditions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 751
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No host condition",
            "deprecated": "Use `conditions` instead.",
            "remarks": "May contain up to three '*' wildcards.\n\nRequires that priority is set.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#host-conditions",
            "stability": "deprecated",
            "summary": "Rule applies if the requested host matches the indicated host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 765
          },
          "name": "hostHeader",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No path condition",
            "deprecated": "Use `conditions` instead.",
            "remarks": "May contain up to three '*' wildcards.\n\nRequires that priority is set.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#path-conditions",
            "stability": "deprecated",
            "summary": "Rule applies if the requested path matches the given path pattern."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 778
          },
          "name": "pathPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No path condition.",
            "deprecated": "Use `conditions` instead.",
            "remarks": "May contain up to three '*' wildcards.\n\nRequires that priority is set.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#path-conditions",
            "stability": "deprecated",
            "summary": "Rule applies if the requested path matches any of the given patterns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 791
          },
          "name": "pathPatterns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Target groups are used as defaults",
            "remarks": "The rule with the lowest priority will be used for every request.\nIf priority is not given, these target groups will be added as\ndefaults, and must not have conditions.\n\nPriorities must be unique.",
            "stability": "stable",
            "summary": "Priority of this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 742
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:AddRuleProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AlpnPolicy": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "remarks": "Which protocols should be used over a secure connection.",
        "stability": "stable",
        "summary": "Application-Layer Protocol Negotiation Policies for network load balancers."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AlpnPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 184
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Negotiate only HTTP/1.*. The ALPN preference list is http/1.1, http/1.0."
          },
          "name": "HTTP1_ONLY"
        },
        {
          "docs": {
            "remarks": "The ALPN preference list is h2",
            "stability": "stable",
            "summary": "Negotiate only HTTP/2."
          },
          "name": "HTTP2_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Prefer HTTP/1.* over HTTP/2 (which can be useful for HTTP/2 testing). The ALPN preference list is http/1.1, http/1.0, h2."
          },
          "name": "HTTP2_OPTIONAL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Prefer HTTP/2 over HTTP/1.*. The ALPN preference list is h2, http/1.1, http/1.0."
          },
          "name": "HTTP2_PREFERRED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Do not negotiate ALPN."
          },
          "name": "NONE"
        }
      ],
      "name": "AlpnPolicy",
      "symbolId": "lib/shared/enums:AlpnPolicy"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/aws-elasticloadbalancingv2.BaseListener",
      "docs": {
        "custom": {
          "resource": "AWS::ElasticLoadBalancingV2::Listener",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Define an ApplicationListener.",
        "example": "import * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const alb: elbv2.ApplicationLoadBalancer;\nconst listener = alb.addListener('Listener', { port: 80 });\nconst targetGroup = listener.addTargets('Fleet', { port: 80 });\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.application(targetGroup),\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alb/application-listener.ts",
          "line": 185
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 161
          },
          "name": "fromApplicationListenerAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Look up an ApplicationListener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 137
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This allows full control of the default action of the load balancer,\nincluding Action chaining, fixed responses and redirect responses. See\nthe `ListenerAction` class for all options.\n\nIt's possible to add routing conditions to the Action added in this way.\nAt least one Action must be added without conditions (which becomes the\ndefault Action).",
            "stability": "stable",
            "summary": "Perform the given default action on incoming requests."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 287
          },
          "name": "addAction",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use `addCertificates` instead.",
            "remarks": "After the first certificate, this creates ApplicationListenerCertificates\nresources since cloudformation requires the certificates array on the\nlistener resource to have a length of 1.",
            "stability": "deprecated",
            "summary": "Add one or more certificates to this listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 247
          },
          "name": "addCertificateArns",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arns",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "After the first certificate, this creates ApplicationListenerCertificates\nresources since cloudformation requires the certificates array on the\nlistener resource to have a length of 1.",
            "stability": "stable",
            "summary": "Add one or more certificates to this listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 258
          },
          "name": "addCertificates",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "certificates",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use `addAction()` instead",
            "stability": "deprecated",
            "summary": "Add a fixed response."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 371
          },
          "name": "addFixedResponse",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddFixedResponseProps"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use `addAction()` instead",
            "stability": "deprecated",
            "summary": "Add a redirect response."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 402
          },
          "name": "addRedirectResponse",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddRedirectResponseProps"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "All target groups will be load balanced to with equal weight and without\nstickiness. For a more complex configuration than that, use `addAction()`.\n\nIt's possible to add routing conditions to the TargetGroups added in this\nway. At least one TargetGroup must be added without conditions (which will\nbecome the default Action for this listener).",
            "stability": "stable",
            "summary": "Load balance incoming requests to the given target groups."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 315
          },
          "name": "addTargetGroups",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method implicitly creates an ApplicationTargetGroup for the targets\ninvolved, and a 'forward' action to route traffic to the given TargetGroup.\n\nIf you want more control over the precise setup, create the TargetGroup\nand use `addAction` yourself.\n\nIt's possible to add conditions to the targets added in this way. At least\none set of targets must be added without conditions.",
            "returns": "The newly created target group",
            "stability": "stable",
            "summary": "Load balance incoming requests to the given load balancing targets."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 347
          },
          "name": "addTargets",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this directly. It is called by ApplicationTargetGroup.",
            "stability": "stable",
            "summary": "Register that a connectable that has been added to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 439
          },
          "name": "registerConnectable",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
          "parameters": [
            {
              "name": "connectable",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validate this listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 446
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.BaseListener",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ApplicationListener",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Manage connections to this ApplicationListener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 168
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Load balancer this listener is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 173
          },
          "name": "loadBalancer",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:ApplicationListener"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerAttributes": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to reference an existing listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst applicationListenerAttributes: elbv2.ApplicationListenerAttributes = {\n  listenerArn: 'listenerArn',\n\n  // the properties below are optional\n  defaultPort: 123,\n  securityGroup: securityGroup,\n  securityGroupAllowsAllOutbound: false,\n  securityGroupId: 'securityGroupId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 531
      },
      "name": "ApplicationListenerAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 535
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The default port on which this listener is listening."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 552
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Security group of the load balancer this listener is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 547
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "use `securityGroup` instead",
            "remarks": "Unless set to `false`, no egress rules will be added to the security group.",
            "stability": "deprecated",
            "summary": "Whether the imported security group allows all outbound traffic or not when imported using `securityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 564
          },
          "name": "securityGroupAllowsAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `securityGroup` instead",
            "stability": "deprecated",
            "summary": "Security group ID of the load balancer this listener is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 542
          },
          "name": "securityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:ApplicationListenerAttributes"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificate": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Add certificates to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\nconst applicationListenerCertificate = new elbv2.ApplicationListenerCertificate(this, 'MyApplicationListenerCertificate', {\n  listener: applicationListener,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alb/application-listener-certificate.ts",
          "line": 43
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/application-listener-certificate.ts",
        "line": 42
      },
      "name": "ApplicationListenerCertificate",
      "symbolId": "lib/alb/application-listener-certificate:ApplicationListenerCertificate"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for adding a set of certificates to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\nconst applicationListenerCertificateProps: elbv2.ApplicationListenerCertificateProps = {\n  listener: applicationListener,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-certificate.ts",
        "line": 13
      },
      "name": "ApplicationListenerCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The listener to attach the rule to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-certificate.ts",
            "line": 17
          },
          "name": "listener",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- One of 'certificates' and 'certificateArns' is required.",
            "deprecated": "Use `certificates` instead.",
            "remarks": "Duplicates are not allowed.",
            "stability": "deprecated",
            "summary": "ARNs of certificates to attach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-certificate.ts",
            "line": 27
          },
          "name": "certificateArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- One of 'certificates' and 'certificateArns' is required.",
            "remarks": "Duplicates are not allowed.",
            "stability": "stable",
            "summary": "Certificates to attach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-certificate.ts",
            "line": 36
          },
          "name": "certificates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-certificate:ApplicationListenerCertificateProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for ApplicationListener lookup.",
        "example": "const listener = elbv2.ApplicationListener.fromLookup(this, 'ALBListener', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n  listenerProtocol: elbv2.ApplicationProtocol.HTTPS,\n  listenerPort: 443,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerLookupOptions",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseListenerLookupOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 114
      },
      "name": "ApplicationListenerLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- does not filter by listener arn",
            "stability": "stable",
            "summary": "ARN of the listener to look up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 119
          },
          "name": "listenerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- does not filter by listener protocol",
            "stability": "stable",
            "summary": "Filter listeners by listener protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 125
          },
          "name": "listenerProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:ApplicationListenerLookupOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for defining a standalone ApplicationListener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationLoadBalancer: elbv2.ApplicationLoadBalancer;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\nconst applicationListenerProps: elbv2.ApplicationListenerProps = {\n  loadBalancer: applicationLoadBalancer,\n\n  // the properties below are optional\n  certificateArns: ['certificateArns'],\n  certificates: [listenerCertificate],\n  defaultAction: listenerAction,\n  defaultTargetGroups: [applicationTargetGroup],\n  open: false,\n  port: 123,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  sslPolicy: elbv2.SslPolicy.RECOMMENDED,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 104
      },
      "name": "ApplicationListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The load balancer to attach this listener to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 108
          },
          "name": "loadBalancer",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:ApplicationListenerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRule": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Define a new listener rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst applicationListenerRule = new elbv2.ApplicationListenerRule(this, 'MyApplicationListenerRule', {\n  listener: applicationListener,\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alb/application-listener-rule.ts",
          "line": 216
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/application-listener-rule.ts",
        "line": 204
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a non-standard condition to this rule."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 293
          },
          "name": "addCondition",
          "parameters": [
            {
              "name": "condition",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use configureAction instead",
            "stability": "deprecated",
            "summary": "Add a fixed response."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 332
          },
          "name": "addFixedResponse",
          "parameters": [
            {
              "name": "fixedResponse",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use configureAction instead",
            "stability": "deprecated",
            "summary": "Add a redirect response."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 346
          },
          "name": "addRedirectResponse",
          "parameters": [
            {
              "name": "redirectResponse",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "Use configureAction instead",
            "stability": "deprecated",
            "summary": "Add a TargetGroup to load balance to."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 323
          },
          "name": "addTargetGroup",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configure the action to perform for this rule."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 300
          },
          "name": "configureAction",
          "parameters": [
            {
              "name": "action",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
              }
            }
          ]
        },
        {
          "docs": {
            "deprecated": "use `addCondition` instead.",
            "remarks": "If the condition conflicts with an already set condition, it will be overwritten by the one you specified.",
            "stability": "deprecated",
            "summary": "Add a non-standard condition to this rule."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 281
          },
          "name": "setCondition",
          "parameters": [
            {
              "name": "field",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validate the rule."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 362
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ApplicationListenerRule",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 208
          },
          "name": "listenerRuleArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-rule:ApplicationListenerRule"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for defining a listener rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationListener: elbv2.ApplicationListener;\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst applicationListenerRuleProps: elbv2.ApplicationListenerRuleProps = {\n  listener: applicationListener,\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-rule.ts",
        "line": 112
      },
      "name": "ApplicationListenerRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The listener to attach the rule to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 116
          },
          "name": "listener",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-rule:ApplicationListenerRuleProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer",
      "docs": {
        "custom": {
          "resource": "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Define an Application Load Balancer.",
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener),\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alb/application-load-balancer.ts",
          "line": 85
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing Application Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 75
          },
          "name": "fromApplicationLoadBalancerAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Look up an application load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 63
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a new listener to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 108
          },
          "name": "addListener",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a redirection listener to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 120
          },
          "name": "addRedirect",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRedirectConfig"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a security group to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 138
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "Return the given named metric for this Application Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 147
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of concurrent TCP connections active from clients to the load balancer and from the load balancer to targets."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 162
          },
          "name": "metricActiveConnectionCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "Possible causes include a\nmismatch of ciphers or protocols.",
            "stability": "stable",
            "summary": "The number of TLS connections initiated by the client that did not establish a session with the load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 173
          },
          "name": "metricClientTlsNegotiationErrorCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of load balancer capacity units (LCU) used by your load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 182
          },
          "name": "metricConsumedLCUs",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "Because an authenticate action was misconfigured, the load balancer\ncouldn't establish a connection with the IdP, or the load balancer\ncouldn't complete the authentication flow due to an internal error.",
            "stability": "stable",
            "summary": "The number of user authentications that could not be completed."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 360
          },
          "name": "metricElbAuthError",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of user authentications that could not be completed because the IdP denied access to the user or an authorization code was used more than once."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 374
          },
          "name": "metricElbAuthFailure",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "remarks": "If one or more of these operations fail, this is the time to failure.",
            "stability": "stable",
            "summary": "The time elapsed, in milliseconds, to query the IdP for the ID token and user info."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 388
          },
          "name": "metricElbAuthLatency",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "This metric is incremented at the end of the authentication workflow,\nafter the load balancer has retrieved the user claims from the IdP.",
            "stability": "stable",
            "summary": "The number of authenticate actions that were successful."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 403
          },
          "name": "metricElbAuthSuccess",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "This does not include any response codes generated by the targets.",
            "stability": "stable",
            "summary": "The number of HTTP 3xx/4xx/5xx codes that originate from the load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 224
          },
          "name": "metricHttpCodeElb",
          "parameters": [
            {
              "name": "code",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeElb"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "This does not include any response codes generated by the load balancer.",
            "stability": "stable",
            "summary": "The number of HTTP 2xx/3xx/4xx/5xx response codes generated by all targets in the load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 239
          },
          "name": "metricHttpCodeTarget",
          "parameters": [
            {
              "name": "code",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeTarget"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of fixed-response actions that were successful."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 194
          },
          "name": "metricHttpFixedResponseCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of redirect actions that were successful."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 203
          },
          "name": "metricHttpRedirectCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of redirect actions that couldn't be completed because the URL in the response location header is larger than 8K."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 213
          },
          "name": "metricHttpRedirectUrlLimitExceededCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of bytes processed by the load balancer over IPv6."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 251
          },
          "name": "metricIpv6ProcessedBytes",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of IPv6 requests received by the load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 260
          },
          "name": "metricIpv6RequestCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of new TCP connections established from clients to the load balancer and from the load balancer to targets."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 270
          },
          "name": "metricNewConnectionCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of bytes processed by the load balancer over IPv4 and IPv6."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 279
          },
          "name": "metricProcessedBytes",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of connections that were rejected because the load balancer had reached its maximum number of connections."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 289
          },
          "name": "metricRejectedConnectionCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "This count includes only the requests with a response generated by a target of the load balancer.",
            "stability": "stable",
            "summary": "The number of requests processed over IPv4 and IPv6."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 300
          },
          "name": "metricRequestCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of rules processed by the load balancer given a request rate averaged over an hour."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 309
          },
          "name": "metricRuleEvaluations",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of connections that were not successfully established between the load balancer and target."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 318
          },
          "name": "metricTargetConnectionErrorCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The time elapsed, in seconds, after the request leaves the load balancer until a response from the target is received."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 330
          },
          "name": "metricTargetResponseTime",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "Possible causes include a mismatch of ciphers or protocols.",
            "stability": "stable",
            "summary": "The number of TLS connections initiated by the load balancer that did not establish a session with the target."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 344
          },
          "name": "metricTargetTLSNegotiationErrorCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "ApplicationLoadBalancer",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 81
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "remarks": "This list is only valid for owned constructs.",
            "stability": "stable",
            "summary": "A list of listeners that have been added to the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 83
          },
          "name": "listeners",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IP Address Type for this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 82
          },
          "name": "ipAddressType",
          "optional": true,
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IpAddressType"
          }
        }
      ],
      "symbolId": "lib/alb/application-load-balancer:ApplicationLoadBalancer"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerAttributes": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to reference an existing load balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\nconst applicationLoadBalancerAttributes: elbv2.ApplicationLoadBalancerAttributes = {\n  loadBalancerArn: 'loadBalancerArn',\n  securityGroupId: 'securityGroupId',\n\n  // the properties below are optional\n  loadBalancerCanonicalHostedZoneId: 'loadBalancerCanonicalHostedZoneId',\n  loadBalancerDnsName: 'loadBalancerDnsName',\n  securityGroupAllowsAllOutbound: false,\n  vpc: vpc,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 509
      },
      "name": "ApplicationLoadBalancerAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 513
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ID of the load balancer's security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 518
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- When not provided, LB cannot be used as Route53 Alias target.",
            "stability": "stable",
            "summary": "The canonical hosted zone ID of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 525
          },
          "name": "loadBalancerCanonicalHostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- When not provided, LB cannot be used as Route53 Alias target.",
            "stability": "stable",
            "summary": "The DNS name of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 532
          },
          "name": "loadBalancerDnsName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Unless set to `false`, no egress rules will be added to the security group.",
            "stability": "stable",
            "summary": "Whether the security group allows all outbound traffic or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 541
          },
          "name": "securityGroupAllowsAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If the Load Balancer was imported and a VPC was not specified,\nthe VPC is not available.",
            "stability": "stable",
            "summary": "The VPC this load balancer has been created in, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 549
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/alb/application-load-balancer:ApplicationLoadBalancerAttributes"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for looking up an ApplicationLoadBalancer.",
        "example": "const loadBalancer = elbv2.ApplicationLoadBalancer.fromLookup(this, 'ALB', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-east-2:123456789012:loadbalancer/app/my-load-balancer/1234567890123456',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerLookupOptions",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerLookupOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 51
      },
      "name": "ApplicationLoadBalancerLookupOptions",
      "symbolId": "lib/alb/application-load-balancer:ApplicationLoadBalancerLookupOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for defining an Application Load Balancer.",
        "example": "declare const cluster: ecs.Cluster;\ndeclare const taskDefinition: ecs.TaskDefinition;\ndeclare const vpc: ec2.Vpc;\nconst service = new ecs.FargateService(this, 'Service', { cluster, taskDefinition });\n\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', { vpc, internetFacing: true });\nconst listener = lb.addListener('Listener', { port: 80 });\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 16
      },
      "name": "ApplicationLoadBalancerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Indicates whether HTTP/2 is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 38
          },
          "name": "http2Enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "60",
            "stability": "stable",
            "summary": "The load balancer idle timeout, in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 45
          },
          "name": "idleTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "IpAddressType.Ipv4",
            "remarks": "Only applies to application load balancers.",
            "stability": "stable",
            "summary": "The type of IP addresses to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 31
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IpAddressType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A security group is created",
            "stability": "stable",
            "summary": "Security group to associate with this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 22
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ],
      "symbolId": "lib/alb/application-load-balancer:ApplicationLoadBalancerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRedirectConfig": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a redirection config.",
        "example": "declare const lb: elbv2.ApplicationLoadBalancer;\n\nlb.addRedirect({\n  sourceProtocol: elbv2.ApplicationProtocol.HTTPS,\n  sourcePort: 8443,\n  targetProtocol: elbv2.ApplicationProtocol.HTTP,\n  targetPort: 8080,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRedirectConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 661
      },
      "name": "ApplicationLoadBalancerRedirectConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is specified, the listener will be opened up to anyone who can reach it.\nFor internal load balancers this is anyone in the same VPC. For public load\nbalancers, this is anyone on the internet.\n\nIf you want to be more selective about who can access this load\nbalancer, set this to `false` and use the listener's `connections`\nobject to selectively grant access to the listener.",
            "stability": "stable",
            "summary": "Allow anyone to connect to this listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 704
          },
          "name": "open",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "stability": "stable",
            "summary": "The port number to listen to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 675
          },
          "name": "sourcePort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HTTP",
            "stability": "stable",
            "summary": "The protocol of the listener being created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 668
          },
          "name": "sourceProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "443",
            "stability": "stable",
            "summary": "The port number to redirect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 689
          },
          "name": "targetPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HTTPS",
            "stability": "stable",
            "summary": "The protocol of the redirection target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 682
          },
          "name": "targetProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
          }
        }
      ],
      "symbolId": "lib/alb/application-load-balancer:ApplicationLoadBalancerRedirectConfig"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Load balancing protocol for application load balancers.",
        "example": "declare const listener: elbv2.ApplicationListener;\ndeclare const service: ecs.BaseService;\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n)",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 54
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP."
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS."
          },
          "name": "HTTPS"
        }
      ],
      "name": "ApplicationProtocol",
      "symbolId": "lib/shared/enums:ApplicationProtocol"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Load balancing protocol version for application load balancers.",
        "example": "declare const vpc: ec2.Vpc;\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 69
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "GRPC."
          },
          "name": "GRPC"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP1."
          },
          "name": "HTTP1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP2."
          },
          "name": "HTTP2"
        }
      ],
      "name": "ApplicationProtocolVersion",
      "symbolId": "lib/shared/enums:ApplicationProtocolVersion"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
      "docs": {
        "stability": "stable",
        "summary": "Define an Application Target Group.",
        "example": "declare const vpc: ec2.Vpc;\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alb/application-target-group.ts",
          "line": 125
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/application-target-group.ts",
        "line": 103
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 107
          },
          "name": "fromTargetGroupAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `fromTargetGroupAttributes` instead",
            "stability": "deprecated",
            "summary": "Import an existing target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 116
          },
          "name": "import",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupImportProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a load balancing target to this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 175
          },
          "name": "addTarget",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup",
          "parameters": [
            {
              "name": "targets",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Note: If the `cookieName` parameter is set, application-based stickiness will be applied,\notherwise it defaults to duration-based stickiness attributes (`lb_cookie`).",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/sticky-sessions.html",
            "stability": "stable",
            "summary": "Enable sticky routing via a cookie to members of this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 194
          },
          "name": "enableCookieStickiness",
          "parameters": [
            {
              "name": "duration",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            },
            {
              "name": "cookieName",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "remarks": "Returns the metric for this target group from the point of view of the first\nload balancer load balancing to it. If you have multiple load balancers load\nsending traffic to the same target group, you will have to override the dimensions\non this metric.",
            "stability": "stable",
            "summary": "Return the given named metric for this Application Load Balancer Target Group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 268
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The number of healthy hosts in the target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 305
          },
          "name": "metricHealthyHostCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "This does not include any response codes generated by the load balancer.",
            "stability": "stable",
            "summary": "The number of HTTP 2xx/3xx/4xx/5xx response codes generated by all targets in this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 331
          },
          "name": "metricHttpCodeTarget",
          "parameters": [
            {
              "name": "code",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeTarget"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of IPv6 requests received by the target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 285
          },
          "name": "metricIpv6RequestCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "This count includes only the requests with a response generated by a target of the load balancer.",
            "stability": "stable",
            "summary": "The number of requests processed over IPv4 and IPv6."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 296
          },
          "name": "metricRequestCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "The only valid statistic is Sum. Note that this represents the average not the sum.",
            "stability": "stable",
            "summary": "The average number of requests received by each target in a target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 345
          },
          "name": "metricRequestCountPerTarget",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of connections that were not successfully established between the load balancer and target."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 357
          },
          "name": "metricTargetConnectionErrorCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The time elapsed, in seconds, after the request leaves the load balancer until a response from the target is received."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 369
          },
          "name": "metricTargetResponseTime",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "Possible causes include a mismatch of ciphers or protocols.",
            "stability": "stable",
            "summary": "The number of TLS connections initiated by the load balancer that did not establish a session with the target."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 383
          },
          "name": "metricTargetTLSNegotiationErrorCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The number of unhealthy hosts in the target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 317
          },
          "name": "metricUnhealthyHostCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this directly. It will be called by load balancing targets.",
            "stability": "stable",
            "summary": "Register a connectable as a member of this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 222
          },
          "name": "registerConnectable",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup",
          "parameters": [
            {
              "name": "connectable",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Don't call this directly. It will be called by listeners.",
            "stability": "stable",
            "summary": "Register a listener that is load balancing to this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 238
          },
          "name": "registerListener",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
              }
            },
            {
              "name": "associatingConstruct",
              "optional": true,
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 390
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ApplicationTargetGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Full name of first load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 251
          },
          "name": "firstLoadBalancerFullName",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-target-group:ApplicationTargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for defining an Application Target Group.",
        "example": "declare const vpc: ec2.Vpc;\n\n// Target group with duration-based stickiness with load-balancer generated cookie\nconst tg1 = new elbv2.ApplicationTargetGroup(this, 'TG1', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  vpc,\n});\n\n// Target group with application-based stickiness\nconst tg2 = new elbv2.ApplicationTargetGroup(this, 'TG2', {\n  targetType: elbv2.TargetType.INSTANCE,\n  port: 80,\n  stickinessCookieDuration: Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  vpc,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-target-group.ts",
        "line": 23
      },
      "name": "ApplicationTargetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "TargetGroupLoadBalancingAlgorithmType.ROUND_ROBIN",
            "stability": "stable",
            "summary": "The load balancing algorithm to select targets for routing requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 86
          },
          "name": "loadBalancingAlgorithmType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupLoadBalancingAlgorithmType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Determined from protocol if known, optional for Lambda targets.",
            "stability": "stable",
            "summary": "The port on which the listener listens for requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 43
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Determined from port if known, optional for Lambda targets.",
            "stability": "stable",
            "summary": "The protocol to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 29
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ApplicationProtocolVersion.HTTP1",
            "stability": "stable",
            "summary": "The protocol version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 36
          },
          "name": "protocolVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocolVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "The range is 30-900 seconds (15 minutes).",
            "stability": "stable",
            "summary": "The time period during which the load balancer sends a newly registered target a linearly increasing share of the traffic to the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 53
          },
          "name": "slowStart",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(1)",
            "remarks": "Setting this value enables load balancer stickiness.\n\nAfter this period, the cookie is considered stale. The minimum value is\n1 second and the maximum value is 7 days (604800 seconds).",
            "stability": "stable",
            "summary": "The stickiness cookie expiration period."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 65
          },
          "name": "stickinessCookieDuration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If `stickinessCookieDuration` is set, a load-balancer generated cookie is used. Otherwise, no stickiness is defined.",
            "remarks": "Names that start with the following prefixes are not allowed: AWSALB, AWSALBAPP,\nand AWSALBTG; they're reserved for use by the load balancer.\n\nNote: `stickinessCookieName` parameter depends on the presence of `stickinessCookieDuration` parameter.\nIf `stickinessCookieDuration` is not set, `stickinessCookieName` will be omitted.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/sticky-sessions.html",
            "stability": "stable",
            "summary": "The name of an application-based stickiness cookie."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 79
          },
          "name": "stickinessCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No targets.",
            "remarks": "Can be `Instance`, `IPAddress`, or any self-registering load balancing\ntarget. If you use either `Instance` or `IPAddress` as targets, all\ntarget must be of the same type.",
            "stability": "stable",
            "summary": "The targets to add to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 97
          },
          "name": "targets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/alb/application-target-group:ApplicationTargetGroupProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `ListenerAction.authenciateOidc()`.",
        "example": "declare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 333
      },
      "name": "AuthenticateOidcOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "stable",
            "summary": "The authorization endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 351
          },
          "name": "authorizationEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The OAuth 2.0 client identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 356
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The OAuth 2.0 client secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 361
          },
          "name": "clientSecret",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "stable",
            "summary": "The OIDC issuer identifier of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 368
          },
          "name": "issuer",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What action to execute next."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 337
          },
          "name": "next",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "stable",
            "summary": "The token endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 405
          },
          "name": "tokenEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "stable",
            "summary": "The user info endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 412
          },
          "name": "userInfoEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No extra parameters",
            "stability": "stable",
            "summary": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 344
          },
          "name": "authenticationRequestExtraParams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "UnauthenticatedAction.AUTHENTICATE",
            "stability": "stable",
            "summary": "The behavior if the user is not authenticated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 375
          },
          "name": "onUnauthenticatedRequest",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.UnauthenticatedAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"openid\"",
            "remarks": "To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
            "stability": "stable",
            "summary": "The set of user claims to be requested from the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 384
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"AWSELBAuthSessionCookie\"",
            "stability": "stable",
            "summary": "The name of the cookie used to maintain session information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 391
          },
          "name": "sessionCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(7)",
            "stability": "stable",
            "summary": "The maximum duration of the authentication session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 398
          },
          "name": "sessionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-action:AuthenticateOidcOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for an ApplicationListener.",
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 21
      },
      "name": "BaseApplicationListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No certificates.",
            "deprecated": "Use the `certificates` property instead",
            "stability": "deprecated",
            "summary": "The certificates to use on this listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 42
          },
          "name": "certificateArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No certificates.",
            "remarks": "You must provide exactly one certificate if the listener protocol is HTTPS or TLS.",
            "stability": "stable",
            "summary": "Certificate list of ACM cert ARNs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 49
          },
          "name": "certificates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "remarks": "This allows full control of the default action of the load balancer,\nincluding Action chaining, fixed responses and redirect responses.\n\nSee the `ListenerAction` class for all options.\n\nCannot be specified together with `defaultTargetGroups`.",
            "stability": "stable",
            "summary": "Default action to take for requests to this listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 83
          },
          "name": "defaultAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "remarks": "All target groups will be load balanced to with equal weight and without\nstickiness. For a more complex configuration than that, use\neither `defaultAction` or `addAction()`.\n\nCannot be specified together with `defaultAction`.",
            "stability": "stable",
            "summary": "Default target groups to load balance to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 69
          },
          "name": "defaultTargetGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is specified, the load balancer will be opened up to anyone who can reach it.\nFor internal load balancers this is anyone in the same VPC. For public load\nbalancers, this is anyone on the internet.\n\nIf you want to be more selective about who can access this load\nbalancer, set this to `false` and use the listener's `connections`\nobject to selectively grant access to the load balancer on the listener port.",
            "stability": "stable",
            "summary": "Allow anyone to connect to the load balancer on the listener port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 98
          },
          "name": "open",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Determined from protocol if known.",
            "stability": "stable",
            "summary": "The port on which the listener listens for requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 34
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Determined from port if known.",
            "stability": "stable",
            "summary": "The protocol to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 27
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The current predefined security policy.",
            "stability": "stable",
            "summary": "The security policy that defines which ciphers and protocols are supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 56
          },
          "name": "sslPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:BaseApplicationListenerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for defining a rule on a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\ndeclare const listenerAction: elbv2.ListenerAction;\ndeclare const listenerCondition: elbv2.ListenerCondition;\nconst baseApplicationListenerRuleProps: elbv2.BaseApplicationListenerRuleProps = {\n  priority: 123,\n\n  // the properties below are optional\n  action: listenerAction,\n  conditions: [listenerCondition],\n  fixedResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'messageBody',\n  },\n  hostHeader: 'hostHeader',\n  pathPattern: 'pathPattern',\n  pathPatterns: ['pathPatterns'],\n  redirectResponse: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroups: [applicationTargetGroup],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-rule.ts",
        "line": 17
      },
      "name": "BaseApplicationListenerRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The rule with the lowest priority will be used for every request.\n\nPriorities must be unique.",
            "stability": "stable",
            "summary": "Priority of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 25
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No action",
            "remarks": "Only one of `action`, `fixedResponse`, `redirectResponse` or `targetGroups` can be specified.",
            "stability": "stable",
            "summary": "Action to perform when requests are received."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 45
          },
          "name": "action",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No conditions.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html",
            "stability": "stable",
            "summary": "Rule applies if matches the conditions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 74
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No fixed response.",
            "deprecated": "Use `action` instead.",
            "remarks": "Only one of `action`, `fixedResponse`, `redirectResponse` or `targetGroups` can be specified.",
            "stability": "deprecated",
            "summary": "Fixed response to return."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 55
          },
          "name": "fixedResponse",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No host condition.",
            "deprecated": "Use `conditions` instead.",
            "remarks": "May contain up to three '*' wildcards.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#host-conditions",
            "stability": "deprecated",
            "summary": "Rule applies if the requested host matches the indicated host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 86
          },
          "name": "hostHeader",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No path condition.",
            "deprecated": "Use `conditions` instead.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#path-conditions",
            "stability": "deprecated",
            "summary": "Rule applies if the requested path matches the given path pattern."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 95
          },
          "name": "pathPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No path conditions.",
            "deprecated": "Use `conditions` instead.",
            "remarks": "Paths may contain up to three '*' wildcards.",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#path-conditions",
            "stability": "deprecated",
            "summary": "Rule applies if the requested path matches any of the given patterns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 106
          },
          "name": "pathPatterns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No redirect response.",
            "deprecated": "Use `action` instead.",
            "remarks": "Only one of `action`, `fixedResponse`, `redirectResponse` or `targetGroups` can be specified.",
            "stability": "deprecated",
            "summary": "Redirect response to return."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 65
          },
          "name": "redirectResponse",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No target groups.",
            "remarks": "Only one of `action`, `fixedResponse`, `redirectResponse` or `targetGroups` can be specified.\n\nImplies a `forward` action.",
            "stability": "stable",
            "summary": "Target groups to forward requests to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 36
          },
          "name": "targetGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-rule:BaseApplicationListenerRuleProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseListener": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Base class for listeners."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseListener",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/shared/base-listener.ts",
          "line": 106
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "additionalProps",
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/shared/base-listener.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Validate this listener."
          },
          "locationInModule": {
            "filename": "lib/shared/base-listener.ts",
            "line": 120
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "BaseListener",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-listener.ts",
            "line": 102
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/shared/base-listener:BaseListener"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseListenerLookupOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for listener lookup.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst baseListenerLookupOptions: elbv2.BaseListenerLookupOptions = {\n  listenerPort: 123,\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseListenerLookupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-listener.ts",
        "line": 12
      },
      "name": "BaseListenerLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- does not filter by listener port",
            "stability": "stable",
            "summary": "Filter listeners by listener port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-listener.ts",
            "line": 29
          },
          "name": "listenerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- does not filter by load balancer arn",
            "stability": "stable",
            "summary": "Filter listeners by associated load balancer arn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-listener.ts",
            "line": 17
          },
          "name": "loadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- does not filter by load balancer tags",
            "stability": "stable",
            "summary": "Filter listeners by associated load balancer tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-listener.ts",
            "line": 23
          },
          "name": "loadBalancerTags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/shared/base-listener:BaseListenerLookupOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Base class for both Application and Network Load Balancers."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/shared/base-load-balancer.ts",
          "line": 206
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "baseProps",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps"
            }
          },
          {
            "name": "additionalProps",
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/shared/base-load-balancer.ts",
        "line": 108
      },
      "methods": [
        {
          "docs": {
            "remarks": "A region must be specified on the stack containing the load balancer; you cannot enable logging on\nenvironment-agnostic stacks. See https://docs.aws.amazon.com/cdk/latest/guide/environments.html",
            "stability": "stable",
            "summary": "Enable access logging for this load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 246
          },
          "name": "logAccessLogs",
          "parameters": [
            {
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "prefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Remove an attribute from the load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 300
          },
          "name": "removeAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes",
            "stability": "stable",
            "summary": "Set a non-standard attribute on the load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 293
          },
          "name": "setAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 304
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "BaseLoadBalancer",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/50dc6c495c0c9188`",
            "stability": "stable",
            "summary": "The ARN of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 187
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `Z2P70J7EXAMPLE`",
            "stability": "stable",
            "summary": "The canonical hosted zone ID of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 151
          },
          "name": "loadBalancerCanonicalHostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `my-load-balancer-424835706.us-west-2.elb.amazonaws.com`",
            "stability": "stable",
            "summary": "The DNS name of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 160
          },
          "name": "loadBalancerDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `app/my-load-balancer/50dc6c495c0c9188`",
            "stability": "stable",
            "summary": "The full name of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 169
          },
          "name": "loadBalancerFullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `my-load-balancer`",
            "stability": "stable",
            "summary": "The name of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 178
          },
          "name": "loadBalancerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 192
          },
          "name": "loadBalancerSecurityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "This property is always defined (not `null` or `undefined`) for sub-classes of `BaseLoadBalancer`.",
            "stability": "stable",
            "summary": "The VPC this load balancer has been created in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 199
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/shared/base-load-balancer:BaseLoadBalancer"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerLookupOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for looking up load balancers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst baseLoadBalancerLookupOptions: elbv2.BaseLoadBalancerLookupOptions = {\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerLookupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-load-balancer.ts",
        "line": 75
      },
      "name": "BaseLoadBalancerLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- does not search by load balancer arn",
            "stability": "stable",
            "summary": "Find by load balancer's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 80
          },
          "name": "loadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- does not match load balancers by tags",
            "stability": "stable",
            "summary": "Match load balancer tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 86
          },
          "name": "loadBalancerTags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/shared/base-load-balancer:BaseLoadBalancerLookupOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Shared properties of both Application and Network Load Balancers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst baseLoadBalancerProps: elbv2.BaseLoadBalancerProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  deletionProtection: false,\n  internetFacing: false,\n  loadBalancerName: 'loadBalancerName',\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-load-balancer.ts",
        "line": 16
      },
      "name": "BaseLoadBalancerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC network to place the load balancer in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 27
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Indicates whether deletion protection is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 49
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the load balancer has an internet-routable address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 34
          },
          "name": "internetFacing",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "stability": "stable",
            "summary": "Name of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 22
          },
          "name": "loadBalancerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy.",
            "stability": "stable",
            "summary": "Which subnets place the load balancer in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 42
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/shared/base-load-balancer:BaseLoadBalancerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for a Network Listener.",
        "example": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 17
      },
      "name": "BaseNetworkListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port on which the listener listens for requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 21
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "ALPN enables the application layer to negotiate which protocols should be used over a secure connection, such as HTTP/1 and HTTP/2.\n\nCan only be specified together with Protocol TLS.",
            "stability": "stable",
            "summary": "Application-Layer Protocol Negotiation (ALPN) is a TLS extension that is sent on the initial TLS handshake hello messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 79
          },
          "name": "alpnPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AlpnPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No certificates.",
            "remarks": "You must provide exactly one certificate if the listener protocol is HTTPS or TLS.",
            "stability": "stable",
            "summary": "Certificate list of ACM cert ARNs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 61
          },
          "name": "certificates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "remarks": "This allows full control of the default Action of the load balancer,\nincluding weighted forwarding. See the `NetworkListenerAction` class for\nall options.\n\nCannot be specified together with `defaultTargetGroups`.",
            "stability": "stable",
            "summary": "Default action to take for requests to this listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 47
          },
          "name": "defaultAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "remarks": "All target groups will be load balanced to with equal weight and without\nstickiness. For a more complex configuration than that, use\neither `defaultAction` or `addAction()`.\n\nCannot be specified together with `defaultAction`.",
            "stability": "stable",
            "summary": "Default target groups to load balance to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 34
          },
          "name": "defaultTargetGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- TLS if certificates are provided. TCP otherwise.",
            "stability": "stable",
            "summary": "Protocol for listener, expects TCP, TLS, UDP, or TCP_UDP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 54
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Current predefined security policy.",
            "stability": "stable",
            "summary": "SSL Policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 68
          },
          "name": "sslPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:BaseNetworkListenerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties of both Application and Network Target Groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const vpc: ec2.Vpc;\nconst baseTargetGroupProps: elbv2.BaseTargetGroupProps = {\n  deregistrationDelay: cdk.Duration.minutes(30),\n  healthCheck: {\n    enabled: false,\n    healthyGrpcCodes: 'healthyGrpcCodes',\n    healthyHttpCodes: 'healthyHttpCodes',\n    healthyThresholdCount: 123,\n    interval: cdk.Duration.minutes(30),\n    path: 'path',\n    port: 'port',\n    protocol: elbv2.Protocol.HTTP,\n    timeout: cdk.Duration.minutes(30),\n    unhealthyThresholdCount: 123,\n  },\n  targetGroupName: 'targetGroupName',\n  targetType: elbv2.TargetType.INSTANCE,\n  vpc: vpc,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 15
      },
      "name": "BaseTargetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "300",
            "remarks": "The range is 0-3600 seconds.",
            "stability": "stable",
            "summary": "The amount of time for Elastic Load Balancing to wait before deregistering a target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 43
          },
          "name": "deregistrationDelay",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default value for each property in this configuration varies depending on the target.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#aws-resource-elasticloadbalancingv2-targetgroup-properties",
            "stability": "stable",
            "summary": "Health check configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 51
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated.",
            "remarks": "This name must be unique per region per account, can have a maximum of\n32 characters, must contain only alphanumeric characters or hyphens, and\nmust not begin or end with a hyphen.",
            "stability": "stable",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 25
          },
          "name": "targetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Determined automatically.",
            "remarks": "All targets registered into the group must be of this type. If you\nregister targets to the TargetGroup in the CDK app, the TargetType is\ndetermined automatically.",
            "stability": "stable",
            "summary": "The type of targets registered to this TargetGroup, either IP or Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 62
          },
          "name": "targetType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "only if `TargetType` is `Ip` or `InstanceId`",
            "stability": "stable",
            "summary": "The virtual private cloud (VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 34
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/shared/base-target-group:BaseTargetGroupProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ElasticLoadBalancingV2::Listener",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a listener for an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ElasticLoadBalancingV2::Listener`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListener = new elbv2.CfnListener(this, 'MyCfnListener', {\n  defaultActions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  loadBalancerArn: 'loadBalancerArn',\n\n  // the properties below are optional\n  alpnPolicy: ['alpnPolicy'],\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  port: 123,\n  protocol: 'protocol',\n  sslPolicy: 'sslPolicy',\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ElasticLoadBalancingV2::Listener`."
        },
        "locationInModule": {
          "filename": "lib/elasticloadbalancingv2.generated.ts",
          "line": 245
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 152
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 266
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 283
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnListener",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 156
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ListenerArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 181
          },
          "name": "attrListenerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 271
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-defaultactions"
            },
            "remarks": "To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html) .",
            "stability": "external",
            "summary": "The actions for the default rule. You cannot define a condition for a default rule."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 190
          },
          "name": "defaultActions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-loadbalancerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 197
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-alpnpolicy"
            },
            "stability": "external",
            "summary": "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 204
          },
          "name": "alpnPolicy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-certificates"
            },
            "remarks": "You must provide exactly one certificate if the listener protocol is HTTPS or TLS.\n\nTo create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html) .",
            "stability": "external",
            "summary": "The default SSL server certificate for a secure listener."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 213
          },
          "name": "certificates",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.CertificateProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-port"
            },
            "remarks": "You cannot specify a port for a Gateway Load Balancer.",
            "stability": "external",
            "summary": "The port on which the load balancer is listening."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 220
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-protocol"
            },
            "remarks": "For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.",
            "stability": "external",
            "summary": "The protocol for connections from clients to the load balancer."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 227
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-sslpolicy"
            },
            "remarks": "For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the *Network Load Balancers Guide* .",
            "stability": "external",
            "summary": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 236
          },
          "name": "sslPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an action for a listener rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst actionProperty: elbv2.CfnListener.ActionProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  authenticateCognitoConfig: {\n    userPoolArn: 'userPoolArn',\n    userPoolClientId: 'userPoolClientId',\n    userPoolDomain: 'userPoolDomain',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 'sessionTimeout',\n  },\n  authenticateOidcConfig: {\n    authorizationEndpoint: 'authorizationEndpoint',\n    clientId: 'clientId',\n    issuer: 'issuer',\n    tokenEndpoint: 'tokenEndpoint',\n    userInfoEndpoint: 'userInfoEndpoint',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    clientSecret: 'clientSecret',\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 'sessionTimeout',\n    useExistingClientSecret: false,\n  },\n  fixedResponseConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: 'contentType',\n    messageBody: 'messageBody',\n  },\n  forwardConfig: {\n    targetGroups: [{\n      targetGroupArn: 'targetGroupArn',\n      weight: 123,\n    }],\n    targetGroupStickinessConfig: {\n      durationSeconds: 123,\n      enabled: false,\n    },\n  },\n  order: 123,\n  redirectConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroupArn: 'targetGroupArn',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 297
      },
      "name": "ActionProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-type"
            },
            "stability": "external",
            "summary": "The type of action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 345
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-authenticatecognitoconfig"
            },
            "remarks": "Specify only when `Type` is `authenticate-cognito` .",
            "stability": "external",
            "summary": "[HTTPS listeners] Information for using Amazon Cognito to authenticate users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 303
          },
          "name": "authenticateCognitoConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateCognitoConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-authenticateoidcconfig"
            },
            "remarks": "Specify only when `Type` is `authenticate-oidc` .",
            "stability": "external",
            "summary": "[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 309
          },
          "name": "authenticateOidcConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateOidcConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-fixedresponseconfig"
            },
            "remarks": "Specify only when `Type` is `fixed-response` .",
            "stability": "external",
            "summary": "[Application Load Balancer] Information for creating an action that returns a custom HTTP response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 315
          },
          "name": "fixedResponseConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.FixedResponseConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-forwardconfig"
            },
            "remarks": "For Network Load Balancers, you can specify a single target group. Specify only when `Type` is `forward` . If you specify both `ForwardConfig` and `TargetGroupArn` , you can specify only one target group using `ForwardConfig` and it must be the same target group specified in `TargetGroupArn` .",
            "stability": "external",
            "summary": "Information for creating an action that distributes requests among one or more target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 321
          },
          "name": "forwardConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ForwardConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-order"
            },
            "remarks": "This value is required for rules with multiple actions. The action with the lowest value for order is performed first.",
            "stability": "external",
            "summary": "The order for the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 327
          },
          "name": "order",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-redirectconfig"
            },
            "remarks": "Specify only when `Type` is `redirect` .",
            "stability": "external",
            "summary": "[Application Load Balancer] Information for creating a redirect action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 333
          },
          "name": "redirectConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.RedirectConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-action.html#cfn-elasticloadbalancingv2-listener-action-targetgrouparn"
            },
            "remarks": "Specify only when `Type` is `forward` and you want to route to a single target group. To route to one or more target groups, use `ForwardConfig` instead.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 339
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.ActionProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateCognitoConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies information required when integrating with Amazon Cognito to authenticate users.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateCognitoConfigProperty: elbv2.CfnListener.AuthenticateCognitoConfigProperty = {\n  userPoolArn: 'userPoolArn',\n  userPoolClientId: 'userPoolClientId',\n  userPoolDomain: 'userPoolDomain',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 'sessionTimeout',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateCognitoConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 428
      },
      "name": "AuthenticateCognitoConfigProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-userpoolarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon Cognito user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 470
          },
          "name": "userPoolArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-userpoolclientid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon Cognito user pool client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 476
          },
          "name": "userPoolClientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-userpooldomain"
            },
            "stability": "external",
            "summary": "The domain prefix or fully-qualified domain name of the Amazon Cognito user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 482
          },
          "name": "userPoolDomain",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-authenticationrequestextraparams"
            },
            "stability": "external",
            "summary": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 434
          },
          "name": "authenticationRequestExtraParams",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-onunauthenticatedrequest"
            },
            "remarks": "- deny `` - Return an HTTP 401 Unauthorized error.\n- allow `` - Allow the request to be forwarded to the target.\n- authenticate `` - Redirect the request to the IdP authorization endpoint. This is the default value.",
            "stability": "external",
            "summary": "The behavior if the user is not authenticated. The following are possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 444
          },
          "name": "onUnauthenticatedRequest",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-scope"
            },
            "remarks": "To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
            "stability": "external",
            "summary": "The set of user claims to be requested from the IdP. The default is `openid` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 452
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-sessioncookiename"
            },
            "remarks": "The default is AWSELBAuthSessionCookie.",
            "stability": "external",
            "summary": "The name of the cookie used to maintain session information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 458
          },
          "name": "sessionCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listener-authenticatecognitoconfig-sessiontimeout"
            },
            "remarks": "The default is 604800 seconds (7 days).",
            "stability": "external",
            "summary": "The maximum duration of the authentication session, in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 464
          },
          "name": "sessionTimeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.AuthenticateCognitoConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateOidcConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies information required using an identity provide (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateOidcConfigProperty: elbv2.CfnListener.AuthenticateOidcConfigProperty = {\n  authorizationEndpoint: 'authorizationEndpoint',\n  clientId: 'clientId',\n  issuer: 'issuer',\n  tokenEndpoint: 'tokenEndpoint',\n  userInfoEndpoint: 'userInfoEndpoint',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  clientSecret: 'clientSecret',\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 'sessionTimeout',\n  useExistingClientSecret: false,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.AuthenticateOidcConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 567
      },
      "name": "AuthenticateOidcConfigProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-authorizationendpoint"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The authorization endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 579
          },
          "name": "authorizationEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-clientid"
            },
            "stability": "external",
            "summary": "The OAuth 2.0 client identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 585
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-issuer"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The OIDC issuer identifier of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 597
          },
          "name": "issuer",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-tokenendpoint"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The token endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 633
          },
          "name": "tokenEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-userinfoendpoint"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The user info endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 645
          },
          "name": "userInfoEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-authenticationrequestextraparams"
            },
            "stability": "external",
            "summary": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 573
          },
          "name": "authenticationRequestExtraParams",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-clientsecret"
            },
            "stability": "external",
            "summary": "The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set `UseExistingClientSecret` to true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 591
          },
          "name": "clientSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-onunauthenticatedrequest"
            },
            "remarks": "- deny `` - Return an HTTP 401 Unauthorized error.\n- allow `` - Allow the request to be forwarded to the target.\n- authenticate `` - Redirect the request to the IdP authorization endpoint. This is the default value.",
            "stability": "external",
            "summary": "The behavior if the user is not authenticated. The following are possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 607
          },
          "name": "onUnauthenticatedRequest",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-scope"
            },
            "remarks": "To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
            "stability": "external",
            "summary": "The set of user claims to be requested from the IdP. The default is `openid` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 615
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-sessioncookiename"
            },
            "remarks": "The default is AWSELBAuthSessionCookie.",
            "stability": "external",
            "summary": "The name of the cookie used to maintain session information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 621
          },
          "name": "sessionCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-sessiontimeout"
            },
            "remarks": "The default is 604800 seconds (7 days).",
            "stability": "external",
            "summary": "The maximum duration of the authentication session, in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 627
          },
          "name": "sessionTimeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listener-authenticateoidcconfig-useexistingclientsecret"
            },
            "remarks": "If you are creating a rule, you can omit this parameter or set it to false.",
            "stability": "external",
            "summary": "Indicates whether to use the existing client secret when modifying a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 639
          },
          "name": "useExistingClientSecret",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.AuthenticateOidcConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.CertificateProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an SSL server certificate to use as the default certificate for a secure listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst certificateProperty: elbv2.CfnListener.CertificateProperty = {\n  certificateArn: 'certificateArn',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.CertificateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 744
      },
      "name": "CertificateProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificate.html#cfn-elasticloadbalancingv2-listener-certificate-certificatearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 750
          },
          "name": "certificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.CertificateProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.FixedResponseConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-fixedresponseconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies information required when returning a custom HTTP response.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst fixedResponseConfigProperty: elbv2.CfnListener.FixedResponseConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: 'contentType',\n  messageBody: 'messageBody',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.FixedResponseConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 811
      },
      "name": "FixedResponseConfigProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-fixedresponseconfig.html#cfn-elasticloadbalancingv2-listener-fixedresponseconfig-statuscode"
            },
            "stability": "external",
            "summary": "The HTTP response code (2XX, 4XX, or 5XX)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 831
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-fixedresponseconfig.html#cfn-elasticloadbalancingv2-listener-fixedresponseconfig-contenttype"
            },
            "remarks": "Valid Values: text/plain | text/css | text/html | application/javascript | application/json",
            "stability": "external",
            "summary": "The content type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 819
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-fixedresponseconfig.html#cfn-elasticloadbalancingv2-listener-fixedresponseconfig-messagebody"
            },
            "stability": "external",
            "summary": "The message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 825
          },
          "name": "messageBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.FixedResponseConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ForwardConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-forwardconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For Network Load Balancers, you can specify a single target group. Specify only when `Type` is `forward` . If you specify both `ForwardConfig` and `TargetGroupArn` , you can specify only one target group using `ForwardConfig` and it must be the same target group specified in `TargetGroupArn` .",
        "stability": "external",
        "summary": "Information for creating an action that distributes requests among one or more target groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst forwardConfigProperty: elbv2.CfnListener.ForwardConfigProperty = {\n  targetGroups: [{\n    targetGroupArn: 'targetGroupArn',\n    weight: 123,\n  }],\n  targetGroupStickinessConfig: {\n    durationSeconds: 123,\n    enabled: false,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ForwardConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 899
      },
      "name": "ForwardConfigProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-forwardconfig.html#cfn-elasticloadbalancingv2-listener-forwardconfig-targetgroups"
            },
            "stability": "external",
            "summary": "Information about how traffic will be distributed between multiple target groups in a forward rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 911
          },
          "name": "targetGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupTupleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-forwardconfig.html#cfn-elasticloadbalancingv2-listener-forwardconfig-targetgroupstickinessconfig"
            },
            "stability": "external",
            "summary": "Information about the target group stickiness for a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 905
          },
          "name": "targetGroupStickinessConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupStickinessConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.ForwardConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.RedirectConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.\n\nYou can reuse URI components using the following reserved keywords:\n\n- #{protocol}\n- #{host}\n- #{port}\n- #{path} (the leading \"/\" is removed)\n- #{query}\n\nFor example, you can change the path to \"/new/#{path}\", the hostname to \"example.#{host}\", or the query to \"#{query}&value=xyz\".",
        "stability": "external",
        "summary": "Information about a redirect action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectConfigProperty: elbv2.CfnListener.RedirectConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.RedirectConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 987
      },
      "name": "RedirectConfigProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html#cfn-elasticloadbalancingv2-listener-redirectconfig-statuscode"
            },
            "remarks": "The redirect is either permanent (HTTP 301) or temporary (HTTP 302).",
            "stability": "external",
            "summary": "The HTTP redirect code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1023
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html#cfn-elasticloadbalancingv2-listener-redirectconfig-host"
            },
            "remarks": "This component is not percent-encoded. The hostname can contain #{host}.",
            "stability": "external",
            "summary": "The hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 993
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html#cfn-elasticloadbalancingv2-listener-redirectconfig-path"
            },
            "remarks": "This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.",
            "stability": "external",
            "summary": "The absolute path, starting with the leading \"/\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 999
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html#cfn-elasticloadbalancingv2-listener-redirectconfig-port"
            },
            "remarks": "You can specify a value from 1 to 65535 or #{port}.",
            "stability": "external",
            "summary": "The port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1005
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html#cfn-elasticloadbalancingv2-listener-redirectconfig-protocol"
            },
            "remarks": "You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.",
            "stability": "external",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1011
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-redirectconfig.html#cfn-elasticloadbalancingv2-listener-redirectconfig-query"
            },
            "remarks": "Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords.",
            "stability": "external",
            "summary": "The query parameters, URL-encoded when necessary, but not percent-encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1017
          },
          "name": "query",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.RedirectConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupStickinessConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-targetgroupstickinessconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the target group stickiness for a rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupStickinessConfigProperty: elbv2.CfnListener.TargetGroupStickinessConfigProperty = {\n  durationSeconds: 123,\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupStickinessConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1100
      },
      "name": "TargetGroupStickinessConfigProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-targetgroupstickinessconfig.html#cfn-elasticloadbalancingv2-listener-targetgroupstickinessconfig-durationseconds"
            },
            "remarks": "The range is 1-604800 seconds (7 days).",
            "stability": "external",
            "summary": "The time period, in seconds, during which requests from a client should be routed to the same target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1106
          },
          "name": "durationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-targetgroupstickinessconfig.html#cfn-elasticloadbalancingv2-listener-targetgroupstickinessconfig-enabled"
            },
            "stability": "external",
            "summary": "Indicates whether target group stickiness is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1112
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.TargetGroupStickinessConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupTupleProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-targetgrouptuple.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about how traffic will be distributed between multiple target groups in a forward rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupTupleProperty: elbv2.CfnListener.TargetGroupTupleProperty = {\n  targetGroupArn: 'targetGroupArn',\n  weight: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.TargetGroupTupleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1176
      },
      "name": "TargetGroupTupleProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-targetgrouptuple.html#cfn-elasticloadbalancingv2-listener-targetgrouptuple-targetgrouparn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1182
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-targetgrouptuple.html#cfn-elasticloadbalancingv2-listener-targetgrouptuple-weight"
            },
            "remarks": "The range is 0 to 999.",
            "stability": "external",
            "summary": "The weight."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1188
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListener.TargetGroupTupleProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an SSL server certificate to add to the certificate list for an HTTPS or TLS listener.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ElasticLoadBalancingV2::ListenerCertificate`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerCertificate = new elbv2.CfnListenerCertificate(this, 'MyCfnListenerCertificate', {\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  listenerArn: 'listenerArn',\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ElasticLoadBalancingV2::ListenerCertificate`."
        },
        "locationInModule": {
          "filename": "lib/elasticloadbalancingv2.generated.ts",
          "line": 1374
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1328
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1389
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1401
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnListenerCertificate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1332
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1394
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-certificates"
            },
            "remarks": "You can specify one certificate per resource.",
            "stability": "external",
            "summary": "The certificate."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1358
          },
          "name": "certificates",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate.CertificateProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-listenerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1365
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerCertificate"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate.CertificateProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an SSL server certificate for the certificate list of a secure listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst certificateProperty: elbv2.CfnListenerCertificate.CertificateProperty = {\n  certificateArn: 'certificateArn',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate.CertificateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1415
      },
      "name": "CertificateProperty",
      "namespace": "CfnListenerCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html#cfn-elasticloadbalancingv2-listener-certificates-certificatearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1421
          },
          "name": "certificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerCertificate.CertificateProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificateProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnListenerCertificate`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerCertificateProps: elbv2.CfnListenerCertificateProps = {\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  listenerArn: 'listenerArn',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1251
      },
      "name": "CfnListenerCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-certificates"
            },
            "remarks": "You can specify one certificate per resource.",
            "stability": "external",
            "summary": "The certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1258
          },
          "name": "certificates",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerCertificate.CertificateProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-listenerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1265
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerCertificateProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnListener`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerProps: elbv2.CfnListenerProps = {\n  defaultActions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 'sessionTimeout',\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  loadBalancerArn: 'loadBalancerArn',\n\n  // the properties below are optional\n  alpnPolicy: ['alpnPolicy'],\n  certificates: [{\n    certificateArn: 'certificateArn',\n  }],\n  port: 123,\n  protocol: 'protocol',\n  sslPolicy: 'sslPolicy',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 19
      },
      "name": "CfnListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-defaultactions"
            },
            "remarks": "To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html) .",
            "stability": "external",
            "summary": "The actions for the default rule. You cannot define a condition for a default rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 28
          },
          "name": "defaultActions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-loadbalancerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 35
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-alpnpolicy"
            },
            "stability": "external",
            "summary": "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 42
          },
          "name": "alpnPolicy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-certificates"
            },
            "remarks": "You must provide exactly one certificate if the listener protocol is HTTPS or TLS.\n\nTo create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html) .",
            "stability": "external",
            "summary": "The default SSL server certificate for a secure listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 51
          },
          "name": "certificates",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.CertificateProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-port"
            },
            "remarks": "You cannot specify a port for a Gateway Load Balancer.",
            "stability": "external",
            "summary": "The port on which the load balancer is listening."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 58
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-protocol"
            },
            "remarks": "For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.",
            "stability": "external",
            "summary": "The protocol for connections from clients to the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 65
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-sslpolicy"
            },
            "remarks": "For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the *Network Load Balancers Guide* .",
            "stability": "external",
            "summary": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 74
          },
          "name": "sslPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ElasticLoadBalancingV2::ListenerRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a listener rule. The listener must be associated with an Application Load Balancer. Each rule consists of a priority, one or more actions, and one or more conditions.\n\nFor more information, see [Quotas for your Application Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html) in the *User Guide for Application Load Balancers* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ElasticLoadBalancingV2::ListenerRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerRule = new elbv2.CfnListenerRule(this, 'MyCfnListenerRule', {\n  actions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  conditions: [{\n    field: 'field',\n    hostHeaderConfig: {\n      values: ['values'],\n    },\n    httpHeaderConfig: {\n      httpHeaderName: 'httpHeaderName',\n      values: ['values'],\n    },\n    httpRequestMethodConfig: {\n      values: ['values'],\n    },\n    pathPatternConfig: {\n      values: ['values'],\n    },\n    queryStringConfig: {\n      values: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    sourceIpConfig: {\n      values: ['values'],\n    },\n    values: ['values'],\n  }],\n  priority: 123,\n\n  // the properties below are optional\n  listenerArn: 'listenerArn',\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ElasticLoadBalancingV2::ListenerRule`."
        },
        "locationInModule": {
          "filename": "lib/elasticloadbalancingv2.generated.ts",
          "line": 1665
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1587
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1685
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1699
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnListenerRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1591
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IsDefault"
            },
            "stability": "external",
            "summary": "Indicates whether this is the default rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1616
          },
          "name": "attrIsDefault",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "RuleArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1622
          },
          "name": "attrRuleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1690
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-actions"
            },
            "remarks": "The rule must include exactly one of the following types of actions: `forward` , `fixed-response` , or `redirect` , and it must be the last action to be performed. If the rule is for an HTTPS listener, it can also optionally include an authentication action.",
            "stability": "external",
            "summary": "The actions."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1631
          },
          "name": "actions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ActionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-conditions"
            },
            "remarks": "The rule can optionally include up to one of each of the following conditions: `http-request-method` , `host-header` , `path-pattern` , and `source-ip` . A rule can also optionally include one or more of each of the following conditions: `http-header` and `query-string` .",
            "stability": "external",
            "summary": "The conditions."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1640
          },
          "name": "conditions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-priority"
            },
            "remarks": "If you try to reorder rules by updating their priorities, do not specify a new priority if an existing rule already uses this priority, as this can cause an error. If you need to reuse a priority with a different rule, you must remove it as a priority first, and then specify it in a subsequent update.",
            "stability": "external",
            "summary": "The rule priority. A listener can't have multiple rules with the same priority."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1649
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-listenerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1656
          },
          "name": "listenerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ActionProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an action for a listener rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst actionProperty: elbv2.CfnListenerRule.ActionProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  authenticateCognitoConfig: {\n    userPoolArn: 'userPoolArn',\n    userPoolClientId: 'userPoolClientId',\n    userPoolDomain: 'userPoolDomain',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 123,\n  },\n  authenticateOidcConfig: {\n    authorizationEndpoint: 'authorizationEndpoint',\n    clientId: 'clientId',\n    issuer: 'issuer',\n    tokenEndpoint: 'tokenEndpoint',\n    userInfoEndpoint: 'userInfoEndpoint',\n\n    // the properties below are optional\n    authenticationRequestExtraParams: {\n      authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n    },\n    clientSecret: 'clientSecret',\n    onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n    scope: 'scope',\n    sessionCookieName: 'sessionCookieName',\n    sessionTimeout: 123,\n    useExistingClientSecret: false,\n  },\n  fixedResponseConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    contentType: 'contentType',\n    messageBody: 'messageBody',\n  },\n  forwardConfig: {\n    targetGroups: [{\n      targetGroupArn: 'targetGroupArn',\n      weight: 123,\n    }],\n    targetGroupStickinessConfig: {\n      durationSeconds: 123,\n      enabled: false,\n    },\n  },\n  order: 123,\n  redirectConfig: {\n    statusCode: 'statusCode',\n\n    // the properties below are optional\n    host: 'host',\n    path: 'path',\n    port: 'port',\n    protocol: 'protocol',\n    query: 'query',\n  },\n  targetGroupArn: 'targetGroupArn',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1713
      },
      "name": "ActionProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-type"
            },
            "stability": "external",
            "summary": "The type of action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1761
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-authenticatecognitoconfig"
            },
            "remarks": "Specify only when `Type` is `authenticate-cognito` .",
            "stability": "external",
            "summary": "[HTTPS listeners] Information for using Amazon Cognito to authenticate users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1719
          },
          "name": "authenticateCognitoConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateCognitoConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-authenticateoidcconfig"
            },
            "remarks": "Specify only when `Type` is `authenticate-oidc` .",
            "stability": "external",
            "summary": "[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1725
          },
          "name": "authenticateOidcConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateOidcConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-fixedresponseconfig"
            },
            "remarks": "Specify only when `Type` is `fixed-response` .",
            "stability": "external",
            "summary": "[Application Load Balancer] Information for creating an action that returns a custom HTTP response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1731
          },
          "name": "fixedResponseConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.FixedResponseConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-forwardconfig"
            },
            "remarks": "For Network Load Balancers, you can specify a single target group. Specify only when `Type` is `forward` . If you specify both `ForwardConfig` and `TargetGroupArn` , you can specify only one target group using `ForwardConfig` and it must be the same target group specified in `TargetGroupArn` .",
            "stability": "external",
            "summary": "Information for creating an action that distributes requests among one or more target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1737
          },
          "name": "forwardConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ForwardConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-order"
            },
            "remarks": "This value is required for rules with multiple actions. The action with the lowest value for order is performed first.",
            "stability": "external",
            "summary": "The order for the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1743
          },
          "name": "order",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-redirectconfig"
            },
            "remarks": "Specify only when `Type` is `redirect` .",
            "stability": "external",
            "summary": "[Application Load Balancer] Information for creating a redirect action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1749
          },
          "name": "redirectConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RedirectConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-action.html#cfn-elasticloadbalancingv2-listenerrule-action-targetgrouparn"
            },
            "remarks": "Specify only when `Type` is `forward` and you want to route to a single target group. To route to one or more target groups, use `ForwardConfig` instead.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1755
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.ActionProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateCognitoConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies information required when integrating with Amazon Cognito to authenticate users.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateCognitoConfigProperty: elbv2.CfnListenerRule.AuthenticateCognitoConfigProperty = {\n  userPoolArn: 'userPoolArn',\n  userPoolClientId: 'userPoolClientId',\n  userPoolDomain: 'userPoolDomain',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateCognitoConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1844
      },
      "name": "AuthenticateCognitoConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-userpoolarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon Cognito user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1886
          },
          "name": "userPoolArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-userpoolclientid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon Cognito user pool client."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1892
          },
          "name": "userPoolClientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-userpooldomain"
            },
            "stability": "external",
            "summary": "The domain prefix or fully-qualified domain name of the Amazon Cognito user pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1898
          },
          "name": "userPoolDomain",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-authenticationrequestextraparams"
            },
            "stability": "external",
            "summary": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1850
          },
          "name": "authenticationRequestExtraParams",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-onunauthenticatedrequest"
            },
            "remarks": "- deny `` - Return an HTTP 401 Unauthorized error.\n- allow `` - Allow the request to be forwarded to the target.\n- authenticate `` - Redirect the request to the IdP authorization endpoint. This is the default value.",
            "stability": "external",
            "summary": "The behavior if the user is not authenticated. The following are possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1860
          },
          "name": "onUnauthenticatedRequest",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-scope"
            },
            "remarks": "To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
            "stability": "external",
            "summary": "The set of user claims to be requested from the IdP. The default is `openid` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1868
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-sessioncookiename"
            },
            "remarks": "The default is AWSELBAuthSessionCookie.",
            "stability": "external",
            "summary": "The name of the cookie used to maintain session information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1874
          },
          "name": "sessionCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticatecognitoconfig-sessiontimeout"
            },
            "remarks": "The default is 604800 seconds (7 days).",
            "stability": "external",
            "summary": "The maximum duration of the authentication session, in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1880
          },
          "name": "sessionTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.AuthenticateCognitoConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateOidcConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies information required using an identity provide (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst authenticateOidcConfigProperty: elbv2.CfnListenerRule.AuthenticateOidcConfigProperty = {\n  authorizationEndpoint: 'authorizationEndpoint',\n  clientId: 'clientId',\n  issuer: 'issuer',\n  tokenEndpoint: 'tokenEndpoint',\n  userInfoEndpoint: 'userInfoEndpoint',\n\n  // the properties below are optional\n  authenticationRequestExtraParams: {\n    authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n  },\n  clientSecret: 'clientSecret',\n  onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n  scope: 'scope',\n  sessionCookieName: 'sessionCookieName',\n  sessionTimeout: 123,\n  useExistingClientSecret: false,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.AuthenticateOidcConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1983
      },
      "name": "AuthenticateOidcConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-authorizationendpoint"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The authorization endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1995
          },
          "name": "authorizationEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-clientid"
            },
            "stability": "external",
            "summary": "The OAuth 2.0 client identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2001
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-issuer"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The OIDC issuer identifier of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2013
          },
          "name": "issuer",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-tokenendpoint"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The token endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2049
          },
          "name": "tokenEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-userinfoendpoint"
            },
            "remarks": "This must be a full URL, including the HTTPS protocol, the domain, and the path.",
            "stability": "external",
            "summary": "The user info endpoint of the IdP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2061
          },
          "name": "userInfoEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-authenticationrequestextraparams"
            },
            "stability": "external",
            "summary": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1989
          },
          "name": "authenticationRequestExtraParams",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-clientsecret"
            },
            "stability": "external",
            "summary": "The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set `UseExistingClientSecret` to true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2007
          },
          "name": "clientSecret",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-onunauthenticatedrequest"
            },
            "remarks": "- deny `` - Return an HTTP 401 Unauthorized error.\n- allow `` - Allow the request to be forwarded to the target.\n- authenticate `` - Redirect the request to the IdP authorization endpoint. This is the default value.",
            "stability": "external",
            "summary": "The behavior if the user is not authenticated. The following are possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2023
          },
          "name": "onUnauthenticatedRequest",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-scope"
            },
            "remarks": "To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
            "stability": "external",
            "summary": "The set of user claims to be requested from the IdP. The default is `openid` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2031
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-sessioncookiename"
            },
            "remarks": "The default is AWSELBAuthSessionCookie.",
            "stability": "external",
            "summary": "The name of the cookie used to maintain session information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2037
          },
          "name": "sessionCookieName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-sessiontimeout"
            },
            "remarks": "The default is 604800 seconds (7 days).",
            "stability": "external",
            "summary": "The maximum duration of the authentication session, in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2043
          },
          "name": "sessionTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-authenticateoidcconfig.html#cfn-elasticloadbalancingv2-listenerrule-authenticateoidcconfig-useexistingclientsecret"
            },
            "remarks": "If you are creating a rule, you can omit this parameter or set it to false.",
            "stability": "external",
            "summary": "Indicates whether to use the existing client secret when modifying a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2055
          },
          "name": "useExistingClientSecret",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.AuthenticateOidcConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.FixedResponseConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-fixedresponseconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies information required when returning a custom HTTP response.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst fixedResponseConfigProperty: elbv2.CfnListenerRule.FixedResponseConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: 'contentType',\n  messageBody: 'messageBody',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.FixedResponseConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2160
      },
      "name": "FixedResponseConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-fixedresponseconfig.html#cfn-elasticloadbalancingv2-listenerrule-fixedresponseconfig-statuscode"
            },
            "stability": "external",
            "summary": "The HTTP response code (2XX, 4XX, or 5XX)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2180
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-fixedresponseconfig.html#cfn-elasticloadbalancingv2-listenerrule-fixedresponseconfig-contenttype"
            },
            "remarks": "Valid Values: text/plain | text/css | text/html | application/javascript | application/json",
            "stability": "external",
            "summary": "The content type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2168
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-fixedresponseconfig.html#cfn-elasticloadbalancingv2-listenerrule-fixedresponseconfig-messagebody"
            },
            "stability": "external",
            "summary": "The message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2174
          },
          "name": "messageBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.FixedResponseConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ForwardConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-forwardconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For Network Load Balancers, you can specify a single target group. Specify only when `Type` is `forward` . If you specify both `ForwardConfig` and `TargetGroupArn` , you can specify only one target group using `ForwardConfig` and it must be the same target group specified in `TargetGroupArn` .",
        "stability": "external",
        "summary": "Information for creating an action that distributes requests among one or more target groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst forwardConfigProperty: elbv2.CfnListenerRule.ForwardConfigProperty = {\n  targetGroups: [{\n    targetGroupArn: 'targetGroupArn',\n    weight: 123,\n  }],\n  targetGroupStickinessConfig: {\n    durationSeconds: 123,\n    enabled: false,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ForwardConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2248
      },
      "name": "ForwardConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-forwardconfig.html#cfn-elasticloadbalancingv2-listenerrule-forwardconfig-targetgroups"
            },
            "stability": "external",
            "summary": "Information about how traffic will be distributed between multiple target groups in a forward rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2260
          },
          "name": "targetGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupTupleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-forwardconfig.html#cfn-elasticloadbalancingv2-listenerrule-forwardconfig-targetgroupstickinessconfig"
            },
            "stability": "external",
            "summary": "Information about the target group stickiness for a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2254
          },
          "name": "targetGroupStickinessConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupStickinessConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.ForwardConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HostHeaderConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-hostheaderconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about a host header condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst hostHeaderConfigProperty: elbv2.CfnListenerRule.HostHeaderConfigProperty = {\n  values: ['values'],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HostHeaderConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2324
      },
      "name": "HostHeaderConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-hostheaderconfig.html#cfn-elasticloadbalancingv2-listenerrule-hostheaderconfig-values"
            },
            "remarks": "The maximum size of each name is 128 characters. The comparison is case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character).\n\nIf you specify multiple strings, the condition is satisfied if one of the strings matches the host name.",
            "stability": "external",
            "summary": "The host names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2332
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.HostHeaderConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpHeaderConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-httpheaderconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "There is a set of standard HTTP header fields. You can also define custom HTTP header fields.",
        "stability": "external",
        "summary": "Information about an HTTP header condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst httpHeaderConfigProperty: elbv2.CfnListenerRule.HttpHeaderConfigProperty = {\n  httpHeaderName: 'httpHeaderName',\n  values: ['values'],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpHeaderConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2395
      },
      "name": "HttpHeaderConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-httpheaderconfig.html#cfn-elasticloadbalancingv2-listenerrule-httpheaderconfig-httpheadername"
            },
            "remarks": "The maximum size is 40 characters. The header name is case insensitive. The allowed characters are specified by RFC 7230. Wildcards are not supported.",
            "stability": "external",
            "summary": "The name of the HTTP header field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2401
          },
          "name": "httpHeaderName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-httpheaderconfig.html#cfn-elasticloadbalancingv2-listenerrule-httpheaderconfig-values"
            },
            "remarks": "The maximum size of each string is 128 characters. The comparison strings are case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character).\n\nIf the same header appears multiple times in the request, we search them in order until a match is found.\n\nIf you specify multiple strings, the condition is satisfied if one of the strings matches the value of the HTTP header. To require that all of the strings are a match, create one condition per string.",
            "stability": "external",
            "summary": "The strings to compare against the value of the HTTP header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2411
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.HttpHeaderConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpRequestMethodConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-httprequestmethodconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "HTTP defines a set of request methods, also referred to as HTTP verbs. For more information, see the [HTTP Method Registry](https://docs.aws.amazon.com/https://www.iana.org/assignments/http-methods/http-methods.xhtml) . You can also define custom HTTP methods.",
        "stability": "external",
        "summary": "Information about an HTTP method condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst httpRequestMethodConfigProperty: elbv2.CfnListenerRule.HttpRequestMethodConfigProperty = {\n  values: ['values'],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpRequestMethodConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2477
      },
      "name": "HttpRequestMethodConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-httprequestmethodconfig.html#cfn-elasticloadbalancingv2-listenerrule-httprequestmethodconfig-values"
            },
            "remarks": "The maximum size is 40 characters. The allowed characters are A-Z, hyphen (-), and underscore (_). The comparison is case sensitive. Wildcards are not supported; therefore, the method name must be an exact match.\n\nIf you specify multiple strings, the condition is satisfied if one of the strings matches the HTTP request method. We recommend that you route GET and HEAD requests in the same way, because the response to a HEAD request may be cached.",
            "stability": "external",
            "summary": "The name of the request method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2485
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.HttpRequestMethodConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.PathPatternConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-pathpatternconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about a path pattern condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst pathPatternConfigProperty: elbv2.CfnListenerRule.PathPatternConfigProperty = {\n  values: ['values'],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.PathPatternConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2546
      },
      "name": "PathPatternConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-pathpatternconfig.html#cfn-elasticloadbalancingv2-listenerrule-pathpatternconfig-values"
            },
            "remarks": "The maximum size of each string is 128 characters. The comparison is case sensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character).\n\nIf you specify multiple strings, the condition is satisfied if one of them matches the request URL. The path pattern is compared only to the path of the URL, not to its query string.",
            "stability": "external",
            "summary": "The path patterns to compare against the request URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2554
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.PathPatternConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-querystringconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The query string component of a URI starts after the first '?' character and is terminated by either a '#' character or the end of the URI. A typical query string contains key/value pairs separated by '&' characters. The allowed characters are specified by RFC 3986. Any character can be percentage encoded.",
        "stability": "external",
        "summary": "Information about a query string condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst queryStringConfigProperty: elbv2.CfnListenerRule.QueryStringConfigProperty = {\n  values: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2617
      },
      "name": "QueryStringConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-querystringconfig.html#cfn-elasticloadbalancingv2-listenerrule-querystringconfig-values"
            },
            "remarks": "The maximum size of each string is 128 characters. The comparison is case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, you must escape these characters in `Values` using a '\\' character.\n\nIf you specify multiple key/value pairs or values, the condition is satisfied if one of them is found in the query string.",
            "stability": "external",
            "summary": "The key/value pairs or values to find in the query string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2625
          },
          "name": "values",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringKeyValueProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.QueryStringConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringKeyValueProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-querystringkeyvalue.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about a key/value pair.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst queryStringKeyValueProperty: elbv2.CfnListenerRule.QueryStringKeyValueProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringKeyValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2686
      },
      "name": "QueryStringKeyValueProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-querystringkeyvalue.html#cfn-elasticloadbalancingv2-listenerrule-querystringkeyvalue-key"
            },
            "remarks": "You can omit the key.",
            "stability": "external",
            "summary": "The key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2692
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-querystringkeyvalue.html#cfn-elasticloadbalancingv2-listenerrule-querystringkeyvalue-value"
            },
            "stability": "external",
            "summary": "The value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2698
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.QueryStringKeyValueProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RedirectConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.\n\nYou can reuse URI components using the following reserved keywords:\n\n- #{protocol}\n- #{host}\n- #{port}\n- #{path} (the leading \"/\" is removed)\n- #{query}\n\nFor example, you can change the path to \"/new/#{path}\", the hostname to \"example.#{host}\", or the query to \"#{query}&value=xyz\".",
        "stability": "external",
        "summary": "Information about a redirect action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectConfigProperty: elbv2.CfnListenerRule.RedirectConfigProperty = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RedirectConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2774
      },
      "name": "RedirectConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html#cfn-elasticloadbalancingv2-listenerrule-redirectconfig-statuscode"
            },
            "remarks": "The redirect is either permanent (HTTP 301) or temporary (HTTP 302).",
            "stability": "external",
            "summary": "The HTTP redirect code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2810
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html#cfn-elasticloadbalancingv2-listenerrule-redirectconfig-host"
            },
            "remarks": "This component is not percent-encoded. The hostname can contain #{host}.",
            "stability": "external",
            "summary": "The hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2780
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html#cfn-elasticloadbalancingv2-listenerrule-redirectconfig-path"
            },
            "remarks": "This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.",
            "stability": "external",
            "summary": "The absolute path, starting with the leading \"/\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2786
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html#cfn-elasticloadbalancingv2-listenerrule-redirectconfig-port"
            },
            "remarks": "You can specify a value from 1 to 65535 or #{port}.",
            "stability": "external",
            "summary": "The port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2792
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html#cfn-elasticloadbalancingv2-listenerrule-redirectconfig-protocol"
            },
            "remarks": "You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.",
            "stability": "external",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2798
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-redirectconfig.html#cfn-elasticloadbalancingv2-listenerrule-redirectconfig-query"
            },
            "remarks": "Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords.",
            "stability": "external",
            "summary": "The query parameters, URL-encoded when necessary, but not percent-encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2804
          },
          "name": "query",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.RedirectConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a condition for a listener rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst ruleConditionProperty: elbv2.CfnListenerRule.RuleConditionProperty = {\n  field: 'field',\n  hostHeaderConfig: {\n    values: ['values'],\n  },\n  httpHeaderConfig: {\n    httpHeaderName: 'httpHeaderName',\n    values: ['values'],\n  },\n  httpRequestMethodConfig: {\n    values: ['values'],\n  },\n  pathPatternConfig: {\n    values: ['values'],\n  },\n  queryStringConfig: {\n    values: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  sourceIpConfig: {\n    values: ['values'],\n  },\n  values: ['values'],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 2887
      },
      "name": "RuleConditionProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-field"
            },
            "remarks": "- `http-header`\n- `http-request-method`\n- `host-header`\n- `path-pattern`\n- `query-string`\n- `source-ip`",
            "stability": "external",
            "summary": "The field in the HTTP request. The following are the possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2900
          },
          "name": "field",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-hostheaderconfig"
            },
            "remarks": "Specify only when `Field` is `host-header` .",
            "stability": "external",
            "summary": "Information for a host header condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2906
          },
          "name": "hostHeaderConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HostHeaderConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-httpheaderconfig"
            },
            "remarks": "Specify only when `Field` is `http-header` .",
            "stability": "external",
            "summary": "Information for an HTTP header condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2912
          },
          "name": "httpHeaderConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpHeaderConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-httprequestmethodconfig"
            },
            "remarks": "Specify only when `Field` is `http-request-method` .",
            "stability": "external",
            "summary": "Information for an HTTP method condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2918
          },
          "name": "httpRequestMethodConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.HttpRequestMethodConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-pathpatternconfig"
            },
            "remarks": "Specify only when `Field` is `path-pattern` .",
            "stability": "external",
            "summary": "Information for a path pattern condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2924
          },
          "name": "pathPatternConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.PathPatternConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-querystringconfig"
            },
            "remarks": "Specify only when `Field` is `query-string` .",
            "stability": "external",
            "summary": "Information for a query string condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2930
          },
          "name": "queryStringConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.QueryStringConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-sourceipconfig"
            },
            "remarks": "Specify only when `Field` is `source-ip` .",
            "stability": "external",
            "summary": "Information for a source IP condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2936
          },
          "name": "sourceIpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.SourceIpConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-rulecondition.html#cfn-elasticloadbalancingv2-listenerrule-rulecondition-values"
            },
            "remarks": "Specify only when `Field` is `host-header` or `path-pattern` . Alternatively, to specify multiple host names or multiple path patterns, use `HostHeaderConfig` or `PathPatternConfig` .\n\nIf `Field` is `host-header` and you're not using `HostHeaderConfig` , you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters.\n\n- A-Z, a-z, 0-9\n- - .\n- * (matches 0 or more characters)\n- ? (matches exactly 1 character)\n\nIf `Field` is `path-pattern` and you're not using `PathPatternConfig` , you can specify a single path pattern (for example, /img/*). A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters.\n\n- A-Z, a-z, 0-9\n- _ - . $ / ~ \" ' @ : +\n- & (using &amp;)\n- * (matches 0 or more characters)\n- ? (matches exactly 1 character)",
            "stability": "external",
            "summary": "The condition value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 2957
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.RuleConditionProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.SourceIpConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-sourceipconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can use this condition to route based on the IP address of the source that connects to the load balancer. If a client is behind a proxy, this is the IP address of the proxy not the IP address of the client.",
        "stability": "external",
        "summary": "Information about a source IP condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst sourceIpConfigProperty: elbv2.CfnListenerRule.SourceIpConfigProperty = {\n  values: ['values'],\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.SourceIpConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3041
      },
      "name": "SourceIpConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-sourceipconfig.html#cfn-elasticloadbalancingv2-listenerrule-sourceipconfig-values"
            },
            "remarks": "If you specify multiple addresses, the condition is satisfied if the source IP address of the request matches one of the CIDR blocks. This condition is not satisfied by the addresses in the X-Forwarded-For header.",
            "stability": "external",
            "summary": "The source IP addresses, in CIDR format. You can use both IPv4 and IPv6 addresses. Wildcards are not supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3049
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.SourceIpConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupStickinessConfigProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-targetgroupstickinessconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the target group stickiness for a rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupStickinessConfigProperty: elbv2.CfnListenerRule.TargetGroupStickinessConfigProperty = {\n  durationSeconds: 123,\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupStickinessConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3110
      },
      "name": "TargetGroupStickinessConfigProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-targetgroupstickinessconfig.html#cfn-elasticloadbalancingv2-listenerrule-targetgroupstickinessconfig-durationseconds"
            },
            "remarks": "The range is 1-604800 seconds (7 days).",
            "stability": "external",
            "summary": "The time period, in seconds, during which requests from a client should be routed to the same target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3116
          },
          "name": "durationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-targetgroupstickinessconfig.html#cfn-elasticloadbalancingv2-listenerrule-targetgroupstickinessconfig-enabled"
            },
            "stability": "external",
            "summary": "Indicates whether target group stickiness is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3122
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.TargetGroupStickinessConfigProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupTupleProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-targetgrouptuple.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about how traffic will be distributed between multiple target groups in a forward rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupTupleProperty: elbv2.CfnListenerRule.TargetGroupTupleProperty = {\n  targetGroupArn: 'targetGroupArn',\n  weight: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.TargetGroupTupleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3186
      },
      "name": "TargetGroupTupleProperty",
      "namespace": "CfnListenerRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-targetgrouptuple.html#cfn-elasticloadbalancingv2-listenerrule-targetgrouptuple-targetgrouparn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3192
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-targetgrouptuple.html#cfn-elasticloadbalancingv2-listenerrule-targetgrouptuple-weight"
            },
            "remarks": "The range is 0 to 999.",
            "stability": "external",
            "summary": "The weight."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3198
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRule.TargetGroupTupleProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRuleProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnListenerRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnListenerRuleProps: elbv2.CfnListenerRuleProps = {\n  actions: [{\n    type: 'type',\n\n    // the properties below are optional\n    authenticateCognitoConfig: {\n      userPoolArn: 'userPoolArn',\n      userPoolClientId: 'userPoolClientId',\n      userPoolDomain: 'userPoolDomain',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n    },\n    authenticateOidcConfig: {\n      authorizationEndpoint: 'authorizationEndpoint',\n      clientId: 'clientId',\n      issuer: 'issuer',\n      tokenEndpoint: 'tokenEndpoint',\n      userInfoEndpoint: 'userInfoEndpoint',\n\n      // the properties below are optional\n      authenticationRequestExtraParams: {\n        authenticationRequestExtraParamsKey: 'authenticationRequestExtraParams',\n      },\n      clientSecret: 'clientSecret',\n      onUnauthenticatedRequest: 'onUnauthenticatedRequest',\n      scope: 'scope',\n      sessionCookieName: 'sessionCookieName',\n      sessionTimeout: 123,\n      useExistingClientSecret: false,\n    },\n    fixedResponseConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      contentType: 'contentType',\n      messageBody: 'messageBody',\n    },\n    forwardConfig: {\n      targetGroups: [{\n        targetGroupArn: 'targetGroupArn',\n        weight: 123,\n      }],\n      targetGroupStickinessConfig: {\n        durationSeconds: 123,\n        enabled: false,\n      },\n    },\n    order: 123,\n    redirectConfig: {\n      statusCode: 'statusCode',\n\n      // the properties below are optional\n      host: 'host',\n      path: 'path',\n      port: 'port',\n      protocol: 'protocol',\n      query: 'query',\n    },\n    targetGroupArn: 'targetGroupArn',\n  }],\n  conditions: [{\n    field: 'field',\n    hostHeaderConfig: {\n      values: ['values'],\n    },\n    httpHeaderConfig: {\n      httpHeaderName: 'httpHeaderName',\n      values: ['values'],\n    },\n    httpRequestMethodConfig: {\n      values: ['values'],\n    },\n    pathPatternConfig: {\n      values: ['values'],\n    },\n    queryStringConfig: {\n      values: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    sourceIpConfig: {\n      values: ['values'],\n    },\n    values: ['values'],\n  }],\n  priority: 123,\n\n  // the properties below are optional\n  listenerArn: 'listenerArn',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 1481
      },
      "name": "CfnListenerRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-actions"
            },
            "remarks": "The rule must include exactly one of the following types of actions: `forward` , `fixed-response` , or `redirect` , and it must be the last action to be performed. If the rule is for an HTTPS listener, it can also optionally include an authentication action.",
            "stability": "external",
            "summary": "The actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1490
          },
          "name": "actions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.ActionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-conditions"
            },
            "remarks": "The rule can optionally include up to one of each of the following conditions: `http-request-method` , `host-header` , `path-pattern` , and `source-ip` . A rule can also optionally include one or more of each of the following conditions: `http-header` and `query-string` .",
            "stability": "external",
            "summary": "The conditions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1499
          },
          "name": "conditions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-priority"
            },
            "remarks": "If you try to reorder rules by updating their priorities, do not specify a new priority if an existing rule already uses this priority, as this can cause an error. If you need to reuse a priority with a different rule, you must remove it as a priority first, and then specify it in a subsequent update.",
            "stability": "external",
            "summary": "The rule priority. A listener can't have multiple rules with the same priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1508
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-listenerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 1515
          },
          "name": "listenerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnListenerRuleProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an Application Load Balancer, a Network Load Balancer, or a Gateway Load Balancer.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ElasticLoadBalancingV2::LoadBalancer`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnLoadBalancer = new elbv2.CfnLoadBalancer(this, 'MyCfnLoadBalancer', /* all optional props */ {\n  ipAddressType: 'ipAddressType',\n  loadBalancerAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  name: 'name',\n  scheme: 'scheme',\n  securityGroups: ['securityGroups'],\n  subnetMappings: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    allocationId: 'allocationId',\n    iPv6Address: 'iPv6Address',\n    privateIPv4Address: 'privateIPv4Address',\n  }],\n  subnets: ['subnets'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  type: 'type',\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ElasticLoadBalancingV2::LoadBalancer`."
        },
        "locationInModule": {
          "filename": "lib/elasticloadbalancingv2.generated.ts",
          "line": 3587
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3434
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3612
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3631
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLoadBalancer",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3438
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CanonicalHostedZoneID"
            },
            "remarks": "For example, `Z2P70J7EXAMPLE` .",
            "stability": "external",
            "summary": "The ID of the Amazon Route 53 hosted zone associated with the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3463
          },
          "name": "attrCanonicalHostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DNSName"
            },
            "remarks": "For example, `my-load-balancer-424835706.us-west-2.elb.amazonaws.com` .",
            "stability": "external",
            "summary": "The DNS name for the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3469
          },
          "name": "attrDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LoadBalancerFullName"
            },
            "remarks": "For example, `app/my-load-balancer/50dc6c495c0c9188` .",
            "stability": "external",
            "summary": "The full name of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3475
          },
          "name": "attrLoadBalancerFullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LoadBalancerName"
            },
            "remarks": "For example, `my-load-balancer` .",
            "stability": "external",
            "summary": "The name of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3481
          },
          "name": "attrLoadBalancerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SecurityGroups"
            },
            "stability": "external",
            "summary": "The IDs of the security groups for the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3487
          },
          "name": "attrSecurityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3617
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3571
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-ipaddresstype"
            },
            "remarks": "The possible values are `ipv4` (for IPv4 addresses) and `dualstack` (for IPv4 and IPv6 addresses). You can’t specify `dualstack` for a load balancer with a UDP or TCP_UDP listener.",
            "stability": "external",
            "summary": "The IP address type."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3494
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes"
            },
            "stability": "external",
            "summary": "The load balancer attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3501
          },
          "name": "loadBalancerAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.LoadBalancerAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-name"
            },
            "remarks": "This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with \"internal-\".\n\nIf you don't specify a name, AWS CloudFormation generates a unique physical ID for the load balancer. If you specify a name, you cannot perform updates that require replacement of this resource, but you can perform other updates. To replace the resource, specify a new name.",
            "stability": "external",
            "summary": "The name of the load balancer."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3510
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-scheme"
            },
            "remarks": "The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.\n\nThe nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can route requests only from clients with access to the VPC for the load balancer.\n\nThe default is an Internet-facing load balancer.\n\nYou cannot specify a scheme for a Gateway Load Balancer.",
            "stability": "external",
            "summary": "The nodes of an Internet-facing load balancer have public IP addresses."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3523
          },
          "name": "scheme",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-securitygroups"
            },
            "stability": "external",
            "summary": "[Application Load Balancers] The IDs of the security groups for the load balancer."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3530
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmappings"
            },
            "remarks": "You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both.\n\n[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.\n\n[Application Load Balancers on Outposts] You must specify one Outpost subnet.\n\n[Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.\n\n[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your internet-facing load balancer. For internal load balancers, you can specify one private IP address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you can specify one IPv6 address per subnet.\n\n[Gateway Load Balancers] You can specify subnets from one or more Availability Zones. You cannot specify Elastic IP addresses for your subnets.",
            "stability": "external",
            "summary": "The IDs of the public subnets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3547
          },
          "name": "subnetMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.SubnetMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnets"
            },
            "remarks": "You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both. To specify an Elastic IP address, specify subnet mappings instead of subnets.\n\n[Application Load Balancers] You must specify subnets from at least two Availability Zones.\n\n[Application Load Balancers on Outposts] You must specify one Outpost subnet.\n\n[Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.\n\n[Network Load Balancers] You can specify subnets from one or more Availability Zones.\n\n[Gateway Load Balancers] You can specify subnets from one or more Availability Zones.",
            "stability": "external",
            "summary": "The IDs of the public subnets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3564
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-type"
            },
            "remarks": "The default is `application` .",
            "stability": "external",
            "summary": "The type of load balancer."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3578
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnLoadBalancer"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.LoadBalancerAttributeProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies an attribute for an Application Load Balancer, a Network Load Balancer, or a Gateway Load Balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst loadBalancerAttributeProperty: elbv2.CfnLoadBalancer.LoadBalancerAttributeProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.LoadBalancerAttributeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3645
      },
      "name": "LoadBalancerAttributeProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes-key"
            },
            "remarks": "The following attributes are supported by all load balancers:\n\n- `deletion_protection.enabled` - Indicates whether deletion protection is enabled. The value is `true` or `false` . The default is `false` .\n- `load_balancing.cross_zone.enabled` - Indicates whether cross-zone load balancing is enabled. The possible values are `true` and `false` . The default for Network Load Balancers and Gateway Load Balancers is `false` . The default for Application Load Balancers is `true` , and cannot be changed.\n\nThe following attributes are supported by both Application Load Balancers and Network Load Balancers:\n\n- `access_logs.s3.enabled` - Indicates whether access logs are enabled. The value is `true` or `false` . The default is `false` .\n- `access_logs.s3.bucket` - The name of the S3 bucket for the access logs. This attribute is required if access logs are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permissions to write to the bucket.\n- `access_logs.s3.prefix` - The prefix for the location in the S3 bucket for the access logs.\n- `ipv6.deny_all_igw_traffic` - Blocks internet gateway (IGW) access to the load balancer. It is set to `false` for internet-facing load balancers and `true` for internal load balancers, preventing unintended access to your internal load balancer through an internet gateway.\n\nThe following attributes are supported by only Application Load Balancers:\n\n- `idle_timeout.timeout_seconds` - The idle timeout value, in seconds. The valid range is 1-4000 seconds. The default is 60 seconds.\n- `routing.http.desync_mitigation_mode` - Determines how the load balancer handles requests that might pose a security risk to your application. The possible values are `monitor` , `defensive` , and `strictest` . The default is `defensive` .\n- `routing.http.drop_invalid_header_fields.enabled` - Indicates whether HTTP headers with invalid header fields are removed by the load balancer ( `true` ) or routed to targets ( `false` ). The default is `false` .\n- `routing.http.preserve_host_header.enabled` - Indicates whether the Application Load Balancer should preserve the `Host` header in the HTTP request and send it to the target without any change. The possible values are `true` and `false` . The default is `false` .\n- `routing.http.x_amzn_tls_version_and_cipher_suite.enabled` - Indicates whether the two headers ( `x-amzn-tls-version` and `x-amzn-tls-cipher-suite` ), which contain information about the negotiated TLS version and cipher suite, are added to the client request before sending it to the target. The `x-amzn-tls-version` header has information about the TLS protocol version negotiated with the client, and the `x-amzn-tls-cipher-suite` header has information about the cipher suite negotiated with the client. Both headers are in OpenSSL format. The possible values for the attribute are `true` and `false` . The default is `false` .\n- `routing.http.xff_client_port.enabled` - Indicates whether the `X-Forwarded-For` header should preserve the source port that the client used to connect to the load balancer. The possible values are `true` and `false` . The default is `false` .\n- `routing.http.xff_header_processing.mode` - Enables you to modify, preserve, or remove the `X-Forwarded-For` header in the HTTP request before the Application Load Balancer sends the request to the target. The possible values are `append` , `preserve` , and `remove` . The default is `append` .\n\n- If the value is `append` , the Application Load Balancer adds the client IP address (of the last hop) to the `X-Forwarded-For` header in the HTTP request before it sends it to targets.\n- If the value is `preserve` the Application Load Balancer preserves the `X-Forwarded-For` header in the HTTP request, and sends it to targets without any change.\n- If the value is `remove` , the Application Load Balancer removes the `X-Forwarded-For` header in the HTTP request before it sends it to targets.\n- `routing.http2.enabled` - Indicates whether HTTP/2 is enabled. The possible values are `true` and `false` . The default is `true` . Elastic Load Balancing requires that message header names contain only alphanumeric characters and hyphens.\n- `waf.fail_open.enabled` - Indicates whether to allow a WAF-enabled load balancer to route requests to targets if it is unable to forward the request to AWS WAF. The possible values are `true` and `false` . The default is `false` .",
            "stability": "external",
            "summary": "The name of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3679
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes-value"
            },
            "stability": "external",
            "summary": "The value of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3685
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnLoadBalancer.LoadBalancerAttributeProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.SubnetMappingProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a subnet for a load balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst subnetMappingProperty: elbv2.CfnLoadBalancer.SubnetMappingProperty = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  iPv6Address: 'iPv6Address',\n  privateIPv4Address: 'privateIPv4Address',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.SubnetMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3749
      },
      "name": "SubnetMappingProperty",
      "namespace": "CfnLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3773
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-allocationid"
            },
            "stability": "external",
            "summary": "[Network Load Balancers] The allocation ID of the Elastic IP address for an internet-facing load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3755
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-ipv6address"
            },
            "stability": "external",
            "summary": "[Network Load Balancers] The IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3761
          },
          "name": "iPv6Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-privateipv4address"
            },
            "stability": "external",
            "summary": "[Network Load Balancers] The private IPv4 address for an internal load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3767
          },
          "name": "privateIPv4Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnLoadBalancer.SubnetMappingProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLoadBalancer`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnLoadBalancerProps: elbv2.CfnLoadBalancerProps = {\n  ipAddressType: 'ipAddressType',\n  loadBalancerAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  name: 'name',\n  scheme: 'scheme',\n  securityGroups: ['securityGroups'],\n  subnetMappings: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    allocationId: 'allocationId',\n    iPv6Address: 'iPv6Address',\n    privateIPv4Address: 'privateIPv4Address',\n  }],\n  subnets: ['subnets'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3261
      },
      "name": "CfnLoadBalancerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-ipaddresstype"
            },
            "remarks": "The possible values are `ipv4` (for IPv4 addresses) and `dualstack` (for IPv4 and IPv6 addresses). You can’t specify `dualstack` for a load balancer with a UDP or TCP_UDP listener.",
            "stability": "external",
            "summary": "The IP address type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3268
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes"
            },
            "stability": "external",
            "summary": "The load balancer attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3275
          },
          "name": "loadBalancerAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.LoadBalancerAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-name"
            },
            "remarks": "This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with \"internal-\".\n\nIf you don't specify a name, AWS CloudFormation generates a unique physical ID for the load balancer. If you specify a name, you cannot perform updates that require replacement of this resource, but you can perform other updates. To replace the resource, specify a new name.",
            "stability": "external",
            "summary": "The name of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3284
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-scheme"
            },
            "remarks": "The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.\n\nThe nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can route requests only from clients with access to the VPC for the load balancer.\n\nThe default is an Internet-facing load balancer.\n\nYou cannot specify a scheme for a Gateway Load Balancer.",
            "stability": "external",
            "summary": "The nodes of an Internet-facing load balancer have public IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3297
          },
          "name": "scheme",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-securitygroups"
            },
            "stability": "external",
            "summary": "[Application Load Balancers] The IDs of the security groups for the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3304
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmappings"
            },
            "remarks": "You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both.\n\n[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.\n\n[Application Load Balancers on Outposts] You must specify one Outpost subnet.\n\n[Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.\n\n[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your internet-facing load balancer. For internal load balancers, you can specify one private IP address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you can specify one IPv6 address per subnet.\n\n[Gateway Load Balancers] You can specify subnets from one or more Availability Zones. You cannot specify Elastic IP addresses for your subnets.",
            "stability": "external",
            "summary": "The IDs of the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3321
          },
          "name": "subnetMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer.SubnetMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnets"
            },
            "remarks": "You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both. To specify an Elastic IP address, specify subnet mappings instead of subnets.\n\n[Application Load Balancers] You must specify subnets from at least two Availability Zones.\n\n[Application Load Balancers on Outposts] You must specify one Outpost subnet.\n\n[Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.\n\n[Network Load Balancers] You can specify subnets from one or more Availability Zones.\n\n[Gateway Load Balancers] You can specify subnets from one or more Availability Zones.",
            "stability": "external",
            "summary": "The IDs of the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3338
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3345
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-type"
            },
            "remarks": "The default is `application` .",
            "stability": "external",
            "summary": "The type of load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3352
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnLoadBalancerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ElasticLoadBalancingV2::TargetGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a target group for an Application Load Balancer, a Network Load Balancer, or a Gateway Load Balancer.\n\nBefore you register a Lambda function as a target, you must create a `AWS::Lambda::Permission` resource that grants the Elastic Load Balancing service principal permission to invoke the Lambda function.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ElasticLoadBalancingV2::TargetGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnTargetGroup = new elbv2.CfnTargetGroup(this, 'MyCfnTargetGroup', /* all optional props */ {\n  healthCheckEnabled: false,\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 'healthCheckPort',\n  healthCheckProtocol: 'healthCheckProtocol',\n  healthCheckTimeoutSeconds: 123,\n  healthyThresholdCount: 123,\n  ipAddressType: 'ipAddressType',\n  matcher: {\n    grpcCode: 'grpcCode',\n    httpCode: 'httpCode',\n  },\n  name: 'name',\n  port: 123,\n  protocol: 'protocol',\n  protocolVersion: 'protocolVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetGroupAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targets: [{\n    id: 'id',\n\n    // the properties below are optional\n    availabilityZone: 'availabilityZone',\n    port: 123,\n  }],\n  targetType: 'targetType',\n  unhealthyThresholdCount: 123,\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ElasticLoadBalancingV2::TargetGroup`."
        },
        "locationInModule": {
          "filename": "lib/elasticloadbalancingv2.generated.ts",
          "line": 4301
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 4101
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4335
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4364
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTargetGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4105
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LoadBalancerArns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the load balancer that routes traffic to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4130
          },
          "name": "attrLoadBalancerArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TargetGroupArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4136
          },
          "name": "attrTargetGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TargetGroupFullName"
            },
            "remarks": "For example, `targetgroup/my-target-group/cbf133c568e0d028` .",
            "stability": "external",
            "summary": "The full name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4142
          },
          "name": "attrTargetGroupFullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TargetGroupName"
            },
            "remarks": "For example, `my-target-group` .",
            "stability": "external",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4148
          },
          "name": "attrTargetGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4340
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4252
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckenabled"
            },
            "remarks": "If the target type is `lambda` , health checks are disabled by default but can be enabled. If the target type is `instance` , `ip` , or `alb` , health checks are always enabled and cannot be disabled.",
            "stability": "external",
            "summary": "Indicates whether health checks are enabled."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4155
          },
          "name": "healthCheckEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckintervalseconds"
            },
            "remarks": "The range is 5-300. If the target group protocol is TCP, TLS, UDP, TCP_UDP, HTTP or HTTPS, the default is 30 seconds. If the target group protocol is GENEVE, the default is 10 seconds. If the target type is `lambda` , the default is 35 seconds.",
            "stability": "external",
            "summary": "The approximate amount of time, in seconds, between health checks of an individual target."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4162
          },
          "name": "healthCheckIntervalSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckpath"
            },
            "remarks": "[HTTP1 or HTTP2 protocol version] The ping path. The default is /.\n\n[GRPC protocol version] The path of a custom health check method with the format /package.service/method. The default is / AWS .ALB/healthcheck.",
            "stability": "external",
            "summary": "[HTTP/HTTPS health checks] The destination for health checks on the targets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4173
          },
          "name": "healthCheckPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckport"
            },
            "remarks": "If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP, the default is `traffic-port` , which is the port on which each target receives traffic from the load balancer. If the protocol is GENEVE, the default is port 80.",
            "stability": "external",
            "summary": "The port the load balancer uses when performing health checks on targets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4180
          },
          "name": "healthCheckPort",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckprotocol"
            },
            "remarks": "For Application Load Balancers, the default is HTTP. For Network Load Balancers and Gateway Load Balancers, the default is TCP. The TCP protocol is not supported for health checks if the protocol of the target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health checks.",
            "stability": "external",
            "summary": "The protocol the load balancer uses when performing health checks on targets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4187
          },
          "name": "healthCheckProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthchecktimeoutseconds"
            },
            "remarks": "The range is 2–120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is `lambda` , the default is 30 seconds.",
            "stability": "external",
            "summary": "The amount of time, in seconds, during which no response from a target means a failed health check."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4194
          },
          "name": "healthCheckTimeoutSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthythresholdcount"
            },
            "remarks": "The range is 2-10. If the target group protocol is TCP, TCP_UDP, UDP, TLS, HTTP or HTTPS, the default is 5. For target groups with a protocol of GENEVE, the default is 5. If the target type is `lambda` , the default is 5.",
            "stability": "external",
            "summary": "The number of consecutive health check successes required before considering a target healthy."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4201
          },
          "name": "healthyThresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-ipaddresstype"
            },
            "remarks": "The possible values are `ipv4` and `ipv6` . This is an optional parameter. If not specified, the IP address type defaults to `ipv4` .",
            "stability": "external",
            "summary": "The type of IP address used for this target group."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4208
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-matcher"
            },
            "remarks": "For target groups with a protocol of TCP, TCP_UDP, UDP or TLS the range is 200-599. For target groups with a protocol of HTTP or HTTPS, the range is 200-499. For target groups with a protocol of GENEVE, the range is 200-399.",
            "stability": "external",
            "summary": "[HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for a successful response from a target."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4215
          },
          "name": "matcher",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.MatcherProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-name"
            },
            "remarks": "This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.",
            "stability": "external",
            "summary": "The name of the target group."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4224
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-port"
            },
            "remarks": "This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply. If the protocol is GENEVE, the supported port is 6081.",
            "stability": "external",
            "summary": "The port on which the targets receive traffic."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4231
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocol"
            },
            "remarks": "For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. For Gateway Load Balancers, the supported protocol is GENEVE. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.",
            "stability": "external",
            "summary": "The protocol to use for routing traffic to the targets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4238
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocolversion"
            },
            "remarks": "The possible values are `GRPC` , `HTTP1` , and `HTTP2` .",
            "stability": "external",
            "summary": "[HTTP/HTTPS protocol] The protocol version."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4245
          },
          "name": "protocolVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattributes"
            },
            "stability": "external",
            "summary": "The attributes."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4259
          },
          "name": "targetGroupAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetGroupAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targets"
            },
            "stability": "external",
            "summary": "The targets."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4266
          },
          "name": "targets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetDescriptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targettype"
            },
            "remarks": "You can't specify targets for a target group using more than one target type.\n\n- `instance` - Register targets by instance ID. This is the default value.\n- `ip` - Register targets by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.\n- `lambda` - Register a single Lambda function as a target.\n- `alb` - Register a single Application Load Balancer as a target.",
            "stability": "external",
            "summary": "The type of target that you must specify when registering targets with this target group."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4278
          },
          "name": "targetType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-unhealthythresholdcount"
            },
            "remarks": "The range is 2-10. If the target group protocol is TCP, TCP_UDP, UDP, TLS, HTTP or HTTPS, the default is 2. For target groups with a protocol of GENEVE, the default is 2. If the target type is `lambda` , the default is 5.",
            "stability": "external",
            "summary": "The number of consecutive health check failures required before considering a target unhealthy."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4285
          },
          "name": "unhealthyThresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-vpcid"
            },
            "remarks": "If the target is a Lambda function, this parameter does not apply. Otherwise, this parameter is required.",
            "stability": "external",
            "summary": "The identifier of the virtual private cloud (VPC)."
          },
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4292
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnTargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.MatcherProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies the HTTP codes that healthy targets must use when responding to an HTTP health check.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst matcherProperty: elbv2.CfnTargetGroup.MatcherProperty = {\n  grpcCode: 'grpcCode',\n  httpCode: 'httpCode',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.MatcherProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 4378
      },
      "name": "MatcherProperty",
      "namespace": "CfnTargetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html#cfn-elasticloadbalancingv2-targetgroup-matcher-grpccode"
            },
            "remarks": "You can specify multiple values (for example, \"0,1\") or a range of values (for example, \"0-5\"). The default value is 12.",
            "stability": "external",
            "summary": "You can specify values between 0 and 99."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4384
          },
          "name": "grpcCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html#cfn-elasticloadbalancingv2-targetgroup-matcher-httpcode"
            },
            "remarks": "You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").\n\nFor Network Load Balancers, you can specify values between 200 and 599, with the default value being 200-399. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").\n\nFor Gateway Load Balancers, this must be \"200–399\".\n\nNote that when using shorthand syntax, some values such as commas need to be escaped.",
            "stability": "external",
            "summary": "For Application Load Balancers, you can specify values between 200 and 499, with the default value being 200."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4396
          },
          "name": "httpCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnTargetGroup.MatcherProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetDescriptionProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a target to add to a target group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetDescriptionProperty: elbv2.CfnTargetGroup.TargetDescriptionProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  port: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetDescriptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 4460
      },
      "name": "TargetDescriptionProperty",
      "namespace": "CfnTargetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html#cfn-elasticloadbalancingv2-targetgroup-targetdescription-id"
            },
            "remarks": "If the target type of the target group is `instance` , specify an instance ID. If the target type is `ip` , specify an IP address. If the target type is `lambda` , specify the ARN of the Lambda function. If the target type is `alb` , specify the ARN of the Application Load Balancer target.",
            "stability": "external",
            "summary": "The ID of the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4482
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html#cfn-elasticloadbalancingv2-targetgroup-targetdescription-availabilityzone"
            },
            "remarks": "This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.\n\nFor Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as `all` .\n\nThis parameter is not supported if the target type of the target group is `instance` or `alb` .\n\nIf the target type is `ip` and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.\n\nFor Application Load Balancer target groups with cross-zone load balancing off, if the target type is `ip` and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.\n\nIf the target type is `lambda` , this parameter is optional and the only supported value is `all` .",
            "stability": "external",
            "summary": "An Availability Zone or `all` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4476
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html#cfn-elasticloadbalancingv2-targetgroup-targetdescription-port"
            },
            "remarks": "If the target group protocol is GENEVE, the supported port is 6081. If the target type is `alb` , the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.",
            "stability": "external",
            "summary": "The port on which the target is listening."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4488
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnTargetGroup.TargetDescriptionProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetGroupAttributeProperty": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattribute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a target group attribute.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupAttributeProperty: elbv2.CfnTargetGroup.TargetGroupAttributeProperty = {\n  key: 'key',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetGroupAttributeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 4556
      },
      "name": "TargetGroupAttributeProperty",
      "namespace": "CfnTargetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattribute.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattribute-key"
            },
            "remarks": "The following attributes are supported by all load balancers:\n\n- `deregistration_delay.timeout_seconds` - The amount of time, in seconds, for Elastic Load Balancing to wait before changing the state of a deregistering target from `draining` to `unused` . The range is 0-3600 seconds. The default value is 300 seconds. If the target is a Lambda function, this attribute is not supported.\n- `stickiness.enabled` - Indicates whether target stickiness is enabled. The value is `true` or `false` . The default is `false` .\n- `stickiness.type` - Indicates the type of stickiness. The possible values are:\n\n- `lb_cookie` and `app_cookie` for Application Load Balancers.\n- `source_ip` for Network Load Balancers.\n- `source_ip_dest_ip` and `source_ip_dest_ip_proto` for Gateway Load Balancers.\n\nThe following attributes are supported by Application Load Balancers and Network Load Balancers:\n\n- `load_balancing.cross_zone.enabled` - Indicates whether cross zone load balancing is enabled. The value is `true` , `false` or `use_load_balancer_configuration` . The default is `use_load_balancer_configuration` .\n- `target_group_health.dns_failover.minimum_healthy_targets.count` - The minimum number of targets that must be healthy. If the number of healthy targets is below this value, mark the zone as unhealthy in DNS, so that traffic is routed only to healthy zones. The possible values are `off` or an integer from 1 to the maximum number of targets. The default is `off` .\n- `target_group_health.dns_failover.minimum_healthy_targets.percentage` - The minimum percentage of targets that must be healthy. If the percentage of healthy targets is below this value, mark the zone as unhealthy in DNS, so that traffic is routed only to healthy zones. The possible values are `off` or an integer from 1 to 100. The default is `off` .\n- `target_group_health.unhealthy_state_routing.minimum_healthy_targets.count` - The minimum number of targets that must be healthy. If the number of healthy targets is below this value, send traffic to all targets, including unhealthy targets. The possible values are 1 to the maximum number of targets. The default is 1.\n- `target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage` - The minimum percentage of targets that must be healthy. If the percentage of healthy targets is below this value, send traffic to all targets, including unhealthy targets. The possible values are `off` or an integer from 1 to 100. The default is `off` .\n\nThe following attributes are supported only if the load balancer is an Application Load Balancer and the target is an instance or an IP address:\n\n- `load_balancing.algorithm.type` - The load balancing algorithm determines how the load balancer selects targets when routing requests. The value is `round_robin` or `least_outstanding_requests` . The default is `round_robin` .\n- `slow_start.duration_seconds` - The time period, in seconds, during which a newly registered target receives an increasing share of the traffic to the target group. After this time period ends, the target receives its full share of traffic. The range is 30-900 seconds (15 minutes). The default is 0 seconds (disabled).\n- `stickiness.app_cookie.cookie_name` - Indicates the name of the application-based cookie. Names that start with the following prefixes are not allowed: `AWSALB` , `AWSALBAPP` , and `AWSALBTG` ; they're reserved for use by the load balancer.\n- `stickiness.app_cookie.duration_seconds` - The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the application-based cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).\n- `stickiness.lb_cookie.duration_seconds` - The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).\n\nThe following attribute is supported only if the load balancer is an Application Load Balancer and the target is a Lambda function:\n\n- `lambda.multi_value_headers.enabled` - Indicates whether the request and response headers that are exchanged between the load balancer and the Lambda function include arrays of values or strings. The value is `true` or `false` . The default is `false` . If the value is `false` and the request contains a duplicate header field name or query parameter key, the load balancer uses the last value sent by the client.\n\nThe following attributes are supported only by Network Load Balancers:\n\n- `deregistration_delay.connection_termination.enabled` - Indicates whether the load balancer terminates connections at the end of the deregistration timeout. The value is `true` or `false` . The default is `false` .\n- `preserve_client_ip.enabled` - Indicates whether client IP preservation is enabled. The value is `true` or `false` . The default is disabled if the target group type is IP address and the target group protocol is TCP or TLS. Otherwise, the default is enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP target groups.\n- `proxy_protocol_v2.enabled` - Indicates whether Proxy Protocol version 2 is enabled. The value is `true` or `false` . The default is `false` .\n\nThe following attributes are supported only by Gateway Load Balancers:\n\n- `target_failover.on_deregistration` - Indicates how the Gateway Load Balancer handles existing flows when a target is deregistered. The possible values are `rebalance` and `no_rebalance` . The default is `no_rebalance` . The two attributes ( `target_failover.on_deregistration` and `target_failover.on_unhealthy` ) can't be set independently. The value you set for both attributes must be the same.\n- `target_failover.on_unhealthy` - Indicates how the Gateway Load Balancer handles existing flows when a target is unhealthy. The possible values are `rebalance` and `no_rebalance` . The default is `no_rebalance` . The two attributes ( `target_failover.on_deregistration` and `target_failover.on_unhealthy` ) cannot be set independently. The value you set for both attributes must be the same.",
            "stability": "external",
            "summary": "The name of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4603
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattribute.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattribute-value"
            },
            "stability": "external",
            "summary": "The value of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 4609
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnTargetGroup.TargetGroupAttributeProperty"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroupProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTargetGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst cfnTargetGroupProps: elbv2.CfnTargetGroupProps = {\n  healthCheckEnabled: false,\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 'healthCheckPort',\n  healthCheckProtocol: 'healthCheckProtocol',\n  healthCheckTimeoutSeconds: 123,\n  healthyThresholdCount: 123,\n  ipAddressType: 'ipAddressType',\n  matcher: {\n    grpcCode: 'grpcCode',\n    httpCode: 'httpCode',\n  },\n  name: 'name',\n  port: 123,\n  protocol: 'protocol',\n  protocolVersion: 'protocolVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetGroupAttributes: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targets: [{\n    id: 'id',\n\n    // the properties below are optional\n    availabilityZone: 'availabilityZone',\n    port: 123,\n  }],\n  targetType: 'targetType',\n  unhealthyThresholdCount: 123,\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/elasticloadbalancingv2.generated.ts",
        "line": 3843
      },
      "name": "CfnTargetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckenabled"
            },
            "remarks": "If the target type is `lambda` , health checks are disabled by default but can be enabled. If the target type is `instance` , `ip` , or `alb` , health checks are always enabled and cannot be disabled.",
            "stability": "external",
            "summary": "Indicates whether health checks are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3850
          },
          "name": "healthCheckEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckintervalseconds"
            },
            "remarks": "The range is 5-300. If the target group protocol is TCP, TLS, UDP, TCP_UDP, HTTP or HTTPS, the default is 30 seconds. If the target group protocol is GENEVE, the default is 10 seconds. If the target type is `lambda` , the default is 35 seconds.",
            "stability": "external",
            "summary": "The approximate amount of time, in seconds, between health checks of an individual target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3857
          },
          "name": "healthCheckIntervalSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckpath"
            },
            "remarks": "[HTTP1 or HTTP2 protocol version] The ping path. The default is /.\n\n[GRPC protocol version] The path of a custom health check method with the format /package.service/method. The default is / AWS .ALB/healthcheck.",
            "stability": "external",
            "summary": "[HTTP/HTTPS health checks] The destination for health checks on the targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3868
          },
          "name": "healthCheckPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckport"
            },
            "remarks": "If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP, the default is `traffic-port` , which is the port on which each target receives traffic from the load balancer. If the protocol is GENEVE, the default is port 80.",
            "stability": "external",
            "summary": "The port the load balancer uses when performing health checks on targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3875
          },
          "name": "healthCheckPort",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckprotocol"
            },
            "remarks": "For Application Load Balancers, the default is HTTP. For Network Load Balancers and Gateway Load Balancers, the default is TCP. The TCP protocol is not supported for health checks if the protocol of the target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health checks.",
            "stability": "external",
            "summary": "The protocol the load balancer uses when performing health checks on targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3882
          },
          "name": "healthCheckProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthchecktimeoutseconds"
            },
            "remarks": "The range is 2–120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is `lambda` , the default is 30 seconds.",
            "stability": "external",
            "summary": "The amount of time, in seconds, during which no response from a target means a failed health check."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3889
          },
          "name": "healthCheckTimeoutSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthythresholdcount"
            },
            "remarks": "The range is 2-10. If the target group protocol is TCP, TCP_UDP, UDP, TLS, HTTP or HTTPS, the default is 5. For target groups with a protocol of GENEVE, the default is 5. If the target type is `lambda` , the default is 5.",
            "stability": "external",
            "summary": "The number of consecutive health check successes required before considering a target healthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3896
          },
          "name": "healthyThresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-ipaddresstype"
            },
            "remarks": "The possible values are `ipv4` and `ipv6` . This is an optional parameter. If not specified, the IP address type defaults to `ipv4` .",
            "stability": "external",
            "summary": "The type of IP address used for this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3903
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-matcher"
            },
            "remarks": "For target groups with a protocol of TCP, TCP_UDP, UDP or TLS the range is 200-599. For target groups with a protocol of HTTP or HTTPS, the range is 200-499. For target groups with a protocol of GENEVE, the range is 200-399.",
            "stability": "external",
            "summary": "[HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for a successful response from a target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3910
          },
          "name": "matcher",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.MatcherProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-name"
            },
            "remarks": "This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.",
            "stability": "external",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3919
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-port"
            },
            "remarks": "This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply. If the protocol is GENEVE, the supported port is 6081.",
            "stability": "external",
            "summary": "The port on which the targets receive traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3926
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocol"
            },
            "remarks": "For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. For Gateway Load Balancers, the supported protocol is GENEVE. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.",
            "stability": "external",
            "summary": "The protocol to use for routing traffic to the targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3933
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocolversion"
            },
            "remarks": "The possible values are `GRPC` , `HTTP1` , and `HTTP2` .",
            "stability": "external",
            "summary": "[HTTP/HTTPS protocol] The protocol version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3940
          },
          "name": "protocolVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3947
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattributes"
            },
            "stability": "external",
            "summary": "The attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3954
          },
          "name": "targetGroupAttributes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetGroupAttributeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targets"
            },
            "stability": "external",
            "summary": "The targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3961
          },
          "name": "targets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup.TargetDescriptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targettype"
            },
            "remarks": "You can't specify targets for a target group using more than one target type.\n\n- `instance` - Register targets by instance ID. This is the default value.\n- `ip` - Register targets by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.\n- `lambda` - Register a single Lambda function as a target.\n- `alb` - Register a single Application Load Balancer as a target.",
            "stability": "external",
            "summary": "The type of target that you must specify when registering targets with this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3973
          },
          "name": "targetType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-unhealthythresholdcount"
            },
            "remarks": "The range is 2-10. If the target group protocol is TCP, TCP_UDP, UDP, TLS, HTTP or HTTPS, the default is 2. For target groups with a protocol of GENEVE, the default is 2. If the target type is `lambda` , the default is 5.",
            "stability": "external",
            "summary": "The number of consecutive health check failures required before considering a target unhealthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3980
          },
          "name": "unhealthyThresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-vpcid"
            },
            "remarks": "If the target is a Lambda function, this parameter does not apply. Otherwise, this parameter is required.",
            "stability": "external",
            "summary": "The identifier of the virtual private cloud (VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/elasticloadbalancingv2.generated.ts",
            "line": 3987
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/elasticloadbalancingv2.generated:CfnTargetGroupProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ContentType": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "deprecated": "superceded by `FixedResponseOptions`.",
        "stability": "deprecated",
        "summary": "The content type for a fixed response.",
        "example": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ContentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alb/application-listener-rule.ts",
        "line": 123
      },
      "members": [
        {
          "docs": {
            "stability": "deprecated"
          },
          "name": "TEXT_PLAIN"
        },
        {
          "docs": {
            "stability": "deprecated"
          },
          "name": "TEXT_CSS"
        },
        {
          "docs": {
            "stability": "deprecated"
          },
          "name": "TEXT_HTML"
        },
        {
          "docs": {
            "stability": "deprecated"
          },
          "name": "APPLICATION_JAVASCRIPT"
        },
        {
          "docs": {
            "stability": "deprecated"
          },
          "name": "APPLICATION_JSON"
        }
      ],
      "name": "ContentType",
      "symbolId": "lib/alb/application-listener-rule:ContentType"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "deprecated": "superceded by `ListenerAction.fixedResponse()`.",
        "stability": "deprecated",
        "summary": "A fixed response.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst fixedResponse: elbv2.FixedResponse = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  contentType: elbv2.ContentType.TEXT_PLAIN,\n  messageBody: 'messageBody',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-rule.ts",
        "line": 135
      },
      "name": "FixedResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The HTTP response code (2XX, 4XX or 5XX)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 139
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "text/plain",
            "stability": "deprecated",
            "summary": "The content type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 146
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ContentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no message",
            "stability": "deprecated",
            "summary": "The message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 153
          },
          "name": "messageBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-rule:FixedResponse"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `ListenerAction.fixedResponse()`.",
        "example": "declare const listener: elbv2.ApplicationListener;\n\nlistener.addAction('Fixed', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.pathPatterns(['/ok']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, {\n    contentType: elbv2.ContentType.TEXT_PLAIN,\n    messageBody: 'OK',\n  })\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 237
      },
      "name": "FixedResponseOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically determined",
            "remarks": "Valid Values: text/plain | text/css | text/html | application/javascript | application/json",
            "stability": "stable",
            "summary": "Content Type of the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 245
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No body",
            "stability": "stable",
            "summary": "The response body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 252
          },
          "name": "messageBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-action:FixedResponseOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ForwardOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `ListenerAction.forward()`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\nconst forwardOptions: elbv2.ForwardOptions = {\n  stickinessDuration: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ForwardOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 204
      },
      "name": "ForwardOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No stickiness",
            "remarks": "Range between 1 second and 7 days.",
            "stability": "stable",
            "summary": "For how long clients should be directed to the same target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 212
          },
          "name": "stickinessDuration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-action:ForwardOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for configuring a health check.",
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});\n\nloadBalancedFargateService.targetGroup.configureHealthCheck({\n  path: \"/custom-health-path\",\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 68
      },
      "name": "HealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Determined automatically.",
            "remarks": "If the target type is lambda,\nhealth checks are disabled by default but can be enabled. If the target type\nis instance or ip, health checks are always enabled and cannot be disabled.",
            "stability": "stable",
            "summary": "Indicates whether health checks are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 77
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 12",
            "remarks": "You can specify values between 0 and 99. You can specify multiple values\n(for example, \"0,1\") or a range of values (for example, \"0-5\").",
            "stability": "stable",
            "summary": "GRPC code to use when checking for a successful response from a target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 148
          },
          "name": "healthyGrpcCodes",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For Application Load Balancers, you can specify values between 200 and\n499, and the default value is 200. You can specify multiple values (for\nexample, \"200,202\") or a range of values (for example, \"200-299\").",
            "stability": "stable",
            "summary": "HTTP code to use when checking for a successful response from a target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 157
          },
          "name": "healthyHttpCodes",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "5 for ALBs, 3 for NLBs",
            "remarks": "For Application Load Balancers, the default is 5. For Network Load Balancers, the default is 3.",
            "stability": "stable",
            "summary": "The number of consecutive health checks successes required before considering an unhealthy target healthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 128
          },
          "name": "healthyThresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "stability": "stable",
            "summary": "The approximate number of seconds between health checks for an individual target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 84
          },
          "name": "interval",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The ping path destination where Elastic Load Balancing sends health check requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 91
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'traffic-port'",
            "stability": "stable",
            "summary": "The port that the load balancer uses when performing health checks on the targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 98
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HTTP for ALBs, TCP for NLBs",
            "remarks": "The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP.\nThe TLS, UDP, and TCP_UDP protocols are not supported for health checks.",
            "stability": "stable",
            "summary": "The protocol the load balancer uses when performing health checks on targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 108
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5) for ALBs, Duration.seconds(10) or Duration.seconds(6) for NLBs",
            "remarks": "For Application Load Balancers, the range is 2-60 seconds and the\ndefault is 5 seconds. For Network Load Balancers, this is 10 seconds for\nTCP and HTTPS health checks and 6 seconds for HTTP health checks.",
            "stability": "stable",
            "summary": "The amount of time, in seconds, during which no response from a target means a failed health check."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 119
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "remarks": "For Application Load Balancers, the default is 2. For Network Load\nBalancers, this value must be the same as the healthy threshold count.",
            "stability": "stable",
            "summary": "The number of consecutive health check failures required before considering a target unhealthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 138
          },
          "name": "unhealthyThresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/shared/base-target-group:HealthCheck"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeElb": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "remarks": "This count does not include any response codes generated by the targets.",
        "stability": "stable",
        "summary": "Count of HTTP status originating from the load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeElb",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 425
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of HTTP 3XX redirection codes that originate from the load balancer."
          },
          "name": "ELB_3XX_COUNT"
        },
        {
          "docs": {
            "remarks": "Client errors are generated when requests are malformed or incomplete.\nThese requests have not been received by the target. This count does not\ninclude any response codes generated by the targets.",
            "stability": "stable",
            "summary": "The number of HTTP 4XX client error codes that originate from the load balancer."
          },
          "name": "ELB_4XX_COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of HTTP 5XX server error codes that originate from the load balancer."
          },
          "name": "ELB_5XX_COUNT"
        }
      ],
      "name": "HttpCodeElb",
      "symbolId": "lib/alb/application-load-balancer:HttpCodeElb"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeTarget": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Count of HTTP status originating from the targets."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HttpCodeTarget",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 449
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of 2xx response codes from targets."
          },
          "name": "TARGET_2XX_COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of 3xx response codes from targets."
          },
          "name": "TARGET_3XX_COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of 4xx response codes from targets."
          },
          "name": "TARGET_4XX_COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of 5xx response codes from targets."
          },
          "name": "TARGET_5XX_COUNT"
        }
      ],
      "name": "HttpCodeTarget",
      "symbolId": "lib/alb/application-load-balancer:HttpCodeTarget"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Properties to reference an existing listener."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener.ts",
        "line": 466
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This allows full control of the default action of the load balancer,\nincluding Action chaining, fixed responses and redirect responses. See\nthe `ListenerAction` class for all options.\n\nIt's possible to add routing conditions to the Action added in this way.\n\nIt is not possible to add a default action to an imported IApplicationListener.\nIn order to add actions to an imported IApplicationListener a `priority`\nmust be provided.",
            "stability": "stable",
            "summary": "Perform the given action on incoming requests."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 525
          },
          "name": "addAction",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationActionProps"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `addCertificates()`",
            "stability": "deprecated",
            "summary": "Add one or more certificates to this listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 477
          },
          "name": "addCertificateArns",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arns",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add one or more certificates to this listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 482
          },
          "name": "addCertificates",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "certificates",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It's possible to add conditions to the TargetGroups added in this way.\nAt least one TargetGroup must be added without conditions.",
            "stability": "stable",
            "summary": "Load balance incoming requests to the given target groups."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 490
          },
          "name": "addTargetGroups",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This method implicitly creates an ApplicationTargetGroup for the targets\ninvolved.\n\nIt's possible to add conditions to the targets added in this way. At least\none set of targets must be added without conditions.",
            "returns": "The newly created target group",
            "stability": "stable",
            "summary": "Load balance incoming requests to the given load balancing targets."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 503
          },
          "name": "addTargets",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly. It is called by ApplicationTargetGroup.",
            "stability": "stable",
            "summary": "Register that a connectable that has been added to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 510
          },
          "name": "registerConnectable",
          "parameters": [
            {
              "name": "connectable",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            }
          ]
        }
      ],
      "name": "IApplicationListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener.ts",
            "line": 471
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener:IApplicationListener"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "An application load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-load-balancer.ts",
        "line": 474
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a new listener to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 503
          },
          "name": "addListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
            }
          }
        }
      ],
      "name": "IApplicationLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This list is only valid for owned constructs.",
            "stability": "stable",
            "summary": "A list of listeners that have been added to the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 498
          },
          "name": "listeners",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 478
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "IpAddressType.IPV4",
            "stability": "stable",
            "summary": "The IP Address Type for this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 492
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IpAddressType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this interface is the result of an import call to fromApplicationLoadBalancerAttributes,\nthe vpc attribute will be undefined unless specified in the optional properties of that method.",
            "stability": "stable",
            "summary": "The VPC this load balancer has been created in (if available)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-load-balancer.ts",
            "line": 485
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/alb/application-load-balancer:IApplicationLoadBalancer"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for constructs that can be targets of an application load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-target-group.ts",
        "line": 497
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "May return JSON to directly add to the [Targets] list, or return undefined\nif the target will register itself with the load balancer.",
            "stability": "stable",
            "summary": "Attach load-balanced target to a TargetGroup."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 504
          },
          "name": "attachToApplicationTargetGroup",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        }
      ],
      "name": "IApplicationLoadBalancerTarget",
      "symbolId": "lib/alb/application-target-group:IApplicationLoadBalancerTarget"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "A Target Group for Application Load Balancers."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-target-group.ts",
        "line": 449
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a load balancing target to this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 467
          },
          "name": "addTarget",
          "parameters": [
            {
              "name": "targets",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly. It will be called by load balancing targets.",
            "stability": "stable",
            "summary": "Register a connectable as a member of this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 462
          },
          "name": "registerConnectable",
          "parameters": [
            {
              "name": "connectable",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly. It will be called by listeners.",
            "stability": "stable",
            "summary": "Register a listener that is load balancing to this target group."
          },
          "locationInModule": {
            "filename": "lib/alb/application-target-group.ts",
            "line": 455
          },
          "name": "registerListener",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
              }
            },
            {
              "name": "associatingConstruct",
              "optional": true,
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "IApplicationTargetGroup",
      "symbolId": "lib/alb/application-target-group:IApplicationTargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IListenerAction": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for listener actions."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/listener-action.ts",
        "line": 6
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the actions in this chain."
          },
          "locationInModule": {
            "filename": "lib/shared/listener-action.ts",
            "line": 10
          },
          "name": "renderActions",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IListenerAction",
      "symbolId": "lib/shared/listener-action:IListenerAction"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "A certificate source for an ELBv2 listener."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/listener-certificate.ts",
        "line": 6
      },
      "name": "IListenerCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the certificate to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/listener-certificate.ts",
            "line": 10
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/shared/listener-certificate:IListenerCertificate"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-load-balancer.ts",
        "line": 52
      },
      "name": "ILoadBalancerV2",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `Z2P70J7EXAMPLE`",
            "stability": "stable",
            "summary": "The canonical hosted zone ID of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 60
          },
          "name": "loadBalancerCanonicalHostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Example value: `my-load-balancer-424835706.us-west-2.elb.amazonaws.com`",
            "stability": "stable",
            "summary": "The DNS name of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-load-balancer.ts",
            "line": 69
          },
          "name": "loadBalancerDnsName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/shared/base-load-balancer:ILoadBalancerV2"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Properties to reference an existing listener."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 314
      },
      "name": "INetworkListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 319
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:INetworkListener"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.INetworkListenerCertificateProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "deprecated": "Use IListenerCertificate instead",
        "remarks": "This interface exists for backwards compatibility.",
        "stability": "deprecated",
        "summary": "Properties for adding a certificate to a listener."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListenerCertificateProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 89
      },
      "name": "INetworkListenerCertificateProps",
      "symbolId": "lib/nlb/network-listener:INetworkListenerCertificateProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "A network load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
        "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-load-balancer.ts",
        "line": 253
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "returns": "The newly created listener",
            "stability": "stable",
            "summary": "Add a listener to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 265
          },
          "name": "addListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener"
            }
          }
        }
      ],
      "name": "INetworkLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC this load balancer has been created in (if available)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 258
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/nlb/network-load-balancer:INetworkLoadBalancer"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for constructs that can be targets of an network load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-target-group.ts",
        "line": 260
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "May return JSON to directly add to the [Targets] list, or return undefined\nif the target will register itself with the load balancer.",
            "stability": "stable",
            "summary": "Attach load-balanced target to a TargetGroup."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 267
          },
          "name": "attachToNetworkTargetGroup",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        }
      ],
      "name": "INetworkLoadBalancerTarget",
      "symbolId": "lib/nlb/network-target-group:INetworkLoadBalancerTarget"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "A network target group."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-target-group.ts",
        "line": 225
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a load balancing target to this target group."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 236
          },
          "name": "addTarget",
          "parameters": [
            {
              "name": "targets",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly. It will be called by listeners.",
            "stability": "stable",
            "summary": "Register a listener that is load balancing to this target group."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 231
          },
          "name": "registerListener",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
              }
            }
          ]
        }
      ],
      "name": "INetworkTargetGroup",
      "symbolId": "lib/nlb/network-target-group:INetworkTargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "A target group."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup",
      "interfaces": [
        "@aws-cdk/core.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 393
      },
      "name": "ITargetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A token representing a list of ARNs of the load balancers that route traffic to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 407
          },
          "name": "loadBalancerArns",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return an object to depend on the listeners added to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 412
          },
          "name": "loadBalancerAttached",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 402
          },
          "name": "targetGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 397
          },
          "name": "targetGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/shared/base-target-group:ITargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.InstanceTarget": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "custom": {
          "aws-cdk": "/aws-elasticloadbalancingv2-targets package instead.",
          "exampleMetadata": "fixture=_generated"
        },
        "deprecated": "Use IpTarget from the",
        "remarks": "If you register a target of this type, you are responsible for making\nsure the load balancer's security group can connect to the instance.",
        "stability": "deprecated",
        "summary": "An EC2 instance that is the target for load balancing.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst instanceTarget = new elbv2.InstanceTarget('instanceId', /* all optional props */ 123);"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.InstanceTarget",
      "initializer": {
        "docs": {
          "stability": "deprecated",
          "summary": "Create a new Instance target."
        },
        "locationInModule": {
          "filename": "lib/shared/load-balancer-targets.ts",
          "line": 21
        },
        "parameters": [
          {
            "docs": {
              "summary": "Instance ID of the instance to register to."
            },
            "name": "instanceId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Override the default port for the target group."
            },
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/shared/load-balancer-targets.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "remarks": "Don't call this, it is called automatically when you add the target to a\nload balancer.",
            "stability": "deprecated",
            "summary": "Register this instance target with a load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/load-balancer-targets.ts",
            "line": 30
          },
          "name": "attachToApplicationTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this, it is called automatically when you add the target to a\nload balancer.",
            "stability": "deprecated",
            "summary": "Register this instance target with a load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/load-balancer-targets.ts",
            "line": 40
          },
          "name": "attachToNetworkTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        }
      ],
      "name": "InstanceTarget",
      "symbolId": "lib/shared/load-balancer-targets:InstanceTarget"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IpAddressType": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "What kind of addresses to allocate to the load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IpAddressType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allocate IPv4 addresses."
          },
          "name": "IPV4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allocate both IPv4 and IPv6 addresses."
          },
          "name": "DUAL_STACK"
        }
      ],
      "name": "IpAddressType",
      "symbolId": "lib/shared/enums:IpAddressType"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.IpTarget": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "custom": {
          "aws-cdk": "/aws-elasticloadbalancingv2-targets package instead.",
          "exampleMetadata": "fixture=_generated"
        },
        "deprecated": "Use IpTarget from the",
        "remarks": "Specify IP addresses from the subnets of the virtual private cloud (VPC) for\nthe target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and\n192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify\npublicly routable IP addresses.\n\nIf you register a target of this type, you are responsible for making\nsure the load balancer's security group can send packets to the IP address.",
        "stability": "deprecated",
        "summary": "An IP address that is a target for load balancing.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst ipTarget = new elbv2.IpTarget('ipAddress', /* all optional props */ 123, /* all optional props */ 'availabilityZone');"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IpTarget",
      "initializer": {
        "docs": {
          "remarks": "The availabilityZone parameter determines whether the target receives\ntraffic from the load balancer nodes in the specified Availability Zone\nor from all enabled Availability Zones for the load balancer.\n\nThis parameter is not supported if the target type of the target group\nis instance. If the IP address is in a subnet of the VPC for the target\ngroup, the Availability Zone is automatically detected and this\nparameter is optional. If the IP address is outside the VPC, this\nparameter is required.\n\nWith an Application Load Balancer, if the IP address is outside the VPC\nfor the target group, the only supported value is all.\n\nDefault is automatic.",
          "stability": "deprecated",
          "summary": "Create a new IPAddress target."
        },
        "locationInModule": {
          "filename": "lib/shared/load-balancer-targets.ts",
          "line": 88
        },
        "parameters": [
          {
            "docs": {
              "summary": "The IP Address to load balance to."
            },
            "name": "ipAddress",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Override the group's default port."
            },
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          },
          {
            "docs": {
              "summary": "Availability zone to send traffic from."
            },
            "name": "availabilityZone",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/shared/load-balancer-targets.ts",
        "line": 65
      },
      "methods": [
        {
          "docs": {
            "remarks": "Don't call this, it is called automatically when you add the target to a\nload balancer.",
            "stability": "deprecated",
            "summary": "Register this instance target with a load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/load-balancer-targets.ts",
            "line": 97
          },
          "name": "attachToApplicationTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this, it is called automatically when you add the target to a\nload balancer.",
            "stability": "deprecated",
            "summary": "Register this instance target with a load balancer."
          },
          "locationInModule": {
            "filename": "lib/shared/load-balancer-targets.ts",
            "line": 107
          },
          "name": "attachToNetworkTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        }
      ],
      "name": "IpTarget",
      "symbolId": "lib/shared/load-balancer-targets:IpTarget"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "remarks": "Some actions can be combined with other ones (specifically,\nyou can perform authentication before serving the request).\n\nMultiple actions form a linked chain; the chain must always terminate in a\n*(weighted)forward*, *fixedResponse* or *redirect* action.\n\nIf an action supports chaining, the next action can be indicated\nby passing it in the `next` property.\n\n(Called `ListenerAction` instead of the more strictly correct\n`ListenerAction` because this is the class most users interact\nwith, and we want to make it not too visually overwhelming).",
        "stability": "stable",
        "summary": "What to do when a client makes a request to a listener.",
        "example": "declare const listener: elbv2.ApplicationListener;\ndeclare const myTargetGroup: elbv2.ApplicationTargetGroup;\n\nlistener.addAction('DefaultAction', {\n  action: elbv2.ListenerAction.authenticateOidc({\n    authorizationEndpoint: 'https://example.com/openid',\n    // Other OIDC properties here\n    clientId: '...',\n    clientSecret: SecretValue.secretsManager('...'),\n    issuer: '...',\n    tokenEndpoint: '...',\n    userInfoEndpoint: '...',\n\n    // Next\n    next: elbv2.ListenerAction.forward([myTargetGroup]),\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
      "initializer": {
        "docs": {
          "remarks": "The default class should be good enough for most cases and\nshould be created by using one of the static factory functions,\nbut allow overriding to make sure we allow flexibility for the future.",
          "stability": "stable",
          "summary": "Create an instance of ListenerAction."
        },
        "locationInModule": {
          "filename": "lib/alb/application-listener-action.ts",
          "line": 165
        },
        "parameters": [
          {
            "name": "actionJson",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
            }
          },
          {
            "name": "next",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IListenerAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-authenticate-users.html#oidc-requirements",
            "stability": "stable",
            "summary": "Authenticate using an identity provider (IdP) that is compliant with OpenID Connect (OIDC)."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 33
          },
          "name": "authenticateOidc",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AuthenticateOidcOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#fixed-response-actions",
            "stability": "stable",
            "summary": "Return a fixed response."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 108
          },
          "name": "fixedResponse",
          "parameters": [
            {
              "name": "statusCode",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#forward-actions",
            "stability": "stable",
            "summary": "Forward to one or more Target Groups."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 57
          },
          "name": "forward",
          "parameters": [
            {
              "name": "targetGroups",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ForwardOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "A URI consists of the following components:\nprotocol://hostname:port/path?query. You must modify at least one of the\nfollowing components to avoid a redirect loop: protocol, hostname, port, or\npath. Any components that you do not modify retain their original values.\n\nYou can reuse URI components using the following reserved keywords:\n\n- `#{protocol}`\n- `#{host}`\n- `#{port}`\n- `#{path}` (the leading \"/\" is removed)\n- `#{query}`\n\nFor example, you can change the path to \"/new/#{path}\", the hostname to\n\"example.#{host}\", or the query to \"#{query}&value=xyz\".",
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#redirect-actions",
            "stability": "stable",
            "summary": "Redirect to a different URI."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 140
          },
          "name": "redirect",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#forward-actions",
            "stability": "stable",
            "summary": "Forward to one or more Target Groups which are weighted differently."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 86
          },
          "name": "weightedForward",
          "parameters": [
            {
              "name": "targetGroups",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.WeightedTargetGroup"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ForwardOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the action is being used in a listener."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 178
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
              }
            },
            {
              "name": "associatingConstruct",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the actions in this chain."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 171
          },
          "name": "renderActions",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IListenerAction",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "We don't number for 0 or 1 elements, but otherwise number them 1...#actions\nso ELB knows about the right order.\n\nDo this in `ListenerAction` instead of in `Listener` so that we give\nusers the opportunity to override by subclassing and overriding `renderActions`.",
            "stability": "stable",
            "summary": "Renumber the \"order\" fields in the actions array."
          },
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 194
          },
          "name": "renumber",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ListenerAction",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 165
          },
          "name": "next",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-action:ListenerAction"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "A certificate source for an ELBv2 listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst listenerCertificate = elbv2.ListenerCertificate.fromArn('certificateArn');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/shared/listener-certificate.ts",
          "line": 36
        },
        "parameters": [
          {
            "name": "certificateArn",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/shared/listener-certificate.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use any certificate, identified by its ARN, as a listener certificate."
          },
          "locationInModule": {
            "filename": "lib/shared/listener-certificate.ts",
            "line": 27
          },
          "name": "fromArn",
          "parameters": [
            {
              "name": "certificateArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an ACM certificate as a listener certificate."
          },
          "locationInModule": {
            "filename": "lib/shared/listener-certificate.ts",
            "line": 20
          },
          "name": "fromCertificateManager",
          "parameters": [
            {
              "name": "acmCertificate",
              "type": {
                "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCertificate"
            }
          },
          "static": true
        }
      ],
      "name": "ListenerCertificate",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the certificate to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/listener-certificate.ts",
            "line": 34
          },
          "name": "certificateArn",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/shared/listener-certificate:ListenerCertificate"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "ListenerCondition providers definition.",
        "example": "declare const listener: elbv2.ApplicationListener;\ndeclare const asg: autoscaling.AutoScalingGroup;\n\nlistener.addTargets('Example.Com Fleet', {\n  priority: 10,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n    elbv2.ListenerCondition.pathPatterns(['/ok', '/path']),\n  ],\n  port: 8080,\n  targets: [asg]\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alb/conditions.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a host-header listener rule condition."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 10
          },
          "name": "hostHeaders",
          "parameters": [
            {
              "docs": {
                "summary": "Hosts for host headers."
              },
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a http-header listener rule condition."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 20
          },
          "name": "httpHeader",
          "parameters": [
            {
              "docs": {
                "summary": "HTTP header name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "HTTP header values."
              },
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a http-request-method listener rule condition."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 29
          },
          "name": "httpRequestMethods",
          "parameters": [
            {
              "docs": {
                "summary": "HTTP request methods."
              },
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a path-pattern listener rule condition."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 38
          },
          "name": "pathPatterns",
          "parameters": [
            {
              "docs": {
                "summary": "Path patterns."
              },
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a query-string listener rule condition."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 47
          },
          "name": "queryStrings",
          "parameters": [
            {
              "docs": {
                "summary": "Query string key/value pairs."
              },
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.QueryStringCondition"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a source-ip listener rule condition."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 56
          },
          "name": "sourceIps",
          "parameters": [
            {
              "docs": {
                "summary": "Source ips."
              },
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ListenerCondition"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the raw Cfn listener rule condition object."
          },
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 63
          },
          "name": "renderRawCondition",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ListenerCondition",
      "symbolId": "lib/alb/conditions:ListenerCondition"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Result of attaching a target to load balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const targetJson: any;\nconst loadBalancerTargetProps: elbv2.LoadBalancerTargetProps = {\n  targetType: elbv2.TargetType.INSTANCE,\n\n  // the properties below are optional\n  targetJson: targetJson,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 418
      },
      "name": "LoadBalancerTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What kind of target this is."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 422
          },
          "name": "targetType",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "May be omitted if the target is going to register itself later.",
            "stability": "stable",
            "summary": "JSON representing the target's direct addition to the TargetGroup list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 429
          },
          "name": "targetJson",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/shared/base-target-group:LoadBalancerTargetProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `NetworkListenerAction.forward()`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\nconst networkForwardOptions: elbv2.NetworkForwardOptions = {\n  stickinessDuration: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener-action.ts",
        "line": 116
      },
      "name": "NetworkForwardOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No stickiness",
            "remarks": "Range between 1 second and 7 days.",
            "stability": "stable",
            "summary": "For how long clients should be directed to the same target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 124
          },
          "name": "stickinessDuration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener-action:NetworkForwardOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/aws-elasticloadbalancingv2.BaseListener",
      "docs": {
        "custom": {
          "resource": "AWS::ElasticLoadBalancingV2::Listener",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Define a Network Listener.",
        "example": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nlb/network-listener.ts",
          "line": 174
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Looks up a network listener."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 122
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing listener."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 151
          },
          "name": "fromNetworkListenerArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "networkListenerArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This allows full control of the default Action of the load balancer,\nincluding weighted forwarding. See the `NetworkListenerAction` class for\nall options.",
            "stability": "stable",
            "summary": "Perform the given Action on incoming requests."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 261
          },
          "name": "addAction",
          "parameters": [
            {
              "name": "_id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkActionProps"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "After the first certificate, this creates NetworkListenerCertificates\nresources since cloudformation requires the certificates array on the\nlistener resource to have a length of 1.",
            "stability": "stable",
            "summary": "Add one or more certificates to this listener."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 228
          },
          "name": "addCertificates",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "certificates",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IListenerCertificate"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "All target groups will be load balanced to with equal weight and without\nstickiness. For a more complex configuration than that, use `addAction()`.",
            "stability": "stable",
            "summary": "Load balance incoming requests to the given target groups."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 250
          },
          "name": "addTargetGroups",
          "parameters": [
            {
              "name": "_id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "targetGroups",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This method implicitly creates a NetworkTargetGroup for the targets\ninvolved, and a 'forward' action to route traffic to the given TargetGroup.\n\nIf you want more control over the precise setup, create the TargetGroup\nand use `addAction` yourself.\n\nIt's possible to add conditions to the targets added in this way. At least\none set of targets must be added without conditions.",
            "returns": "The newly created target group",
            "stability": "stable",
            "summary": "Load balance incoming requests to the given load balancing targets."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 279
          },
          "name": "addTargets",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup"
            }
          }
        }
      ],
      "name": "NetworkListener",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The load balancer this listener is attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 162
          },
          "name": "loadBalancer",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:NetworkListener"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "remarks": "Some actions can be combined with other ones (specifically,\nyou can perform authentication before serving the request).\n\nMultiple actions form a linked chain; the chain must always terminate in a\n*(weighted)forward*, *fixedResponse* or *redirect* action.\n\nIf an action supports chaining, the next action can be indicated\nby passing it in the `next` property.",
        "stability": "stable",
        "summary": "What to do when a client makes a request to a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\nconst networkListenerAction = elbv2.NetworkListenerAction.forward([networkTargetGroup], /* all optional props */ {\n  stickinessDuration: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction",
      "initializer": {
        "docs": {
          "remarks": "The default class should be good enough for most cases and\nshould be created by using one of the static factory functions,\nbut allow overriding to make sure we allow flexibility for the future.",
          "stability": "stable",
          "summary": "Create an instance of NetworkListenerAction."
        },
        "locationInModule": {
          "filename": "lib/nlb/network-listener-action.ts",
          "line": 78
        },
        "parameters": [
          {
            "name": "actionJson",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
            }
          },
          {
            "name": "next",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IListenerAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nlb/network-listener-action.ts",
        "line": 23
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Forward to one or more Target Groups."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 27
          },
          "name": "forward",
          "parameters": [
            {
              "name": "targetGroups",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Forward to one or more Target Groups which are weighted differently."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 54
          },
          "name": "weightedForward",
          "parameters": [
            {
              "name": "targetGroups",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkWeightedTargetGroup"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkForwardOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the action is being used in a listener."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 91
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the actions in this chain."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 84
          },
          "name": "renderActions",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IListenerAction",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "remarks": "We don't number for 0 or 1 elements, but otherwise number them 1...#actions\nso ELB knows about the right order.\n\nDo this in `NetworkListenerAction` instead of in `Listener` so that we give\nusers the opportunity to override by subclassing and overriding `renderActions`.",
            "stability": "stable",
            "summary": "Renumber the \"order\" fields in the actions array."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 106
          },
          "name": "renumber",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener.ActionProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "NetworkListenerAction",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 78
          },
          "name": "next",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerAction"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener-action:NetworkListenerAction"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for looking up a network listener.",
        "example": "const listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerLookupOptions",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseListenerLookupOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 105
      },
      "name": "NetworkListenerLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- listener is not filtered by protocol",
            "stability": "stable",
            "summary": "Protocol of the listener port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 110
          },
          "name": "listenerProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:NetworkListenerLookupOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Network Listener attached to a Load Balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const listenerCertificate: elbv2.ListenerCertificate;\ndeclare const networkListenerAction: elbv2.NetworkListenerAction;\ndeclare const networkLoadBalancer: elbv2.NetworkLoadBalancer;\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\nconst networkListenerProps: elbv2.NetworkListenerProps = {\n  loadBalancer: networkLoadBalancer,\n  port: 123,\n\n  // the properties below are optional\n  alpnPolicy: elbv2.AlpnPolicy.HTTP1_ONLY,\n  certificates: [listenerCertificate],\n  defaultAction: networkListenerAction,\n  defaultTargetGroups: [networkTargetGroup],\n  protocol: elbv2.Protocol.HTTP,\n  sslPolicy: elbv2.SslPolicy.RECOMMENDED,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener.ts",
        "line": 95
      },
      "name": "NetworkListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The load balancer to attach this listener to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener.ts",
            "line": 99
          },
          "name": "loadBalancer",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener:NetworkListenerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer",
      "docs": {
        "custom": {
          "resource": "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Define a new network load balancer.",
        "example": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nlb/network-load-balancer.ts",
          "line": 106
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nlb/network-load-balancer.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Looks up the network load balancer."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 70
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 79
          },
          "name": "fromNetworkLoadBalancerAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "The newly created listener",
            "stability": "stable",
            "summary": "Add a listener to this load balancer."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 119
          },
          "name": "addListener",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "Return the given named metric for this Network Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 131
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "remarks": "This metric includes connections in the SYN_SENT and ESTABLISHED states.\nTCP connections are not terminated at the load balancer, so a client\nopening a TCP connection to a target counts as a single flow.",
            "stability": "stable",
            "summary": "The total number of concurrent TCP flows (or connections) from clients to targets."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 149
          },
          "name": "metricActiveFlowCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The number of load balancer capacity units (LCU) used by your load balancer."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 158
          },
          "name": "metricConsumedLCUs",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "deprecated": "use ``NetworkTargetGroup.metricHealthyHostCount`` instead",
            "stability": "deprecated",
            "summary": "The number of targets that are considered healthy."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 171
          },
          "name": "metricHealthyHostCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of new TCP flows (or connections) established from clients to targets in the time period."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 196
          },
          "name": "metricNewFlowCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of bytes processed by the load balancer, including TCP/IP headers."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 205
          },
          "name": "metricProcessedBytes",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "These resets are generated by the client and forwarded by the load balancer.",
            "stability": "stable",
            "summary": "The total number of reset (RST) packets sent from a client to a target."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 216
          },
          "name": "metricTcpClientResetCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The total number of reset (RST) packets generated by the load balancer."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 225
          },
          "name": "metricTcpElbResetCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Sum over 5 minutes",
            "remarks": "These resets are generated by the target and forwarded by the load balancer.",
            "stability": "stable",
            "summary": "The total number of reset (RST) packets sent from a target to a client."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 236
          },
          "name": "metricTcpTargetResetCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "deprecated": "use ``NetworkTargetGroup.metricUnHealthyHostCount`` instead",
            "stability": "deprecated",
            "summary": "The number of targets that are considered unhealthy."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 184
          },
          "name": "metricUnHealthyHostCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "NetworkLoadBalancer",
      "symbolId": "lib/nlb/network-load-balancer:NetworkLoadBalancer"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerAttributes": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to reference an existing load balancer.",
        "example": "// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-load-balancer.ts",
        "line": 26
      },
      "name": "NetworkLoadBalancerAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 30
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- When not provided, LB cannot be used as Route53 Alias target.",
            "stability": "stable",
            "summary": "The canonical hosted zone ID of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 37
          },
          "name": "loadBalancerCanonicalHostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- When not provided, LB cannot be used as Route53 Alias target.",
            "stability": "stable",
            "summary": "The DNS name of this load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 44
          },
          "name": "loadBalancerDnsName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- When not provided, listeners cannot be created on imported load\nbalancers.",
            "stability": "stable",
            "summary": "The VPC to associate with the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 52
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/nlb/network-load-balancer:NetworkLoadBalancerAttributes"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerLookupOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for looking up an NetworkLoadBalancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst networkLoadBalancerLookupOptions: elbv2.NetworkLoadBalancerLookupOptions = {\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: {\n    loadBalancerTagsKey: 'loadBalancerTags',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerLookupOptions",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerLookupOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-load-balancer.ts",
        "line": 58
      },
      "name": "NetworkLoadBalancerLookupOptions",
      "symbolId": "lib/nlb/network-load-balancer:NetworkLoadBalancerLookupOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a network load balancer.",
        "example": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-load-balancer.ts",
        "line": 14
      },
      "name": "NetworkLoadBalancerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Indicates whether cross-zone load balancing is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-load-balancer.ts",
            "line": 20
          },
          "name": "crossZoneEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/nlb/network-load-balancer:NetworkLoadBalancerProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
      "docs": {
        "stability": "stable",
        "summary": "Define a Network Target Group.",
        "example": "declare const listener: elbv2.NetworkListener;\ndeclare const asg1: autoscaling.AutoScalingGroup;\ndeclare const asg2: autoscaling.AutoScalingGroup;\n\nconst group = listener.addTargets('AppFleet', {\n  port: 443,\n  targets: [asg1],\n});\n\ngroup.addTarget(asg2);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nlb/network-target-group.ts",
          "line": 78
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nlb/network-target-group.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing target group."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 63
          },
          "name": "fromTargetGroupAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `fromTargetGroupAttributes` instead",
            "stability": "deprecated",
            "summary": "Import an existing listener."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 72
          },
          "name": "import",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupImportProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a load balancing target to this target group."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 103
          },
          "name": "addTarget",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup",
          "parameters": [
            {
              "name": "targets",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The number of targets that are considered healthy."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 125
          },
          "name": "metricHealthyHostCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The number of targets that are considered unhealthy."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 137
          },
          "name": "metricUnHealthyHostCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this directly. It will be called by listeners.",
            "stability": "stable",
            "summary": "Register a listener that is load balancing to this target group."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 115
          },
          "name": "registerListener",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 154
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "NetworkTargetGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Full name of first load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 147
          },
          "name": "firstLoadBalancerFullName",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/nlb/network-target-group:NetworkTargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroupProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a new Network Target Group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkLoadBalancerTarget: elbv2.INetworkLoadBalancerTarget;\ndeclare const vpc: ec2.Vpc;\nconst networkTargetGroupProps: elbv2.NetworkTargetGroupProps = {\n  port: 123,\n\n  // the properties below are optional\n  deregistrationDelay: cdk.Duration.minutes(30),\n  healthCheck: {\n    enabled: false,\n    healthyGrpcCodes: 'healthyGrpcCodes',\n    healthyHttpCodes: 'healthyHttpCodes',\n    healthyThresholdCount: 123,\n    interval: cdk.Duration.minutes(30),\n    path: 'path',\n    port: 'port',\n    protocol: elbv2.Protocol.HTTP,\n    timeout: cdk.Duration.minutes(30),\n    unhealthyThresholdCount: 123,\n  },\n  preserveClientIp: false,\n  protocol: elbv2.Protocol.HTTP,\n  proxyProtocolV2: false,\n  targetGroupName: 'targetGroupName',\n  targets: [networkLoadBalancerTarget],\n  targetType: elbv2.TargetType.INSTANCE,\n  vpc: vpc,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroupProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-target-group.ts",
        "line": 16
      },
      "name": "NetworkTargetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port on which the listener listens for requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 20
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false if the target group type is IP address and the\ntarget group protocol is TCP or TLS. Otherwise, true.",
            "stability": "stable",
            "summary": "Indicates whether client IP preservation is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 42
          },
          "name": "preserveClientIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- TCP",
            "stability": "stable",
            "summary": "Protocol for target group, expects TCP, TLS, UDP, or TCP_UDP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 27
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Indicates whether Proxy Protocol version 2 is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 34
          },
          "name": "proxyProtocolV2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No targets.",
            "remarks": "Can be `Instance`, `IPAddress`, or any self-registering load balancing\ntarget. If you use either `Instance` or `IPAddress` as targets, all\ntarget must be of the same type.",
            "stability": "stable",
            "summary": "The targets to add to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-target-group.ts",
            "line": 53
          },
          "name": "targets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/nlb/network-target-group:NetworkTargetGroupProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.NetworkWeightedTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A Target Group and weight combination.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const networkTargetGroup: elbv2.NetworkTargetGroup;\nconst networkWeightedTargetGroup: elbv2.NetworkWeightedTargetGroup = {\n  targetGroup: networkTargetGroup,\n\n  // the properties below are optional\n  weight: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkWeightedTargetGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nlb/network-listener-action.ts",
        "line": 130
      },
      "name": "NetworkWeightedTargetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 134
          },
          "name": "targetGroup",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Range is [0..1000).",
            "stability": "stable",
            "summary": "The target group's weight."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nlb/network-listener-action.ts",
            "line": 143
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/nlb/network-listener-action:NetworkWeightedTargetGroup"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.Protocol": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Backend protocol for network load balancers and health checks.",
        "example": "const listener = elbv2.NetworkListener.fromLookup(this, 'ALBListener', {\n  loadBalancerTags: {\n    Cluster: 'MyClusterName',\n  },\n  listenerProtocol: elbv2.Protocol.TCP,\n  listenerPort: 12345,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 19
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP (ALB health checks and NLB health checks)."
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS (ALB health checks and NLB health checks)."
          },
          "name": "HTTPS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP (NLB, NLB health checks)."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TLS (NLB)."
          },
          "name": "TLS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UDP (NLB)."
          },
          "name": "UDP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Listen to both TCP and UDP on the same port (NLB)."
          },
          "name": "TCP_UDP"
        }
      ],
      "name": "Protocol",
      "symbolId": "lib/shared/enums:Protocol"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.QueryStringCondition": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the key/value pair of the query string.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst queryStringCondition: elbv2.QueryStringCondition = {\n  value: 'value',\n\n  // the properties below are optional\n  key: 'key',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.QueryStringCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/conditions.ts",
        "line": 69
      },
      "name": "QueryStringCondition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The query string value for the condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 80
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Any key can be matched.",
            "stability": "stable",
            "summary": "The query string key for the condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/conditions.ts",
            "line": 75
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/conditions:QueryStringCondition"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.RedirectOptions": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "remarks": "A URI consists of the following components:\nprotocol://hostname:port/path?query. You must modify at least one of the\nfollowing components to avoid a redirect loop: protocol, hostname, port, or\npath. Any components that you do not modify retain their original values.\n\nYou can reuse URI components using the following reserved keywords:\n\n- `#{protocol}`\n- `#{host}`\n- `#{port}`\n- `#{path}` (the leading \"/\" is removed)\n- `#{query}`\n\nFor example, you can change the path to \"/new/#{path}\", the hostname to\n\"example.#{host}\", or the query to \"#{query}&value=xyz\".",
        "stability": "stable",
        "summary": "Options for `ListenerAction.redirect()`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectOptions: elbv2.RedirectOptions = {\n  host: 'host',\n  path: 'path',\n  permanent: false,\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 274
      },
      "name": "RedirectOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No change",
            "remarks": "This component is not percent-encoded. The hostname can contain #{host}.",
            "stability": "stable",
            "summary": "The hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 282
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No change",
            "remarks": "This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.",
            "stability": "stable",
            "summary": "The absolute path, starting with the leading \"/\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 291
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The redirect is either permanent (HTTP 301) or temporary (HTTP 302).",
            "stability": "stable",
            "summary": "The HTTP redirect code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 327
          },
          "name": "permanent",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No change",
            "remarks": "You can specify a value from 1 to 65535 or #{port}.",
            "stability": "stable",
            "summary": "The port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 300
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No change",
            "remarks": "You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.",
            "stability": "stable",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 309
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No change",
            "remarks": "Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords.",
            "stability": "stable",
            "summary": "The query parameters, URL-encoded when necessary, but not percent-encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 318
          },
          "name": "query",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-action:RedirectOptions"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "deprecated": "superceded by `ListenerAction.redirect()`.",
        "stability": "deprecated",
        "summary": "A redirect response.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst redirectResponse: elbv2.RedirectResponse = {\n  statusCode: 'statusCode',\n\n  // the properties below are optional\n  host: 'host',\n  path: 'path',\n  port: 'port',\n  protocol: 'protocol',\n  query: 'query',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.RedirectResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-rule.ts",
        "line": 160
      },
      "name": "RedirectResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The HTTP redirect code (HTTP_301 or HTTP_302)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 198
          },
          "name": "statusCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "origin host of request",
            "remarks": "This component is not percent-encoded. The hostname can contain #{host}.",
            "stability": "deprecated",
            "summary": "The hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 166
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "origin path of request",
            "remarks": "This component is not percent-encoded.\nThe path can contain #{host}, #{path}, and #{port}.",
            "stability": "deprecated",
            "summary": "The absolute path, starting with the leading \"/\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 173
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "origin port of request",
            "remarks": "You can specify a value from 1 to 65535 or #{port}.",
            "stability": "deprecated",
            "summary": "The port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 179
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "origin protocol of request",
            "remarks": "You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP,\nHTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.",
            "stability": "deprecated",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 186
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "origin query string of request",
            "remarks": "Do not include the leading \"?\", as it is automatically added.\nYou can specify any of the reserved keywords.",
            "stability": "deprecated",
            "summary": "The query parameters, URL-encoded when necessary, but not percent-encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-rule.ts",
            "line": 194
          },
          "name": "query",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-rule:RedirectResponse"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "remarks": "We recommend the Recommended policy for general use. You can\nuse the ForwardSecrecy policy if you require Forward Secrecy\n(FS).\n\nYou can use one of the TLS policies to meet compliance and security\nstandards that require disabling certain TLS protocol versions, or to\nsupport legacy clients that require deprecated ciphers.",
        "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html",
        "stability": "stable",
        "summary": "Elastic Load Balancing provides the following security policies for Application Load Balancers.",
        "example": "import { HostedZone } from '@aws-cdk/aws-route53';\nimport { Certificate } from '@aws-cdk/aws-certificatemanager';\nimport { SslPolicy } from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst domainZone = HostedZone.fromLookup(this, 'Zone', { domainName: 'example.com' });\nconst certificate = Certificate.fromCertificateArn(this, 'Cert', 'arn:aws:acm:us-east-1:123456:certificate/abcdefg');\n\ndeclare const vpc: ec2.Vpc;\ndeclare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  vpc,\n  cluster,\n  certificate,\n  sslPolicy: SslPolicy.RECOMMENDED,\n  domainName: 'api.example.com',\n  domainZone,\n  redirectHTTP: true,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.SslPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 99
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The recommended security policy."
          },
          "name": "RECOMMENDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Strong foward secrecy ciphers and TLV1.2 only (2020 edition). Same as FORWARD_SECRECY_TLS12_RES, but only supports GCM versions of the TLS ciphers."
          },
          "name": "FORWARD_SECRECY_TLS12_RES_GCM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Strong forward secrecy ciphers and TLS1.2 only."
          },
          "name": "FORWARD_SECRECY_TLS12_RES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Forward secrecy ciphers and TLS1.2 only."
          },
          "name": "FORWARD_SECRECY_TLS12"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Forward secrecy ciphers only with TLS1.1 and higher."
          },
          "name": "FORWARD_SECRECY_TLS11"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Forward secrecy ciphers only."
          },
          "name": "FORWARD_SECRECY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TLS1.2 only and no SHA ciphers."
          },
          "name": "TLS12"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TLS1.2 only with all ciphers."
          },
          "name": "TLS12_EXT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TLS1.1 and higher with all ciphers."
          },
          "name": "TLS11"
        },
        {
          "docs": {
            "remarks": "Do not use this security policy unless you must support a legacy client\nthat requires the DES-CBC3-SHA cipher, which is a weak cipher.",
            "stability": "stable",
            "summary": "Support for DES-CBC3-SHA."
          },
          "name": "LEGACY"
        }
      ],
      "name": "SslPolicy",
      "symbolId": "lib/shared/enums:SslPolicy"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to reference an existing target group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupAttributes: elbv2.TargetGroupAttributes = {\n  targetGroupArn: 'targetGroupArn',\n\n  // the properties below are optional\n  defaultPort: 'defaultPort',\n  loadBalancerArns: 'loadBalancerArns',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 363
      },
      "name": "TargetGroupAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 367
          },
          "name": "targetGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- This property is unused and the wrong type. No need to use it.",
            "stability": "deprecated",
            "summary": "Port target group is listening on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 374
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Token representing the list of ARNs for the load balancer routing to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 379
          },
          "name": "loadBalancerArns",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/shared/base-target-group:TargetGroupAttributes"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Define the target of a load balancer."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/shared/base-target-group.ts",
          "line": 241
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "baseProps",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps"
            }
          },
          {
            "name": "additionalProps",
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 163
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Register the given load balancing target as part of this group."
          },
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 316
          },
          "name": "addLoadBalancerTarget",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Set/replace the target group's health check."
          },
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 300
          },
          "name": "configureHealthCheck",
          "parameters": [
            {
              "name": "healthCheck",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes",
            "stability": "stable",
            "summary": "Set a non-standard attribute on the target group."
          },
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 309
          },
          "name": "setAttribute",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 331
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "TargetGroupBase",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Default port configured for members of this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 207
          },
          "name": "defaultPort",
          "protected": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This identifier is emitted as a dimensions of the metrics of this target\ngroup.\n\nExample value: `app/my-load-balancer/123456789`",
            "stability": "stable",
            "summary": "Full name of first load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 192
          },
          "name": "firstLoadBalancerFullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A token representing a list of ARNs of the load balancers that route traffic to this target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 200
          },
          "name": "loadBalancerArns",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of constructs that need to be depended on to ensure the TargetGroup is associated to a load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 293
          },
          "name": "loadBalancerAttached",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configurable dependable with all resources that lead to load balancer attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 212
          },
          "name": "loadBalancerAttachedDependencies",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.ConcreteDependable"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 167
          },
          "name": "targetGroupArn",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The full name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 172
          },
          "name": "targetGroupFullName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ARNs of load balancers load balancing to this TargetGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 182
          },
          "name": "targetGroupLoadBalancerArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 177
          },
          "name": "targetGroupName",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 202
          },
          "name": "healthCheck",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.HealthCheck"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The types of the directly registered members of this target group."
          },
          "locationInModule": {
            "filename": "lib/shared/base-target-group.ts",
            "line": 217
          },
          "name": "targetType",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetType"
          }
        }
      ],
      "symbolId": "lib/shared/base-target-group:TargetGroupBase"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupImportProps": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "deprecated": "Use TargetGroupAttributes instead",
        "stability": "deprecated",
        "summary": "Properties to reference an existing target group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nconst targetGroupImportProps: elbv2.TargetGroupImportProps = {\n  targetGroupArn: 'targetGroupArn',\n\n  // the properties below are optional\n  defaultPort: 'defaultPort',\n  loadBalancerArns: 'loadBalancerArns',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupImportProps",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/shared/base-target-group.ts",
        "line": 387
      },
      "name": "TargetGroupImportProps",
      "symbolId": "lib/shared/base-target-group:TargetGroupImportProps"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupLoadBalancingAlgorithmType": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "Load balancing algorithmm type for target groups."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetGroupLoadBalancingAlgorithmType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 214
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "round_robin."
          },
          "name": "ROUND_ROBIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "least_outstanding_requests."
          },
          "name": "LEAST_OUTSTANDING_REQUESTS"
        }
      ],
      "name": "TargetGroupLoadBalancingAlgorithmType",
      "symbolId": "lib/shared/enums:TargetGroupLoadBalancingAlgorithmType"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.TargetType": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "How to interpret the load balancing target identifiers.",
        "example": "declare const vpc: ec2.Vpc;\n\nconst tg = new elbv2.ApplicationTargetGroup(this, 'TG', {\n  targetType: elbv2.TargetType.IP,\n  port: 50051,\n  protocol: elbv2.ApplicationProtocol.HTTP,\n  protocolVersion: elbv2.ApplicationProtocolVersion.GRPC,\n  healthCheck: {\n    enabled: true,\n    healthyGrpcCodes: '0-99',\n  },\n  vpc,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.TargetType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/shared/enums.ts",
        "line": 158
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Targets identified by instance ID."
          },
          "name": "INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Targets identified by IP address."
          },
          "name": "IP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Target is a single Lambda Function."
          },
          "name": "LAMBDA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Target is a single Application Load Balancer."
          },
          "name": "ALB"
        }
      ],
      "name": "TargetType",
      "symbolId": "lib/shared/enums:TargetType"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.UnauthenticatedAction": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "docs": {
        "stability": "stable",
        "summary": "What to do with unauthenticated requests."
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.UnauthenticatedAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 418
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return an HTTP 401 Unauthorized error."
          },
          "name": "DENY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow the request to be forwarded to the target."
          },
          "name": "ALLOW"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Redirect the request to the IdP authorization endpoint."
          },
          "name": "AUTHENTICATE"
        }
      ],
      "name": "UnauthenticatedAction",
      "symbolId": "lib/alb/application-listener-action:UnauthenticatedAction"
    },
    "@aws-cdk/aws-elasticloadbalancingv2.WeightedTargetGroup": {
      "assembly": "@aws-cdk/aws-elasticloadbalancingv2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A Target Group and weight combination.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const applicationTargetGroup: elbv2.ApplicationTargetGroup;\nconst weightedTargetGroup: elbv2.WeightedTargetGroup = {\n  targetGroup: applicationTargetGroup,\n\n  // the properties below are optional\n  weight: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.WeightedTargetGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alb/application-listener-action.ts",
        "line": 218
      },
      "name": "WeightedTargetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 222
          },
          "name": "targetGroup",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Range is [0..1000).",
            "stability": "stable",
            "summary": "The target group's weight."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alb/application-listener-action.ts",
            "line": 231
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/alb/application-listener-action:WeightedTargetGroup"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}