{"version":"2","toolVersion":"1.80.0","snippets":{"edabba41c5da9d9ee34bd56c11f3da159cc14f27a29dc722a4daf6cacd2c1050":{"translations":{"python":{"source":"role = Role(self, \"MyRole\",\n    assumed_by=ServicePrincipal(\"sns.amazonaws.com\")\n)\n\nrole.add_to_policy(PolicyStatement(\n    resources=[\"*\"],\n    actions=[\"lambda:InvokeFunction\"]\n))","version":"2"},"csharp":{"source":"var role = new Role(this, \"MyRole\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"sns.amazonaws.com\")\n});\n\nrole.AddToPolicy(new PolicyStatement(new PolicyStatementProps {\n    Resources = new [] { \"*\" },\n    Actions = new [] { \"lambda:InvokeFunction\" }\n}));","version":"1"},"java":{"source":"Role role = Role.Builder.create(this, \"MyRole\")\n        .assumedBy(new ServicePrincipal(\"sns.amazonaws.com\"))\n        .build();\n\nrole.addToPolicy(PolicyStatement.Builder.create()\n        .resources(List.of(\"*\"))\n        .actions(List.of(\"lambda:InvokeFunction\"))\n        .build());","version":"1"},"go":{"source":"role := lib.NewRole(this, jsii.String(\"MyRole\"), &RoleProps{\n\tAssumedBy: *lib.NewServicePrincipal(jsii.String(\"sns.amazonaws.com\")),\n})\n\nrole.AddToPolicy(lib.NewPolicyStatement(&PolicyStatementProps{\n\tResources: []*string{\n\t\tjsii.String(\"*\"),\n\t},\n\tActions: []*string{\n\t\tjsii.String(\"lambda:InvokeFunction\"),\n\t},\n}))","version":"1"},"$":{"source":"    const role = new Role(this, 'MyRole', {\n      assumedBy: new ServicePrincipal('sns.amazonaws.com'),\n    });\n\n    role.addToPolicy(new PolicyStatement({\n      resources: ['*'],\n      actions: ['lambda:InvokeFunction'],\n    }));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":17}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#addToPolicy","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","constructs.Construct"],"fullSource":"import * as constructs from 'constructs';\nimport { PolicyStatement, Role, ServicePrincipal } from '../lib';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from '@aws-cdk/core';\n\nexport class ExampleConstruct extends Construct {\n  constructor(scope: constructs.Construct, id: string) {\n    super(scope, id);\n\n    /// !show\n    const role = new Role(this, 'MyRole', {\n      assumedBy: new ServicePrincipal('sns.amazonaws.com'),\n    });\n\n    role.addToPolicy(new PolicyStatement({\n      resources: ['*'],\n      actions: ['lambda:InvokeFunction'],\n    }));\n    /// !hide\n  }\n}\n","syntaxKindCounter":{"10":4,"75":9,"104":1,"192":2,"193":2,"194":1,"196":1,"197":3,"225":1,"226":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"0097c36abcca2062ce3cb3a933268aaa973fe9cd2127ae577355c4ede846bd6a"},"38b37167723c4421f6f32a6cf5cb2af49ff47a60c0dcf3998015418ae0fc2a95":{"translations":{"python":{"source":"user = User(self, \"MyUser\", password=cdk.SecretValue.unsafe_plain_text(\"1234\"))\ngroup = Group(self, \"MyGroup\")\n\npolicy = Policy(self, \"MyPolicy\")\npolicy.attach_to_user(user)\ngroup.attach_inline_policy(policy)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\", new UserProps { Password = SecretValue.UnsafePlainText(\"1234\") });\nvar group = new Group(this, \"MyGroup\");\n\nvar policy = new Policy(this, \"MyPolicy\");\npolicy.AttachToUser(user);\ngroup.AttachInlinePolicy(policy);","version":"1"},"java":{"source":"User user = User.Builder.create(this, \"MyUser\").password(SecretValue.unsafePlainText(\"1234\")).build();\nGroup group = new Group(this, \"MyGroup\");\n\nPolicy policy = new Policy(this, \"MyPolicy\");\npolicy.attachToUser(user);\ngroup.attachInlinePolicy(policy);","version":"1"},"go":{"source":"user := lib.NewUser(this, jsii.String(\"MyUser\"), &UserProps{\n\tPassword: cdk.SecretValue_UnsafePlainText(jsii.String(\"1234\")),\n})\ngroup := lib.NewGroup(this, jsii.String(\"MyGroup\"))\n\npolicy := lib.NewPolicy(this, jsii.String(\"MyPolicy\"))\npolicy.AttachToUser(user)\ngroup.attachInlinePolicy(policy)","version":"1"},"$":{"source":"    const user = new User(this, 'MyUser', { password: cdk.SecretValue.unsafePlainText('1234') });\n    const group = new Group(this, 'MyGroup');\n\n    const policy = new Policy(this, 'MyPolicy');\n    policy.attachToUser(user);\n    group.attachInlinePolicy(policy);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":31}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.Policy#attachToUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.UserProps","@aws-cdk/core.SecretValue","@aws-cdk/core.SecretValue#unsafePlainText","constructs.Construct"],"fullSource":"import * as cdk from '@aws-cdk/core';\nimport * as constructs from 'constructs';\nimport { Group, Policy, User } from '../lib';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from '@aws-cdk/core';\n\nexport class ExampleConstruct extends Construct {\n  constructor(scope: constructs.Construct, id: string) {\n    super(scope, id);\n\n    /// !show\n    const user = new User(this, 'MyUser', { password: cdk.SecretValue.unsafePlainText('1234') });\n    const group = new Group(this, 'MyGroup');\n\n    const policy = new Policy(this, 'MyPolicy');\n    policy.attachToUser(user);\n    group.attachInlinePolicy(policy);\n    /// !hide\n  }\n}\n","syntaxKindCounter":{"10":4,"75":16,"104":3,"193":1,"194":4,"196":3,"197":3,"225":3,"226":2,"242":3,"243":3,"281":1},"fqnsFingerprint":"13df7914459f4f8453db458eb281a08de7f32eb1d09e32f8cbdba51b7b8e92aa"},"fd41528b3cbd6b346e84f9eee59ae90ac0a3d9192aab58a04930b1ba8572c469":{"translations":{"python":{"source":"group = Group(self, \"MyGroup\")\ngroup.add_managed_policy(ManagedPolicy.from_aws_managed_policy_name(\"AdministratorAccess\"))","version":"2"},"csharp":{"source":"var group = new Group(this, \"MyGroup\");\ngroup.AddManagedPolicy(ManagedPolicy.FromAwsManagedPolicyName(\"AdministratorAccess\"));","version":"1"},"java":{"source":"Group group = new Group(this, \"MyGroup\");\ngroup.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName(\"AdministratorAccess\"));","version":"1"},"go":{"source":"group := lib.NewGroup(this, jsii.String(\"MyGroup\"))\ngroup.AddManagedPolicy(lib.ManagedPolicy_FromAwsManagedPolicyName(jsii.String(\"AdministratorAccess\")))","version":"1"},"$":{"source":"const group = new Group(this, 'MyGroup');\ngroup.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName('AdministratorAccess'));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":42}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.Group#addManagedPolicy","@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.ManagedPolicy#fromAwsManagedPolicyName","constructs.Construct"],"fullSource":"import * as constructs from 'constructs';\nimport { Group, ManagedPolicy } from '../lib';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from '@aws-cdk/core';\n\nexport class ExampleConstruct extends Construct {\n  constructor(scope: constructs.Construct, id: string) {\n    super(scope, id);\n\n    /// !show\n    const group = new Group(this, 'MyGroup');\n    group.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName('AdministratorAccess'));\n    /// !hide\n  }\n}\n","syntaxKindCounter":{"10":2,"75":6,"104":1,"194":2,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"8cdbdfa4f1a0061979f1817be54bc9fda291cb5876955acbd179be2deb29b9f1"},"53fe6253cd9d35289ebc06b836e7a1a91e19da4c47eb8fb38cb71d6a6c99d5f3":{"translations":{"python":{"source":"# fn: lambda.Function\n# table: dynamodb.Table\n\n\ntable.grant_write_data(fn)","version":"2"},"csharp":{"source":"Function fn;\nTable table;\n\n\ntable.GrantWriteData(fn);","version":"1"},"java":{"source":"Function fn;\nTable table;\n\n\ntable.grantWriteData(fn);","version":"1"},"go":{"source":"var fn function\nvar table table\n\n\ntable.grantWriteData(fn)","version":"1"},"$":{"source":"declare const fn: lambda.Function;\ndeclare const table: dynamodb.Table;\n\ntable.grantWriteData(fn);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":51}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const fn: lambda.Function;\ndeclare const table: dynamodb.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\ntable.grantWriteData(fn);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"75":9,"130":2,"153":2,"169":2,"194":1,"196":1,"225":2,"226":1,"242":2,"243":2,"290":1},"fqnsFingerprint":"1323b60ab94a88d4cf4c7c846ab0af5927a24713050028234cb9426c28ace47b"},"7808076bfee1b7971cc05930d4cebf8507933ada771a07e618c45d2a7dcf081f":{"translations":{"python":{"source":"# fn: lambda.Function\n# table: dynamodb.Table\n\n\ntable.grant(fn, \"dynamodb:PutItem\")","version":"2"},"csharp":{"source":"Function fn;\nTable table;\n\n\ntable.Grant(fn, \"dynamodb:PutItem\");","version":"1"},"java":{"source":"Function fn;\nTable table;\n\n\ntable.grant(fn, \"dynamodb:PutItem\");","version":"1"},"go":{"source":"var fn function\nvar table table\n\n\ntable.grant(fn, jsii.String(\"dynamodb:PutItem\"))","version":"1"},"$":{"source":"declare const fn: lambda.Function;\ndeclare const table: dynamodb.Table;\n\ntable.grant(fn, 'dynamodb:PutItem');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":60}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const fn: lambda.Function;\ndeclare const table: dynamodb.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\ntable.grant(fn, 'dynamodb:PutItem');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":9,"130":2,"153":2,"169":2,"194":1,"196":1,"225":2,"226":1,"242":2,"243":2,"290":1},"fqnsFingerprint":"1323b60ab94a88d4cf4c7c846ab0af5927a24713050028234cb9426c28ace47b"},"1afb0ac33880703dd032b083bc9d22bacd2581ea5480e33204c5f6689bad8cef":{"translations":{"python":{"source":"role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"codepipeline.amazonaws.com\"),\n    # custom description if desired\n    description=\"This is a custom role...\"\n)\n\ncodepipeline.Pipeline(self, \"Pipeline\",\n    # Give the Pipeline an immutable view of the Role\n    role=role.without_policy_updates()\n)\n\n# You now have to manage the Role policies yourself\nrole.add_to_policy(iam.PolicyStatement(\n    actions=[],\n    resources=[]\n))","version":"2"},"csharp":{"source":"var role = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"codepipeline.amazonaws.com\"),\n    // custom description if desired\n    Description = \"This is a custom role...\"\n});\n\nnew Pipeline(this, \"Pipeline\", new PipelineProps {\n    // Give the Pipeline an immutable view of the Role\n    Role = role.WithoutPolicyUpdates()\n});\n\n// You now have to manage the Role policies yourself\nrole.AddToPolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] {  },\n    Resources = new [] {  }\n}));","version":"1"},"java":{"source":"Role role = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"codepipeline.amazonaws.com\"))\n        // custom description if desired\n        .description(\"This is a custom role...\")\n        .build();\n\nPipeline.Builder.create(this, \"Pipeline\")\n        // Give the Pipeline an immutable view of the Role\n        .role(role.withoutPolicyUpdates())\n        .build();\n\n// You now have to manage the Role policies yourself\nrole.addToPolicy(PolicyStatement.Builder.create()\n        .actions(List.of())\n        .resources(List.of())\n        .build());","version":"1"},"go":{"source":"role := iam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"codepipeline.amazonaws.com\")),\n\t// custom description if desired\n\tDescription: jsii.String(\"This is a custom role...\"),\n})\n\ncodepipeline.NewPipeline(this, jsii.String(\"Pipeline\"), &PipelineProps{\n\t// Give the Pipeline an immutable view of the Role\n\tRole: role.WithoutPolicyUpdates(),\n})\n\n// You now have to manage the Role policies yourself\nrole.AddToPolicy(iam.NewPolicyStatement(&PolicyStatementProps{\n\tActions: []*string{\n\t},\n\tResources: []*string{\n\t},\n}))","version":"1"},"$":{"source":"const role = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('codepipeline.amazonaws.com'),\n  // custom description if desired\n  description: 'This is a custom role...',\n});\n\nnew codepipeline.Pipeline(this, 'Pipeline', {\n  // Give the Pipeline an immutable view of the Role\n  role: role.withoutPolicyUpdates(),\n});\n\n// You now have to manage the Role policies yourself\nrole.addToPolicy(new iam.PolicyStatement({\n  actions: [/* whatever actions you want */],\n  resources: [/* whatever resources you intend to touch */],\n}));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":108}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-codepipeline.Pipeline","@aws-cdk/aws-codepipeline.PipelineProps","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#addToPolicy","@aws-cdk/aws-iam.Role#withoutPolicyUpdates","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst role = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('codepipeline.amazonaws.com'),\n  // custom description if desired\n  description: 'This is a custom role...',\n});\n\nnew codepipeline.Pipeline(this, 'Pipeline', {\n  // Give the Pipeline an immutable view of the Role\n  role: role.withoutPolicyUpdates(),\n});\n\n// You now have to manage the Role policies yourself\nrole.addToPolicy(new iam.PolicyStatement({\n  actions: [/* whatever actions you want */],\n  resources: [/* whatever resources you intend to touch */],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":18,"104":2,"192":2,"193":3,"194":6,"196":2,"197":4,"225":1,"226":2,"242":1,"243":1,"281":5},"fqnsFingerprint":"a5b1c3cfed5b10e83fe8c93baf71034d4933828a59e0f11361f35c6ceb4646c1"},"57f2aeb5a6ff0f3a68f45b3e37b6dcdc14ab44f9b3e7ab398a2cf91333033eba":{"translations":{"python":{"source":"role = iam.Role.from_role_arn(self, \"Role\", \"arn:aws:iam::123456789012:role/MyExistingRole\",\n    # Set 'mutable' to 'false' to use the role as-is and prevent adding new\n    # policies to it. The default is 'true', which means the role may be\n    # modified as part of the deployment.\n    mutable=False\n)","version":"2"},"csharp":{"source":"var role = Role.FromRoleArn(this, \"Role\", \"arn:aws:iam::123456789012:role/MyExistingRole\", new FromRoleArnOptions {\n    // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n    // policies to it. The default is 'true', which means the role may be\n    // modified as part of the deployment.\n    Mutable = false\n});","version":"1"},"java":{"source":"IRole role = Role.fromRoleArn(this, \"Role\", \"arn:aws:iam::123456789012:role/MyExistingRole\", FromRoleArnOptions.builder()\n        // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n        // policies to it. The default is 'true', which means the role may be\n        // modified as part of the deployment.\n        .mutable(false)\n        .build());","version":"1"},"go":{"source":"role := iam.Role_FromRoleArn(this, jsii.String(\"Role\"), jsii.String(\"arn:aws:iam::123456789012:role/MyExistingRole\"), &FromRoleArnOptions{\n\t// Set 'mutable' to 'false' to use the role as-is and prevent adding new\n\t// policies to it. The default is 'true', which means the role may be\n\t// modified as part of the deployment.\n\tMutable: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"const role = iam.Role.fromRoleArn(this, 'Role', 'arn:aws:iam::123456789012:role/MyExistingRole', {\n  // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n  // policies to it. The default is 'true', which means the role may be\n  // modified as part of the deployment.\n  mutable: false,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":133}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.FromRoleArnOptions","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#fromRoleArn","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst role = iam.Role.fromRoleArn(this, 'Role', 'arn:aws:iam::123456789012:role/MyExistingRole', {\n  // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n  // policies to it. The default is 'true', which means the role may be\n  // modified as part of the deployment.\n  mutable: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":5,"91":1,"104":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"d59ead6b111c144ce48ba250d04b67747510348aae95424e9fc5531d081fc7e7"},"30dbf807e3c41b86a361ec7acaa98d45dfca7cef387e09f959c509d44336d21f":{"translations":{"python":{"source":"role = iam.Role(self, \"MyRole\",\n    assumed_by=iam.AccountPrincipal(\"123456789012\"),\n    external_ids=[\"SUPPLY-ME\"]\n)","version":"2"},"csharp":{"source":"var role = new Role(this, \"MyRole\", new RoleProps {\n    AssumedBy = new AccountPrincipal(\"123456789012\"),\n    ExternalIds = new [] { \"SUPPLY-ME\" }\n});","version":"1"},"java":{"source":"Role role = Role.Builder.create(this, \"MyRole\")\n        .assumedBy(new AccountPrincipal(\"123456789012\"))\n        .externalIds(List.of(\"SUPPLY-ME\"))\n        .build();","version":"1"},"go":{"source":"role := iam.NewRole(this, jsii.String(\"MyRole\"), &RoleProps{\n\tAssumedBy: iam.NewAccountPrincipal(jsii.String(\"123456789012\")),\n\tExternalIds: []*string{\n\t\tjsii.String(\"SUPPLY-ME\"),\n\t},\n})","version":"1"},"$":{"source":"const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.AccountPrincipal('123456789012'),\n  externalIds: ['SUPPLY-ME'],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":148}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountPrincipal","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","constructs.Construct"],"fullSource":"import * as constructs from 'constructs';\nimport * as iam from '../lib';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from '@aws-cdk/core';\n\nexport class ExampleConstruct extends Construct {\n  constructor(scope: constructs.Construct, id: string) {\n    super(scope, id);\n\n    /// !show\n    const role = new iam.Role(this, 'MyRole', {\n      assumedBy: new iam.AccountPrincipal('123456789012'),\n      externalIds: ['SUPPLY-ME'],\n    });\n    /// !hide\n\n    Array.isArray(role);\n  }\n}\n","syntaxKindCounter":{"10":3,"75":7,"104":1,"192":1,"193":1,"194":2,"197":2,"225":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"1f8de24a0f27120fb3c9d517cd1c2e8e30670095fbfcd13299b8be26aaa36f71"},"fe5f92331f4a13ffac2fc300e8ef04d1348da847f50affdd14853f4495ca127f":{"translations":{"python":{"source":"statement = iam.PolicyStatement()\nstatement.add_service_principal(\"cloudwatch.amazonaws.com\")\nstatement.add_service_principal(\"ec2.amazonaws.com\")\nstatement.add_arn_principal(\"arn:aws:boom:boom\")","version":"2"},"csharp":{"source":"var statement = new PolicyStatement();\nstatement.AddServicePrincipal(\"cloudwatch.amazonaws.com\");\nstatement.AddServicePrincipal(\"ec2.amazonaws.com\");\nstatement.AddArnPrincipal(\"arn:aws:boom:boom\");","version":"1"},"java":{"source":"PolicyStatement statement = new PolicyStatement();\nstatement.addServicePrincipal(\"cloudwatch.amazonaws.com\");\nstatement.addServicePrincipal(\"ec2.amazonaws.com\");\nstatement.addArnPrincipal(\"arn:aws:boom:boom\");","version":"1"},"go":{"source":"statement := iam.NewPolicyStatement()\nstatement.AddServicePrincipal(jsii.String(\"cloudwatch.amazonaws.com\"))\nstatement.AddServicePrincipal(jsii.String(\"ec2.amazonaws.com\"))\nstatement.AddArnPrincipal(jsii.String(\"arn:aws:boom:boom\"))","version":"1"},"$":{"source":"const statement = new iam.PolicyStatement();\nstatement.addServicePrincipal('cloudwatch.amazonaws.com');\nstatement.addServicePrincipal('ec2.amazonaws.com');\nstatement.addArnPrincipal('arn:aws:boom:boom');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":188}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatement#addArnPrincipal","@aws-cdk/aws-iam.PolicyStatement#addServicePrincipal"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst statement = new iam.PolicyStatement();\nstatement.addServicePrincipal('cloudwatch.amazonaws.com');\nstatement.addServicePrincipal('ec2.amazonaws.com');\nstatement.addArnPrincipal('arn:aws:boom:boom');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":9,"194":4,"196":3,"197":1,"225":1,"226":3,"242":1,"243":1},"fqnsFingerprint":"bb83b5ba714e8224519798a9b185ced6a3767f71b29aaf07e3381cb76da4a20b"},"93ab0d764e7e4d09aa521f42b8805b64417e055a8ad032f8cf6cdea622d1020b":{"translations":{"python":{"source":"role = iam.Role(self, \"MyRole\",\n    assumed_by=iam.CompositePrincipal(\n        iam.ServicePrincipal(\"ec2.amazonaws.com\"),\n        iam.AccountPrincipal(\"1818188181818187272\"))\n)","version":"2"},"csharp":{"source":"var role = new Role(this, \"MyRole\", new RoleProps {\n    AssumedBy = new CompositePrincipal(\n    new ServicePrincipal(\"ec2.amazonaws.com\"),\n    new AccountPrincipal(\"1818188181818187272\"))\n});","version":"1"},"java":{"source":"Role role = Role.Builder.create(this, \"MyRole\")\n        .assumedBy(new CompositePrincipal(\n        new ServicePrincipal(\"ec2.amazonaws.com\"),\n        new AccountPrincipal(\"1818188181818187272\")))\n        .build();","version":"1"},"go":{"source":"role := iam.NewRole(this, jsii.String(\"MyRole\"), &RoleProps{\n\tAssumedBy: iam.NewCompositePrincipal(\n\tiam.NewServicePrincipal(jsii.String(\"ec2.amazonaws.com\")),\n\tiam.NewAccountPrincipal(jsii.String(\"1818188181818187272\"))),\n})","version":"1"},"$":{"source":"const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.CompositePrincipal(\n    new iam.ServicePrincipal('ec2.amazonaws.com'),\n    new iam.AccountPrincipal('1818188181818187272')\n  ),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":208}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountPrincipal","@aws-cdk/aws-iam.CompositePrincipal","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.CompositePrincipal(\n    new iam.ServicePrincipal('ec2.amazonaws.com'),\n    new iam.AccountPrincipal('1818188181818187272')\n  ),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":10,"104":1,"193":1,"194":4,"197":4,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"812186ece47a914ecb7375bfaa4f63f69d0ca69652d78f2087c589de45b4c2af"},"d6447173e9537c5ebbcdf340d784ef18d92896f6badf647a84c615e69a62def5":{"translations":{"python":{"source":"principal = iam.AccountPrincipal(\"123456789000\").with_conditions({\"StringEquals\": {\"foo\": \"baz\"}})","version":"2"},"csharp":{"source":"var principal = new AccountPrincipal(\"123456789000\").WithConditions(new Dictionary<string, object> { { \"StringEquals\", new Dictionary<string, string> { { \"foo\", \"baz\" } } } });","version":"1"},"java":{"source":"PrincipalBase principal = new AccountPrincipal(\"123456789000\").withConditions(Map.of(\"StringEquals\", Map.of(\"foo\", \"baz\")));","version":"1"},"go":{"source":"principal := iam.NewAccountPrincipal(jsii.String(\"123456789000\")).WithConditions(map[string]interface{}{\n\t\"StringEquals\": map[string]*string{\n\t\t\"foo\": jsii.String(\"baz\"),\n\t},\n})","version":"1"},"$":{"source":"const principal = new iam.AccountPrincipal('123456789000')\n  .withConditions({ StringEquals: { foo: \"baz\" } });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":222}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountPrincipal","@aws-cdk/aws-iam.PrincipalBase","@aws-cdk/aws-iam.PrincipalBase#withConditions"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst principal = new iam.AccountPrincipal('123456789000')\n  .withConditions({ StringEquals: { foo: \"baz\" } });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":6,"193":2,"194":2,"196":1,"197":1,"225":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"2a37a90d9f8e931c307f96e44c72002ff817d01b6514d941d8f8b198ea821a64"},"e0255902d0378c5663752bf93e948274242709921bad9ce9e29da3b5ff37c609":{"translations":{"python":{"source":"principal = iam.WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", {\n    \"StringEquals\": {\"cognito-identity.amazonaws.com:aud\": \"us-east-2:12345678-abcd-abcd-abcd-123456\"},\n    \"ForAnyValue:StringLike\": {\"cognito-identity.amazonaws.com:amr\": \"unauthenticated\"}\n})","version":"2"},"csharp":{"source":"var principal = new WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", new Dictionary<string, object> {\n    { \"StringEquals\", new Dictionary<string, string> { { \"cognito-identity.amazonaws.com:aud\", \"us-east-2:12345678-abcd-abcd-abcd-123456\" } } },\n    { \"ForAnyValue:StringLike\", new Dictionary<string, string> { { \"cognito-identity.amazonaws.com:amr\", \"unauthenticated\" } } }\n});","version":"1"},"java":{"source":"WebIdentityPrincipal principal = new WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", Map.of(\n        \"StringEquals\", Map.of(\"cognito-identity.amazonaws.com:aud\", \"us-east-2:12345678-abcd-abcd-abcd-123456\"),\n        \"ForAnyValue:StringLike\", Map.of(\"cognito-identity.amazonaws.com:amr\", \"unauthenticated\")));","version":"1"},"go":{"source":"principal := iam.NewWebIdentityPrincipal(jsii.String(\"cognito-identity.amazonaws.com\"), map[string]interface{}{\n\t\"StringEquals\": map[string]*string{\n\t\t\"cognito-identity.amazonaws.com:aud\": jsii.String(\"us-east-2:12345678-abcd-abcd-abcd-123456\"),\n\t},\n\t\"ForAnyValue:StringLike\": map[string]*string{\n\t\t\"cognito-identity.amazonaws.com:amr\": jsii.String(\"unauthenticated\"),\n\t},\n})","version":"1"},"$":{"source":"const principal = new iam.WebIdentityPrincipal('cognito-identity.amazonaws.com', {\n  'StringEquals': { 'cognito-identity.amazonaws.com:aud': 'us-east-2:12345678-abcd-abcd-abcd-123456' },\n  'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated' },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":235}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.WebIdentityPrincipal"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst principal = new iam.WebIdentityPrincipal('cognito-identity.amazonaws.com', {\n  'StringEquals': { 'cognito-identity.amazonaws.com:aud': 'us-east-2:12345678-abcd-abcd-abcd-123456' },\n  'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated' },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":3,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"0857ec53373f955628da1d4d15055069bd91dcc25d733a59366b3b0fe1b4eb40"},"799b98faca27f0d0360bf07646c6fef5ee7de16f94ff453ffe7176e2f97dc5b5":{"translations":{"python":{"source":"iam.Role(self, \"Role\",\n    assumed_by=iam.WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", {\n        \"StringEquals\": {\n            \"cognito-identity.amazonaws.com:aud\": \"us-east-2:12345678-abcd-abcd-abcd-123456\"\n        },\n        \"ForAnyValue:StringLike\": {\n            \"cognito-identity.amazonaws.com:amr\": \"unauthenticated\"\n        }\n    }).with_session_tags()\n)","version":"2"},"csharp":{"source":"new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", new Dictionary<string, object> {\n        { \"StringEquals\", new Dictionary<string, string> {\n            { \"cognito-identity.amazonaws.com:aud\", \"us-east-2:12345678-abcd-abcd-abcd-123456\" }\n        } },\n        { \"ForAnyValue:StringLike\", new Dictionary<string, string> {\n            { \"cognito-identity.amazonaws.com:amr\", \"unauthenticated\" }\n        } }\n    }).WithSessionTags()\n});","version":"1"},"java":{"source":"Role.Builder.create(this, \"Role\")\n        .assumedBy(new WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", Map.of(\n                \"StringEquals\", Map.of(\n                        \"cognito-identity.amazonaws.com:aud\", \"us-east-2:12345678-abcd-abcd-abcd-123456\"),\n                \"ForAnyValue:StringLike\", Map.of(\n                        \"cognito-identity.amazonaws.com:amr\", \"unauthenticated\"))).withSessionTags())\n        .build();","version":"1"},"go":{"source":"iam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewWebIdentityPrincipal(jsii.String(\"cognito-identity.amazonaws.com\"), map[string]interface{}{\n\t\t\"StringEquals\": map[string]*string{\n\t\t\t\"cognito-identity.amazonaws.com:aud\": jsii.String(\"us-east-2:12345678-abcd-abcd-abcd-123456\"),\n\t\t},\n\t\t\"ForAnyValue:StringLike\": map[string]*string{\n\t\t\t\"cognito-identity.amazonaws.com:amr\": jsii.String(\"unauthenticated\"),\n\t\t},\n\t}).WithSessionTags(),\n})","version":"1"},"$":{"source":"new iam.Role(this, 'Role', {\n  assumedBy: new iam.WebIdentityPrincipal('cognito-identity.amazonaws.com', {\n    'StringEquals': {\n      'cognito-identity.amazonaws.com:aud': 'us-east-2:12345678-abcd-abcd-abcd-123456',\n     },\n    'ForAnyValue:StringLike': {\n      'cognito-identity.amazonaws.com:amr': 'unauthenticated',\n    },\n  }).withSessionTags(),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":247}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.PrincipalBase#withSessionTags","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.WebIdentityPrincipal","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.WebIdentityPrincipal('cognito-identity.amazonaws.com', {\n    'StringEquals': {\n      'cognito-identity.amazonaws.com:aud': 'us-east-2:12345678-abcd-abcd-abcd-123456',\n     },\n    'ForAnyValue:StringLike': {\n      'cognito-identity.amazonaws.com:amr': 'unauthenticated',\n    },\n  }).withSessionTags(),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":6,"104":1,"193":4,"194":3,"196":1,"197":2,"226":1,"281":5},"fqnsFingerprint":"66b3594d5969c3e7928dc9e3aaa2a7bc28f631e5507275444b6604bb12b4d7d8"},"5c214b1ace9c8a2d60cde42f5501251b159b85c9d3b8fcd3c38efab493d39657":{"translations":{"python":{"source":"policy_document = {\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Sid\": \"FirstStatement\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\"iam:ChangePassword\"],\n        \"Resource\": \"*\"\n    }, {\n        \"Sid\": \"SecondStatement\",\n        \"Effect\": \"Allow\",\n        \"Action\": \"s3:ListAllMyBuckets\",\n        \"Resource\": \"*\"\n    }, {\n        \"Sid\": \"ThirdStatement\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\"s3:List*\", \"s3:Get*\"\n        ],\n        \"Resource\": [\"arn:aws:s3:::confidential-data\", \"arn:aws:s3:::confidential-data/*\"\n        ],\n        \"Condition\": {\"Bool\": {\"aws:_multi_factor_auth_present\": \"true\"}}\n    }\n    ]\n}\n\ncustom_policy_document = iam.PolicyDocument.from_json(policy_document)\n\n# You can pass this document as an initial document to a ManagedPolicy\n# or inline Policy.\nnew_managed_policy = iam.ManagedPolicy(self, \"MyNewManagedPolicy\",\n    document=custom_policy_document\n)\nnew_policy = iam.Policy(self, \"MyNewPolicy\",\n    document=custom_policy_document\n)","version":"2"},"csharp":{"source":"IDictionary<string, object> policyDocument = new Dictionary<string, object> {\n    { \"Version\", \"2012-10-17\" },\n    { \"Statement\", new [] { new Dictionary<string, object> {\n        { \"Sid\", \"FirstStatement\" },\n        { \"Effect\", \"Allow\" },\n        { \"Action\", new [] { \"iam:ChangePassword\" } },\n        { \"Resource\", \"*\" }\n    }, new Dictionary<string, string> {\n        { \"Sid\", \"SecondStatement\" },\n        { \"Effect\", \"Allow\" },\n        { \"Action\", \"s3:ListAllMyBuckets\" },\n        { \"Resource\", \"*\" }\n    }, new Dictionary<string, object> {\n        { \"Sid\", \"ThirdStatement\" },\n        { \"Effect\", \"Allow\" },\n        { \"Action\", new [] { \"s3:List*\", \"s3:Get*\" } },\n        { \"Resource\", new [] { \"arn:aws:s3:::confidential-data\", \"arn:aws:s3:::confidential-data/*\" } },\n        { \"Condition\", new Dictionary<string, IDictionary<string, string>> { { \"Bool\", new Dictionary<string, string> { { \"aws:MultiFactorAuthPresent\", \"true\" } } } } }\n    } } }\n};\n\nvar customPolicyDocument = PolicyDocument.FromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nvar newManagedPolicy = new ManagedPolicy(this, \"MyNewManagedPolicy\", new ManagedPolicyProps {\n    Document = customPolicyDocument\n});\nvar newPolicy = new Policy(this, \"MyNewPolicy\", new PolicyProps {\n    Document = customPolicyDocument\n});","version":"1"},"java":{"source":"Map<String, Object> policyDocument = Map.of(\n        \"Version\", \"2012-10-17\",\n        \"Statement\", List.of(Map.of(\n                \"Sid\", \"FirstStatement\",\n                \"Effect\", \"Allow\",\n                \"Action\", List.of(\"iam:ChangePassword\"),\n                \"Resource\", \"*\"), Map.of(\n                \"Sid\", \"SecondStatement\",\n                \"Effect\", \"Allow\",\n                \"Action\", \"s3:ListAllMyBuckets\",\n                \"Resource\", \"*\"), Map.of(\n                \"Sid\", \"ThirdStatement\",\n                \"Effect\", \"Allow\",\n                \"Action\", List.of(\"s3:List*\", \"s3:Get*\"),\n                \"Resource\", List.of(\"arn:aws:s3:::confidential-data\", \"arn:aws:s3:::confidential-data/*\"),\n                \"Condition\", Map.of(\"Bool\", Map.of(\"aws:MultiFactorAuthPresent\", \"true\")))));\n\nPolicyDocument customPolicyDocument = PolicyDocument.fromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nManagedPolicy newManagedPolicy = ManagedPolicy.Builder.create(this, \"MyNewManagedPolicy\")\n        .document(customPolicyDocument)\n        .build();\nPolicy newPolicy = Policy.Builder.create(this, \"MyNewPolicy\")\n        .document(customPolicyDocument)\n        .build();","version":"1"},"go":{"source":"policyDocument := map[string]interface{}{\n\t\"Version\": jsii.String(\"2012-10-17\"),\n\t\"Statement\": []interface{}{\n\t\tmap[string]interface{}{\n\t\t\t\"Sid\": jsii.String(\"FirstStatement\"),\n\t\t\t\"Effect\": jsii.String(\"Allow\"),\n\t\t\t\"Action\": []*string{\n\t\t\t\tjsii.String(\"iam:ChangePassword\"),\n\t\t\t},\n\t\t\t\"Resource\": jsii.String(\"*\"),\n\t\t},\n\t\tmap[string]*string{\n\t\t\t\"Sid\": jsii.String(\"SecondStatement\"),\n\t\t\t\"Effect\": jsii.String(\"Allow\"),\n\t\t\t\"Action\": jsii.String(\"s3:ListAllMyBuckets\"),\n\t\t\t\"Resource\": jsii.String(\"*\"),\n\t\t},\n\t\tmap[string]interface{}{\n\t\t\t\"Sid\": jsii.String(\"ThirdStatement\"),\n\t\t\t\"Effect\": jsii.String(\"Allow\"),\n\t\t\t\"Action\": []*string{\n\t\t\t\tjsii.String(\"s3:List*\"),\n\t\t\t\tjsii.String(\"s3:Get*\"),\n\t\t\t},\n\t\t\t\"Resource\": []*string{\n\t\t\t\tjsii.String(\"arn:aws:s3:::confidential-data\"),\n\t\t\t\tjsii.String(\"arn:aws:s3:::confidential-data/*\"),\n\t\t\t},\n\t\t\t\"Condition\": map[string]map[string]*string{\n\t\t\t\t\"Bool\": map[string]*string{\n\t\t\t\t\t\"aws:MultiFactorAuthPresent\": jsii.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}\n\ncustomPolicyDocument := iam.PolicyDocument_FromJson(policyDocument)\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nnewManagedPolicy := iam.NewManagedPolicy(this, jsii.String(\"MyNewManagedPolicy\"), &ManagedPolicyProps{\n\tDocument: customPolicyDocument,\n})\nnewPolicy := iam.NewPolicy(this, jsii.String(\"MyNewPolicy\"), &PolicyProps{\n\tDocument: customPolicyDocument,\n})","version":"1"},"$":{"source":"const policyDocument = {\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"FirstStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\"iam:ChangePassword\"],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"SecondStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListAllMyBuckets\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ThirdStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:Get*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::confidential-data\",\n        \"arn:aws:s3:::confidential-data/*\"\n      ],\n      \"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": \"true\"}}\n    }\n  ]\n};\n\nconst customPolicyDocument = iam.PolicyDocument.fromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nconst newManagedPolicy = new iam.ManagedPolicy(this, 'MyNewManagedPolicy', {\n  document: customPolicyDocument,\n});\nconst newPolicy = new iam.Policy(this, 'MyNewPolicy', {\n  document: customPolicyDocument,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":265}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ManagedPolicy","@aws-cdk/aws-iam.ManagedPolicyProps","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.PolicyDocument","@aws-cdk/aws-iam.PolicyDocument#fromJson","@aws-cdk/aws-iam.PolicyProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst policyDocument = {\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"FirstStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\"iam:ChangePassword\"],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"SecondStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListAllMyBuckets\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ThirdStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:Get*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::confidential-data\",\n        \"arn:aws:s3:::confidential-data/*\"\n      ],\n      \"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": \"true\"}}\n    }\n  ]\n};\n\nconst customPolicyDocument = iam.PolicyDocument.fromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nconst newManagedPolicy = new iam.ManagedPolicy(this, 'MyNewManagedPolicy', {\n  document: customPolicyDocument,\n});\nconst newPolicy = new iam.Policy(this, 'MyNewPolicy', {\n  document: customPolicyDocument,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":35,"75":16,"104":2,"192":4,"193":8,"194":4,"196":1,"197":2,"225":4,"242":4,"243":4,"281":19},"fqnsFingerprint":"e8fb9a7a30f64f5caaed1825f7d4b0778ca110aca7444d91662fd345f74b0d7f"},"0c9953cbe048ca635c01a235449f1f0a40abc671afa69c5155dcd933ac01ef47":{"translations":{"python":{"source":"# Directly apply the boundary to a Role you create\n# role: iam.Role\n\n# Apply the boundary to an Role that was implicitly created for you\n# fn: lambda.Function\n\n# Remove a Permissions Boundary that is inherited, for example from the Stack level\n# custom_resource: CustomResource\n# This imports an existing policy.\nboundary = iam.ManagedPolicy.from_managed_policy_arn(self, \"Boundary\", \"arn:aws:iam::123456789012:policy/boundary\")\n\n# This creates a new boundary\nboundary2 = iam.ManagedPolicy(self, \"Boundary2\",\n    statements=[\n        iam.PolicyStatement(\n            effect=iam.Effect.DENY,\n            actions=[\"iam:*\"],\n            resources=[\"*\"]\n        )\n    ]\n)\niam.PermissionsBoundary.of(role).apply(boundary)\niam.PermissionsBoundary.of(fn).apply(boundary)\n\n# Apply the boundary to all Roles in a stack\niam.PermissionsBoundary.of(self).apply(boundary)\niam.PermissionsBoundary.of(custom_resource).clear()","version":"2"},"csharp":{"source":"// Directly apply the boundary to a Role you create\nRole role;\n\n// Apply the boundary to an Role that was implicitly created for you\nFunction fn;\n\n// Remove a Permissions Boundary that is inherited, for example from the Stack level\nCustomResource customResource;\n// This imports an existing policy.\nvar boundary = ManagedPolicy.FromManagedPolicyArn(this, \"Boundary\", \"arn:aws:iam::123456789012:policy/boundary\");\n\n// This creates a new boundary\nvar boundary2 = new ManagedPolicy(this, \"Boundary2\", new ManagedPolicyProps {\n    Statements = new [] {\n        new PolicyStatement(new PolicyStatementProps {\n            Effect = Effect.DENY,\n            Actions = new [] { \"iam:*\" },\n            Resources = new [] { \"*\" }\n        }) }\n});\nPermissionsBoundary.Of(role).Apply(boundary);\nPermissionsBoundary.Of(fn).Apply(boundary);\n\n// Apply the boundary to all Roles in a stack\nPermissionsBoundary.Of(this).Apply(boundary);\nPermissionsBoundary.Of(customResource).Clear();","version":"1"},"java":{"source":"// Directly apply the boundary to a Role you create\nRole role;\n\n// Apply the boundary to an Role that was implicitly created for you\nFunction fn;\n\n// Remove a Permissions Boundary that is inherited, for example from the Stack level\nCustomResource customResource;\n// This imports an existing policy.\nIManagedPolicy boundary = ManagedPolicy.fromManagedPolicyArn(this, \"Boundary\", \"arn:aws:iam::123456789012:policy/boundary\");\n\n// This creates a new boundary\nManagedPolicy boundary2 = ManagedPolicy.Builder.create(this, \"Boundary2\")\n        .statements(List.of(\n            PolicyStatement.Builder.create()\n                    .effect(Effect.DENY)\n                    .actions(List.of(\"iam:*\"))\n                    .resources(List.of(\"*\"))\n                    .build()))\n        .build();\nPermissionsBoundary.of(role).apply(boundary);\nPermissionsBoundary.of(fn).apply(boundary);\n\n// Apply the boundary to all Roles in a stack\nPermissionsBoundary.of(this).apply(boundary);\nPermissionsBoundary.of(customResource).clear();","version":"1"},"go":{"source":"// Directly apply the boundary to a Role you create\nvar role role\n\n// Apply the boundary to an Role that was implicitly created for you\nvar fn function\n\n// Remove a Permissions Boundary that is inherited, for example from the Stack level\nvar customResource customResource\n// This imports an existing policy.\nboundary := iam.ManagedPolicy_FromManagedPolicyArn(this, jsii.String(\"Boundary\"), jsii.String(\"arn:aws:iam::123456789012:policy/boundary\"))\n\n// This creates a new boundary\nboundary2 := iam.NewManagedPolicy(this, jsii.String(\"Boundary2\"), &ManagedPolicyProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tEffect: iam.Effect_DENY,\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"iam:*\"),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t},\n\t\t}),\n\t},\n})\niam.PermissionsBoundary_Of(role).Apply(boundary)\niam.PermissionsBoundary_Of(fn).Apply(boundary)\n\n// Apply the boundary to all Roles in a stack\niam.PermissionsBoundary_Of(this).Apply(boundary)\niam.PermissionsBoundary_Of(customResource).Clear()","version":"1"},"$":{"source":"// This imports an existing policy.\nconst boundary = iam.ManagedPolicy.fromManagedPolicyArn(this, 'Boundary', 'arn:aws:iam::123456789012:policy/boundary');\n\n// This creates a new boundary\nconst boundary2 = new iam.ManagedPolicy(this, 'Boundary2', {\n  statements: [\n    new iam.PolicyStatement({\n      effect: iam.Effect.DENY,\n      actions: ['iam:*'],\n      resources: ['*'],\n    }),\n  ],\n});\n\n// Directly apply the boundary to a Role you create\ndeclare const role: iam.Role;\niam.PermissionsBoundary.of(role).apply(boundary);\n\n// Apply the boundary to an Role that was implicitly created for you\ndeclare const fn: lambda.Function;\niam.PermissionsBoundary.of(fn).apply(boundary);\n\n// Apply the boundary to all Roles in a stack\niam.PermissionsBoundary.of(this).apply(boundary);\n\n// Remove a Permissions Boundary that is inherited, for example from the Stack level\ndeclare const customResource: CustomResource;\niam.PermissionsBoundary.of(customResource).clear();","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":325}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Effect","@aws-cdk/aws-iam.Effect#DENY","@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.ManagedPolicy","@aws-cdk/aws-iam.ManagedPolicy#fromManagedPolicyArn","@aws-cdk/aws-iam.ManagedPolicyProps","@aws-cdk/aws-iam.PermissionsBoundary","@aws-cdk/aws-iam.PermissionsBoundary#apply","@aws-cdk/aws-iam.PermissionsBoundary#clear","@aws-cdk/aws-iam.PermissionsBoundary#of","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","constructs.Construct","constructs.IConstruct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n\n\n// Directly apply the boundary to a Role you create\ndeclare const role: iam.Role;\n\n// Apply the boundary to an Role that was implicitly created for you\ndeclare const fn: lambda.Function;\n\n// Remove a Permissions Boundary that is inherited, for example from the Stack level\ndeclare const customResource: CustomResource;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// This imports an existing policy.\nconst boundary = iam.ManagedPolicy.fromManagedPolicyArn(this, 'Boundary', 'arn:aws:iam::123456789012:policy/boundary');\n\n// This creates a new boundary\nconst boundary2 = new iam.ManagedPolicy(this, 'Boundary2', {\n  statements: [\n    new iam.PolicyStatement({\n      effect: iam.Effect.DENY,\n      actions: ['iam:*'],\n      resources: ['*'],\n    }),\n  ],\n});\niam.PermissionsBoundary.of(role).apply(boundary);\niam.PermissionsBoundary.of(fn).apply(boundary);\n\n// Apply the boundary to all Roles in a stack\niam.PermissionsBoundary.of(this).apply(boundary);\niam.PermissionsBoundary.of(customResource).clear();\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":46,"104":3,"130":3,"153":2,"169":3,"192":3,"193":2,"194":18,"196":9,"197":2,"225":5,"226":4,"242":5,"243":5,"281":4,"290":1},"fqnsFingerprint":"8278b255ab76af67cc2c8b75b451e686c388a56a0d9851ba0039d5aea8c76e46"},"628dff1205f906fa270c69f16ae34e109d9f9da5e6345f717ce9f6af8995aafc":{"translations":{"python":{"source":"provider = iam.OpenIdConnectProvider(self, \"MyProvider\",\n    url=\"https://openid/connect\",\n    client_ids=[\"myclient1\", \"myclient2\"]\n)","version":"2"},"csharp":{"source":"var provider = new OpenIdConnectProvider(this, \"MyProvider\", new OpenIdConnectProviderProps {\n    Url = \"https://openid/connect\",\n    ClientIds = new [] { \"myclient1\", \"myclient2\" }\n});","version":"1"},"java":{"source":"OpenIdConnectProvider provider = OpenIdConnectProvider.Builder.create(this, \"MyProvider\")\n        .url(\"https://openid/connect\")\n        .clientIds(List.of(\"myclient1\", \"myclient2\"))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewOpenIdConnectProvider(this, jsii.String(\"MyProvider\"), &OpenIdConnectProviderProps{\n\tUrl: jsii.String(\"https://openid/connect\"),\n\tClientIds: []*string{\n\t\tjsii.String(\"myclient1\"),\n\t\tjsii.String(\"myclient2\"),\n\t},\n})","version":"1"},"$":{"source":"const provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":376}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.OpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":5,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"b04022714a70bbee044a80b48ea1af28111074690a7c16c36bf95baf947a3dc1"},"43e12444450a7b42e702d7ce8866ab15bcdd5c78d4a1a2831894fc22d0e08532":{"translations":{"python":{"source":"import aws_cdk.aws_cognito as cognito\n\n# my_provider: iam.OpenIdConnectProvider\n\ncognito.CfnIdentityPool(self, \"IdentityPool\",\n    open_id_connect_provider_arns=[my_provider.open_id_connect_provider_arn],\n    # And the other properties for your identity pool\n    allow_unauthenticated_identities=False\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Cognito;\n\nOpenIdConnectProvider myProvider;\n\nnew CfnIdentityPool(this, \"IdentityPool\", new CfnIdentityPoolProps {\n    OpenIdConnectProviderArns = new [] { myProvider.OpenIdConnectProviderArn },\n    // And the other properties for your identity pool\n    AllowUnauthenticatedIdentities = false\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cognito.*;\n\nOpenIdConnectProvider myProvider;\n\nCfnIdentityPool.Builder.create(this, \"IdentityPool\")\n        .openIdConnectProviderArns(List.of(myProvider.getOpenIdConnectProviderArn()))\n        // And the other properties for your identity pool\n        .allowUnauthenticatedIdentities(false)\n        .build();","version":"1"},"go":{"source":"import cognito \"github.com/aws-samples/dummy/awscdkawscognito\"\n\nvar myProvider openIdConnectProvider\n\ncognito.NewCfnIdentityPool(this, jsii.String(\"IdentityPool\"), &CfnIdentityPoolProps{\n\tOpenIdConnectProviderArns: []*string{\n\t\tmyProvider.OpenIdConnectProviderArn,\n\t},\n\t// And the other properties for your identity pool\n\tAllowUnauthenticatedIdentities: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":394}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.CfnIdentityPool","@aws-cdk/aws-cognito.CfnIdentityPoolProps","@aws-cdk/aws-iam.OpenIdConnectProvider#openIdConnectProviderArn","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":10,"91":1,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":2,"197":1,"225":1,"226":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"93c1918b1194eb4865620aa976992bea87c692318059076e4fe312a912a2e1bd"},"3bf35e7c632d4ad0c69b30b25ddb739f76443899c57c1c9d192b365ba766ffa6":{"translations":{"python":{"source":"provider = iam.OpenIdConnectProvider(self, \"MyProvider\",\n    url=\"https://openid/connect\",\n    client_ids=[\"myclient1\", \"myclient2\"]\n)\nprincipal = iam.OpenIdConnectPrincipal(provider)","version":"2"},"csharp":{"source":"var provider = new OpenIdConnectProvider(this, \"MyProvider\", new OpenIdConnectProviderProps {\n    Url = \"https://openid/connect\",\n    ClientIds = new [] { \"myclient1\", \"myclient2\" }\n});\nvar principal = new OpenIdConnectPrincipal(provider);","version":"1"},"java":{"source":"OpenIdConnectProvider provider = OpenIdConnectProvider.Builder.create(this, \"MyProvider\")\n        .url(\"https://openid/connect\")\n        .clientIds(List.of(\"myclient1\", \"myclient2\"))\n        .build();\nOpenIdConnectPrincipal principal = new OpenIdConnectPrincipal(provider);","version":"1"},"go":{"source":"provider := iam.NewOpenIdConnectProvider(this, jsii.String(\"MyProvider\"), &OpenIdConnectProviderProps{\n\tUrl: jsii.String(\"https://openid/connect\"),\n\tClientIds: []*string{\n\t\tjsii.String(\"myclient1\"),\n\t\tjsii.String(\"myclient2\"),\n\t},\n})\nprincipal := iam.NewOpenIdConnectPrincipal(provider)","version":"1"},"$":{"source":"const provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\nconst principal = new iam.OpenIdConnectPrincipal(provider);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":407}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IOpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectPrincipal","@aws-cdk/aws-iam.OpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\nconst principal = new iam.OpenIdConnectPrincipal(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":9,"104":1,"192":1,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"281":2},"fqnsFingerprint":"93588abcfef131023979ddb2d0710585951dc1f9e4b58497cdd83ec25d91d97e"},"dcd18efa8e0a447e0ae88b3dfbb92fc68fd8502f438a1c439e31f9ef27995777":{"translations":{"python":{"source":"iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)","version":"2"},"csharp":{"source":"new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});","version":"1"},"java":{"source":"SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();","version":"1"},"go":{"source":"iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})","version":"1"},"$":{"source":"new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":425}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":6,"104":1,"193":1,"194":3,"196":1,"197":1,"226":1,"281":1},"fqnsFingerprint":"9c2c6cc8f96569cb68ed38f257780060361487416ff5108a748f600915ae7174"},"ab94f5eb27eb8e0dd6e227403616989519421fd5f09a012f684215ced7fd4b7f":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\nprincipal = iam.SamlPrincipal(provider, {\n    \"StringEquals\": {\n        \"SAML:iss\": \"issuer\"\n    }\n})","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nvar principal = new SamlPrincipal(provider, new Dictionary<string, object> {\n    { \"StringEquals\", new Dictionary<string, string> {\n        { \"SAML:iss\", \"issuer\" }\n    } }\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nSamlPrincipal principal = new SamlPrincipal(provider, Map.of(\n        \"StringEquals\", Map.of(\n                \"SAML:iss\", \"issuer\")));","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\nprincipal := iam.NewSamlPrincipal(provider, map[string]interface{}{\n\t\"StringEquals\": map[string]*string{\n\t\t\"SAML:iss\": jsii.String(\"issuer\"),\n\t},\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nconst principal = new iam.SamlPrincipal(provider, {\n  StringEquals: {\n    'SAML:iss': 'issuer',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":433}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlPrincipal","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nconst principal = new iam.SamlPrincipal(provider, {\n  StringEquals: {\n    'SAML:iss': 'issuer',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":12,"104":1,"193":3,"194":4,"196":1,"197":2,"225":2,"242":2,"243":2,"281":3},"fqnsFingerprint":"cdec2d83ffe1e24eeb5fb76b3c5af0ce6d66d0d92971599029ab1fb7f8eaec95"},"38c78441b2e23d2cf244836dff43cf6b60b7f18f46a393202af1c2865ff27d45":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\niam.Role(self, \"Role\",\n    assumed_by=iam.SamlConsolePrincipal(provider)\n)","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nnew Role(this, \"Role\", new RoleProps {\n    AssumedBy = new SamlConsolePrincipal(provider)\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nRole.Builder.create(this, \"Role\")\n        .assumedBy(new SamlConsolePrincipal(provider))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\niam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewSamlConsolePrincipal(provider),\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":447}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.SamlConsolePrincipal","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":13,"104":2,"193":2,"194":5,"196":1,"197":3,"225":1,"226":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"d4029b4631f3c0ea567e8f3d59888b23fe8bfac0f63be5f6e2f112e47412bd9c"},"de0439b0be45d01db3e288ad1d247098b2db883afb42e39720c121ff26753e20":{"translations":{"python":{"source":"user = iam.User(self, \"MyUser\")","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\");","version":"1"},"java":{"source":"User user = new User(this, \"MyUser\");","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"MyUser\"))","version":"1"},"$":{"source":"const user = new iam.User(this, 'MyUser');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":460}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":3,"104":1,"194":1,"197":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"8d12a90616523adba80e0e795f5795b714a31fafaf2ada921103521dd1ddbb5b"},"44d09e89c2a14c92b8b375afcee53468bcfc388be7c81f5860f46ac89e2729f4":{"translations":{"python":{"source":"user = iam.User.from_user_name(self, \"MyImportedUserByName\", \"johnsmith\")","version":"2"},"csharp":{"source":"var user = User.FromUserName(this, \"MyImportedUserByName\", \"johnsmith\");","version":"1"},"java":{"source":"IUser user = User.fromUserName(this, \"MyImportedUserByName\", \"johnsmith\");","version":"1"},"go":{"source":"user := iam.User_FromUserName(this, jsii.String(\"MyImportedUserByName\"), jsii.String(\"johnsmith\"))","version":"1"},"$":{"source":"const user = iam.User.fromUserName(this, 'MyImportedUserByName', 'johnsmith');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":466}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#fromUserName","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = iam.User.fromUserName(this, 'MyImportedUserByName', 'johnsmith');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"5cb22a991a7f4174dccd7a44f56515fdd183929c52aeff3390ff3bab9ecb4365"},"797205faa0d454d06b5c8d5f6e41ed50dd579a15867c87f6a3b35a5c79b0cd06":{"translations":{"python":{"source":"user = iam.User.from_user_arn(self, \"MyImportedUserByArn\", \"arn:aws:iam::123456789012:user/johnsmith\")","version":"2"},"csharp":{"source":"var user = User.FromUserArn(this, \"MyImportedUserByArn\", \"arn:aws:iam::123456789012:user/johnsmith\");","version":"1"},"java":{"source":"IUser user = User.fromUserArn(this, \"MyImportedUserByArn\", \"arn:aws:iam::123456789012:user/johnsmith\");","version":"1"},"go":{"source":"user := iam.User_FromUserArn(this, jsii.String(\"MyImportedUserByArn\"), jsii.String(\"arn:aws:iam::123456789012:user/johnsmith\"))","version":"1"},"$":{"source":"const user = iam.User.fromUserArn(this, 'MyImportedUserByArn', 'arn:aws:iam::123456789012:user/johnsmith');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":472}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#fromUserArn","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = iam.User.fromUserArn(this, 'MyImportedUserByArn', 'arn:aws:iam::123456789012:user/johnsmith');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"fbdf8eb7350ef384226cceeccaaa46a4c55271ba5b214394a9355b5d77ff45c5"},"f46aa7bcee4fe5727bca293ad38fcddbb23268144ffabe7284b46c31f08765ef":{"translations":{"python":{"source":"user = iam.User.from_user_attributes(self, \"MyImportedUserByAttributes\",\n    user_arn=\"arn:aws:iam::123456789012:user/johnsmith\"\n)","version":"2"},"csharp":{"source":"var user = User.FromUserAttributes(this, \"MyImportedUserByAttributes\", new UserAttributes {\n    UserArn = \"arn:aws:iam::123456789012:user/johnsmith\"\n});","version":"1"},"java":{"source":"IUser user = User.fromUserAttributes(this, \"MyImportedUserByAttributes\", UserAttributes.builder()\n        .userArn(\"arn:aws:iam::123456789012:user/johnsmith\")\n        .build());","version":"1"},"go":{"source":"user := iam.User_FromUserAttributes(this, jsii.String(\"MyImportedUserByAttributes\"), &UserAttributes{\n\tUserArn: jsii.String(\"arn:aws:iam::123456789012:user/johnsmith\"),\n})","version":"1"},"$":{"source":"const user = iam.User.fromUserAttributes(this, 'MyImportedUserByAttributes', {\n  userArn: 'arn:aws:iam::123456789012:user/johnsmith',\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":478}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#fromUserAttributes","@aws-cdk/aws-iam.UserAttributes","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = iam.User.fromUserAttributes(this, 'MyImportedUserByAttributes', {\n  userArn: 'arn:aws:iam::123456789012:user/johnsmith',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":5,"104":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"fc2a539de134f0f4cd74d4fbddd10b44362ee1660dd9b7109c5d0bc74810c030"},"9acc7a025c871f9fec7f160154b08dd5582877f3a472630262c8eb5c30bf4342":{"translations":{"python":{"source":"user = iam.User(self, \"MyUser\")\naccess_key = iam.AccessKey(self, \"MyAccessKey\", user=user)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\");\nvar accessKey = new AccessKey(this, \"MyAccessKey\", new AccessKeyProps { User = user });","version":"1"},"java":{"source":"User user = new User(this, \"MyUser\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"MyAccessKey\").user(user).build();","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"MyUser\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"MyAccessKey\"), &AccessKeyProps{\n\tUser: user,\n})","version":"1"},"$":{"source":"const user = new iam.User(this, 'MyUser');\nconst accessKey = new iam.AccessKey(this, 'MyAccessKey', { user: user });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":489}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser');\nconst accessKey = new iam.AccessKey(this, 'MyAccessKey', { user: user });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":8,"104":2,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"281":1},"fqnsFingerprint":"f715f9be8f5d6dd302aad93f79c54705fc3e28c0533d9df19426cf6828cfbbc4"},"3ff5054fdb0c10ff352b8a33dbeba9cf36b3d5f3ff8bd27c35195787c2e4983e":{"translations":{"python":{"source":"user = iam.User(self, \"MyUser\")\naccess_key = iam.AccessKey(self, \"MyAccessKey\", user=user, serial=1)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\");\nvar accessKey = new AccessKey(this, \"MyAccessKey\", new AccessKeyProps { User = user, Serial = 1 });","version":"1"},"java":{"source":"User user = new User(this, \"MyUser\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"MyAccessKey\").user(user).serial(1).build();","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"MyUser\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"MyAccessKey\"), &AccessKeyProps{\n\tUser: user,\n\tSerial: jsii.Number(1),\n})","version":"1"},"$":{"source":"const user = new iam.User(this, 'MyUser');\nconst accessKey = new iam.AccessKey(this, 'MyAccessKey', { user: user, serial: 1 });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":497}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser');\nconst accessKey = new iam.AccessKey(this, 'MyAccessKey', { user: user, serial: 1 });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":1,"10":2,"75":9,"104":2,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"281":2},"fqnsFingerprint":"f715f9be8f5d6dd302aad93f79c54705fc3e28c0533d9df19426cf6828cfbbc4"},"32d365b787746cdead9b335a3cf2a1c19ad3282dca80af7e7d20f903f904e879":{"translations":{"python":{"source":"group = iam.Group(self, \"MyGroup\")","version":"2"},"csharp":{"source":"var group = new Group(this, \"MyGroup\");","version":"1"},"java":{"source":"Group group = new Group(this, \"MyGroup\");","version":"1"},"go":{"source":"group := iam.NewGroup(this, jsii.String(\"MyGroup\"))","version":"1"},"$":{"source":"const group = new iam.Group(this, 'MyGroup');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":509}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst group = new iam.Group(this, 'MyGroup');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":3,"104":1,"194":1,"197":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"5493d0408549d3ffe5cdfeb26ff71e7ffc402bf714883ff7acc38e00ab2092e9"},"c30dd91a2b2422ad8b27a95b9b6c8e9694088d11c10dc34c23c4f9b768c17c40":{"translations":{"python":{"source":"group = iam.Group.from_group_arn(self, \"MyImportedGroupByArn\", \"arn:aws:iam::account-id:group/group-name\")","version":"2"},"csharp":{"source":"var group = Group.FromGroupArn(this, \"MyImportedGroupByArn\", \"arn:aws:iam::account-id:group/group-name\");","version":"1"},"java":{"source":"IGroup group = Group.fromGroupArn(this, \"MyImportedGroupByArn\", \"arn:aws:iam::account-id:group/group-name\");","version":"1"},"go":{"source":"group := iam.Group_FromGroupArn(this, jsii.String(\"MyImportedGroupByArn\"), jsii.String(\"arn:aws:iam::account-id:group/group-name\"))","version":"1"},"$":{"source":"const group = iam.Group.fromGroupArn(this, 'MyImportedGroupByArn', 'arn:aws:iam::account-id:group/group-name');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":515}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.Group#fromGroupArn","@aws-cdk/aws-iam.IGroup","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst group = iam.Group.fromGroupArn(this, 'MyImportedGroupByArn', 'arn:aws:iam::account-id:group/group-name');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"c14df51cccd9342f4fd3df2421026f9f84d3abeb32b9258b7a2ef9400d23ae55"},"0bc3f69cd3dea0bc02e9dc3cbcbe16ea9fc60d56dd205212e5beeace49b784a6":{"translations":{"python":{"source":"group = iam.Group.from_group_name(self, \"MyImportedGroupByName\", \"group-name\")","version":"2"},"csharp":{"source":"var group = Group.FromGroupName(this, \"MyImportedGroupByName\", \"group-name\");","version":"1"},"java":{"source":"IGroup group = Group.fromGroupName(this, \"MyImportedGroupByName\", \"group-name\");","version":"1"},"go":{"source":"group := iam.Group_FromGroupName(this, jsii.String(\"MyImportedGroupByName\"), jsii.String(\"group-name\"))","version":"1"},"$":{"source":"const group = iam.Group.fromGroupName(this, 'MyImportedGroupByName', 'group-name');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":521}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.Group#fromGroupName","@aws-cdk/aws-iam.IGroup","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst group = iam.Group.fromGroupName(this, 'MyImportedGroupByName', 'group-name');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"5b729392ab4ac14a218ec612088b88bf6b361ea282e09202ee3dc97bd4aef5b9"},"1c90c513609a9dccd1784297864552057d22136768e7832dd8b685cd44e6e77c":{"translations":{"python":{"source":"user = iam.User(self, \"MyUser\") # or User.fromUserName(stack, 'User', 'johnsmith');\ngroup = iam.Group(self, \"MyGroup\") # or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.add_to_group(group)\n# or\ngroup.add_user(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\"); // or User.fromUserName(stack, 'User', 'johnsmith');\nvar group = new Group(this, \"MyGroup\"); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.AddToGroup(group);\n// or\ngroup.AddUser(user);","version":"1"},"java":{"source":"User user = new User(this, \"MyUser\"); // or User.fromUserName(stack, 'User', 'johnsmith');\nGroup group = new Group(this, \"MyGroup\"); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"MyUser\")) // or User.fromUserName(stack, 'User', 'johnsmith');\ngroup := iam.NewGroup(this, jsii.String(\"MyGroup\")) // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.AddToGroup(group)\n// or\ngroup.addUser(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'MyUser'); // or User.fromUserName(stack, 'User', 'johnsmith');\nconst group = new iam.Group(this, 'MyGroup'); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-iam"},"field":{"field":"markdown","line":527}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.IGroup","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#addToGroup","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser'); // or User.fromUserName(stack, 'User', 'johnsmith');\nconst group = new iam.Group(this, 'MyGroup'); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":12,"104":2,"194":4,"196":2,"197":2,"225":2,"226":2,"242":2,"243":2},"fqnsFingerprint":"4b551b1b326b6c22fceca09e2e88f31eb72a9dae7e0ea9153196cebb9a3affde"},"5d1a0c2d8a4eec57a236053cd1767e2048baab3c1313b96b37cd5241b939143b":{"translations":{"python":{"source":"# Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(access_key.secret_access_key.to_string())\nsecretsmanager.Secret(self, \"Secret\",\n    secret_string_beta1=secret_value\n)","version":"2"},"csharp":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nvar user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(accessKey.SecretAccessKey.ToString());\nnew Secret(this, \"Secret\", new SecretProps {\n    SecretStringBeta1 = secretValue\n});","version":"1"},"java":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nUser user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nSecret.Builder.create(this, \"Secret\")\n        .secretStringBeta1(secretValue)\n        .build();","version":"1"},"go":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(accessKey.SecretAccessKey.ToString())\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tSecretStringBeta1: secretValue,\n})","version":"1"},"$":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AccessKey"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.Intrinsic#toString","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":18,"104":3,"193":2,"194":7,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1,"282":1},"fqnsFingerprint":"29e1126638fc32b5acc17e92e9911afde7dddfc6dc9556daccc72357bc607ad5"},"fa675cb8590a9a42a315e5995bdfa0ddff7cce2b4cefd6f6c4de95461204e44d":{"translations":{"python":{"source":"# Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(access_key.secret_access_key.to_string())\nsecretsmanager.Secret(self, \"Secret\",\n    secret_string_beta1=secret_value\n)","version":"2"},"csharp":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nvar user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(accessKey.SecretAccessKey.ToString());\nnew Secret(this, \"Secret\", new SecretProps {\n    SecretStringBeta1 = secretValue\n});","version":"1"},"java":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nUser user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nSecret.Builder.create(this, \"Secret\")\n        .secretStringBeta1(secretValue)\n        .build();","version":"1"},"go":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(accessKey.SecretAccessKey.ToString())\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tSecretStringBeta1: secretValue,\n})","version":"1"},"$":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AccessKeyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.Intrinsic#toString","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":18,"104":3,"193":2,"194":7,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1,"282":1},"fqnsFingerprint":"29e1126638fc32b5acc17e92e9911afde7dddfc6dc9556daccc72357bc607ad5"},"f5907fa69b557d38f3d0b7eb471108a8ae826eeda4a75c0ab96544a277d25d92":{"translations":{"python":{"source":"cluster = neptune.DatabaseCluster(self, \"Cluster\",\n    vpc=vpc,\n    instance_type=neptune.InstanceType.R5_LARGE,\n    iam_authentication=True\n)\nrole = iam.Role(self, \"DBRole\", assumed_by=iam.AccountPrincipal(self.account))\ncluster.grant_connect(role)","version":"2"},"csharp":{"source":"var cluster = new DatabaseCluster(this, \"Cluster\", new DatabaseClusterProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.R5_LARGE,\n    IamAuthentication = true\n});\nvar role = new Role(this, \"DBRole\", new RoleProps { AssumedBy = new AccountPrincipal(Account) });\ncluster.GrantConnect(role);","version":"1"},"java":{"source":"DatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Cluster\")\n        .vpc(vpc)\n        .instanceType(InstanceType.R5_LARGE)\n        .iamAuthentication(true)\n        .build();\nRole role = Role.Builder.create(this, \"DBRole\").assumedBy(new AccountPrincipal(this.account)).build();\ncluster.grantConnect(role);","version":"1"},"go":{"source":"cluster := neptune.NewDatabaseCluster(this, jsii.String(\"Cluster\"), &DatabaseClusterProps{\n\tVpc: Vpc,\n\tInstanceType: neptune.InstanceType_R5_LARGE(),\n\tIamAuthentication: jsii.Boolean(true),\n})\nrole := iam.NewRole(this, jsii.String(\"DBRole\"), &RoleProps{\n\tAssumedBy: iam.NewAccountPrincipal(this.Account),\n})\ncluster.GrantConnect(role)","version":"1"},"$":{"source":"const cluster = new neptune.DatabaseCluster(this, 'Cluster', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  iamAuthentication: true, // Optional - will be automatically set if you call grantConnect().\n});\nconst role = new iam.Role(this, 'DBRole', { assumedBy: new iam.AccountPrincipal(this.account) });\ncluster.grantConnect(role); // Grant the role connection access to the DB.","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AccountPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-iam.AccountPrincipal","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-neptune.DatabaseCluster","@aws-cdk/aws-neptune.DatabaseClusterBase#grantConnect","@aws-cdk/aws-neptune.DatabaseClusterProps","@aws-cdk/aws-neptune.InstanceType","@aws-cdk/aws-neptune.InstanceType#R5_LARGE","@aws-cdk/core.Stack#account","constructs.Construct"],"fullSource":"import { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as neptune from '@aws-cdk/aws-neptune';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2 });\n\n    // Code snippet begins after !show marker below\n/// !show\nconst cluster = new neptune.DatabaseCluster(this, 'Cluster', {\n  vpc,\n  instanceType: neptune.InstanceType.R5_LARGE,\n  iamAuthentication: true, // Optional - will be automatically set if you call grantConnect().\n});\nconst role = new iam.Role(this, 'DBRole', { assumedBy: new iam.AccountPrincipal(this.account) });\ncluster.grantConnect(role);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":19,"104":3,"106":1,"193":2,"194":7,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":3,"282":1},"fqnsFingerprint":"405f6619e8986db6880bc95099cdae72206f229895ed76bbbe429bf1ea3dafc9"},"3d3ceb9082e5e860e7209b679e38493fa1dc30d94048d7f72ff3c6d389ab9a01":{"translations":{"python":{"source":"bucket = s3.Bucket(self, \"MyBucket\")\nresult = bucket.add_to_resource_policy(iam.PolicyStatement(\n    actions=[\"s3:GetObject\"],\n    resources=[bucket.arn_for_objects(\"file.txt\")],\n    principals=[iam.AccountRootPrincipal()]\n))","version":"2"},"csharp":{"source":"var bucket = new Bucket(this, \"MyBucket\");\nvar result = bucket.AddToResourcePolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"s3:GetObject\" },\n    Resources = new [] { bucket.ArnForObjects(\"file.txt\") },\n    Principals = new [] { new AccountRootPrincipal() }\n}));","version":"1"},"java":{"source":"Bucket bucket = new Bucket(this, \"MyBucket\");\nAddToResourcePolicyResult result = bucket.addToResourcePolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"s3:GetObject\"))\n        .resources(List.of(bucket.arnForObjects(\"file.txt\")))\n        .principals(List.of(new AccountRootPrincipal()))\n        .build());","version":"1"},"go":{"source":"bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nresult := bucket.AddToResourcePolicy(iam.NewPolicyStatement(&PolicyStatementProps{\n\tActions: []*string{\n\t\tjsii.String(\"s3:GetObject\"),\n\t},\n\tResources: []*string{\n\t\tbucket.ArnForObjects(jsii.String(\"file.txt\")),\n\t},\n\tPrincipals: []iPrincipal{\n\t\tiam.NewAccountRootPrincipal(),\n\t},\n}))","version":"1"},"$":{"source":"const bucket = new s3.Bucket(this, 'MyBucket');\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AccountRootPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountRootPrincipal","@aws-cdk/aws-iam.AddToResourcePolicyResult","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketBase#addToResourcePolicy","@aws-cdk/aws-s3.BucketBase#arnForObjects","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":15,"104":1,"192":3,"193":1,"194":5,"196":2,"197":3,"225":2,"242":2,"243":2,"281":3},"fqnsFingerprint":"a778d8abc0cdf1955ecbc04cd4faad86b519c612100f15c96cdd0d83c9c6436e"},"ac984c4f10fd031f6a22d2a53a7eea263105bc58e7d3764b3561eb85f97510f8":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# dependable: cdk.IDependable\n\nadd_to_principal_policy_result = iam.AddToPrincipalPolicyResult(\n    statement_added=False,\n\n    # the properties below are optional\n    policy_dependable=dependable\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nIDependable dependable;\nvar addToPrincipalPolicyResult = new AddToPrincipalPolicyResult {\n    StatementAdded = false,\n\n    // the properties below are optional\n    PolicyDependable = dependable\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nIDependable dependable;\n\nAddToPrincipalPolicyResult addToPrincipalPolicyResult = AddToPrincipalPolicyResult.builder()\n        .statementAdded(false)\n\n        // the properties below are optional\n        .policyDependable(dependable)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar dependable iDependable\n\naddToPrincipalPolicyResult := &AddToPrincipalPolicyResult{\n\tStatementAdded: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tPolicyDependable: dependable,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\nconst addToPrincipalPolicyResult: iam.AddToPrincipalPolicyResult = {\n  statementAdded: false,\n\n  // the properties below are optional\n  policyDependable: dependable,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AddToPrincipalPolicyResult"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AddToPrincipalPolicyResult","@aws-cdk/core.IDependable"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addToPrincipalPolicyResult: iam.AddToPrincipalPolicyResult = {\n  statementAdded: false,\n\n  // the properties below are optional\n  policyDependable: dependable,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":11,"91":1,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"12e85fd706399845a081c89b98c16b28dcd0e843be408c8e2a435fa954e84d8b"},"92f8f6080e8554809a372707d2c75b8f8442b5a430984c1565d3ad812a24285c":{"translations":{"python":{"source":"bucket = s3.Bucket.from_bucket_name(self, \"existingBucket\", \"bucket-name\")\n\n# No policy statement will be added to the resource\nresult = bucket.add_to_resource_policy(iam.PolicyStatement(\n    actions=[\"s3:GetObject\"],\n    resources=[bucket.arn_for_objects(\"file.txt\")],\n    principals=[iam.AccountRootPrincipal()]\n))","version":"2"},"csharp":{"source":"var bucket = Bucket.FromBucketName(this, \"existingBucket\", \"bucket-name\");\n\n// No policy statement will be added to the resource\nvar result = bucket.AddToResourcePolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"s3:GetObject\" },\n    Resources = new [] { bucket.ArnForObjects(\"file.txt\") },\n    Principals = new [] { new AccountRootPrincipal() }\n}));","version":"1"},"java":{"source":"IBucket bucket = Bucket.fromBucketName(this, \"existingBucket\", \"bucket-name\");\n\n// No policy statement will be added to the resource\nAddToResourcePolicyResult result = bucket.addToResourcePolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"s3:GetObject\"))\n        .resources(List.of(bucket.arnForObjects(\"file.txt\")))\n        .principals(List.of(new AccountRootPrincipal()))\n        .build());","version":"1"},"go":{"source":"bucket := s3.Bucket_FromBucketName(this, jsii.String(\"existingBucket\"), jsii.String(\"bucket-name\"))\n\n// No policy statement will be added to the resource\nresult := bucket.AddToResourcePolicy(iam.NewPolicyStatement(&PolicyStatementProps{\n\tActions: []*string{\n\t\tjsii.String(\"s3:GetObject\"),\n\t},\n\tResources: []*string{\n\t\tbucket.ArnForObjects(jsii.String(\"file.txt\")),\n\t},\n\tPrincipals: []iPrincipal{\n\t\tiam.NewAccountRootPrincipal(),\n\t},\n}))","version":"1"},"$":{"source":"const bucket = s3.Bucket.fromBucketName(this, 'existingBucket', 'bucket-name');\n\n// No policy statement will be added to the resource\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AddToResourcePolicyResult"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountRootPrincipal","@aws-cdk/aws-iam.AddToResourcePolicyResult","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.Bucket#fromBucketName","@aws-cdk/aws-s3.IBucket","@aws-cdk/aws-s3.IBucket#addToResourcePolicy","@aws-cdk/aws-s3.IBucket#arnForObjects","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = s3.Bucket.fromBucketName(this, 'existingBucket', 'bucket-name');\n\n// No policy statement will be added to the resource\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":16,"104":1,"192":3,"193":1,"194":6,"196":3,"197":2,"225":2,"242":2,"243":2,"281":3},"fqnsFingerprint":"4a22b3abdaec767737dad35503037c1a6ef123d7fc35b711b17563e160f46580"},"f11292a9a3f2076c471c889145e135aea2323a8e903c4629aea97e2810563e96":{"translations":{"python":{"source":"topic = sns.Topic(self, \"Topic\")\ntopic_policy = sns.TopicPolicy(self, \"TopicPolicy\",\n    topics=[topic]\n)\n\ntopic_policy.document.add_statements(iam.PolicyStatement(\n    actions=[\"sns:Subscribe\"],\n    principals=[iam.AnyPrincipal()],\n    resources=[topic.topic_arn]\n))","version":"2"},"csharp":{"source":"var topic = new Topic(this, \"Topic\");\nvar topicPolicy = new TopicPolicy(this, \"TopicPolicy\", new TopicPolicyProps {\n    Topics = new [] { topic }\n});\n\ntopicPolicy.Document.AddStatements(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"sns:Subscribe\" },\n    Principals = new [] { new AnyPrincipal() },\n    Resources = new [] { topic.TopicArn }\n}));","version":"1"},"java":{"source":"Topic topic = new Topic(this, \"Topic\");\nTopicPolicy topicPolicy = TopicPolicy.Builder.create(this, \"TopicPolicy\")\n        .topics(List.of(topic))\n        .build();\n\ntopicPolicy.document.addStatements(PolicyStatement.Builder.create()\n        .actions(List.of(\"sns:Subscribe\"))\n        .principals(List.of(new AnyPrincipal()))\n        .resources(List.of(topic.getTopicArn()))\n        .build());","version":"1"},"go":{"source":"topic := sns.NewTopic(this, jsii.String(\"Topic\"))\ntopicPolicy := sns.NewTopicPolicy(this, jsii.String(\"TopicPolicy\"), &TopicPolicyProps{\n\tTopics: []iTopic{\n\t\ttopic,\n\t},\n})\n\ntopicPolicy.Document.AddStatements(iam.NewPolicyStatement(&PolicyStatementProps{\n\tActions: []*string{\n\t\tjsii.String(\"sns:Subscribe\"),\n\t},\n\tPrincipals: []iPrincipal{\n\t\tiam.NewAnyPrincipal(),\n\t},\n\tResources: []*string{\n\t\ttopic.TopicArn,\n\t},\n}))","version":"1"},"$":{"source":"const topic = new sns.Topic(this, 'Topic');\nconst topicPolicy = new sns.TopicPolicy(this, 'TopicPolicy', {\n  topics: [topic],\n});\n\ntopicPolicy.document.addStatements(new iam.PolicyStatement({\n  actions: [\"sns:Subscribe\"],\n  principals: [new iam.AnyPrincipal()],\n  resources: [topic.topicArn],\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.AnyPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AnyPrincipal","@aws-cdk/aws-iam.PolicyDocument#addStatements","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-sns.Topic","@aws-cdk/aws-sns.Topic#topicArn","@aws-cdk/aws-sns.TopicPolicy","@aws-cdk/aws-sns.TopicPolicy#document","@aws-cdk/aws-sns.TopicPolicyProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as subscriptions from '@aws-cdk/aws-sns-subscriptions';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst topic = new sns.Topic(this, 'Topic');\nconst topicPolicy = new sns.TopicPolicy(this, 'TopicPolicy', {\n  topics: [topic],\n});\n\ntopicPolicy.document.addStatements(new iam.PolicyStatement({\n  actions: [\"sns:Subscribe\"],\n  principals: [new iam.AnyPrincipal()],\n  resources: [topic.topicArn],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":20,"104":2,"192":4,"193":2,"194":7,"196":1,"197":4,"225":2,"226":1,"242":2,"243":2,"281":4},"fqnsFingerprint":"65af37bccb6a0832b946357f9d68912dd1f4e51f6b657f47f25621cebe5f13ec"},"705c3f3bd0152b40c2faf0b4ea9a7769e319e95b324a7c6b8bce306e3e99c605":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\nanyone = iam.Anyone()","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar anyone = new Anyone();","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nAnyone anyone = new Anyone();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nanyone := iam.NewAnyone()","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst anyone = new iam.Anyone();","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.Anyone"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Anyone"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst anyone = new iam.Anyone();\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"28cc8d879eddd4e39ead9bb92240648c2e35fd5765132dc1259a2afdae00f3f2"},"923fff3d8558f3eaaddcfa70206a010821f424edad1821d2bb0581c7306baa4a":{"translations":{"python":{"source":"# network_load_balancer1: elbv2.NetworkLoadBalancer\n# network_load_balancer2: elbv2.NetworkLoadBalancer\n\n\nec2.VpcEndpointService(self, \"EndpointService\",\n    vpc_endpoint_service_load_balancers=[network_load_balancer1, network_load_balancer2],\n    acceptance_required=True,\n    allowed_principals=[iam.ArnPrincipal(\"arn:aws:iam::123456789012:root\")]\n)","version":"2"},"csharp":{"source":"NetworkLoadBalancer networkLoadBalancer1;\nNetworkLoadBalancer networkLoadBalancer2;\n\n\nnew VpcEndpointService(this, \"EndpointService\", new VpcEndpointServiceProps {\n    VpcEndpointServiceLoadBalancers = new [] { networkLoadBalancer1, networkLoadBalancer2 },\n    AcceptanceRequired = true,\n    AllowedPrincipals = new [] { new ArnPrincipal(\"arn:aws:iam::123456789012:root\") }\n});","version":"1"},"java":{"source":"NetworkLoadBalancer networkLoadBalancer1;\nNetworkLoadBalancer networkLoadBalancer2;\n\n\nVpcEndpointService.Builder.create(this, \"EndpointService\")\n        .vpcEndpointServiceLoadBalancers(List.of(networkLoadBalancer1, networkLoadBalancer2))\n        .acceptanceRequired(true)\n        .allowedPrincipals(List.of(new ArnPrincipal(\"arn:aws:iam::123456789012:root\")))\n        .build();","version":"1"},"go":{"source":"var networkLoadBalancer1 networkLoadBalancer\nvar networkLoadBalancer2 networkLoadBalancer\n\n\nec2.NewVpcEndpointService(this, jsii.String(\"EndpointService\"), &VpcEndpointServiceProps{\n\tVpcEndpointServiceLoadBalancers: []iVpcEndpointServiceLoadBalancer{\n\t\tnetworkLoadBalancer1,\n\t\tnetworkLoadBalancer2,\n\t},\n\tAcceptanceRequired: jsii.Boolean(true),\n\tAllowedPrincipals: []arnPrincipal{\n\t\tiam.NewArnPrincipal(jsii.String(\"arn:aws:iam::123456789012:root\")),\n\t},\n})","version":"1"},"$":{"source":"declare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.ArnPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.VpcEndpointService","@aws-cdk/aws-ec2.VpcEndpointServiceProps","@aws-cdk/aws-iam.ArnPrincipal","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Aspects, Construct, Duration, Fn, Size, Stack, StackProps } from '@aws-cdk/core';\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport s3 = require('@aws-cdk/aws-s3');\nimport iam = require('@aws-cdk/aws-iam');\nimport logs = require('@aws-cdk/aws-logs');\nimport ssm = require('@aws-cdk/aws-ssm');\nimport autoscaling = require('@aws-cdk/aws-autoscaling');\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\nimport rds = require('@aws-cdk/aws-rds');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":15,"104":1,"106":1,"130":2,"153":2,"169":2,"192":2,"193":1,"194":2,"197":2,"225":2,"226":1,"242":2,"243":2,"281":3,"290":1},"fqnsFingerprint":"bd02394de110b9b58206765188c3b8621a0d6fda2c92c6c3c9c9a77626966f95"},"e9963537f4d2f20407186ba35efb0116ff570beacd61fbdeb255fce2ac58e5f5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncanonical_user_principal = iam.CanonicalUserPrincipal(\"canonicalUserId\")","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar canonicalUserPrincipal = new CanonicalUserPrincipal(\"canonicalUserId\");","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCanonicalUserPrincipal canonicalUserPrincipal = new CanonicalUserPrincipal(\"canonicalUserId\");","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncanonicalUserPrincipal := iam.NewCanonicalUserPrincipal(jsii.String(\"canonicalUserId\"))","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst canonicalUserPrincipal = new iam.CanonicalUserPrincipal('canonicalUserId');","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CanonicalUserPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CanonicalUserPrincipal"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst canonicalUserPrincipal = new iam.CanonicalUserPrincipal('canonicalUserId');\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"a60cc39f86be51f05afd4a904e7fbb97872a6fadf5f40f50feed5cc83a50e937"},"6295d4278936d208ba1426c307582cd9d2737bbd66acfa0cbea83d8d261299c5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_access_key = iam.CfnAccessKey(self, \"MyCfnAccessKey\",\n    user_name=\"userName\",\n\n    # the properties below are optional\n    serial=123,\n    status=\"status\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnAccessKey = new CfnAccessKey(this, \"MyCfnAccessKey\", new CfnAccessKeyProps {\n    UserName = \"userName\",\n\n    // the properties below are optional\n    Serial = 123,\n    Status = \"status\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnAccessKey cfnAccessKey = CfnAccessKey.Builder.create(this, \"MyCfnAccessKey\")\n        .userName(\"userName\")\n\n        // the properties below are optional\n        .serial(123)\n        .status(\"status\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnAccessKey := iam.NewCfnAccessKey(this, jsii.String(\"MyCfnAccessKey\"), &CfnAccessKeyProps{\n\tUserName: jsii.String(\"userName\"),\n\n\t// the properties below are optional\n\tSerial: jsii.Number(123),\n\tStatus: jsii.String(\"status\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnAccessKey = new iam.CfnAccessKey(this, 'MyCfnAccessKey', {\n  userName: 'userName',\n\n  // the properties below are optional\n  serial: 123,\n  status: 'status',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnAccessKey"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnAccessKey","@aws-cdk/aws-iam.CfnAccessKeyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAccessKey = new iam.CfnAccessKey(this, 'MyCfnAccessKey', {\n  userName: 'userName',\n\n  // the properties below are optional\n  serial: 123,\n  status: 'status',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":7,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"8bc1597bc140e7dab56ff7ed967e13ef2fc528260dc3d4087ae17109b25a2261"},"e46e5d597a04b2ba031d1d6cb0473d004982d76befcd7134f40a378f537373d8":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_access_key_props = iam.CfnAccessKeyProps(\n    user_name=\"userName\",\n\n    # the properties below are optional\n    serial=123,\n    status=\"status\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnAccessKeyProps = new CfnAccessKeyProps {\n    UserName = \"userName\",\n\n    // the properties below are optional\n    Serial = 123,\n    Status = \"status\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnAccessKeyProps cfnAccessKeyProps = CfnAccessKeyProps.builder()\n        .userName(\"userName\")\n\n        // the properties below are optional\n        .serial(123)\n        .status(\"status\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnAccessKeyProps := &CfnAccessKeyProps{\n\tUserName: jsii.String(\"userName\"),\n\n\t// the properties below are optional\n\tSerial: jsii.Number(123),\n\tStatus: jsii.String(\"status\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnAccessKeyProps: iam.CfnAccessKeyProps = {\n  userName: 'userName',\n\n  // the properties below are optional\n  serial: 123,\n  status: 'status',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnAccessKeyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnAccessKeyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAccessKeyProps: iam.CfnAccessKeyProps = {\n  userName: 'userName',\n\n  // the properties below are optional\n  serial: 123,\n  status: 'status',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":3,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"2ccf90967a2b833f4816bf58e72a3259d34620022406ccc0bf1156f881540c0c"},"836c917aa87541ef552d6a2d9509419ed2765c2c9f2b236a57c73340dcf8a498":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_group = iam.CfnGroup(self, \"MyCfnGroup\",\n    group_name=\"groupName\",\n    managed_policy_arns=[\"managedPolicyArns\"],\n    path=\"path\",\n    policies=[iam.CfnGroup.PolicyProperty(\n        policy_document=policy_document,\n        policy_name=\"policyName\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnGroup = new CfnGroup(this, \"MyCfnGroup\", new CfnGroupProps {\n    GroupName = \"groupName\",\n    ManagedPolicyArns = new [] { \"managedPolicyArns\" },\n    Path = \"path\",\n    Policies = new [] { new PolicyProperty {\n        PolicyDocument = policyDocument,\n        PolicyName = \"policyName\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnGroup cfnGroup = CfnGroup.Builder.create(this, \"MyCfnGroup\")\n        .groupName(\"groupName\")\n        .managedPolicyArns(List.of(\"managedPolicyArns\"))\n        .path(\"path\")\n        .policies(List.of(PolicyProperty.builder()\n                .policyDocument(policyDocument)\n                .policyName(\"policyName\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnGroup := iam.NewCfnGroup(this, jsii.String(\"MyCfnGroup\"), &CfnGroupProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tManagedPolicyArns: []*string{\n\t\tjsii.String(\"managedPolicyArns\"),\n\t},\n\tPath: jsii.String(\"path\"),\n\tPolicies: []interface{}{\n\t\t&PolicyProperty{\n\t\t\tPolicyDocument: policyDocument,\n\t\t\tPolicyName: jsii.String(\"policyName\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnGroup = new iam.CfnGroup(this, 'MyCfnGroup', /* all optional props */ {\n  groupName: 'groupName',\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnGroup"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnGroup","@aws-cdk/aws-iam.CfnGroupProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnGroup = new iam.CfnGroup(this, 'MyCfnGroup', /* all optional props */ {\n  groupName: 'groupName',\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":12,"104":1,"125":1,"130":1,"192":2,"193":2,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"4b93bc69dac16313fb9cdd6ad7a794b36cbd92486046cbb5bb54069c84cdc704"},"d500287d1a152c047f213e7b96275fc04b95c04ea60f6cfa83295cacd7196c18":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\npolicy_property = iam.CfnGroup.PolicyProperty(\n    policy_document=policy_document,\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar policyProperty = new PolicyProperty {\n    PolicyDocument = policyDocument,\n    PolicyName = \"policyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nPolicyProperty policyProperty = PolicyProperty.builder()\n        .policyDocument(policyDocument)\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\npolicyProperty := &PolicyProperty{\n\tPolicyDocument: policyDocument,\n\tPolicyName: jsii.String(\"policyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst policyProperty: iam.CfnGroup.PolicyProperty = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnGroup.PolicyProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnGroup.PolicyProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policyProperty: iam.CfnGroup.PolicyProperty = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"125":1,"130":1,"153":2,"169":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"5e5f4da813827deae0a1dc6565fbc10bfb37782c1bd25d7e0818fd7c5a91f0f3"},"efb844086d28f92fcfb177ad85bfc2d8fd58ce8dd64d82d62ceb855fe4656226":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_group_props = iam.CfnGroupProps(\n    group_name=\"groupName\",\n    managed_policy_arns=[\"managedPolicyArns\"],\n    path=\"path\",\n    policies=[iam.CfnGroup.PolicyProperty(\n        policy_document=policy_document,\n        policy_name=\"policyName\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnGroupProps = new CfnGroupProps {\n    GroupName = \"groupName\",\n    ManagedPolicyArns = new [] { \"managedPolicyArns\" },\n    Path = \"path\",\n    Policies = new [] { new PolicyProperty {\n        PolicyDocument = policyDocument,\n        PolicyName = \"policyName\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnGroupProps cfnGroupProps = CfnGroupProps.builder()\n        .groupName(\"groupName\")\n        .managedPolicyArns(List.of(\"managedPolicyArns\"))\n        .path(\"path\")\n        .policies(List.of(PolicyProperty.builder()\n                .policyDocument(policyDocument)\n                .policyName(\"policyName\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnGroupProps := &CfnGroupProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tManagedPolicyArns: []*string{\n\t\tjsii.String(\"managedPolicyArns\"),\n\t},\n\tPath: jsii.String(\"path\"),\n\tPolicies: []interface{}{\n\t\t&PolicyProperty{\n\t\t\tPolicyDocument: policyDocument,\n\t\t\tPolicyName: jsii.String(\"policyName\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnGroupProps: iam.CfnGroupProps = {\n  groupName: 'groupName',\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnGroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnGroupProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnGroupProps: iam.CfnGroupProps = {\n  groupName: 'groupName',\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":12,"125":1,"130":1,"153":1,"169":1,"192":2,"193":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"79d474fb4dd1ed5fba5fa884cb40f4dc05df43a4125502b2f9868a0811353e7f"},"2c9e18092d183af7be0c8e2702e00311fb432cb0c2e855bf96bc10e03df1f311":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_instance_profile = iam.CfnInstanceProfile(self, \"MyCfnInstanceProfile\",\n    roles=[\"roles\"],\n\n    # the properties below are optional\n    instance_profile_name=\"instanceProfileName\",\n    path=\"path\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnInstanceProfile = new CfnInstanceProfile(this, \"MyCfnInstanceProfile\", new CfnInstanceProfileProps {\n    Roles = new [] { \"roles\" },\n\n    // the properties below are optional\n    InstanceProfileName = \"instanceProfileName\",\n    Path = \"path\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnInstanceProfile cfnInstanceProfile = CfnInstanceProfile.Builder.create(this, \"MyCfnInstanceProfile\")\n        .roles(List.of(\"roles\"))\n\n        // the properties below are optional\n        .instanceProfileName(\"instanceProfileName\")\n        .path(\"path\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnInstanceProfile := iam.NewCfnInstanceProfile(this, jsii.String(\"MyCfnInstanceProfile\"), &CfnInstanceProfileProps{\n\tRoles: []*string{\n\t\tjsii.String(\"roles\"),\n\t},\n\n\t// the properties below are optional\n\tInstanceProfileName: jsii.String(\"instanceProfileName\"),\n\tPath: jsii.String(\"path\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnInstanceProfile = new iam.CfnInstanceProfile(this, 'MyCfnInstanceProfile', {\n  roles: ['roles'],\n\n  // the properties below are optional\n  instanceProfileName: 'instanceProfileName',\n  path: 'path',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnInstanceProfile"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnInstanceProfile","@aws-cdk/aws-iam.CfnInstanceProfileProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnInstanceProfile = new iam.CfnInstanceProfile(this, 'MyCfnInstanceProfile', {\n  roles: ['roles'],\n\n  // the properties below are optional\n  instanceProfileName: 'instanceProfileName',\n  path: 'path',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"b3f936904f12594f56024a05d411338cdedab3f6e185d95dd3909ff4373af316"},"f322f29e2c26c5fe8d4193321351e2c6e92fa05d6a734646e9c52459b081ad81":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_instance_profile_props = iam.CfnInstanceProfileProps(\n    roles=[\"roles\"],\n\n    # the properties below are optional\n    instance_profile_name=\"instanceProfileName\",\n    path=\"path\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnInstanceProfileProps = new CfnInstanceProfileProps {\n    Roles = new [] { \"roles\" },\n\n    // the properties below are optional\n    InstanceProfileName = \"instanceProfileName\",\n    Path = \"path\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnInstanceProfileProps cfnInstanceProfileProps = CfnInstanceProfileProps.builder()\n        .roles(List.of(\"roles\"))\n\n        // the properties below are optional\n        .instanceProfileName(\"instanceProfileName\")\n        .path(\"path\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnInstanceProfileProps := &CfnInstanceProfileProps{\n\tRoles: []*string{\n\t\tjsii.String(\"roles\"),\n\t},\n\n\t// the properties below are optional\n\tInstanceProfileName: jsii.String(\"instanceProfileName\"),\n\tPath: jsii.String(\"path\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnInstanceProfileProps: iam.CfnInstanceProfileProps = {\n  roles: ['roles'],\n\n  // the properties below are optional\n  instanceProfileName: 'instanceProfileName',\n  path: 'path',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnInstanceProfileProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnInstanceProfileProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnInstanceProfileProps: iam.CfnInstanceProfileProps = {\n  roles: ['roles'],\n\n  // the properties below are optional\n  instanceProfileName: 'instanceProfileName',\n  path: 'path',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"1969d18088658c869656fe84c574f89292e1de0ab16022f338127941df7ed13d"},"a65042bda11f96598aac54fd77f1c165bb7398bda466bead72cccff6ef9f8212":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_managed_policy = iam.CfnManagedPolicy(self, \"MyCfnManagedPolicy\",\n    policy_document=policy_document,\n\n    # the properties below are optional\n    description=\"description\",\n    groups=[\"groups\"],\n    managed_policy_name=\"managedPolicyName\",\n    path=\"path\",\n    roles=[\"roles\"],\n    users=[\"users\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnManagedPolicy = new CfnManagedPolicy(this, \"MyCfnManagedPolicy\", new CfnManagedPolicyProps {\n    PolicyDocument = policyDocument,\n\n    // the properties below are optional\n    Description = \"description\",\n    Groups = new [] { \"groups\" },\n    ManagedPolicyName = \"managedPolicyName\",\n    Path = \"path\",\n    Roles = new [] { \"roles\" },\n    Users = new [] { \"users\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnManagedPolicy cfnManagedPolicy = CfnManagedPolicy.Builder.create(this, \"MyCfnManagedPolicy\")\n        .policyDocument(policyDocument)\n\n        // the properties below are optional\n        .description(\"description\")\n        .groups(List.of(\"groups\"))\n        .managedPolicyName(\"managedPolicyName\")\n        .path(\"path\")\n        .roles(List.of(\"roles\"))\n        .users(List.of(\"users\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnManagedPolicy := iam.NewCfnManagedPolicy(this, jsii.String(\"MyCfnManagedPolicy\"), &CfnManagedPolicyProps{\n\tPolicyDocument: policyDocument,\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tGroups: []*string{\n\t\tjsii.String(\"groups\"),\n\t},\n\tManagedPolicyName: jsii.String(\"managedPolicyName\"),\n\tPath: jsii.String(\"path\"),\n\tRoles: []*string{\n\t\tjsii.String(\"roles\"),\n\t},\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnManagedPolicy = new iam.CfnManagedPolicy(this, 'MyCfnManagedPolicy', {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  groups: ['groups'],\n  managedPolicyName: 'managedPolicyName',\n  path: 'path',\n  roles: ['roles'],\n  users: ['users'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnManagedPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnManagedPolicy","@aws-cdk/aws-iam.CfnManagedPolicyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnManagedPolicy = new iam.CfnManagedPolicy(this, 'MyCfnManagedPolicy', {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  groups: ['groups'],\n  managedPolicyName: 'managedPolicyName',\n  path: 'path',\n  roles: ['roles'],\n  users: ['users'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":8,"75":13,"104":1,"125":1,"130":1,"192":3,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"6f83b8507f3ef07dc17cb65b047e71f8ca305d64e7380abee49faa5c945dec0a"},"a196ac881c0b58ffe672508524e03b18a58fa8d770b04b8970ca4d4cac457750":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_managed_policy_props = iam.CfnManagedPolicyProps(\n    policy_document=policy_document,\n\n    # the properties below are optional\n    description=\"description\",\n    groups=[\"groups\"],\n    managed_policy_name=\"managedPolicyName\",\n    path=\"path\",\n    roles=[\"roles\"],\n    users=[\"users\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnManagedPolicyProps = new CfnManagedPolicyProps {\n    PolicyDocument = policyDocument,\n\n    // the properties below are optional\n    Description = \"description\",\n    Groups = new [] { \"groups\" },\n    ManagedPolicyName = \"managedPolicyName\",\n    Path = \"path\",\n    Roles = new [] { \"roles\" },\n    Users = new [] { \"users\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnManagedPolicyProps cfnManagedPolicyProps = CfnManagedPolicyProps.builder()\n        .policyDocument(policyDocument)\n\n        // the properties below are optional\n        .description(\"description\")\n        .groups(List.of(\"groups\"))\n        .managedPolicyName(\"managedPolicyName\")\n        .path(\"path\")\n        .roles(List.of(\"roles\"))\n        .users(List.of(\"users\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnManagedPolicyProps := &CfnManagedPolicyProps{\n\tPolicyDocument: policyDocument,\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tGroups: []*string{\n\t\tjsii.String(\"groups\"),\n\t},\n\tManagedPolicyName: jsii.String(\"managedPolicyName\"),\n\tPath: jsii.String(\"path\"),\n\tRoles: []*string{\n\t\tjsii.String(\"roles\"),\n\t},\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnManagedPolicyProps: iam.CfnManagedPolicyProps = {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  groups: ['groups'],\n  managedPolicyName: 'managedPolicyName',\n  path: 'path',\n  roles: ['roles'],\n  users: ['users'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnManagedPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnManagedPolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnManagedPolicyProps: iam.CfnManagedPolicyProps = {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  groups: ['groups'],\n  managedPolicyName: 'managedPolicyName',\n  path: 'path',\n  roles: ['roles'],\n  users: ['users'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":13,"125":1,"130":1,"153":1,"169":1,"192":3,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"9c01cf5187615a63736d60d4ccd1ba00107c52ee48cf08a2d8a2ed178ac8aff5"},"c699e23772c5e27e542e1313bee8000571fafea4da79da9cde7d34bb9cfd3118":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_oIDCProvider = iam.CfnOIDCProvider(self, \"MyCfnOIDCProvider\",\n    thumbprint_list=[\"thumbprintList\"],\n\n    # the properties below are optional\n    client_id_list=[\"clientIdList\"],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    url=\"url\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnOIDCProvider = new CfnOIDCProvider(this, \"MyCfnOIDCProvider\", new CfnOIDCProviderProps {\n    ThumbprintList = new [] { \"thumbprintList\" },\n\n    // the properties below are optional\n    ClientIdList = new [] { \"clientIdList\" },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Url = \"url\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnOIDCProvider cfnOIDCProvider = CfnOIDCProvider.Builder.create(this, \"MyCfnOIDCProvider\")\n        .thumbprintList(List.of(\"thumbprintList\"))\n\n        // the properties below are optional\n        .clientIdList(List.of(\"clientIdList\"))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .url(\"url\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnOIDCProvider := iam.NewCfnOIDCProvider(this, jsii.String(\"MyCfnOIDCProvider\"), &CfnOIDCProviderProps{\n\tThumbprintList: []*string{\n\t\tjsii.String(\"thumbprintList\"),\n\t},\n\n\t// the properties below are optional\n\tClientIdList: []*string{\n\t\tjsii.String(\"clientIdList\"),\n\t},\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUrl: jsii.String(\"url\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnOIDCProvider = new iam.CfnOIDCProvider(this, 'MyCfnOIDCProvider', {\n  thumbprintList: ['thumbprintList'],\n\n  // the properties below are optional\n  clientIdList: ['clientIdList'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  url: 'url',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnOIDCProvider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnOIDCProvider","@aws-cdk/aws-iam.CfnOIDCProviderProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnOIDCProvider = new iam.CfnOIDCProvider(this, 'MyCfnOIDCProvider', {\n  thumbprintList: ['thumbprintList'],\n\n  // the properties below are optional\n  clientIdList: ['clientIdList'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  url: 'url',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":10,"104":1,"192":3,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"917ea61c4331e535e93c4a0a79bd4b3cb5b19f75d2cbb14ab5e325da721811a2"},"f4ee7ad1907fa0fd4e749d995cc4bd28b6c1e150733f753f90a5e435a57cf492":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_oIDCProvider_props = iam.CfnOIDCProviderProps(\n    thumbprint_list=[\"thumbprintList\"],\n\n    # the properties below are optional\n    client_id_list=[\"clientIdList\"],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    url=\"url\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnOIDCProviderProps = new CfnOIDCProviderProps {\n    ThumbprintList = new [] { \"thumbprintList\" },\n\n    // the properties below are optional\n    ClientIdList = new [] { \"clientIdList\" },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Url = \"url\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnOIDCProviderProps cfnOIDCProviderProps = CfnOIDCProviderProps.builder()\n        .thumbprintList(List.of(\"thumbprintList\"))\n\n        // the properties below are optional\n        .clientIdList(List.of(\"clientIdList\"))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .url(\"url\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnOIDCProviderProps := &CfnOIDCProviderProps{\n\tThumbprintList: []*string{\n\t\tjsii.String(\"thumbprintList\"),\n\t},\n\n\t// the properties below are optional\n\tClientIdList: []*string{\n\t\tjsii.String(\"clientIdList\"),\n\t},\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUrl: jsii.String(\"url\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnOIDCProviderProps: iam.CfnOIDCProviderProps = {\n  thumbprintList: ['thumbprintList'],\n\n  // the properties below are optional\n  clientIdList: ['clientIdList'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  url: 'url',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnOIDCProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnOIDCProviderProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnOIDCProviderProps: iam.CfnOIDCProviderProps = {\n  thumbprintList: ['thumbprintList'],\n\n  // the properties below are optional\n  clientIdList: ['clientIdList'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  url: 'url',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":1,"169":1,"192":3,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"69b5eee7b119fc892e7343d5d35b326407651efe919f3a19bfef59f2a2b13b34"},"5ea0e7e4cd51a7354463db0f98395f4414fc7aabe49b2369d48c54aedf27427b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_policy = iam.CfnPolicy(self, \"MyCfnPolicy\",\n    policy_document=policy_document,\n    policy_name=\"policyName\",\n\n    # the properties below are optional\n    groups=[\"groups\"],\n    roles=[\"roles\"],\n    users=[\"users\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnPolicy = new CfnPolicy(this, \"MyCfnPolicy\", new CfnPolicyProps {\n    PolicyDocument = policyDocument,\n    PolicyName = \"policyName\",\n\n    // the properties below are optional\n    Groups = new [] { \"groups\" },\n    Roles = new [] { \"roles\" },\n    Users = new [] { \"users\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnPolicy cfnPolicy = CfnPolicy.Builder.create(this, \"MyCfnPolicy\")\n        .policyDocument(policyDocument)\n        .policyName(\"policyName\")\n\n        // the properties below are optional\n        .groups(List.of(\"groups\"))\n        .roles(List.of(\"roles\"))\n        .users(List.of(\"users\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnPolicy := iam.NewCfnPolicy(this, jsii.String(\"MyCfnPolicy\"), &CfnPolicyProps{\n\tPolicyDocument: policyDocument,\n\tPolicyName: jsii.String(\"policyName\"),\n\n\t// the properties below are optional\n\tGroups: []*string{\n\t\tjsii.String(\"groups\"),\n\t},\n\tRoles: []*string{\n\t\tjsii.String(\"roles\"),\n\t},\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnPolicy = new iam.CfnPolicy(this, 'MyCfnPolicy', {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n\n  // the properties below are optional\n  groups: ['groups'],\n  roles: ['roles'],\n  users: ['users'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnPolicy","@aws-cdk/aws-iam.CfnPolicyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPolicy = new iam.CfnPolicy(this, 'MyCfnPolicy', {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n\n  // the properties below are optional\n  groups: ['groups'],\n  roles: ['roles'],\n  users: ['users'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":11,"104":1,"125":1,"130":1,"192":3,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"188e107fdd68e3a2bd20abbb437ee4ea4ee9e85fa055595ee730dbbc974e8231"},"5333b208d05e04d3f5f17bf98252e282e439f27cbd0c6ca92c90fe1d690d9f35":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_policy_props = iam.CfnPolicyProps(\n    policy_document=policy_document,\n    policy_name=\"policyName\",\n\n    # the properties below are optional\n    groups=[\"groups\"],\n    roles=[\"roles\"],\n    users=[\"users\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnPolicyProps = new CfnPolicyProps {\n    PolicyDocument = policyDocument,\n    PolicyName = \"policyName\",\n\n    // the properties below are optional\n    Groups = new [] { \"groups\" },\n    Roles = new [] { \"roles\" },\n    Users = new [] { \"users\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnPolicyProps cfnPolicyProps = CfnPolicyProps.builder()\n        .policyDocument(policyDocument)\n        .policyName(\"policyName\")\n\n        // the properties below are optional\n        .groups(List.of(\"groups\"))\n        .roles(List.of(\"roles\"))\n        .users(List.of(\"users\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnPolicyProps := &CfnPolicyProps{\n\tPolicyDocument: policyDocument,\n\tPolicyName: jsii.String(\"policyName\"),\n\n\t// the properties below are optional\n\tGroups: []*string{\n\t\tjsii.String(\"groups\"),\n\t},\n\tRoles: []*string{\n\t\tjsii.String(\"roles\"),\n\t},\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnPolicyProps: iam.CfnPolicyProps = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n\n  // the properties below are optional\n  groups: ['groups'],\n  roles: ['roles'],\n  users: ['users'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnPolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPolicyProps: iam.CfnPolicyProps = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n\n  // the properties below are optional\n  groups: ['groups'],\n  roles: ['roles'],\n  users: ['users'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":11,"125":1,"130":1,"153":1,"169":1,"192":3,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"5f211b1c1be2369fb800de64051aea2e1f1bb3cea82f3ba4a19fb666b383893a"},"d29703d1bef1277b54d64138bec56b96f46219d121a3b73d0a6daff0bd647b58":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# assume_role_policy_document: Any\n# policy_document: Any\n\ncfn_role = iam.CfnRole(self, \"MyCfnRole\",\n    assume_role_policy_document=assume_role_policy_document,\n\n    # the properties below are optional\n    description=\"description\",\n    managed_policy_arns=[\"managedPolicyArns\"],\n    max_session_duration=123,\n    path=\"path\",\n    permissions_boundary=\"permissionsBoundary\",\n    policies=[iam.CfnRole.PolicyProperty(\n        policy_document=policy_document,\n        policy_name=\"policyName\"\n    )],\n    role_name=\"roleName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar assumeRolePolicyDocument;\nvar policyDocument;\n\nvar cfnRole = new CfnRole(this, \"MyCfnRole\", new CfnRoleProps {\n    AssumeRolePolicyDocument = assumeRolePolicyDocument,\n\n    // the properties below are optional\n    Description = \"description\",\n    ManagedPolicyArns = new [] { \"managedPolicyArns\" },\n    MaxSessionDuration = 123,\n    Path = \"path\",\n    PermissionsBoundary = \"permissionsBoundary\",\n    Policies = new [] { new PolicyProperty {\n        PolicyDocument = policyDocument,\n        PolicyName = \"policyName\"\n    } },\n    RoleName = \"roleName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject assumeRolePolicyDocument;\nObject policyDocument;\n\nCfnRole cfnRole = CfnRole.Builder.create(this, \"MyCfnRole\")\n        .assumeRolePolicyDocument(assumeRolePolicyDocument)\n\n        // the properties below are optional\n        .description(\"description\")\n        .managedPolicyArns(List.of(\"managedPolicyArns\"))\n        .maxSessionDuration(123)\n        .path(\"path\")\n        .permissionsBoundary(\"permissionsBoundary\")\n        .policies(List.of(PolicyProperty.builder()\n                .policyDocument(policyDocument)\n                .policyName(\"policyName\")\n                .build()))\n        .roleName(\"roleName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar assumeRolePolicyDocument interface{}\nvar policyDocument interface{}\n\ncfnRole := iam.NewCfnRole(this, jsii.String(\"MyCfnRole\"), &CfnRoleProps{\n\tAssumeRolePolicyDocument: assumeRolePolicyDocument,\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tManagedPolicyArns: []*string{\n\t\tjsii.String(\"managedPolicyArns\"),\n\t},\n\tMaxSessionDuration: jsii.Number(123),\n\tPath: jsii.String(\"path\"),\n\tPermissionsBoundary: jsii.String(\"permissionsBoundary\"),\n\tPolicies: []interface{}{\n\t\t&PolicyProperty{\n\t\t\tPolicyDocument: policyDocument,\n\t\t\tPolicyName: jsii.String(\"policyName\"),\n\t\t},\n\t},\n\tRoleName: jsii.String(\"roleName\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const assumeRolePolicyDocument: any;\ndeclare const policyDocument: any;\nconst cfnRole = new iam.CfnRole(this, 'MyCfnRole', {\n  assumeRolePolicyDocument: assumeRolePolicyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  managedPolicyArns: ['managedPolicyArns'],\n  maxSessionDuration: 123,\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  roleName: 'roleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnRole"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnRole","@aws-cdk/aws-iam.CfnRoleProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const assumeRolePolicyDocument: any;\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRole = new iam.CfnRole(this, 'MyCfnRole', {\n  assumeRolePolicyDocument: assumeRolePolicyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  managedPolicyArns: ['managedPolicyArns'],\n  maxSessionDuration: 123,\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  roleName: 'roleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":10,"75":21,"104":1,"125":2,"130":2,"192":3,"193":3,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"924fb5a722f9d765ec8fc96e094de347a5810946572bd9051423edb41206dadc"},"60bd70d3ebff62e3f2c80c68a6ca3e13672ea5a4dd26b6a5aeea1f191b188edd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\npolicy_property = iam.CfnRole.PolicyProperty(\n    policy_document=policy_document,\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar policyProperty = new PolicyProperty {\n    PolicyDocument = policyDocument,\n    PolicyName = \"policyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nPolicyProperty policyProperty = PolicyProperty.builder()\n        .policyDocument(policyDocument)\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\npolicyProperty := &PolicyProperty{\n\tPolicyDocument: policyDocument,\n\tPolicyName: jsii.String(\"policyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst policyProperty: iam.CfnRole.PolicyProperty = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnRole.PolicyProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnRole.PolicyProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policyProperty: iam.CfnRole.PolicyProperty = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"125":1,"130":1,"153":2,"169":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"6716b16769a1d4aab7ad5f0ab2750c0ab10bf5463829e78051bd8687d717813f"},"3301862f66b8a4fe11205fa54379c427068977dd567f4e3dc32abaae40f8fde0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# assume_role_policy_document: Any\n# policy_document: Any\n\ncfn_role_props = iam.CfnRoleProps(\n    assume_role_policy_document=assume_role_policy_document,\n\n    # the properties below are optional\n    description=\"description\",\n    managed_policy_arns=[\"managedPolicyArns\"],\n    max_session_duration=123,\n    path=\"path\",\n    permissions_boundary=\"permissionsBoundary\",\n    policies=[iam.CfnRole.PolicyProperty(\n        policy_document=policy_document,\n        policy_name=\"policyName\"\n    )],\n    role_name=\"roleName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar assumeRolePolicyDocument;\nvar policyDocument;\n\nvar cfnRoleProps = new CfnRoleProps {\n    AssumeRolePolicyDocument = assumeRolePolicyDocument,\n\n    // the properties below are optional\n    Description = \"description\",\n    ManagedPolicyArns = new [] { \"managedPolicyArns\" },\n    MaxSessionDuration = 123,\n    Path = \"path\",\n    PermissionsBoundary = \"permissionsBoundary\",\n    Policies = new [] { new PolicyProperty {\n        PolicyDocument = policyDocument,\n        PolicyName = \"policyName\"\n    } },\n    RoleName = \"roleName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject assumeRolePolicyDocument;\nObject policyDocument;\n\nCfnRoleProps cfnRoleProps = CfnRoleProps.builder()\n        .assumeRolePolicyDocument(assumeRolePolicyDocument)\n\n        // the properties below are optional\n        .description(\"description\")\n        .managedPolicyArns(List.of(\"managedPolicyArns\"))\n        .maxSessionDuration(123)\n        .path(\"path\")\n        .permissionsBoundary(\"permissionsBoundary\")\n        .policies(List.of(PolicyProperty.builder()\n                .policyDocument(policyDocument)\n                .policyName(\"policyName\")\n                .build()))\n        .roleName(\"roleName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar assumeRolePolicyDocument interface{}\nvar policyDocument interface{}\n\ncfnRoleProps := &CfnRoleProps{\n\tAssumeRolePolicyDocument: assumeRolePolicyDocument,\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tManagedPolicyArns: []*string{\n\t\tjsii.String(\"managedPolicyArns\"),\n\t},\n\tMaxSessionDuration: jsii.Number(123),\n\tPath: jsii.String(\"path\"),\n\tPermissionsBoundary: jsii.String(\"permissionsBoundary\"),\n\tPolicies: []interface{}{\n\t\t&PolicyProperty{\n\t\t\tPolicyDocument: policyDocument,\n\t\t\tPolicyName: jsii.String(\"policyName\"),\n\t\t},\n\t},\n\tRoleName: jsii.String(\"roleName\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const assumeRolePolicyDocument: any;\ndeclare const policyDocument: any;\nconst cfnRoleProps: iam.CfnRoleProps = {\n  assumeRolePolicyDocument: assumeRolePolicyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  managedPolicyArns: ['managedPolicyArns'],\n  maxSessionDuration: 123,\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  roleName: 'roleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnRoleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnRoleProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const assumeRolePolicyDocument: any;\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRoleProps: iam.CfnRoleProps = {\n  assumeRolePolicyDocument: assumeRolePolicyDocument,\n\n  // the properties below are optional\n  description: 'description',\n  managedPolicyArns: ['managedPolicyArns'],\n  maxSessionDuration: 123,\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  roleName: 'roleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":9,"75":21,"125":2,"130":2,"153":1,"169":1,"192":3,"193":3,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"29b7d9a193165d4e34caa3d67010c7fabfca2f81edb36e839eb7075df541f86a"},"f4e1e5b48da3e4a3b8a10987067d4021597b3d079672e08ea6bd77bd7cfb2793":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_sAMLProvider = iam.CfnSAMLProvider(self, \"MyCfnSAMLProvider\",\n    saml_metadata_document=\"samlMetadataDocument\",\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnSAMLProvider = new CfnSAMLProvider(this, \"MyCfnSAMLProvider\", new CfnSAMLProviderProps {\n    SamlMetadataDocument = \"samlMetadataDocument\",\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnSAMLProvider cfnSAMLProvider = CfnSAMLProvider.Builder.create(this, \"MyCfnSAMLProvider\")\n        .samlMetadataDocument(\"samlMetadataDocument\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnSAMLProvider := iam.NewCfnSAMLProvider(this, jsii.String(\"MyCfnSAMLProvider\"), &CfnSAMLProviderProps{\n\tSamlMetadataDocument: jsii.String(\"samlMetadataDocument\"),\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnSAMLProvider = new iam.CfnSAMLProvider(this, 'MyCfnSAMLProvider', {\n  samlMetadataDocument: 'samlMetadataDocument',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnSAMLProvider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnSAMLProvider","@aws-cdk/aws-iam.CfnSAMLProviderProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSAMLProvider = new iam.CfnSAMLProvider(this, 'MyCfnSAMLProvider', {\n  samlMetadataDocument: 'samlMetadataDocument',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":9,"104":1,"192":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"a9fe3d15fdaf987c29604ce7c4ced822b3c54e17178953340fafa7487e7a4236"},"674428ba593f958669d767954be99c007eeb44cd93783c39481f574b92b6125f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_sAMLProvider_props = iam.CfnSAMLProviderProps(\n    saml_metadata_document=\"samlMetadataDocument\",\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnSAMLProviderProps = new CfnSAMLProviderProps {\n    SamlMetadataDocument = \"samlMetadataDocument\",\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnSAMLProviderProps cfnSAMLProviderProps = CfnSAMLProviderProps.builder()\n        .samlMetadataDocument(\"samlMetadataDocument\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnSAMLProviderProps := &CfnSAMLProviderProps{\n\tSamlMetadataDocument: jsii.String(\"samlMetadataDocument\"),\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnSAMLProviderProps: iam.CfnSAMLProviderProps = {\n  samlMetadataDocument: 'samlMetadataDocument',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnSAMLProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnSAMLProviderProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSAMLProviderProps: iam.CfnSAMLProviderProps = {\n  samlMetadataDocument: 'samlMetadataDocument',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":9,"153":1,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"3bb3eead2cf256d159eca3f146b68e4499d3896bfd69c4d44ba9ea2c904dae2b"},"f500bd169bc1b9d38d75fefa545b58ca2dddb667908c8eec9301cda145d0395e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_server_certificate = iam.CfnServerCertificate(self, \"MyCfnServerCertificate\",\n    certificate_body=\"certificateBody\",\n    certificate_chain=\"certificateChain\",\n    path=\"path\",\n    private_key=\"privateKey\",\n    server_certificate_name=\"serverCertificateName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnServerCertificate = new CfnServerCertificate(this, \"MyCfnServerCertificate\", new CfnServerCertificateProps {\n    CertificateBody = \"certificateBody\",\n    CertificateChain = \"certificateChain\",\n    Path = \"path\",\n    PrivateKey = \"privateKey\",\n    ServerCertificateName = \"serverCertificateName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnServerCertificate cfnServerCertificate = CfnServerCertificate.Builder.create(this, \"MyCfnServerCertificate\")\n        .certificateBody(\"certificateBody\")\n        .certificateChain(\"certificateChain\")\n        .path(\"path\")\n        .privateKey(\"privateKey\")\n        .serverCertificateName(\"serverCertificateName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnServerCertificate := iam.NewCfnServerCertificate(this, jsii.String(\"MyCfnServerCertificate\"), &CfnServerCertificateProps{\n\tCertificateBody: jsii.String(\"certificateBody\"),\n\tCertificateChain: jsii.String(\"certificateChain\"),\n\tPath: jsii.String(\"path\"),\n\tPrivateKey: jsii.String(\"privateKey\"),\n\tServerCertificateName: jsii.String(\"serverCertificateName\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnServerCertificate = new iam.CfnServerCertificate(this, 'MyCfnServerCertificate', /* all optional props */ {\n  certificateBody: 'certificateBody',\n  certificateChain: 'certificateChain',\n  path: 'path',\n  privateKey: 'privateKey',\n  serverCertificateName: 'serverCertificateName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnServerCertificate"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnServerCertificate","@aws-cdk/aws-iam.CfnServerCertificateProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnServerCertificate = new iam.CfnServerCertificate(this, 'MyCfnServerCertificate', /* all optional props */ {\n  certificateBody: 'certificateBody',\n  certificateChain: 'certificateChain',\n  path: 'path',\n  privateKey: 'privateKey',\n  serverCertificateName: 'serverCertificateName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":9,"75":12,"104":1,"192":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"22e8341748bd1d5e9291fa699f94ba84dd94f34a8275a3caa24518d9ed9c1bd5"},"f27e7b85c5e2db09e94e0fa89d3418765cfc37a7601f5e0a76c093005afa941d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_server_certificate_props = iam.CfnServerCertificateProps(\n    certificate_body=\"certificateBody\",\n    certificate_chain=\"certificateChain\",\n    path=\"path\",\n    private_key=\"privateKey\",\n    server_certificate_name=\"serverCertificateName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnServerCertificateProps = new CfnServerCertificateProps {\n    CertificateBody = \"certificateBody\",\n    CertificateChain = \"certificateChain\",\n    Path = \"path\",\n    PrivateKey = \"privateKey\",\n    ServerCertificateName = \"serverCertificateName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnServerCertificateProps cfnServerCertificateProps = CfnServerCertificateProps.builder()\n        .certificateBody(\"certificateBody\")\n        .certificateChain(\"certificateChain\")\n        .path(\"path\")\n        .privateKey(\"privateKey\")\n        .serverCertificateName(\"serverCertificateName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnServerCertificateProps := &CfnServerCertificateProps{\n\tCertificateBody: jsii.String(\"certificateBody\"),\n\tCertificateChain: jsii.String(\"certificateChain\"),\n\tPath: jsii.String(\"path\"),\n\tPrivateKey: jsii.String(\"privateKey\"),\n\tServerCertificateName: jsii.String(\"serverCertificateName\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnServerCertificateProps: iam.CfnServerCertificateProps = {\n  certificateBody: 'certificateBody',\n  certificateChain: 'certificateChain',\n  path: 'path',\n  privateKey: 'privateKey',\n  serverCertificateName: 'serverCertificateName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnServerCertificateProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnServerCertificateProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnServerCertificateProps: iam.CfnServerCertificateProps = {\n  certificateBody: 'certificateBody',\n  certificateChain: 'certificateChain',\n  path: 'path',\n  privateKey: 'privateKey',\n  serverCertificateName: 'serverCertificateName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":8,"75":12,"153":1,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"aee0b290c110e9ed4f50e4218a1c024daaa7986e275a2958461edb8377a7f915"},"9df87eaf4c3b1c5d1143ffd058a76e1a32119eaf70ebdf23cc2df20fad2ca459":{"translations":{"python":{"source":"slr = iam.CfnServiceLinkedRole(self, \"ElasticSLR\",\n    aws_service_name=\"es.amazonaws.com\"\n)","version":"2"},"csharp":{"source":"var slr = new CfnServiceLinkedRole(this, \"ElasticSLR\", new CfnServiceLinkedRoleProps {\n    AwsServiceName = \"es.amazonaws.com\"\n});","version":"1"},"java":{"source":"CfnServiceLinkedRole slr = CfnServiceLinkedRole.Builder.create(this, \"ElasticSLR\")\n        .awsServiceName(\"es.amazonaws.com\")\n        .build();","version":"1"},"go":{"source":"slr := iam.NewCfnServiceLinkedRole(this, jsii.String(\"ElasticSLR\"), &CfnServiceLinkedRoleProps{\n\tAwsServiceName: jsii.String(\"es.amazonaws.com\"),\n})","version":"1"},"$":{"source":"const slr = new iam.CfnServiceLinkedRole(this, 'ElasticSLR', {\n  awsServiceName: 'es.amazonaws.com',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnServiceLinkedRole"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnServiceLinkedRole","@aws-cdk/aws-iam.CfnServiceLinkedRoleProps","@aws-cdk/core.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst slr = new iam.CfnServiceLinkedRole(this, 'ElasticSLR', {\n  awsServiceName: 'es.amazonaws.com',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"6180e6715b98dc4c5671e9278fa77925c150afafb6e11021fb1410db628d5cf4"},"ec2300269c21f21cf5cbc4967204dde4db88930c4e9efcf944fd77c3b575985f":{"translations":{"python":{"source":"slr = iam.CfnServiceLinkedRole(self, \"ElasticSLR\",\n    aws_service_name=\"es.amazonaws.com\"\n)","version":"2"},"csharp":{"source":"var slr = new CfnServiceLinkedRole(this, \"ElasticSLR\", new CfnServiceLinkedRoleProps {\n    AwsServiceName = \"es.amazonaws.com\"\n});","version":"1"},"java":{"source":"CfnServiceLinkedRole slr = CfnServiceLinkedRole.Builder.create(this, \"ElasticSLR\")\n        .awsServiceName(\"es.amazonaws.com\")\n        .build();","version":"1"},"go":{"source":"slr := iam.NewCfnServiceLinkedRole(this, jsii.String(\"ElasticSLR\"), &CfnServiceLinkedRoleProps{\n\tAwsServiceName: jsii.String(\"es.amazonaws.com\"),\n})","version":"1"},"$":{"source":"const slr = new iam.CfnServiceLinkedRole(this, 'ElasticSLR', {\n  awsServiceName: 'es.amazonaws.com',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnServiceLinkedRoleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnServiceLinkedRole","@aws-cdk/aws-iam.CfnServiceLinkedRoleProps","@aws-cdk/core.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { RemovalPolicy, Stack } from '@aws-cdk/core';  \nimport * as es from '@aws-cdk/aws-elasticsearch';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst slr = new iam.CfnServiceLinkedRole(this, 'ElasticSLR', {\n  awsServiceName: 'es.amazonaws.com',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":4,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"6180e6715b98dc4c5671e9278fa77925c150afafb6e11021fb1410db628d5cf4"},"bfd73c2dbdf4c5c560d98984124d89ac4c36c9b6f7cd7e7aecad86f00bcb4900":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_user = iam.CfnUser(self, \"MyCfnUser\",\n    groups=[\"groups\"],\n    login_profile=iam.CfnUser.LoginProfileProperty(\n        password=\"password\",\n\n        # the properties below are optional\n        password_reset_required=False\n    ),\n    managed_policy_arns=[\"managedPolicyArns\"],\n    path=\"path\",\n    permissions_boundary=\"permissionsBoundary\",\n    policies=[iam.CfnUser.PolicyProperty(\n        policy_document=policy_document,\n        policy_name=\"policyName\"\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    user_name=\"userName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnUser = new CfnUser(this, \"MyCfnUser\", new CfnUserProps {\n    Groups = new [] { \"groups\" },\n    LoginProfile = new LoginProfileProperty {\n        Password = \"password\",\n\n        // the properties below are optional\n        PasswordResetRequired = false\n    },\n    ManagedPolicyArns = new [] { \"managedPolicyArns\" },\n    Path = \"path\",\n    PermissionsBoundary = \"permissionsBoundary\",\n    Policies = new [] { new PolicyProperty {\n        PolicyDocument = policyDocument,\n        PolicyName = \"policyName\"\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    UserName = \"userName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnUser cfnUser = CfnUser.Builder.create(this, \"MyCfnUser\")\n        .groups(List.of(\"groups\"))\n        .loginProfile(LoginProfileProperty.builder()\n                .password(\"password\")\n\n                // the properties below are optional\n                .passwordResetRequired(false)\n                .build())\n        .managedPolicyArns(List.of(\"managedPolicyArns\"))\n        .path(\"path\")\n        .permissionsBoundary(\"permissionsBoundary\")\n        .policies(List.of(PolicyProperty.builder()\n                .policyDocument(policyDocument)\n                .policyName(\"policyName\")\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .userName(\"userName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnUser := iam.NewCfnUser(this, jsii.String(\"MyCfnUser\"), &CfnUserProps{\n\tGroups: []*string{\n\t\tjsii.String(\"groups\"),\n\t},\n\tLoginProfile: &LoginProfileProperty{\n\t\tPassword: jsii.String(\"password\"),\n\n\t\t// the properties below are optional\n\t\tPasswordResetRequired: jsii.Boolean(false),\n\t},\n\tManagedPolicyArns: []*string{\n\t\tjsii.String(\"managedPolicyArns\"),\n\t},\n\tPath: jsii.String(\"path\"),\n\tPermissionsBoundary: jsii.String(\"permissionsBoundary\"),\n\tPolicies: []interface{}{\n\t\t&PolicyProperty{\n\t\t\tPolicyDocument: policyDocument,\n\t\t\tPolicyName: jsii.String(\"policyName\"),\n\t\t},\n\t},\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUserName: jsii.String(\"userName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnUser = new iam.CfnUser(this, 'MyCfnUser', /* all optional props */ {\n  groups: ['groups'],\n  loginProfile: {\n    password: 'password',\n\n    // the properties below are optional\n    passwordResetRequired: false,\n  },\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userName: 'userName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnUser"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnUser","@aws-cdk/aws-iam.CfnUserProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUser = new iam.CfnUser(this, 'MyCfnUser', /* all optional props */ {\n  groups: ['groups'],\n  loginProfile: {\n    password: 'password',\n\n    // the properties below are optional\n    passwordResetRequired: false,\n  },\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userName: 'userName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":11,"75":20,"91":1,"104":1,"125":1,"130":1,"192":4,"193":4,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":14,"290":1},"fqnsFingerprint":"fd26a5864485943db67ea7d0bf7ac51ae4f983b1fcf0346214ffd00020a35a7b"},"e90fc2fd9c347035873c5f6a10afb7abea8e8b0313f6d7fa370391e8de2d020f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\nlogin_profile_property = iam.CfnUser.LoginProfileProperty(\n    password=\"password\",\n\n    # the properties below are optional\n    password_reset_required=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar loginProfileProperty = new LoginProfileProperty {\n    Password = \"password\",\n\n    // the properties below are optional\n    PasswordResetRequired = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nLoginProfileProperty loginProfileProperty = LoginProfileProperty.builder()\n        .password(\"password\")\n\n        // the properties below are optional\n        .passwordResetRequired(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nloginProfileProperty := &LoginProfileProperty{\n\tPassword: jsii.String(\"password\"),\n\n\t// the properties below are optional\n\tPasswordResetRequired: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst loginProfileProperty: iam.CfnUser.LoginProfileProperty = {\n  password: 'password',\n\n  // the properties below are optional\n  passwordResetRequired: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnUser.LoginProfileProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnUser.LoginProfileProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loginProfileProperty: iam.CfnUser.LoginProfileProperty = {\n  password: 'password',\n\n  // the properties below are optional\n  passwordResetRequired: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":7,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"eaae99089b80f2da9a844a0efd949035b0c9e4b93994a7d541dfc9ea5fd03052"},"7a511304b6c3352b32ac0a0b154073386c2d875589f3d3815e15f93428191bcb":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\npolicy_property = iam.CfnUser.PolicyProperty(\n    policy_document=policy_document,\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar policyProperty = new PolicyProperty {\n    PolicyDocument = policyDocument,\n    PolicyName = \"policyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nPolicyProperty policyProperty = PolicyProperty.builder()\n        .policyDocument(policyDocument)\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\npolicyProperty := &PolicyProperty{\n\tPolicyDocument: policyDocument,\n\tPolicyName: jsii.String(\"policyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst policyProperty: iam.CfnUser.PolicyProperty = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnUser.PolicyProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnUser.PolicyProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policyProperty: iam.CfnUser.PolicyProperty = {\n  policyDocument: policyDocument,\n  policyName: 'policyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"125":1,"130":1,"153":2,"169":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"ed648784663251999e86451863c3e8fdf4c239824a33f7618333e5f0c9a9aed1"},"be3e62b8bc74fea5966aee7e1dce0e72d07753cee962cd5a321eda627bb6d066":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# policy_document: Any\n\ncfn_user_props = iam.CfnUserProps(\n    groups=[\"groups\"],\n    login_profile=iam.CfnUser.LoginProfileProperty(\n        password=\"password\",\n\n        # the properties below are optional\n        password_reset_required=False\n    ),\n    managed_policy_arns=[\"managedPolicyArns\"],\n    path=\"path\",\n    permissions_boundary=\"permissionsBoundary\",\n    policies=[iam.CfnUser.PolicyProperty(\n        policy_document=policy_document,\n        policy_name=\"policyName\"\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    user_name=\"userName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar policyDocument;\n\nvar cfnUserProps = new CfnUserProps {\n    Groups = new [] { \"groups\" },\n    LoginProfile = new LoginProfileProperty {\n        Password = \"password\",\n\n        // the properties below are optional\n        PasswordResetRequired = false\n    },\n    ManagedPolicyArns = new [] { \"managedPolicyArns\" },\n    Path = \"path\",\n    PermissionsBoundary = \"permissionsBoundary\",\n    Policies = new [] { new PolicyProperty {\n        PolicyDocument = policyDocument,\n        PolicyName = \"policyName\"\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    UserName = \"userName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject policyDocument;\n\nCfnUserProps cfnUserProps = CfnUserProps.builder()\n        .groups(List.of(\"groups\"))\n        .loginProfile(LoginProfileProperty.builder()\n                .password(\"password\")\n\n                // the properties below are optional\n                .passwordResetRequired(false)\n                .build())\n        .managedPolicyArns(List.of(\"managedPolicyArns\"))\n        .path(\"path\")\n        .permissionsBoundary(\"permissionsBoundary\")\n        .policies(List.of(PolicyProperty.builder()\n                .policyDocument(policyDocument)\n                .policyName(\"policyName\")\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .userName(\"userName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar policyDocument interface{}\n\ncfnUserProps := &CfnUserProps{\n\tGroups: []*string{\n\t\tjsii.String(\"groups\"),\n\t},\n\tLoginProfile: &LoginProfileProperty{\n\t\tPassword: jsii.String(\"password\"),\n\n\t\t// the properties below are optional\n\t\tPasswordResetRequired: jsii.Boolean(false),\n\t},\n\tManagedPolicyArns: []*string{\n\t\tjsii.String(\"managedPolicyArns\"),\n\t},\n\tPath: jsii.String(\"path\"),\n\tPermissionsBoundary: jsii.String(\"permissionsBoundary\"),\n\tPolicies: []interface{}{\n\t\t&PolicyProperty{\n\t\t\tPolicyDocument: policyDocument,\n\t\t\tPolicyName: jsii.String(\"policyName\"),\n\t\t},\n\t},\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUserName: jsii.String(\"userName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\nconst cfnUserProps: iam.CfnUserProps = {\n  groups: ['groups'],\n  loginProfile: {\n    password: 'password',\n\n    // the properties below are optional\n    passwordResetRequired: false,\n  },\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userName: 'userName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnUserProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnUserProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserProps: iam.CfnUserProps = {\n  groups: ['groups'],\n  loginProfile: {\n    password: 'password',\n\n    // the properties below are optional\n    passwordResetRequired: false,\n  },\n  managedPolicyArns: ['managedPolicyArns'],\n  path: 'path',\n  permissionsBoundary: 'permissionsBoundary',\n  policies: [{\n    policyDocument: policyDocument,\n    policyName: 'policyName',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  userName: 'userName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":20,"91":1,"125":1,"130":1,"153":1,"169":1,"192":4,"193":4,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":14,"290":1},"fqnsFingerprint":"d2fde249cef81418664985a20bc2e3dafffe8477d712205eeb17661ca1980a3a"},"ecc91ad8d9dd8c5e5a97da4756842ba10d3e66adfd8d860bb33710208dfa11a2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_user_to_group_addition = iam.CfnUserToGroupAddition(self, \"MyCfnUserToGroupAddition\",\n    group_name=\"groupName\",\n    users=[\"users\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnUserToGroupAddition = new CfnUserToGroupAddition(this, \"MyCfnUserToGroupAddition\", new CfnUserToGroupAdditionProps {\n    GroupName = \"groupName\",\n    Users = new [] { \"users\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnUserToGroupAddition cfnUserToGroupAddition = CfnUserToGroupAddition.Builder.create(this, \"MyCfnUserToGroupAddition\")\n        .groupName(\"groupName\")\n        .users(List.of(\"users\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnUserToGroupAddition := iam.NewCfnUserToGroupAddition(this, jsii.String(\"MyCfnUserToGroupAddition\"), &CfnUserToGroupAdditionProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnUserToGroupAddition = new iam.CfnUserToGroupAddition(this, 'MyCfnUserToGroupAddition', {\n  groupName: 'groupName',\n  users: ['users'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnUserToGroupAddition"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnUserToGroupAddition","@aws-cdk/aws-iam.CfnUserToGroupAdditionProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserToGroupAddition = new iam.CfnUserToGroupAddition(this, 'MyCfnUserToGroupAddition', {\n  groupName: 'groupName',\n  users: ['users'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"680b22495d6e034e72f2fcbe6a6347eb70351cec54022bbcdfc58716f0f42958"},"200d8cc30ce76131f63e636adaf615df336a1ec940d7c9eb3a80ca5cfa2ac5dc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_user_to_group_addition_props = iam.CfnUserToGroupAdditionProps(\n    group_name=\"groupName\",\n    users=[\"users\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnUserToGroupAdditionProps = new CfnUserToGroupAdditionProps {\n    GroupName = \"groupName\",\n    Users = new [] { \"users\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnUserToGroupAdditionProps cfnUserToGroupAdditionProps = CfnUserToGroupAdditionProps.builder()\n        .groupName(\"groupName\")\n        .users(List.of(\"users\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnUserToGroupAdditionProps := &CfnUserToGroupAdditionProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnUserToGroupAdditionProps: iam.CfnUserToGroupAdditionProps = {\n  groupName: 'groupName',\n  users: ['users'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnUserToGroupAdditionProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnUserToGroupAdditionProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserToGroupAdditionProps: iam.CfnUserToGroupAdditionProps = {\n  groupName: 'groupName',\n  users: ['users'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"0b5c455734f0afbbccab5dc20cd5ead16545e53422e34421e3cbf221605286eb"},"aad1d70b036a4d72885c3dbde4030d30ce88cd18c28793443052764222daa0e6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_virtual_mFADevice = iam.CfnVirtualMFADevice(self, \"MyCfnVirtualMFADevice\",\n    users=[\"users\"],\n\n    # the properties below are optional\n    path=\"path\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    virtual_mfa_device_name=\"virtualMfaDeviceName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnVirtualMFADevice = new CfnVirtualMFADevice(this, \"MyCfnVirtualMFADevice\", new CfnVirtualMFADeviceProps {\n    Users = new [] { \"users\" },\n\n    // the properties below are optional\n    Path = \"path\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VirtualMfaDeviceName = \"virtualMfaDeviceName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnVirtualMFADevice cfnVirtualMFADevice = CfnVirtualMFADevice.Builder.create(this, \"MyCfnVirtualMFADevice\")\n        .users(List.of(\"users\"))\n\n        // the properties below are optional\n        .path(\"path\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .virtualMfaDeviceName(\"virtualMfaDeviceName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnVirtualMFADevice := iam.NewCfnVirtualMFADevice(this, jsii.String(\"MyCfnVirtualMFADevice\"), &CfnVirtualMFADeviceProps{\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n\n\t// the properties below are optional\n\tPath: jsii.String(\"path\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tVirtualMfaDeviceName: jsii.String(\"virtualMfaDeviceName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnVirtualMFADevice = new iam.CfnVirtualMFADevice(this, 'MyCfnVirtualMFADevice', {\n  users: ['users'],\n\n  // the properties below are optional\n  path: 'path',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualMfaDeviceName: 'virtualMfaDeviceName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnVirtualMFADevice"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnVirtualMFADevice","@aws-cdk/aws-iam.CfnVirtualMFADeviceProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnVirtualMFADevice = new iam.CfnVirtualMFADevice(this, 'MyCfnVirtualMFADevice', {\n  users: ['users'],\n\n  // the properties below are optional\n  path: 'path',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualMfaDeviceName: 'virtualMfaDeviceName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":10,"104":1,"192":2,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"b3eafc879f9420fdbe0280c8d26a859c46d005390b018a5dfac98b8b82e08a19"},"4f08a8e1e7766bb785aecbd0c603e6d0c8824945ac87b04c5b2f97b1d57bff7b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncfn_virtual_mFADevice_props = iam.CfnVirtualMFADeviceProps(\n    users=[\"users\"],\n\n    # the properties below are optional\n    path=\"path\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    virtual_mfa_device_name=\"virtualMfaDeviceName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar cfnVirtualMFADeviceProps = new CfnVirtualMFADeviceProps {\n    Users = new [] { \"users\" },\n\n    // the properties below are optional\n    Path = \"path\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VirtualMfaDeviceName = \"virtualMfaDeviceName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nCfnVirtualMFADeviceProps cfnVirtualMFADeviceProps = CfnVirtualMFADeviceProps.builder()\n        .users(List.of(\"users\"))\n\n        // the properties below are optional\n        .path(\"path\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .virtualMfaDeviceName(\"virtualMfaDeviceName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncfnVirtualMFADeviceProps := &CfnVirtualMFADeviceProps{\n\tUsers: []*string{\n\t\tjsii.String(\"users\"),\n\t},\n\n\t// the properties below are optional\n\tPath: jsii.String(\"path\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tVirtualMfaDeviceName: jsii.String(\"virtualMfaDeviceName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst cfnVirtualMFADeviceProps: iam.CfnVirtualMFADeviceProps = {\n  users: ['users'],\n\n  // the properties below are optional\n  path: 'path',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualMfaDeviceName: 'virtualMfaDeviceName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CfnVirtualMFADeviceProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CfnVirtualMFADeviceProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnVirtualMFADeviceProps: iam.CfnVirtualMFADeviceProps = {\n  users: ['users'],\n\n  // the properties below are optional\n  path: 'path',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualMfaDeviceName: 'virtualMfaDeviceName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":1,"169":1,"192":2,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"1771dbca8e167555578a88ba816da2780769419b33bdad212eecc4ddaab5f897"},"e8a06707e4af3132a13988f552b3b9e081db89ebaaa52807bd8b06cd3fe3e8ef":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# grantable: iam.IGrantable\n\ncommon_grant_options = iam.CommonGrantOptions(\n    actions=[\"actions\"],\n    grantee=grantable,\n    resource_arns=[\"resourceArns\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nIGrantable grantable;\n\nvar commonGrantOptions = new CommonGrantOptions {\n    Actions = new [] { \"actions\" },\n    Grantee = grantable,\n    ResourceArns = new [] { \"resourceArns\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nIGrantable grantable;\n\nCommonGrantOptions commonGrantOptions = CommonGrantOptions.builder()\n        .actions(List.of(\"actions\"))\n        .grantee(grantable)\n        .resourceArns(List.of(\"resourceArns\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar grantable iGrantable\n\ncommonGrantOptions := &CommonGrantOptions{\n\tActions: []*string{\n\t\tjsii.String(\"actions\"),\n\t},\n\tGrantee: grantable,\n\tResourceArns: []*string{\n\t\tjsii.String(\"resourceArns\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const grantable: iam.IGrantable;\nconst commonGrantOptions: iam.CommonGrantOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resourceArns: ['resourceArns'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CommonGrantOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CommonGrantOptions","@aws-cdk/aws-iam.IGrantable"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const grantable: iam.IGrantable;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst commonGrantOptions: iam.CommonGrantOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resourceArns: ['resourceArns'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":11,"130":1,"153":2,"169":2,"192":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"7a02c9a25cf2f4939de78551a719962d7f798f4e03e7e04ef6787831adbaa150"},"f8ea93a2546936a9fd31a6d1c5fc7515ba2cfa36fd4632747ee685d9d6bcbe25":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\ncomparable_principal = iam.ComparablePrincipal()","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar comparablePrincipal = new ComparablePrincipal();","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nComparablePrincipal comparablePrincipal = new ComparablePrincipal();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\ncomparablePrincipal := iam.NewComparablePrincipal()","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst comparablePrincipal = new iam.ComparablePrincipal();","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.ComparablePrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ComparablePrincipal"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst comparablePrincipal = new iam.ComparablePrincipal();\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"2f0e9c1a061fde8f32ec0189be76bde889289f25cbcafb4738b326de1a9e20c8"},"8fa5d3a9c530df7b8d21e7d61b09348385ae5fbd45e3435afa86cd2e4b0219ec":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# dependable: cdk.IDependable\n\ncomposite_dependable = iam.CompositeDependable(dependable)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nIDependable dependable;\nvar compositeDependable = new CompositeDependable(dependable);","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nIDependable dependable;\n\nCompositeDependable compositeDependable = new CompositeDependable(dependable);","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar dependable iDependable\n\ncompositeDependable := iam.NewCompositeDependable(dependable)","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\nconst compositeDependable = new iam.CompositeDependable(dependable);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CompositeDependable"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.CompositeDependable","@aws-cdk/core.IDependable"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst compositeDependable = new iam.CompositeDependable(dependable);\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"130":1,"153":1,"169":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"290":1},"fqnsFingerprint":"44882fcd6d92309ded2135c05fadbb52f8fffcb4f5a33bc5c32ce8191ec98a25"},"c473ecf8777a9001f626453de09a2c03acdfd0f568a7221699034ff87b89295e":{"translations":{"python":{"source":"role = iam.Role(self, \"MyRole\",\n    assumed_by=iam.CompositePrincipal(\n        iam.ServicePrincipal(\"ec2.amazonaws.com\"),\n        iam.AccountPrincipal(\"1818188181818187272\"))\n)","version":"2"},"csharp":{"source":"var role = new Role(this, \"MyRole\", new RoleProps {\n    AssumedBy = new CompositePrincipal(\n    new ServicePrincipal(\"ec2.amazonaws.com\"),\n    new AccountPrincipal(\"1818188181818187272\"))\n});","version":"1"},"java":{"source":"Role role = Role.Builder.create(this, \"MyRole\")\n        .assumedBy(new CompositePrincipal(\n        new ServicePrincipal(\"ec2.amazonaws.com\"),\n        new AccountPrincipal(\"1818188181818187272\")))\n        .build();","version":"1"},"go":{"source":"role := iam.NewRole(this, jsii.String(\"MyRole\"), &RoleProps{\n\tAssumedBy: iam.NewCompositePrincipal(\n\tiam.NewServicePrincipal(jsii.String(\"ec2.amazonaws.com\")),\n\tiam.NewAccountPrincipal(jsii.String(\"1818188181818187272\"))),\n})","version":"1"},"$":{"source":"const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.CompositePrincipal(\n    new iam.ServicePrincipal('ec2.amazonaws.com'),\n    new iam.AccountPrincipal('1818188181818187272')\n  ),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.CompositePrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountPrincipal","@aws-cdk/aws-iam.CompositePrincipal","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.CompositePrincipal(\n    new iam.ServicePrincipal('ec2.amazonaws.com'),\n    new iam.AccountPrincipal('1818188181818187272')\n  ),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":10,"104":1,"193":1,"194":4,"197":4,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"812186ece47a914ecb7375bfaa4f63f69d0ca69652d78f2087c589de45b4c2af"},"d4b078f795ba7479a034f85afca4ccc5361dc5498c01baf5b37014191a960516":{"translations":{"python":{"source":"# books: apigateway.Resource\n# iam_user: iam.User\n\n\nget_books = books.add_method(\"GET\", apigateway.HttpIntegration(\"http://amazon.com\"),\n    authorization_type=apigateway.AuthorizationType.IAM\n)\n\niam_user.attach_inline_policy(iam.Policy(self, \"AllowBooks\",\n    statements=[\n        iam.PolicyStatement(\n            actions=[\"execute-api:Invoke\"],\n            effect=iam.Effect.ALLOW,\n            resources=[get_books.method_arn]\n        )\n    ]\n))","version":"2"},"csharp":{"source":"Resource books;\nUser iamUser;\n\n\nvar getBooks = books.AddMethod(\"GET\", new HttpIntegration(\"http://amazon.com\"), new MethodOptions {\n    AuthorizationType = AuthorizationType.IAM\n});\n\niamUser.AttachInlinePolicy(new Policy(this, \"AllowBooks\", new PolicyProps {\n    Statements = new [] {\n        new PolicyStatement(new PolicyStatementProps {\n            Actions = new [] { \"execute-api:Invoke\" },\n            Effect = Effect.ALLOW,\n            Resources = new [] { getBooks.MethodArn }\n        }) }\n}));","version":"1"},"java":{"source":"Resource books;\nUser iamUser;\n\n\nMethod getBooks = books.addMethod(\"GET\", new HttpIntegration(\"http://amazon.com\"), MethodOptions.builder()\n        .authorizationType(AuthorizationType.IAM)\n        .build());\n\niamUser.attachInlinePolicy(Policy.Builder.create(this, \"AllowBooks\")\n        .statements(List.of(\n            PolicyStatement.Builder.create()\n                    .actions(List.of(\"execute-api:Invoke\"))\n                    .effect(Effect.ALLOW)\n                    .resources(List.of(getBooks.getMethodArn()))\n                    .build()))\n        .build());","version":"1"},"go":{"source":"var books resource\nvar iamUser user\n\n\ngetBooks := books.AddMethod(jsii.String(\"GET\"), apigateway.NewHttpIntegration(jsii.String(\"http://amazon.com\")), &MethodOptions{\n\tAuthorizationType: apigateway.AuthorizationType_IAM,\n})\n\niamUser.AttachInlinePolicy(iam.NewPolicy(this, jsii.String(\"AllowBooks\"), &PolicyProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"execute-api:Invoke\"),\n\t\t\t},\n\t\t\tEffect: iam.Effect_ALLOW,\n\t\t\tResources: []*string{\n\t\t\t\tgetBooks.methodArn,\n\t\t\t},\n\t\t}),\n\t},\n}))","version":"1"},"$":{"source":"declare const books: apigateway.Resource;\ndeclare const iamUser: iam.User;\n\nconst getBooks = books.addMethod('GET', new apigateway.HttpIntegration('http://amazon.com'), {\n  authorizationType: apigateway.AuthorizationType.IAM\n});\n\niamUser.attachInlinePolicy(new iam.Policy(this, 'AllowBooks', {\n  statements: [\n    new iam.PolicyStatement({\n      actions: [ 'execute-api:Invoke' ],\n      effect: iam.Effect.ALLOW,\n      resources: [ getBooks.methodArn ]\n    })\n  ]\n}))","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.Effect"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigateway.AuthorizationType","@aws-cdk/aws-apigateway.AuthorizationType#IAM","@aws-cdk/aws-apigateway.HttpIntegration","@aws-cdk/aws-apigateway.Integration","@aws-cdk/aws-apigateway.Method","@aws-cdk/aws-apigateway.MethodOptions","@aws-cdk/aws-apigateway.ResourceBase#addMethod","@aws-cdk/aws-iam.Effect","@aws-cdk/aws-iam.Effect#ALLOW","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.PolicyProps","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-iam.User#attachInlinePolicy","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const books: apigateway.Resource;\ndeclare const iamUser: iam.User;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport apigateway = require('@aws-cdk/aws-apigateway');\nimport cognito = require('@aws-cdk/aws-cognito');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport iam = require('@aws-cdk/aws-iam');\nimport s3 = require('@aws-cdk/aws-s3');\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport logs = require('@aws-cdk/aws-logs');\nimport stepfunctions = require('@aws-cdk/aws-stepfunctions');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst getBooks = books.addMethod('GET', new apigateway.HttpIntegration('http://amazon.com'), {\n  authorizationType: apigateway.AuthorizationType.IAM\n});\n\niamUser.attachInlinePolicy(new iam.Policy(this, 'AllowBooks', {\n  statements: [\n    new iam.PolicyStatement({\n      actions: [ 'execute-api:Invoke' ],\n      effect: iam.Effect.ALLOW,\n      resources: [ getBooks.methodArn ]\n    })\n  ]\n}))\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":30,"104":1,"130":2,"153":2,"169":2,"192":3,"193":3,"194":10,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":5,"290":1},"fqnsFingerprint":"dd381b2eef4d08015a809df67a76fe1b72deabfd19903a200b61adcb96ac1bc2"},"355d2161d72557c745af65019fc3b482483644c9e7236a9586fc62fe526e44d7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# conditions: Any\n\nfederated_principal = iam.FederatedPrincipal(\"federated\", {\n    \"conditions_key\": conditions\n}, \"assumeRoleAction\")","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar conditions;\n\nvar federatedPrincipal = new FederatedPrincipal(\"federated\", new Dictionary<string, object> {\n    { \"conditionsKey\", conditions }\n}, \"assumeRoleAction\");","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject conditions;\n\nFederatedPrincipal federatedPrincipal = new FederatedPrincipal(\"federated\", Map.of(\n        \"conditionsKey\", conditions), \"assumeRoleAction\");","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar conditions interface{}\n\nfederatedPrincipal := iam.NewFederatedPrincipal(jsii.String(\"federated\"), map[string]interface{}{\n\t\"conditionsKey\": conditions,\n}, jsii.String(\"assumeRoleAction\"))","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\nconst federatedPrincipal = new iam.FederatedPrincipal('federated', {\n  conditionsKey: conditions,\n}, /* all optional props */ 'assumeRoleAction');","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.FederatedPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.FederatedPrincipal"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst federatedPrincipal = new iam.FederatedPrincipal('federated', {\n  conditionsKey: conditions,\n}, /* all optional props */ 'assumeRoleAction');\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"125":1,"130":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"fe02e5dd5fc5108f52b2c6ce2a22259f037623c7e9d1120b2743521c8c043174"},"d05bf2948294d2983efc44621bbf7cf39a98fd215b8b3579710abc83baf25a65":{"translations":{"python":{"source":"role = iam.Role.from_role_arn(self, \"Role\", \"arn:aws:iam::123456789012:role/MyExistingRole\",\n    # Set 'mutable' to 'false' to use the role as-is and prevent adding new\n    # policies to it. The default is 'true', which means the role may be\n    # modified as part of the deployment.\n    mutable=False\n)","version":"2"},"csharp":{"source":"var role = Role.FromRoleArn(this, \"Role\", \"arn:aws:iam::123456789012:role/MyExistingRole\", new FromRoleArnOptions {\n    // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n    // policies to it. The default is 'true', which means the role may be\n    // modified as part of the deployment.\n    Mutable = false\n});","version":"1"},"java":{"source":"IRole role = Role.fromRoleArn(this, \"Role\", \"arn:aws:iam::123456789012:role/MyExistingRole\", FromRoleArnOptions.builder()\n        // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n        // policies to it. The default is 'true', which means the role may be\n        // modified as part of the deployment.\n        .mutable(false)\n        .build());","version":"1"},"go":{"source":"role := iam.Role_FromRoleArn(this, jsii.String(\"Role\"), jsii.String(\"arn:aws:iam::123456789012:role/MyExistingRole\"), &FromRoleArnOptions{\n\t// Set 'mutable' to 'false' to use the role as-is and prevent adding new\n\t// policies to it. The default is 'true', which means the role may be\n\t// modified as part of the deployment.\n\tMutable: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"const role = iam.Role.fromRoleArn(this, 'Role', 'arn:aws:iam::123456789012:role/MyExistingRole', {\n  // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n  // policies to it. The default is 'true', which means the role may be\n  // modified as part of the deployment.\n  mutable: false,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.FromRoleArnOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.FromRoleArnOptions","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#fromRoleArn","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst role = iam.Role.fromRoleArn(this, 'Role', 'arn:aws:iam::123456789012:role/MyExistingRole', {\n  // Set 'mutable' to 'false' to use the role as-is and prevent adding new\n  // policies to it. The default is 'true', which means the role may be\n  // modified as part of the deployment.\n  mutable: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":5,"91":1,"104":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"d59ead6b111c144ce48ba250d04b67747510348aae95424e9fc5531d081fc7e7"},"782d9612e680e20e0a9fb4f4a7f9550d4907aeaba4459d22247ebaad530c7bde":{"translations":{"python":{"source":"# instance: ec2.Instance\n# volume: ec2.Volume\n\n\nattach_grant = volume.grant_attach_volume_by_resource_tag(instance.grant_principal, [instance])\ndetach_grant = volume.grant_detach_volume_by_resource_tag(instance.grant_principal, [instance])","version":"2"},"csharp":{"source":"Instance instance;\nVolume volume;\n\n\nvar attachGrant = volume.GrantAttachVolumeByResourceTag(instance.GrantPrincipal, new [] { instance });\nvar detachGrant = volume.GrantDetachVolumeByResourceTag(instance.GrantPrincipal, new [] { instance });","version":"1"},"java":{"source":"Instance instance;\nVolume volume;\n\n\nGrant attachGrant = volume.grantAttachVolumeByResourceTag(instance.getGrantPrincipal(), List.of(instance));\nGrant detachGrant = volume.grantDetachVolumeByResourceTag(instance.getGrantPrincipal(), List.of(instance));","version":"1"},"go":{"source":"var instance instance\nvar volume volume\n\n\nattachGrant := volume.grantAttachVolumeByResourceTag(instance.GrantPrincipal, []construct{\n\tinstance,\n})\ndetachGrant := volume.grantDetachVolumeByResourceTag(instance.GrantPrincipal, []construct{\n\tinstance,\n})","version":"1"},"$":{"source":"declare const instance: ec2.Instance;\ndeclare const volume: ec2.Volume;\n\nconst attachGrant = volume.grantAttachVolumeByResourceTag(instance.grantPrincipal, [instance]);\nconst detachGrant = volume.grantDetachVolumeByResourceTag(instance.grantPrincipal, [instance]);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.Grant"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.Instance#grantPrincipal","@aws-cdk/aws-iam.Grant","@aws-cdk/aws-iam.IGrantable"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const instance: ec2.Instance;\ndeclare const volume: ec2.Volume;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Aspects, Construct, Duration, Fn, Size, Stack, StackProps } from '@aws-cdk/core';\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport s3 = require('@aws-cdk/aws-s3');\nimport iam = require('@aws-cdk/aws-iam');\nimport logs = require('@aws-cdk/aws-logs');\nimport ssm = require('@aws-cdk/aws-ssm');\nimport autoscaling = require('@aws-cdk/aws-autoscaling');\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\nimport rds = require('@aws-cdk/aws-rds');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst attachGrant = volume.grantAttachVolumeByResourceTag(instance.grantPrincipal, [instance]);\nconst detachGrant = volume.grantDetachVolumeByResourceTag(instance.grantPrincipal, [instance]);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"75":18,"130":2,"153":2,"169":2,"192":2,"194":4,"196":2,"225":4,"242":4,"243":4,"290":1},"fqnsFingerprint":"86c81c772ee105c855b02d98bc2fdc8d4b177c4d6827edada8d8fada63bfb51f"},"5b63b48507f493bfdbdc8bd870c7eccf22fe7e76bddc6657d9cf68bc0a823a2a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# grantable: iam.IGrantable\n# principal: iam.IPrincipal\n# resource_with_policy: iam.IResourceWithPolicy\n\ngrant_on_principal_and_resource_options = iam.GrantOnPrincipalAndResourceOptions(\n    actions=[\"actions\"],\n    grantee=grantable,\n    resource=resource_with_policy,\n    resource_arns=[\"resourceArns\"],\n\n    # the properties below are optional\n    resource_policy_principal=principal,\n    resource_self_arns=[\"resourceSelfArns\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nIGrantable grantable;\nIPrincipal principal;\nIResourceWithPolicy resourceWithPolicy;\n\nvar grantOnPrincipalAndResourceOptions = new GrantOnPrincipalAndResourceOptions {\n    Actions = new [] { \"actions\" },\n    Grantee = grantable,\n    Resource = resourceWithPolicy,\n    ResourceArns = new [] { \"resourceArns\" },\n\n    // the properties below are optional\n    ResourcePolicyPrincipal = principal,\n    ResourceSelfArns = new [] { \"resourceSelfArns\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nIGrantable grantable;\nIPrincipal principal;\nIResourceWithPolicy resourceWithPolicy;\n\nGrantOnPrincipalAndResourceOptions grantOnPrincipalAndResourceOptions = GrantOnPrincipalAndResourceOptions.builder()\n        .actions(List.of(\"actions\"))\n        .grantee(grantable)\n        .resource(resourceWithPolicy)\n        .resourceArns(List.of(\"resourceArns\"))\n\n        // the properties below are optional\n        .resourcePolicyPrincipal(principal)\n        .resourceSelfArns(List.of(\"resourceSelfArns\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar grantable iGrantable\nvar principal iPrincipal\nvar resourceWithPolicy iResourceWithPolicy\n\ngrantOnPrincipalAndResourceOptions := &GrantOnPrincipalAndResourceOptions{\n\tActions: []*string{\n\t\tjsii.String(\"actions\"),\n\t},\n\tGrantee: grantable,\n\tResource: resourceWithPolicy,\n\tResourceArns: []*string{\n\t\tjsii.String(\"resourceArns\"),\n\t},\n\n\t// the properties below are optional\n\tResourcePolicyPrincipal: principal,\n\tResourceSelfArns: []*string{\n\t\tjsii.String(\"resourceSelfArns\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const grantable: iam.IGrantable;\ndeclare const principal: iam.IPrincipal;\ndeclare const resourceWithPolicy: iam.IResourceWithPolicy;\nconst grantOnPrincipalAndResourceOptions: iam.GrantOnPrincipalAndResourceOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resource: resourceWithPolicy,\n  resourceArns: ['resourceArns'],\n\n  // the properties below are optional\n  resourcePolicyPrincipal: principal,\n  resourceSelfArns: ['resourceSelfArns'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.GrantOnPrincipalAndResourceOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.GrantOnPrincipalAndResourceOptions","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.IResourceWithPolicy"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const grantable: iam.IGrantable;\ndeclare const principal: iam.IPrincipal;\ndeclare const resourceWithPolicy: iam.IResourceWithPolicy;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst grantOnPrincipalAndResourceOptions: iam.GrantOnPrincipalAndResourceOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resource: resourceWithPolicy,\n  resourceArns: ['resourceArns'],\n\n  // the properties below are optional\n  resourcePolicyPrincipal: principal,\n  resourceSelfArns: ['resourceSelfArns'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":22,"130":3,"153":4,"169":4,"192":3,"193":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"104513870bed23c797737253d331cb36bb3de41820a3aae14aad4aee733764d6"},"db66c1bcf17ff2afe87ce35bb4f69604fc0f5567171da1ac83332192c29b4b50":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# construct: cdk.Construct\n# grantable: iam.IGrantable\n\ngrant_on_principal_options = iam.GrantOnPrincipalOptions(\n    actions=[\"actions\"],\n    grantee=grantable,\n    resource_arns=[\"resourceArns\"],\n\n    # the properties below are optional\n    scope=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nConstruct construct;\nIGrantable grantable;\nvar grantOnPrincipalOptions = new GrantOnPrincipalOptions {\n    Actions = new [] { \"actions\" },\n    Grantee = grantable,\n    ResourceArns = new [] { \"resourceArns\" },\n\n    // the properties below are optional\n    Scope = construct\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nConstruct construct;\nIGrantable grantable;\n\nGrantOnPrincipalOptions grantOnPrincipalOptions = GrantOnPrincipalOptions.builder()\n        .actions(List.of(\"actions\"))\n        .grantee(grantable)\n        .resourceArns(List.of(\"resourceArns\"))\n\n        // the properties below are optional\n        .scope(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar construct construct\nvar grantable iGrantable\n\ngrantOnPrincipalOptions := &GrantOnPrincipalOptions{\n\tActions: []*string{\n\t\tjsii.String(\"actions\"),\n\t},\n\tGrantee: grantable,\n\tResourceArns: []*string{\n\t\tjsii.String(\"resourceArns\"),\n\t},\n\n\t// the properties below are optional\n\tScope: construct,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const construct: cdk.Construct;\ndeclare const grantable: iam.IGrantable;\nconst grantOnPrincipalOptions: iam.GrantOnPrincipalOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resourceArns: ['resourceArns'],\n\n  // the properties below are optional\n  scope: construct,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.GrantOnPrincipalOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.GrantOnPrincipalOptions","@aws-cdk/aws-iam.IGrantable","@aws-cdk/core.IConstruct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const construct: cdk.Construct;\ndeclare const grantable: iam.IGrantable;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst grantOnPrincipalOptions: iam.GrantOnPrincipalOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resourceArns: ['resourceArns'],\n\n  // the properties below are optional\n  scope: construct,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":17,"130":2,"153":3,"169":3,"192":2,"193":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":4,"290":1},"fqnsFingerprint":"cb5ebc17b950cc6469f17abbaa3117ae363cb3df8dc165f76f557e544caf2755"},"e89fae8971c5beb234c6912e28afb20d1628340acf778fb5845978021fc48949":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# grantable: iam.IGrantable\n# resource_with_policy: iam.IResourceWithPolicy\n\ngrant_with_resource_options = iam.GrantWithResourceOptions(\n    actions=[\"actions\"],\n    grantee=grantable,\n    resource=resource_with_policy,\n    resource_arns=[\"resourceArns\"],\n\n    # the properties below are optional\n    resource_self_arns=[\"resourceSelfArns\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nIGrantable grantable;\nIResourceWithPolicy resourceWithPolicy;\n\nvar grantWithResourceOptions = new GrantWithResourceOptions {\n    Actions = new [] { \"actions\" },\n    Grantee = grantable,\n    Resource = resourceWithPolicy,\n    ResourceArns = new [] { \"resourceArns\" },\n\n    // the properties below are optional\n    ResourceSelfArns = new [] { \"resourceSelfArns\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nIGrantable grantable;\nIResourceWithPolicy resourceWithPolicy;\n\nGrantWithResourceOptions grantWithResourceOptions = GrantWithResourceOptions.builder()\n        .actions(List.of(\"actions\"))\n        .grantee(grantable)\n        .resource(resourceWithPolicy)\n        .resourceArns(List.of(\"resourceArns\"))\n\n        // the properties below are optional\n        .resourceSelfArns(List.of(\"resourceSelfArns\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar grantable iGrantable\nvar resourceWithPolicy iResourceWithPolicy\n\ngrantWithResourceOptions := &GrantWithResourceOptions{\n\tActions: []*string{\n\t\tjsii.String(\"actions\"),\n\t},\n\tGrantee: grantable,\n\tResource: resourceWithPolicy,\n\tResourceArns: []*string{\n\t\tjsii.String(\"resourceArns\"),\n\t},\n\n\t// the properties below are optional\n\tResourceSelfArns: []*string{\n\t\tjsii.String(\"resourceSelfArns\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const grantable: iam.IGrantable;\ndeclare const resourceWithPolicy: iam.IResourceWithPolicy;\nconst grantWithResourceOptions: iam.GrantWithResourceOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resource: resourceWithPolicy,\n  resourceArns: ['resourceArns'],\n\n  // the properties below are optional\n  resourceSelfArns: ['resourceSelfArns'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.GrantWithResourceOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.GrantWithResourceOptions","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IResourceWithPolicy"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const grantable: iam.IGrantable;\ndeclare const resourceWithPolicy: iam.IResourceWithPolicy;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst grantWithResourceOptions: iam.GrantWithResourceOptions = {\n  actions: ['actions'],\n  grantee: grantable,\n  resource: resourceWithPolicy,\n  resourceArns: ['resourceArns'],\n\n  // the properties below are optional\n  resourceSelfArns: ['resourceSelfArns'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":17,"130":2,"153":3,"169":3,"192":3,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"4df4d0e293cc948c0bf4a0edaec8aa8a7f2793b80b183d4900b43c78d5ec0724"},"c56e25bbff6744468fedce7771dcf3285e7b51cba10ff5fc8b07691a2da1a256":{"translations":{"python":{"source":"user = iam.User(self, \"MyUser\") # or User.fromUserName(stack, 'User', 'johnsmith');\ngroup = iam.Group(self, \"MyGroup\") # or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.add_to_group(group)\n# or\ngroup.add_user(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\"); // or User.fromUserName(stack, 'User', 'johnsmith');\nvar group = new Group(this, \"MyGroup\"); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.AddToGroup(group);\n// or\ngroup.AddUser(user);","version":"1"},"java":{"source":"User user = new User(this, \"MyUser\"); // or User.fromUserName(stack, 'User', 'johnsmith');\nGroup group = new Group(this, \"MyGroup\"); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"MyUser\")) // or User.fromUserName(stack, 'User', 'johnsmith');\ngroup := iam.NewGroup(this, jsii.String(\"MyGroup\")) // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.AddToGroup(group)\n// or\ngroup.addUser(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'MyUser'); // or User.fromUserName(stack, 'User', 'johnsmith');\nconst group = new iam.Group(this, 'MyGroup'); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.Group"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.IGroup","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#addToGroup","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser'); // or User.fromUserName(stack, 'User', 'johnsmith');\nconst group = new iam.Group(this, 'MyGroup'); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":12,"104":2,"194":4,"196":2,"197":2,"225":2,"226":2,"242":2,"243":2},"fqnsFingerprint":"4b551b1b326b6c22fceca09e2e88f31eb72a9dae7e0ea9153196cebb9a3affde"},"a74d4d0ebf5364ee72b1b7161a36fc273579aabdb28c91ace98cb4b3db0113f7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# managed_policy: iam.ManagedPolicy\n\ngroup_props = iam.GroupProps(\n    group_name=\"groupName\",\n    managed_policies=[managed_policy],\n    path=\"path\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nManagedPolicy managedPolicy;\n\nvar groupProps = new GroupProps {\n    GroupName = \"groupName\",\n    ManagedPolicies = new [] { managedPolicy },\n    Path = \"path\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nManagedPolicy managedPolicy;\n\nGroupProps groupProps = GroupProps.builder()\n        .groupName(\"groupName\")\n        .managedPolicies(List.of(managedPolicy))\n        .path(\"path\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar managedPolicy managedPolicy\n\ngroupProps := &GroupProps{\n\tGroupName: jsii.String(\"groupName\"),\n\tManagedPolicies: []iManagedPolicy{\n\t\tmanagedPolicy,\n\t},\n\tPath: jsii.String(\"path\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const managedPolicy: iam.ManagedPolicy;\nconst groupProps: iam.GroupProps = {\n  groupName: 'groupName',\n  managedPolicies: [managedPolicy],\n  path: 'path',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.GroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.GroupProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const managedPolicy: iam.ManagedPolicy;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst groupProps: iam.GroupProps = {\n  groupName: 'groupName',\n  managedPolicies: [managedPolicy],\n  path: 'path',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":11,"130":1,"153":2,"169":2,"192":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"b82e9a7ed5a7b831914a9aefd1cc955eac238897f046a27d9fff43584973aa41"},"76a3161a9bb8ff4859f7c01812f2bd72fe282efa38aa89b5d7f361a643f737a0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# managed_policy: iam.ManagedPolicy\n# policy_document: iam.PolicyDocument\n# principal: iam.IPrincipal\n\nlazy_role = iam.LazyRole(self, \"MyLazyRole\",\n    assumed_by=principal,\n\n    # the properties below are optional\n    description=\"description\",\n    external_id=\"externalId\",\n    external_ids=[\"externalIds\"],\n    inline_policies={\n        \"inline_policies_key\": policy_document\n    },\n    managed_policies=[managed_policy],\n    max_session_duration=cdk.Duration.minutes(30),\n    path=\"path\",\n    permissions_boundary=managed_policy,\n    role_name=\"roleName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nManagedPolicy managedPolicy;\nPolicyDocument policyDocument;\nIPrincipal principal;\nvar lazyRole = new LazyRole(this, \"MyLazyRole\", new LazyRoleProps {\n    AssumedBy = principal,\n\n    // the properties below are optional\n    Description = \"description\",\n    ExternalId = \"externalId\",\n    ExternalIds = new [] { \"externalIds\" },\n    InlinePolicies = new Dictionary<string, PolicyDocument> {\n        { \"inlinePoliciesKey\", policyDocument }\n    },\n    ManagedPolicies = new [] { managedPolicy },\n    MaxSessionDuration = Duration.Minutes(30),\n    Path = \"path\",\n    PermissionsBoundary = managedPolicy,\n    RoleName = \"roleName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nManagedPolicy managedPolicy;\nPolicyDocument policyDocument;\nIPrincipal principal;\n\nLazyRole lazyRole = LazyRole.Builder.create(this, \"MyLazyRole\")\n        .assumedBy(principal)\n\n        // the properties below are optional\n        .description(\"description\")\n        .externalId(\"externalId\")\n        .externalIds(List.of(\"externalIds\"))\n        .inlinePolicies(Map.of(\n                \"inlinePoliciesKey\", policyDocument))\n        .managedPolicies(List.of(managedPolicy))\n        .maxSessionDuration(Duration.minutes(30))\n        .path(\"path\")\n        .permissionsBoundary(managedPolicy)\n        .roleName(\"roleName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar managedPolicy managedPolicy\nvar policyDocument policyDocument\nvar principal iPrincipal\n\nlazyRole := iam.NewLazyRole(this, jsii.String(\"MyLazyRole\"), &LazyRoleProps{\n\tAssumedBy: principal,\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tExternalId: jsii.String(\"externalId\"),\n\tExternalIds: []*string{\n\t\tjsii.String(\"externalIds\"),\n\t},\n\tInlinePolicies: map[string]*policyDocument{\n\t\t\"inlinePoliciesKey\": policyDocument,\n\t},\n\tManagedPolicies: []iManagedPolicy{\n\t\tmanagedPolicy,\n\t},\n\tMaxSessionDuration: cdk.Duration_Minutes(jsii.Number(30)),\n\tPath: jsii.String(\"path\"),\n\tPermissionsBoundary: managedPolicy,\n\tRoleName: jsii.String(\"roleName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const managedPolicy: iam.ManagedPolicy;\ndeclare const policyDocument: iam.PolicyDocument;\ndeclare const principal: iam.IPrincipal;\nconst lazyRole = new iam.LazyRole(this, 'MyLazyRole', {\n  assumedBy: principal,\n\n  // the properties below are optional\n  description: 'description',\n  externalId: 'externalId',\n  externalIds: ['externalIds'],\n  inlinePolicies: {\n    inlinePoliciesKey: policyDocument,\n  },\n  managedPolicies: [managedPolicy],\n  maxSessionDuration: cdk.Duration.minutes(30),\n  path: 'path',\n  permissionsBoundary: managedPolicy,\n  roleName: 'roleName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.LazyRole"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.LazyRole","@aws-cdk/aws-iam.LazyRoleProps","@aws-cdk/aws-iam.PolicyDocument","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const managedPolicy: iam.ManagedPolicy;\ndeclare const policyDocument: iam.PolicyDocument;\ndeclare const principal: iam.IPrincipal;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lazyRole = new iam.LazyRole(this, 'MyLazyRole', {\n  assumedBy: principal,\n\n  // the properties below are optional\n  description: 'description',\n  externalId: 'externalId',\n  externalIds: ['externalIds'],\n  inlinePolicies: {\n    inlinePoliciesKey: policyDocument,\n  },\n  managedPolicies: [managedPolicy],\n  maxSessionDuration: cdk.Duration.minutes(30),\n  path: 'path',\n  permissionsBoundary: managedPolicy,\n  roleName: 'roleName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":8,"75":32,"104":1,"130":3,"153":3,"169":3,"192":2,"193":2,"194":3,"196":1,"197":1,"225":4,"242":4,"243":4,"254":2,"255":2,"256":2,"281":11,"290":1},"fqnsFingerprint":"45e6d5ae899431ea7112730d740d4a964ad1ec8fc196fc38fdb0d6530f782e94"},"3be057b96b2c73282d6fb41caa3e990f96a764906dba6ce3ebc123ee43dfec1e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# managed_policy: iam.ManagedPolicy\n# policy_document: iam.PolicyDocument\n# principal: iam.IPrincipal\n\nlazy_role_props = iam.LazyRoleProps(\n    assumed_by=principal,\n\n    # the properties below are optional\n    description=\"description\",\n    external_id=\"externalId\",\n    external_ids=[\"externalIds\"],\n    inline_policies={\n        \"inline_policies_key\": policy_document\n    },\n    managed_policies=[managed_policy],\n    max_session_duration=cdk.Duration.minutes(30),\n    path=\"path\",\n    permissions_boundary=managed_policy,\n    role_name=\"roleName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nManagedPolicy managedPolicy;\nPolicyDocument policyDocument;\nIPrincipal principal;\nvar lazyRoleProps = new LazyRoleProps {\n    AssumedBy = principal,\n\n    // the properties below are optional\n    Description = \"description\",\n    ExternalId = \"externalId\",\n    ExternalIds = new [] { \"externalIds\" },\n    InlinePolicies = new Dictionary<string, PolicyDocument> {\n        { \"inlinePoliciesKey\", policyDocument }\n    },\n    ManagedPolicies = new [] { managedPolicy },\n    MaxSessionDuration = Duration.Minutes(30),\n    Path = \"path\",\n    PermissionsBoundary = managedPolicy,\n    RoleName = \"roleName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nManagedPolicy managedPolicy;\nPolicyDocument policyDocument;\nIPrincipal principal;\n\nLazyRoleProps lazyRoleProps = LazyRoleProps.builder()\n        .assumedBy(principal)\n\n        // the properties below are optional\n        .description(\"description\")\n        .externalId(\"externalId\")\n        .externalIds(List.of(\"externalIds\"))\n        .inlinePolicies(Map.of(\n                \"inlinePoliciesKey\", policyDocument))\n        .managedPolicies(List.of(managedPolicy))\n        .maxSessionDuration(Duration.minutes(30))\n        .path(\"path\")\n        .permissionsBoundary(managedPolicy)\n        .roleName(\"roleName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar managedPolicy managedPolicy\nvar policyDocument policyDocument\nvar principal iPrincipal\n\nlazyRoleProps := &LazyRoleProps{\n\tAssumedBy: principal,\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tExternalId: jsii.String(\"externalId\"),\n\tExternalIds: []*string{\n\t\tjsii.String(\"externalIds\"),\n\t},\n\tInlinePolicies: map[string]*policyDocument{\n\t\t\"inlinePoliciesKey\": policyDocument,\n\t},\n\tManagedPolicies: []iManagedPolicy{\n\t\tmanagedPolicy,\n\t},\n\tMaxSessionDuration: cdk.Duration_Minutes(jsii.Number(30)),\n\tPath: jsii.String(\"path\"),\n\tPermissionsBoundary: managedPolicy,\n\tRoleName: jsii.String(\"roleName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const managedPolicy: iam.ManagedPolicy;\ndeclare const policyDocument: iam.PolicyDocument;\ndeclare const principal: iam.IPrincipal;\nconst lazyRoleProps: iam.LazyRoleProps = {\n  assumedBy: principal,\n\n  // the properties below are optional\n  description: 'description',\n  externalId: 'externalId',\n  externalIds: ['externalIds'],\n  inlinePolicies: {\n    inlinePoliciesKey: policyDocument,\n  },\n  managedPolicies: [managedPolicy],\n  maxSessionDuration: cdk.Duration.minutes(30),\n  path: 'path',\n  permissionsBoundary: managedPolicy,\n  roleName: 'roleName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.LazyRoleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.LazyRoleProps","@aws-cdk/aws-iam.PolicyDocument","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const managedPolicy: iam.ManagedPolicy;\ndeclare const policyDocument: iam.PolicyDocument;\ndeclare const principal: iam.IPrincipal;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lazyRoleProps: iam.LazyRoleProps = {\n  assumedBy: principal,\n\n  // the properties below are optional\n  description: 'description',\n  externalId: 'externalId',\n  externalIds: ['externalIds'],\n  inlinePolicies: {\n    inlinePoliciesKey: policyDocument,\n  },\n  managedPolicies: [managedPolicy],\n  maxSessionDuration: cdk.Duration.minutes(30),\n  path: 'path',\n  permissionsBoundary: managedPolicy,\n  roleName: 'roleName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":7,"75":32,"130":3,"153":4,"169":4,"192":2,"193":2,"194":2,"196":1,"225":4,"242":4,"243":4,"254":2,"255":2,"256":2,"281":11,"290":1},"fqnsFingerprint":"bed193c9519ef12d7a69c3565cc251d6dcd6ed1aa7614db57ec4f9f3b4bfd2ea"},"597ff8144b275ce74a6c4e2e6b1ba9b1321228792f26aaed988e568133ab9e45":{"translations":{"python":{"source":"my_role = iam.Role(self, \"My Role\",\n    assumed_by=iam.ServicePrincipal(\"sns.amazonaws.com\")\n)\n\nfn = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.NODEJS_16_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"lambda-handler\")),\n    role=my_role\n)\n\nmy_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name(\"service-role/AWSLambdaBasicExecutionRole\"))\nmy_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name(\"service-role/AWSLambdaVPCAccessExecutionRole\"))","version":"2"},"csharp":{"source":"var myRole = new Role(this, \"My Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"sns.amazonaws.com\")\n});\n\nvar fn = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.NODEJS_16_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"lambda-handler\")),\n    Role = myRole\n});\n\nmyRole.AddManagedPolicy(ManagedPolicy.FromAwsManagedPolicyName(\"service-role/AWSLambdaBasicExecutionRole\"));\nmyRole.AddManagedPolicy(ManagedPolicy.FromAwsManagedPolicyName(\"service-role/AWSLambdaVPCAccessExecutionRole\"));","version":"1"},"java":{"source":"Role myRole = Role.Builder.create(this, \"My Role\")\n        .assumedBy(new ServicePrincipal(\"sns.amazonaws.com\"))\n        .build();\n\nFunction fn = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.NODEJS_16_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"lambda-handler\")))\n        .role(myRole)\n        .build();\n\nmyRole.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaBasicExecutionRole\"));\nmyRole.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaVPCAccessExecutionRole\"));","version":"1"},"go":{"source":"myRole := iam.NewRole(this, jsii.String(\"My Role\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"sns.amazonaws.com\")),\n})\n\nfn := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_16_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_FromAsset(path.join(__dirname, jsii.String(\"lambda-handler\"))),\n\tRole: myRole,\n})\n\nmyRole.AddManagedPolicy(iam.ManagedPolicy_FromAwsManagedPolicyName(jsii.String(\"service-role/AWSLambdaBasicExecutionRole\")))\nmyRole.AddManagedPolicy(iam.ManagedPolicy_FromAwsManagedPolicyName(jsii.String(\"service-role/AWSLambdaVPCAccessExecutionRole\")))","version":"1"},"$":{"source":"const myRole = new iam.Role(this, 'My Role', {\n  assumedBy: new iam.ServicePrincipal('sns.amazonaws.com'),\n});\n\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  role: myRole, // user-provided role\n});\n\nmyRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaBasicExecutionRole\"));\nmyRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaVPCAccessExecutionRole\")); // only required if your function lives in a VPC","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.ManagedPolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.ManagedPolicy","@aws-cdk/aws-iam.ManagedPolicy#fromAwsManagedPolicyName","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#addManagedPolicy","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Code#fromAsset","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#NODEJS_16_X","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Aspects, CfnOutput, DockerImage, Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport { LAMBDA_RECOGNIZE_VERSION_PROPS, LAMBDA_RECOGNIZE_LAYER_VERSION } from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myRole = new iam.Role(this, 'My Role', {\n  assumedBy: new iam.ServicePrincipal('sns.amazonaws.com'),\n});\n\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  role: myRole, // user-provided role\n});\n\nmyRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaBasicExecutionRole\"));\nmyRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaVPCAccessExecutionRole\"));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":33,"104":2,"193":2,"194":14,"196":6,"197":3,"225":2,"226":2,"242":2,"243":2,"281":5},"fqnsFingerprint":"125f76fbf93647d7eb7c909f58498631b7381e4cc273bbcde051c19b7ac09304"},"c8e29824dcd43dfee04d20cbefa8d7b74b41d0cf915b704958888dc6f895fad8":{"translations":{"python":{"source":"policy_document = {\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Sid\": \"FirstStatement\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\"iam:ChangePassword\"],\n        \"Resource\": \"*\"\n    }, {\n        \"Sid\": \"SecondStatement\",\n        \"Effect\": \"Allow\",\n        \"Action\": \"s3:ListAllMyBuckets\",\n        \"Resource\": \"*\"\n    }, {\n        \"Sid\": \"ThirdStatement\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\"s3:List*\", \"s3:Get*\"\n        ],\n        \"Resource\": [\"arn:aws:s3:::confidential-data\", \"arn:aws:s3:::confidential-data/*\"\n        ],\n        \"Condition\": {\"Bool\": {\"aws:_multi_factor_auth_present\": \"true\"}}\n    }\n    ]\n}\n\ncustom_policy_document = iam.PolicyDocument.from_json(policy_document)\n\n# You can pass this document as an initial document to a ManagedPolicy\n# or inline Policy.\nnew_managed_policy = iam.ManagedPolicy(self, \"MyNewManagedPolicy\",\n    document=custom_policy_document\n)\nnew_policy = iam.Policy(self, \"MyNewPolicy\",\n    document=custom_policy_document\n)","version":"2"},"csharp":{"source":"IDictionary<string, object> policyDocument = new Dictionary<string, object> {\n    { \"Version\", \"2012-10-17\" },\n    { \"Statement\", new [] { new Dictionary<string, object> {\n        { \"Sid\", \"FirstStatement\" },\n        { \"Effect\", \"Allow\" },\n        { \"Action\", new [] { \"iam:ChangePassword\" } },\n        { \"Resource\", \"*\" }\n    }, new Dictionary<string, string> {\n        { \"Sid\", \"SecondStatement\" },\n        { \"Effect\", \"Allow\" },\n        { \"Action\", \"s3:ListAllMyBuckets\" },\n        { \"Resource\", \"*\" }\n    }, new Dictionary<string, object> {\n        { \"Sid\", \"ThirdStatement\" },\n        { \"Effect\", \"Allow\" },\n        { \"Action\", new [] { \"s3:List*\", \"s3:Get*\" } },\n        { \"Resource\", new [] { \"arn:aws:s3:::confidential-data\", \"arn:aws:s3:::confidential-data/*\" } },\n        { \"Condition\", new Dictionary<string, IDictionary<string, string>> { { \"Bool\", new Dictionary<string, string> { { \"aws:MultiFactorAuthPresent\", \"true\" } } } } }\n    } } }\n};\n\nvar customPolicyDocument = PolicyDocument.FromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nvar newManagedPolicy = new ManagedPolicy(this, \"MyNewManagedPolicy\", new ManagedPolicyProps {\n    Document = customPolicyDocument\n});\nvar newPolicy = new Policy(this, \"MyNewPolicy\", new PolicyProps {\n    Document = customPolicyDocument\n});","version":"1"},"java":{"source":"Map<String, Object> policyDocument = Map.of(\n        \"Version\", \"2012-10-17\",\n        \"Statement\", List.of(Map.of(\n                \"Sid\", \"FirstStatement\",\n                \"Effect\", \"Allow\",\n                \"Action\", List.of(\"iam:ChangePassword\"),\n                \"Resource\", \"*\"), Map.of(\n                \"Sid\", \"SecondStatement\",\n                \"Effect\", \"Allow\",\n                \"Action\", \"s3:ListAllMyBuckets\",\n                \"Resource\", \"*\"), Map.of(\n                \"Sid\", \"ThirdStatement\",\n                \"Effect\", \"Allow\",\n                \"Action\", List.of(\"s3:List*\", \"s3:Get*\"),\n                \"Resource\", List.of(\"arn:aws:s3:::confidential-data\", \"arn:aws:s3:::confidential-data/*\"),\n                \"Condition\", Map.of(\"Bool\", Map.of(\"aws:MultiFactorAuthPresent\", \"true\")))));\n\nPolicyDocument customPolicyDocument = PolicyDocument.fromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nManagedPolicy newManagedPolicy = ManagedPolicy.Builder.create(this, \"MyNewManagedPolicy\")\n        .document(customPolicyDocument)\n        .build();\nPolicy newPolicy = Policy.Builder.create(this, \"MyNewPolicy\")\n        .document(customPolicyDocument)\n        .build();","version":"1"},"go":{"source":"policyDocument := map[string]interface{}{\n\t\"Version\": jsii.String(\"2012-10-17\"),\n\t\"Statement\": []interface{}{\n\t\tmap[string]interface{}{\n\t\t\t\"Sid\": jsii.String(\"FirstStatement\"),\n\t\t\t\"Effect\": jsii.String(\"Allow\"),\n\t\t\t\"Action\": []*string{\n\t\t\t\tjsii.String(\"iam:ChangePassword\"),\n\t\t\t},\n\t\t\t\"Resource\": jsii.String(\"*\"),\n\t\t},\n\t\tmap[string]*string{\n\t\t\t\"Sid\": jsii.String(\"SecondStatement\"),\n\t\t\t\"Effect\": jsii.String(\"Allow\"),\n\t\t\t\"Action\": jsii.String(\"s3:ListAllMyBuckets\"),\n\t\t\t\"Resource\": jsii.String(\"*\"),\n\t\t},\n\t\tmap[string]interface{}{\n\t\t\t\"Sid\": jsii.String(\"ThirdStatement\"),\n\t\t\t\"Effect\": jsii.String(\"Allow\"),\n\t\t\t\"Action\": []*string{\n\t\t\t\tjsii.String(\"s3:List*\"),\n\t\t\t\tjsii.String(\"s3:Get*\"),\n\t\t\t},\n\t\t\t\"Resource\": []*string{\n\t\t\t\tjsii.String(\"arn:aws:s3:::confidential-data\"),\n\t\t\t\tjsii.String(\"arn:aws:s3:::confidential-data/*\"),\n\t\t\t},\n\t\t\t\"Condition\": map[string]map[string]*string{\n\t\t\t\t\"Bool\": map[string]*string{\n\t\t\t\t\t\"aws:MultiFactorAuthPresent\": jsii.String(\"true\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}\n\ncustomPolicyDocument := iam.PolicyDocument_FromJson(policyDocument)\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nnewManagedPolicy := iam.NewManagedPolicy(this, jsii.String(\"MyNewManagedPolicy\"), &ManagedPolicyProps{\n\tDocument: customPolicyDocument,\n})\nnewPolicy := iam.NewPolicy(this, jsii.String(\"MyNewPolicy\"), &PolicyProps{\n\tDocument: customPolicyDocument,\n})","version":"1"},"$":{"source":"const policyDocument = {\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"FirstStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\"iam:ChangePassword\"],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"SecondStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListAllMyBuckets\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ThirdStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:Get*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::confidential-data\",\n        \"arn:aws:s3:::confidential-data/*\"\n      ],\n      \"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": \"true\"}}\n    }\n  ]\n};\n\nconst customPolicyDocument = iam.PolicyDocument.fromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nconst newManagedPolicy = new iam.ManagedPolicy(this, 'MyNewManagedPolicy', {\n  document: customPolicyDocument,\n});\nconst newPolicy = new iam.Policy(this, 'MyNewPolicy', {\n  document: customPolicyDocument,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.ManagedPolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ManagedPolicy","@aws-cdk/aws-iam.ManagedPolicyProps","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.PolicyDocument","@aws-cdk/aws-iam.PolicyDocument#fromJson","@aws-cdk/aws-iam.PolicyProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst policyDocument = {\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"FirstStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\"iam:ChangePassword\"],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"SecondStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListAllMyBuckets\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ThirdStatement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:List*\",\n        \"s3:Get*\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::confidential-data\",\n        \"arn:aws:s3:::confidential-data/*\"\n      ],\n      \"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": \"true\"}}\n    }\n  ]\n};\n\nconst customPolicyDocument = iam.PolicyDocument.fromJson(policyDocument);\n\n// You can pass this document as an initial document to a ManagedPolicy\n// or inline Policy.\nconst newManagedPolicy = new iam.ManagedPolicy(this, 'MyNewManagedPolicy', {\n  document: customPolicyDocument,\n});\nconst newPolicy = new iam.Policy(this, 'MyNewPolicy', {\n  document: customPolicyDocument,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":35,"75":16,"104":2,"192":4,"193":8,"194":4,"196":1,"197":2,"225":4,"242":4,"243":4,"281":19},"fqnsFingerprint":"e8fb9a7a30f64f5caaed1825f7d4b0778ca110aca7444d91662fd345f74b0d7f"},"529e58dc2d792864dfb6aac887ca4e1ce16a502e9480fdc048105d60840ba86c":{"translations":{"python":{"source":"provider = iam.OpenIdConnectProvider(self, \"MyProvider\",\n    url=\"https://openid/connect\",\n    client_ids=[\"myclient1\", \"myclient2\"]\n)\nprincipal = iam.OpenIdConnectPrincipal(provider)","version":"2"},"csharp":{"source":"var provider = new OpenIdConnectProvider(this, \"MyProvider\", new OpenIdConnectProviderProps {\n    Url = \"https://openid/connect\",\n    ClientIds = new [] { \"myclient1\", \"myclient2\" }\n});\nvar principal = new OpenIdConnectPrincipal(provider);","version":"1"},"java":{"source":"OpenIdConnectProvider provider = OpenIdConnectProvider.Builder.create(this, \"MyProvider\")\n        .url(\"https://openid/connect\")\n        .clientIds(List.of(\"myclient1\", \"myclient2\"))\n        .build();\nOpenIdConnectPrincipal principal = new OpenIdConnectPrincipal(provider);","version":"1"},"go":{"source":"provider := iam.NewOpenIdConnectProvider(this, jsii.String(\"MyProvider\"), &OpenIdConnectProviderProps{\n\tUrl: jsii.String(\"https://openid/connect\"),\n\tClientIds: []*string{\n\t\tjsii.String(\"myclient1\"),\n\t\tjsii.String(\"myclient2\"),\n\t},\n})\nprincipal := iam.NewOpenIdConnectPrincipal(provider)","version":"1"},"$":{"source":"const provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\nconst principal = new iam.OpenIdConnectPrincipal(provider);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.OpenIdConnectPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IOpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectPrincipal","@aws-cdk/aws-iam.OpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\nconst principal = new iam.OpenIdConnectPrincipal(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":9,"104":1,"192":1,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"281":2},"fqnsFingerprint":"93588abcfef131023979ddb2d0710585951dc1f9e4b58497cdd83ec25d91d97e"},"aedfa318e4892e624bafcf2bd139b3e06cafd1d43585ba9093aafb46c91bf67a":{"translations":{"python":{"source":"provider = iam.OpenIdConnectProvider(self, \"MyProvider\",\n    url=\"https://openid/connect\",\n    client_ids=[\"myclient1\", \"myclient2\"]\n)","version":"2"},"csharp":{"source":"var provider = new OpenIdConnectProvider(this, \"MyProvider\", new OpenIdConnectProviderProps {\n    Url = \"https://openid/connect\",\n    ClientIds = new [] { \"myclient1\", \"myclient2\" }\n});","version":"1"},"java":{"source":"OpenIdConnectProvider provider = OpenIdConnectProvider.Builder.create(this, \"MyProvider\")\n        .url(\"https://openid/connect\")\n        .clientIds(List.of(\"myclient1\", \"myclient2\"))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewOpenIdConnectProvider(this, jsii.String(\"MyProvider\"), &OpenIdConnectProviderProps{\n\tUrl: jsii.String(\"https://openid/connect\"),\n\tClientIds: []*string{\n\t\tjsii.String(\"myclient1\"),\n\t\tjsii.String(\"myclient2\"),\n\t},\n})","version":"1"},"$":{"source":"const provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.OpenIdConnectProvider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.OpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":5,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"b04022714a70bbee044a80b48ea1af28111074690a7c16c36bf95baf947a3dc1"},"8a87ae3a5d6abe1154dac229e64807858bcceb625c47a2a0e00c21ca0014c3c5":{"translations":{"python":{"source":"provider = iam.OpenIdConnectProvider(self, \"MyProvider\",\n    url=\"https://openid/connect\",\n    client_ids=[\"myclient1\", \"myclient2\"]\n)","version":"2"},"csharp":{"source":"var provider = new OpenIdConnectProvider(this, \"MyProvider\", new OpenIdConnectProviderProps {\n    Url = \"https://openid/connect\",\n    ClientIds = new [] { \"myclient1\", \"myclient2\" }\n});","version":"1"},"java":{"source":"OpenIdConnectProvider provider = OpenIdConnectProvider.Builder.create(this, \"MyProvider\")\n        .url(\"https://openid/connect\")\n        .clientIds(List.of(\"myclient1\", \"myclient2\"))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewOpenIdConnectProvider(this, jsii.String(\"MyProvider\"), &OpenIdConnectProviderProps{\n\tUrl: jsii.String(\"https://openid/connect\"),\n\tClientIds: []*string{\n\t\tjsii.String(\"myclient1\"),\n\t\tjsii.String(\"myclient2\"),\n\t},\n})","version":"1"},"$":{"source":"const provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.OpenIdConnectProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.OpenIdConnectProvider","@aws-cdk/aws-iam.OpenIdConnectProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.OpenIdConnectProvider(this, 'MyProvider', {\n  url: 'https://openid/connect',\n  clientIds: [ 'myclient1', 'myclient2' ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":5,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"b04022714a70bbee044a80b48ea1af28111074690a7c16c36bf95baf947a3dc1"},"125d975003d76a3f61838c2504f640298ef090f31c726fa1a04f16ae43e66ccc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\norganization_principal = iam.OrganizationPrincipal(\"organizationId\")","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar organizationPrincipal = new OrganizationPrincipal(\"organizationId\");","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nOrganizationPrincipal organizationPrincipal = new OrganizationPrincipal(\"organizationId\");","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\norganizationPrincipal := iam.NewOrganizationPrincipal(jsii.String(\"organizationId\"))","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst organizationPrincipal = new iam.OrganizationPrincipal('organizationId');","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.OrganizationPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.OrganizationPrincipal"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst organizationPrincipal = new iam.OrganizationPrincipal('organizationId');\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"9d1146777806d1a230478c7104358b034cb1a8c1fa922be0b99cdf328590e3b5"},"1ef3765d7b488b17ab991479cec1232482b68b58f98164b2ed458c376f747c41":{"translations":{"python":{"source":"policy = iam.ManagedPolicy.from_aws_managed_policy_name(\"ReadOnlyAccess\")\niam.PermissionsBoundary.of(self).apply(policy)","version":"2"},"csharp":{"source":"var policy = ManagedPolicy.FromAwsManagedPolicyName(\"ReadOnlyAccess\");\nPermissionsBoundary.Of(this).Apply(policy);","version":"1"},"java":{"source":"IManagedPolicy policy = ManagedPolicy.fromAwsManagedPolicyName(\"ReadOnlyAccess\");\nPermissionsBoundary.of(this).apply(policy);","version":"1"},"go":{"source":"policy := iam.ManagedPolicy_FromAwsManagedPolicyName(jsii.String(\"ReadOnlyAccess\"))\niam.PermissionsBoundary_Of(this).Apply(policy)","version":"1"},"$":{"source":"const policy = iam.ManagedPolicy.fromAwsManagedPolicyName('ReadOnlyAccess');\niam.PermissionsBoundary.of(this).apply(policy);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PermissionsBoundary"},"field":{"field":"markdown","line":1}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.ManagedPolicy","@aws-cdk/aws-iam.ManagedPolicy#fromAwsManagedPolicyName","@aws-cdk/aws-iam.PermissionsBoundary","@aws-cdk/aws-iam.PermissionsBoundary#apply","@aws-cdk/aws-iam.PermissionsBoundary#of","constructs.IConstruct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst policy = iam.ManagedPolicy.fromAwsManagedPolicyName('ReadOnlyAccess');\niam.PermissionsBoundary.of(this).apply(policy);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":9,"104":1,"194":5,"196":3,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"f2d2ad56e3c437f99303b7c3171a1a9d1782227946e9b13abe4fb4f25551b61e"},"d2c533b83d059c9109b8702cf95c5056ee60657f3006fbce9bd6a5a3e0426a73":{"translations":{"python":{"source":"# project: codebuild.Project\n\niam.PermissionsBoundary.of(project).apply(codebuild.UntrustedCodeBoundaryPolicy(self, \"Boundary\"))","version":"2"},"csharp":{"source":"Project project;\n\nPermissionsBoundary.Of(project).Apply(new UntrustedCodeBoundaryPolicy(this, \"Boundary\"));","version":"1"},"java":{"source":"Project project;\n\nPermissionsBoundary.of(project).apply(new UntrustedCodeBoundaryPolicy(this, \"Boundary\"));","version":"1"},"go":{"source":"var project project\n\niam.PermissionsBoundary_Of(project).Apply(codebuild.NewUntrustedCodeBoundaryPolicy(this, jsii.String(\"Boundary\")))","version":"1"},"$":{"source":"declare const project: codebuild.Project;\niam.PermissionsBoundary.of(project).apply(new codebuild.UntrustedCodeBoundaryPolicy(this, 'Boundary'));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PermissionsBoundary"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-codebuild.UntrustedCodeBoundaryPolicy","@aws-cdk/aws-iam.IManagedPolicy","@aws-cdk/aws-iam.PermissionsBoundary","@aws-cdk/aws-iam.PermissionsBoundary#apply","@aws-cdk/aws-iam.PermissionsBoundary#of","constructs.Construct","constructs.IConstruct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const project: codebuild.Project;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack, Duration, SecretValue } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport iam = require('@aws-cdk/aws-iam');\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\niam.PermissionsBoundary.of(project).apply(new codebuild.UntrustedCodeBoundaryPolicy(this, 'Boundary'));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":10,"104":1,"130":1,"153":1,"169":1,"194":4,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"76b4cd4470974cc0ac8b8c286a8d76d6f342d2cdce47790238a1fb8967abac0a"},"b0f6442fc1a869daa5f923de714aa3bcf2109d410fb77861ebabae594c6847ce":{"translations":{"python":{"source":"# post_auth_fn: lambda.Function\n\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    lambda_triggers=cognito.UserPoolTriggers(\n        post_authentication=post_auth_fn\n    )\n)\n\n# provide permissions to describe the user pool scoped to the ARN the user pool\npost_auth_fn.role.attach_inline_policy(iam.Policy(self, \"userpool-policy\",\n    statements=[iam.PolicyStatement(\n        actions=[\"cognito-idp:DescribeUserPool\"],\n        resources=[userpool.user_pool_arn]\n    )]\n))","version":"2"},"csharp":{"source":"Function postAuthFn;\n\n\nvar userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    LambdaTriggers = new UserPoolTriggers {\n        PostAuthentication = postAuthFn\n    }\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(new Policy(this, \"userpool-policy\", new PolicyProps {\n    Statements = new [] { new PolicyStatement(new PolicyStatementProps {\n        Actions = new [] { \"cognito-idp:DescribeUserPool\" },\n        Resources = new [] { userpool.UserPoolArn }\n    }) }\n}));","version":"1"},"java":{"source":"Function postAuthFn;\n\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .postAuthentication(postAuthFn)\n                .build())\n        .build();\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role.attachInlinePolicy(Policy.Builder.create(this, \"userpool-policy\")\n        .statements(List.of(PolicyStatement.Builder.create()\n                .actions(List.of(\"cognito-idp:DescribeUserPool\"))\n                .resources(List.of(userpool.getUserPoolArn()))\n                .build()))\n        .build());","version":"1"},"go":{"source":"var postAuthFn function\n\n\nuserpool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tLambdaTriggers: &UserPoolTriggers{\n\t\tPostAuthentication: postAuthFn,\n\t},\n})\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(iam.NewPolicy(this, jsii.String(\"userpool-policy\"), &PolicyProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"cognito-idp:DescribeUserPool\"),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tuserpool.UserPoolArn,\n\t\t\t},\n\t\t}),\n\t},\n}))","version":"1"},"$":{"source":"declare const postAuthFn: lambda.Function;\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.Policy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#userPoolArn","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolTriggers","@aws-cdk/aws-iam.IIdentity#attachInlinePolicy","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.PolicyProps","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-lambda.Function#role","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const postAuthFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"28":1,"75":21,"104":2,"130":1,"153":1,"169":1,"192":3,"193":4,"194":6,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":5,"290":1},"fqnsFingerprint":"642d307b83bed6e8e5585a61db334dbc8fdf835a74dcff9ca77a2415e7eb2aad"},"41a64d14395a27c1aba896dd8775d35033387788134490aa378250aefd62c508":{"translations":{"python":{"source":"my_trusted_admin_role = iam.Role.from_role_arn(self, \"TrustedRole\", \"arn:aws:iam:....\")\n# Creates a limited admin policy and assigns to the account root.\nmy_custom_policy = iam.PolicyDocument(\n    statements=[iam.PolicyStatement(\n        actions=[\"kms:Create*\", \"kms:Describe*\", \"kms:Enable*\", \"kms:List*\", \"kms:Put*\"\n        ],\n        principals=[iam.AccountRootPrincipal()],\n        resources=[\"*\"]\n    )]\n)\nkey = kms.Key(self, \"MyKey\",\n    policy=my_custom_policy\n)","version":"2"},"csharp":{"source":"var myTrustedAdminRole = Role.FromRoleArn(this, \"TrustedRole\", \"arn:aws:iam:....\");\n// Creates a limited admin policy and assigns to the account root.\nvar myCustomPolicy = new PolicyDocument(new PolicyDocumentProps {\n    Statements = new [] { new PolicyStatement(new PolicyStatementProps {\n        Actions = new [] { \"kms:Create*\", \"kms:Describe*\", \"kms:Enable*\", \"kms:List*\", \"kms:Put*\" },\n        Principals = new [] { new AccountRootPrincipal() },\n        Resources = new [] { \"*\" }\n    }) }\n});\nvar key = new Key(this, \"MyKey\", new KeyProps {\n    Policy = myCustomPolicy\n});","version":"1"},"java":{"source":"IRole myTrustedAdminRole = Role.fromRoleArn(this, \"TrustedRole\", \"arn:aws:iam:....\");\n// Creates a limited admin policy and assigns to the account root.\nPolicyDocument myCustomPolicy = PolicyDocument.Builder.create()\n        .statements(List.of(PolicyStatement.Builder.create()\n                .actions(List.of(\"kms:Create*\", \"kms:Describe*\", \"kms:Enable*\", \"kms:List*\", \"kms:Put*\"))\n                .principals(List.of(new AccountRootPrincipal()))\n                .resources(List.of(\"*\"))\n                .build()))\n        .build();\nKey key = Key.Builder.create(this, \"MyKey\")\n        .policy(myCustomPolicy)\n        .build();","version":"1"},"go":{"source":"myTrustedAdminRole := iam.Role_FromRoleArn(this, jsii.String(\"TrustedRole\"), jsii.String(\"arn:aws:iam:....\"))\n// Creates a limited admin policy and assigns to the account root.\nmyCustomPolicy := iam.NewPolicyDocument(&PolicyDocumentProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"kms:Create*\"),\n\t\t\t\tjsii.String(\"kms:Describe*\"),\n\t\t\t\tjsii.String(\"kms:Enable*\"),\n\t\t\t\tjsii.String(\"kms:List*\"),\n\t\t\t\tjsii.String(\"kms:Put*\"),\n\t\t\t},\n\t\t\tPrincipals: []iPrincipal{\n\t\t\t\tiam.NewAccountRootPrincipal(),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t},\n\t\t}),\n\t},\n})\nkey := kms.NewKey(this, jsii.String(\"MyKey\"), &KeyProps{\n\tPolicy: myCustomPolicy,\n})","version":"1"},"$":{"source":"const myTrustedAdminRole = iam.Role.fromRoleArn(this, 'TrustedRole', 'arn:aws:iam:....');\n// Creates a limited admin policy and assigns to the account root.\nconst myCustomPolicy = new iam.PolicyDocument({\n  statements: [new iam.PolicyStatement({\n    actions: [\n      'kms:Create*',\n      'kms:Describe*',\n      'kms:Enable*',\n      'kms:List*',\n      'kms:Put*',\n    ],\n    principals: [new iam.AccountRootPrincipal()],\n    resources: ['*'],\n  })],\n});\nconst key = new kms.Key(this, 'MyKey', {\n  policy: myCustomPolicy,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PolicyDocument"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountRootPrincipal","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.PolicyDocument","@aws-cdk/aws-iam.PolicyDocumentProps","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#fromRoleArn","@aws-cdk/aws-kms.Key","@aws-cdk/aws-kms.KeyProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myTrustedAdminRole = iam.Role.fromRoleArn(this, 'TrustedRole', 'arn:aws:iam:....');\n// Creates a limited admin policy and assigns to the account root.\nconst myCustomPolicy = new iam.PolicyDocument({\n  statements: [new iam.PolicyStatement({\n    actions: [\n      'kms:Create*',\n      'kms:Describe*',\n      'kms:Enable*',\n      'kms:List*',\n      'kms:Put*',\n    ],\n    principals: [new iam.AccountRootPrincipal()],\n    resources: ['*'],\n  })],\n});\nconst key = new kms.Key(this, 'MyKey', {\n  policy: myCustomPolicy,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":9,"75":20,"104":2,"192":4,"193":3,"194":6,"196":1,"197":4,"225":3,"242":3,"243":3,"281":5},"fqnsFingerprint":"934404f881a4076b95e1653ee0ba8630dc2e38b336a690d4f27debcc1059e395"},"79a00eaac56f614851a477c4ac1590f9cb4db9607c8bedf7f0f569cd8c7dbef6":{"translations":{"python":{"source":"my_trusted_admin_role = iam.Role.from_role_arn(self, \"TrustedRole\", \"arn:aws:iam:....\")\n# Creates a limited admin policy and assigns to the account root.\nmy_custom_policy = iam.PolicyDocument(\n    statements=[iam.PolicyStatement(\n        actions=[\"kms:Create*\", \"kms:Describe*\", \"kms:Enable*\", \"kms:List*\", \"kms:Put*\"\n        ],\n        principals=[iam.AccountRootPrincipal()],\n        resources=[\"*\"]\n    )]\n)\nkey = kms.Key(self, \"MyKey\",\n    policy=my_custom_policy\n)","version":"2"},"csharp":{"source":"var myTrustedAdminRole = Role.FromRoleArn(this, \"TrustedRole\", \"arn:aws:iam:....\");\n// Creates a limited admin policy and assigns to the account root.\nvar myCustomPolicy = new PolicyDocument(new PolicyDocumentProps {\n    Statements = new [] { new PolicyStatement(new PolicyStatementProps {\n        Actions = new [] { \"kms:Create*\", \"kms:Describe*\", \"kms:Enable*\", \"kms:List*\", \"kms:Put*\" },\n        Principals = new [] { new AccountRootPrincipal() },\n        Resources = new [] { \"*\" }\n    }) }\n});\nvar key = new Key(this, \"MyKey\", new KeyProps {\n    Policy = myCustomPolicy\n});","version":"1"},"java":{"source":"IRole myTrustedAdminRole = Role.fromRoleArn(this, \"TrustedRole\", \"arn:aws:iam:....\");\n// Creates a limited admin policy and assigns to the account root.\nPolicyDocument myCustomPolicy = PolicyDocument.Builder.create()\n        .statements(List.of(PolicyStatement.Builder.create()\n                .actions(List.of(\"kms:Create*\", \"kms:Describe*\", \"kms:Enable*\", \"kms:List*\", \"kms:Put*\"))\n                .principals(List.of(new AccountRootPrincipal()))\n                .resources(List.of(\"*\"))\n                .build()))\n        .build();\nKey key = Key.Builder.create(this, \"MyKey\")\n        .policy(myCustomPolicy)\n        .build();","version":"1"},"go":{"source":"myTrustedAdminRole := iam.Role_FromRoleArn(this, jsii.String(\"TrustedRole\"), jsii.String(\"arn:aws:iam:....\"))\n// Creates a limited admin policy and assigns to the account root.\nmyCustomPolicy := iam.NewPolicyDocument(&PolicyDocumentProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"kms:Create*\"),\n\t\t\t\tjsii.String(\"kms:Describe*\"),\n\t\t\t\tjsii.String(\"kms:Enable*\"),\n\t\t\t\tjsii.String(\"kms:List*\"),\n\t\t\t\tjsii.String(\"kms:Put*\"),\n\t\t\t},\n\t\t\tPrincipals: []iPrincipal{\n\t\t\t\tiam.NewAccountRootPrincipal(),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t},\n\t\t}),\n\t},\n})\nkey := kms.NewKey(this, jsii.String(\"MyKey\"), &KeyProps{\n\tPolicy: myCustomPolicy,\n})","version":"1"},"$":{"source":"const myTrustedAdminRole = iam.Role.fromRoleArn(this, 'TrustedRole', 'arn:aws:iam:....');\n// Creates a limited admin policy and assigns to the account root.\nconst myCustomPolicy = new iam.PolicyDocument({\n  statements: [new iam.PolicyStatement({\n    actions: [\n      'kms:Create*',\n      'kms:Describe*',\n      'kms:Enable*',\n      'kms:List*',\n      'kms:Put*',\n    ],\n    principals: [new iam.AccountRootPrincipal()],\n    resources: ['*'],\n  })],\n});\nconst key = new kms.Key(this, 'MyKey', {\n  policy: myCustomPolicy,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PolicyDocumentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountRootPrincipal","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-iam.PolicyDocument","@aws-cdk/aws-iam.PolicyDocumentProps","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.Role#fromRoleArn","@aws-cdk/aws-kms.Key","@aws-cdk/aws-kms.KeyProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myTrustedAdminRole = iam.Role.fromRoleArn(this, 'TrustedRole', 'arn:aws:iam:....');\n// Creates a limited admin policy and assigns to the account root.\nconst myCustomPolicy = new iam.PolicyDocument({\n  statements: [new iam.PolicyStatement({\n    actions: [\n      'kms:Create*',\n      'kms:Describe*',\n      'kms:Enable*',\n      'kms:List*',\n      'kms:Put*',\n    ],\n    principals: [new iam.AccountRootPrincipal()],\n    resources: ['*'],\n  })],\n});\nconst key = new kms.Key(this, 'MyKey', {\n  policy: myCustomPolicy,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":9,"75":20,"104":2,"192":4,"193":3,"194":6,"196":1,"197":4,"225":3,"242":3,"243":3,"281":5},"fqnsFingerprint":"934404f881a4076b95e1653ee0ba8630dc2e38b336a690d4f27debcc1059e395"},"9543f2177bea1d096c303b071eac6d465b37609f4cbc5fe58623bed069243843":{"translations":{"python":{"source":"# post_auth_fn: lambda.Function\n\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    lambda_triggers=cognito.UserPoolTriggers(\n        post_authentication=post_auth_fn\n    )\n)\n\n# provide permissions to describe the user pool scoped to the ARN the user pool\npost_auth_fn.role.attach_inline_policy(iam.Policy(self, \"userpool-policy\",\n    statements=[iam.PolicyStatement(\n        actions=[\"cognito-idp:DescribeUserPool\"],\n        resources=[userpool.user_pool_arn]\n    )]\n))","version":"2"},"csharp":{"source":"Function postAuthFn;\n\n\nvar userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    LambdaTriggers = new UserPoolTriggers {\n        PostAuthentication = postAuthFn\n    }\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(new Policy(this, \"userpool-policy\", new PolicyProps {\n    Statements = new [] { new PolicyStatement(new PolicyStatementProps {\n        Actions = new [] { \"cognito-idp:DescribeUserPool\" },\n        Resources = new [] { userpool.UserPoolArn }\n    }) }\n}));","version":"1"},"java":{"source":"Function postAuthFn;\n\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .postAuthentication(postAuthFn)\n                .build())\n        .build();\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role.attachInlinePolicy(Policy.Builder.create(this, \"userpool-policy\")\n        .statements(List.of(PolicyStatement.Builder.create()\n                .actions(List.of(\"cognito-idp:DescribeUserPool\"))\n                .resources(List.of(userpool.getUserPoolArn()))\n                .build()))\n        .build());","version":"1"},"go":{"source":"var postAuthFn function\n\n\nuserpool := cognito.NewUserPool(this, jsii.String(\"myuserpool\"), &UserPoolProps{\n\tLambdaTriggers: &UserPoolTriggers{\n\t\tPostAuthentication: postAuthFn,\n\t},\n})\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(iam.NewPolicy(this, jsii.String(\"userpool-policy\"), &PolicyProps{\n\tStatements: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"cognito-idp:DescribeUserPool\"),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tuserpool.UserPoolArn,\n\t\t\t},\n\t\t}),\n\t},\n}))","version":"1"},"$":{"source":"declare const postAuthFn: lambda.Function;\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cognito.UserPool","@aws-cdk/aws-cognito.UserPool#userPoolArn","@aws-cdk/aws-cognito.UserPoolProps","@aws-cdk/aws-cognito.UserPoolTriggers","@aws-cdk/aws-iam.IIdentity#attachInlinePolicy","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.PolicyProps","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-lambda.Function#role","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const postAuthFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  lambdaTriggers: {\n    postAuthentication: postAuthFn,\n  },\n});\n\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"28":1,"75":21,"104":2,"130":1,"153":1,"169":1,"192":3,"193":4,"194":6,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":5,"290":1},"fqnsFingerprint":"642d307b83bed6e8e5585a61db334dbc8fdf835a74dcff9ca77a2415e7eb2aad"},"661d3bde1a7741755f3c2de1ff3f6e65819f0ece4d0b7b4a2c2008af7d9f9e97":{"translations":{"python":{"source":"# Add gateway endpoints when creating the VPC\nvpc = ec2.Vpc(self, \"MyVpc\",\n    gateway_endpoints={\n        \"S3\": ec2.GatewayVpcEndpointOptions(\n            service=ec2.GatewayVpcEndpointAwsService.S3\n        )\n    }\n)\n\n# Alternatively gateway endpoints can be added on the VPC\ndynamo_db_endpoint = vpc.add_gateway_endpoint(\"DynamoDbEndpoint\",\n    service=ec2.GatewayVpcEndpointAwsService.DYNAMODB\n)\n\n# This allows to customize the endpoint policy\ndynamo_db_endpoint.add_to_policy(\n    iam.PolicyStatement( # Restrict to listing and describing tables\n        principals=[iam.AnyPrincipal()],\n        actions=[\"dynamodb:DescribeTable\", \"dynamodb:ListTables\"],\n        resources=[\"*\"]))\n\n# Add an interface endpoint\nvpc.add_interface_endpoint(\"EcrDockerEndpoint\",\n    service=ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER\n)","version":"2"},"csharp":{"source":"// Add gateway endpoints when creating the VPC\nvar vpc = new Vpc(this, \"MyVpc\", new VpcProps {\n    GatewayEndpoints = new Dictionary<string, GatewayVpcEndpointOptions> {\n        { \"S3\", new GatewayVpcEndpointOptions {\n            Service = GatewayVpcEndpointAwsService.S3\n        } }\n    }\n});\n\n// Alternatively gateway endpoints can be added on the VPC\nvar dynamoDbEndpoint = vpc.AddGatewayEndpoint(\"DynamoDbEndpoint\", new GatewayVpcEndpointOptions {\n    Service = GatewayVpcEndpointAwsService.DYNAMODB\n});\n\n// This allows to customize the endpoint policy\ndynamoDbEndpoint.AddToPolicy(\nnew PolicyStatement(new PolicyStatementProps {  // Restrict to listing and describing tables\n    Principals = new [] { new AnyPrincipal() },\n    Actions = new [] { \"dynamodb:DescribeTable\", \"dynamodb:ListTables\" },\n    Resources = new [] { \"*\" } }));\n\n// Add an interface endpoint\nvpc.AddInterfaceEndpoint(\"EcrDockerEndpoint\", new InterfaceVpcEndpointOptions {\n    Service = InterfaceVpcEndpointAwsService.ECR_DOCKER\n});","version":"1"},"java":{"source":"// Add gateway endpoints when creating the VPC\nVpc vpc = Vpc.Builder.create(this, \"MyVpc\")\n        .gatewayEndpoints(Map.of(\n                \"S3\", GatewayVpcEndpointOptions.builder()\n                        .service(GatewayVpcEndpointAwsService.S3)\n                        .build()))\n        .build();\n\n// Alternatively gateway endpoints can be added on the VPC\nGatewayVpcEndpoint dynamoDbEndpoint = vpc.addGatewayEndpoint(\"DynamoDbEndpoint\", GatewayVpcEndpointOptions.builder()\n        .service(GatewayVpcEndpointAwsService.DYNAMODB)\n        .build());\n\n// This allows to customize the endpoint policy\ndynamoDbEndpoint.addToPolicy(\nPolicyStatement.Builder.create() // Restrict to listing and describing tables\n        .principals(List.of(new AnyPrincipal()))\n        .actions(List.of(\"dynamodb:DescribeTable\", \"dynamodb:ListTables\"))\n        .resources(List.of(\"*\")).build());\n\n// Add an interface endpoint\nvpc.addInterfaceEndpoint(\"EcrDockerEndpoint\", InterfaceVpcEndpointOptions.builder()\n        .service(InterfaceVpcEndpointAwsService.ECR_DOCKER)\n        .build());","version":"1"},"go":{"source":"// Add gateway endpoints when creating the VPC\nvpc := ec2.NewVpc(this, jsii.String(\"MyVpc\"), &VpcProps{\n\tGatewayEndpoints: map[string]gatewayVpcEndpointOptions{\n\t\t\"S3\": &gatewayVpcEndpointOptions{\n\t\t\t\"service\": ec2.GatewayVpcEndpointAwsService_S3(),\n\t\t},\n\t},\n})\n\n// Alternatively gateway endpoints can be added on the VPC\ndynamoDbEndpoint := vpc.addGatewayEndpoint(jsii.String(\"DynamoDbEndpoint\"), &gatewayVpcEndpointOptions{\n\tService: ec2.GatewayVpcEndpointAwsService_DYNAMODB(),\n})\n\n// This allows to customize the endpoint policy\ndynamoDbEndpoint.AddToPolicy(\niam.NewPolicyStatement(&PolicyStatementProps{\n\t // Restrict to listing and describing tables\n\tPrincipals: []iPrincipal{\n\t\tiam.NewAnyPrincipal(),\n\t},\n\tActions: []*string{\n\t\tjsii.String(\"dynamodb:DescribeTable\"),\n\t\tjsii.String(\"dynamodb:ListTables\"),\n\t},\n\tResources: []*string{\n\t\tjsii.String(\"*\"),\n\t},\n}))\n\n// Add an interface endpoint\nvpc.addInterfaceEndpoint(jsii.String(\"EcrDockerEndpoint\"), &InterfaceVpcEndpointOptions{\n\tService: ec2.InterfaceVpcEndpointAwsService_ECR_DOCKER(),\n})","version":"1"},"$":{"source":"    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PolicyStatement"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.GatewayVpcEndpoint","@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService","@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService#DYNAMODB","@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService#S3","@aws-cdk/aws-ec2.GatewayVpcEndpointOptions","@aws-cdk/aws-ec2.IGatewayVpcEndpointService","@aws-cdk/aws-ec2.IInterfaceVpcEndpointService","@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService","@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService#ECR_DOCKER","@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions","@aws-cdk/aws-ec2.Vpc","@aws-cdk/aws-ec2.VpcEndpoint#addToPolicy","@aws-cdk/aws-ec2.VpcProps","@aws-cdk/aws-iam.AnyPrincipal","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","constructs.Construct"],"fullSource":"import * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\nimport * as ec2 from '../lib';\n\nconst app = new cdk.App();\n\nclass VpcEndpointStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });\n    /// !hide\n  }\n}\n\nnew VpcEndpointStack(app, 'aws-cdk-ec2-vpc-endpoint');\napp.synth();\n","syntaxKindCounter":{"10":6,"75":31,"104":1,"192":3,"193":6,"194":12,"196":3,"197":3,"225":2,"226":2,"242":2,"243":2,"281":8},"fqnsFingerprint":"73707d7ebb708f8cdc165da5ebe32812bc31461e759d75399b92d5e087294d76"},"63a6e8faad39663bd73677dbdb500c130b505c0ae7f43a464e2a59855c357046":{"translations":{"python":{"source":"# stmt: iam.PolicyStatement\n\n\nstmt.add_condition(\"StringEquals\", {\"aws:SomeField\": \"1\"})\nstmt.add_condition(\"StringEquals\", {\"aws:SomeField\": \"2\"})","version":"2"},"csharp":{"source":"PolicyStatement stmt;\n\n\nstmt.AddCondition(\"StringEquals\", new Dictionary<string, string> { { \"aws:SomeField\", \"1\" } });\nstmt.AddCondition(\"StringEquals\", new Dictionary<string, string> { { \"aws:SomeField\", \"2\" } });","version":"1"},"java":{"source":"PolicyStatement stmt;\n\n\nstmt.addCondition(\"StringEquals\", Map.of(\"aws:SomeField\", \"1\"));\nstmt.addCondition(\"StringEquals\", Map.of(\"aws:SomeField\", \"2\"));","version":"1"},"go":{"source":"var stmt policyStatement\n\n\nstmt.AddCondition(jsii.String(\"StringEquals\"), map[string]*string{\n\t\"aws:SomeField\": jsii.String(\"1\"),\n})\nstmt.AddCondition(jsii.String(\"StringEquals\"), map[string]*string{\n\t\"aws:SomeField\": jsii.String(\"2\"),\n})","version":"1"},"$":{"source":"declare const stmt: iam.PolicyStatement;\n\nstmt.addCondition('StringEquals', { 'aws:SomeField': '1' });\nstmt.addCondition('StringEquals', { 'aws:SomeField': '2' });","version":"0"}},"location":{"api":{"api":"member","fqn":"@aws-cdk/aws-iam.PolicyStatement","memberName":"addCondition"},"field":{"field":"markdown","line":4}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.PolicyStatement#addCondition"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const stmt: iam.PolicyStatement;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nstmt.addCondition('StringEquals', { 'aws:SomeField': '1' });\nstmt.addCondition('StringEquals', { 'aws:SomeField': '2' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":7,"130":1,"153":1,"169":1,"193":2,"194":2,"196":2,"225":1,"226":2,"242":1,"243":1,"281":2,"290":1},"fqnsFingerprint":"989689c8929cc03b434a7643751268d113911f1d3d88c58d254416f744492af6"},"b84710644fb020e5000419b47f9f20323c21f8eb7f48b25b26543eaa309e03da":{"translations":{"python":{"source":"# stmt: iam.PolicyStatement\n\n\nstmt.add_condition(\"StringEquals\", {\"aws:SomeField\": [\"1\", \"2\"]})","version":"2"},"csharp":{"source":"PolicyStatement stmt;\n\n\nstmt.AddCondition(\"StringEquals\", new Dictionary<string, string[]> { { \"aws:SomeField\", new [] { \"1\", \"2\" } } });","version":"1"},"java":{"source":"PolicyStatement stmt;\n\n\nstmt.addCondition(\"StringEquals\", Map.of(\"aws:SomeField\", List.of(\"1\", \"2\")));","version":"1"},"go":{"source":"var stmt policyStatement\n\n\nstmt.AddCondition(jsii.String(\"StringEquals\"), map[string][]*string{\n\t\"aws:SomeField\": []*string{\n\t\tjsii.String(\"1\"),\n\t\tjsii.String(\"2\"),\n\t},\n})","version":"1"},"$":{"source":"declare const stmt: iam.PolicyStatement;\n\nstmt.addCondition('StringEquals', { 'aws:SomeField': ['1', '2'] });","version":"0"}},"location":{"api":{"api":"member","fqn":"@aws-cdk/aws-iam.PolicyStatement","memberName":"addCondition"},"field":{"field":"markdown","line":16}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.PolicyStatement#addCondition"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const stmt: iam.PolicyStatement;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nstmt.addCondition('StringEquals', { 'aws:SomeField': ['1', '2'] });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":5,"130":1,"153":1,"169":1,"192":1,"193":1,"194":1,"196":1,"225":1,"226":1,"242":1,"243":1,"281":1,"290":1},"fqnsFingerprint":"989689c8929cc03b434a7643751268d113911f1d3d88c58d254416f744492af6"},"ffe01c82dab988ff3424331a367ba4e93f2c39c3f1ef87dbc16063f2d23ae825":{"translations":{"python":{"source":"# Add gateway endpoints when creating the VPC\nvpc = ec2.Vpc(self, \"MyVpc\",\n    gateway_endpoints={\n        \"S3\": ec2.GatewayVpcEndpointOptions(\n            service=ec2.GatewayVpcEndpointAwsService.S3\n        )\n    }\n)\n\n# Alternatively gateway endpoints can be added on the VPC\ndynamo_db_endpoint = vpc.add_gateway_endpoint(\"DynamoDbEndpoint\",\n    service=ec2.GatewayVpcEndpointAwsService.DYNAMODB\n)\n\n# This allows to customize the endpoint policy\ndynamo_db_endpoint.add_to_policy(\n    iam.PolicyStatement( # Restrict to listing and describing tables\n        principals=[iam.AnyPrincipal()],\n        actions=[\"dynamodb:DescribeTable\", \"dynamodb:ListTables\"],\n        resources=[\"*\"]))\n\n# Add an interface endpoint\nvpc.add_interface_endpoint(\"EcrDockerEndpoint\",\n    service=ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER\n)","version":"2"},"csharp":{"source":"// Add gateway endpoints when creating the VPC\nvar vpc = new Vpc(this, \"MyVpc\", new VpcProps {\n    GatewayEndpoints = new Dictionary<string, GatewayVpcEndpointOptions> {\n        { \"S3\", new GatewayVpcEndpointOptions {\n            Service = GatewayVpcEndpointAwsService.S3\n        } }\n    }\n});\n\n// Alternatively gateway endpoints can be added on the VPC\nvar dynamoDbEndpoint = vpc.AddGatewayEndpoint(\"DynamoDbEndpoint\", new GatewayVpcEndpointOptions {\n    Service = GatewayVpcEndpointAwsService.DYNAMODB\n});\n\n// This allows to customize the endpoint policy\ndynamoDbEndpoint.AddToPolicy(\nnew PolicyStatement(new PolicyStatementProps {  // Restrict to listing and describing tables\n    Principals = new [] { new AnyPrincipal() },\n    Actions = new [] { \"dynamodb:DescribeTable\", \"dynamodb:ListTables\" },\n    Resources = new [] { \"*\" } }));\n\n// Add an interface endpoint\nvpc.AddInterfaceEndpoint(\"EcrDockerEndpoint\", new InterfaceVpcEndpointOptions {\n    Service = InterfaceVpcEndpointAwsService.ECR_DOCKER\n});","version":"1"},"java":{"source":"// Add gateway endpoints when creating the VPC\nVpc vpc = Vpc.Builder.create(this, \"MyVpc\")\n        .gatewayEndpoints(Map.of(\n                \"S3\", GatewayVpcEndpointOptions.builder()\n                        .service(GatewayVpcEndpointAwsService.S3)\n                        .build()))\n        .build();\n\n// Alternatively gateway endpoints can be added on the VPC\nGatewayVpcEndpoint dynamoDbEndpoint = vpc.addGatewayEndpoint(\"DynamoDbEndpoint\", GatewayVpcEndpointOptions.builder()\n        .service(GatewayVpcEndpointAwsService.DYNAMODB)\n        .build());\n\n// This allows to customize the endpoint policy\ndynamoDbEndpoint.addToPolicy(\nPolicyStatement.Builder.create() // Restrict to listing and describing tables\n        .principals(List.of(new AnyPrincipal()))\n        .actions(List.of(\"dynamodb:DescribeTable\", \"dynamodb:ListTables\"))\n        .resources(List.of(\"*\")).build());\n\n// Add an interface endpoint\nvpc.addInterfaceEndpoint(\"EcrDockerEndpoint\", InterfaceVpcEndpointOptions.builder()\n        .service(InterfaceVpcEndpointAwsService.ECR_DOCKER)\n        .build());","version":"1"},"go":{"source":"// Add gateway endpoints when creating the VPC\nvpc := ec2.NewVpc(this, jsii.String(\"MyVpc\"), &VpcProps{\n\tGatewayEndpoints: map[string]gatewayVpcEndpointOptions{\n\t\t\"S3\": &gatewayVpcEndpointOptions{\n\t\t\t\"service\": ec2.GatewayVpcEndpointAwsService_S3(),\n\t\t},\n\t},\n})\n\n// Alternatively gateway endpoints can be added on the VPC\ndynamoDbEndpoint := vpc.addGatewayEndpoint(jsii.String(\"DynamoDbEndpoint\"), &gatewayVpcEndpointOptions{\n\tService: ec2.GatewayVpcEndpointAwsService_DYNAMODB(),\n})\n\n// This allows to customize the endpoint policy\ndynamoDbEndpoint.AddToPolicy(\niam.NewPolicyStatement(&PolicyStatementProps{\n\t // Restrict to listing and describing tables\n\tPrincipals: []iPrincipal{\n\t\tiam.NewAnyPrincipal(),\n\t},\n\tActions: []*string{\n\t\tjsii.String(\"dynamodb:DescribeTable\"),\n\t\tjsii.String(\"dynamodb:ListTables\"),\n\t},\n\tResources: []*string{\n\t\tjsii.String(\"*\"),\n\t},\n}))\n\n// Add an interface endpoint\nvpc.addInterfaceEndpoint(jsii.String(\"EcrDockerEndpoint\"), &InterfaceVpcEndpointOptions{\n\tService: ec2.InterfaceVpcEndpointAwsService_ECR_DOCKER(),\n})","version":"1"},"$":{"source":"    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PolicyStatementProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.GatewayVpcEndpoint","@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService","@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService#DYNAMODB","@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService#S3","@aws-cdk/aws-ec2.GatewayVpcEndpointOptions","@aws-cdk/aws-ec2.IGatewayVpcEndpointService","@aws-cdk/aws-ec2.IInterfaceVpcEndpointService","@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService","@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService#ECR_DOCKER","@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions","@aws-cdk/aws-ec2.Vpc","@aws-cdk/aws-ec2.VpcEndpoint#addToPolicy","@aws-cdk/aws-ec2.VpcProps","@aws-cdk/aws-iam.AnyPrincipal","@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","constructs.Construct"],"fullSource":"import * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\nimport * as ec2 from '../lib';\n\nconst app = new cdk.App();\n\nclass VpcEndpointStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });\n    /// !hide\n  }\n}\n\nnew VpcEndpointStack(app, 'aws-cdk-ec2-vpc-endpoint');\napp.synth();\n","syntaxKindCounter":{"10":6,"75":31,"104":1,"192":3,"193":6,"194":12,"196":3,"197":3,"225":2,"226":2,"242":2,"243":2,"281":8},"fqnsFingerprint":"73707d7ebb708f8cdc165da5ebe32812bc31461e759d75399b92d5e087294d76"},"a39cd8c5324b60d69298977f49196dfbaac98245a811ca830b8329c74ef44258":{"translations":{"python":{"source":"tag_param = CfnParameter(self, \"TagName\")\n\nstring_equals = CfnJson(self, \"ConditionJson\",\n    value={\n        \"f\"aws:PrincipalTag/{tagParam.valueAsString}\"\": True\n    }\n)\n\nprincipal = iam.AccountRootPrincipal().with_conditions({\n    \"StringEquals\": string_equals\n})\n\niam.Role(self, \"MyRole\", assumed_by=principal)","version":"2"},"csharp":{"source":"var tagParam = new CfnParameter(this, \"TagName\");\n\nvar stringEquals = new CfnJson(this, \"ConditionJson\", new CfnJsonProps {\n    Value = new Dictionary<string, boolean> {\n        { $\"aws:PrincipalTag/{tagParam.valueAsString}\", true }\n    }\n});\n\nvar principal = new AccountRootPrincipal().WithConditions(new Dictionary<string, object> {\n    { \"StringEquals\", stringEquals }\n});\n\nnew Role(this, \"MyRole\", new RoleProps { AssumedBy = principal });","version":"1"},"java":{"source":"CfnParameter tagParam = new CfnParameter(this, \"TagName\");\n\nCfnJson stringEquals = CfnJson.Builder.create(this, \"ConditionJson\")\n        .value(Map.of(\n                String.format(\"aws:PrincipalTag/%s\", tagParam.getValueAsString()), true))\n        .build();\n\nPrincipalBase principal = new AccountRootPrincipal().withConditions(Map.of(\n        \"StringEquals\", stringEquals));\n\nRole.Builder.create(this, \"MyRole\").assumedBy(principal).build();","version":"1"},"go":{"source":"tagParam := awscdkcore.NewCfnParameter(this, jsii.String(\"TagName\"))\n\nstringEquals := awscdkcore.NewCfnJson(this, jsii.String(\"ConditionJson\"), &CfnJsonProps{\n\tValue: map[string]*bool{\n\t\tfmt.Sprintf(\"aws:PrincipalTag/%v\", tagParam.valueAsString): jsii.Boolean(true),\n\t},\n})\n\nprincipal := iam.NewAccountRootPrincipal().WithConditions(map[string]interface{}{\n\t\"StringEquals\": stringEquals,\n})\n\niam.NewRole(this, jsii.String(\"MyRole\"), &RoleProps{\n\tAssumedBy: principal,\n})","version":"1"},"$":{"source":"const tagParam = new CfnParameter(this, 'TagName');\n\nconst stringEquals = new CfnJson(this, 'ConditionJson', {\n  value: {\n    [`aws:PrincipalTag/${tagParam.valueAsString}`]: true,\n  },\n});\n\nconst principal = new iam.AccountRootPrincipal().withConditions({\n  StringEquals: stringEquals,\n});\n\nnew iam.Role(this, 'MyRole', { assumedBy: principal });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PrincipalBase"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountRootPrincipal","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.PrincipalBase","@aws-cdk/aws-iam.PrincipalBase#withConditions","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/core.CfnJson","@aws-cdk/core.CfnJsonProps","@aws-cdk/core.CfnParameter","constructs.Construct"],"fullSource":"import * as cfn from '@aws-cdk/aws-cloudformation';\nimport * as customresources from '@aws-cdk/custom-resources';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport {\n  App,\n  Aws,\n  CfnCondition,\n  CfnDynamicReference,\n  CfnDynamicReferenceService,\n  CfnInclude,\n  CfnJson,\n  CfnMapping,\n  CfnOutput,\n  CfnParameter,\n  CfnResource,\n  CfnResourceProps,\n  ConcreteDependable,\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  DefaultStackSynthesizer,\n  DependableTrait,\n  Duration,\n  Fn,\n  IConstruct,\n  RemovalPolicy,\n  SecretValue,\n  Size,\n  SizeRoundingBehavior,\n  Stack,\n  StackProps,\n  Stage,\n  Token,\n} from '@aws-cdk/core';\n\ndeclare const app: App;\ndeclare const arn: 'arn:partition:service:region:account-id:resource-id';\ndeclare const cfnResource: CfnResource;\ndeclare const construct: Construct;\ndeclare const constructA: Construct;\ndeclare const constructB: Construct;\ndeclare const constructC: Construct;\ndeclare const functionProps: lambda.FunctionProps;\ndeclare const isCompleteHandler: lambda.Function;\ndeclare const myBucket: s3.IBucket;\ndeclare const myFunction: lambda.IFunction;\ndeclare const myTopic: sns.ITopic;\ndeclare const onEventHandler: lambda.Function;\ndeclare const resourceProps: CfnResourceProps;\n\ndeclare class MyStack extends Stack {}\ndeclare class YourStack extends Stack {}\n\nclass StackThatProvidesABucket extends Stack {\n  public readonly bucket!: s3.IBucket;\n}\n\ninterface StackThatExpectsABucketProps extends StackProps {\n  readonly bucket: s3.IBucket;\n}\n\nclass StackThatExpectsABucket extends Stack {\n  constructor(scope: Construct, id: string, props: StackThatExpectsABucketProps) {\n    super(scope, id, props);\n  }\n}\n\nclass fixture$construct extends Construct {\n  public constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst tagParam = new CfnParameter(this, 'TagName');\n\nconst stringEquals = new CfnJson(this, 'ConditionJson', {\n  value: {\n    [`aws:PrincipalTag/${tagParam.valueAsString}`]: true,\n  },\n});\n\nconst principal = new iam.AccountRootPrincipal().withConditions({\n  StringEquals: stringEquals,\n});\n\nnew iam.Role(this, 'MyRole', { assumedBy: principal });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"15":1,"17":1,"75":17,"104":3,"106":1,"154":1,"193":4,"194":4,"196":1,"197":4,"211":1,"221":1,"225":3,"226":1,"242":3,"243":3,"281":4},"fqnsFingerprint":"a3751852f4f131902fa3d5f6efca469120442981827e2100b73bcfe04054e6e9"},"1eda3ceee35abf0d6ef9ff7274dbb484fb8558c947003704789e0890c2f45847":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# conditions: Any\n\nprincipal_policy_fragment = iam.PrincipalPolicyFragment({\n    \"principal_json_key\": [\"principalJson\"]\n}, {\n    \"conditions_key\": conditions\n})","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar conditions;\n\nvar principalPolicyFragment = new PrincipalPolicyFragment(new Dictionary<string, string[]> {\n    { \"principalJsonKey\", new [] { \"principalJson\" } }\n}, new Dictionary<string, object> {\n    { \"conditionsKey\", conditions }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject conditions;\n\nPrincipalPolicyFragment principalPolicyFragment = new PrincipalPolicyFragment(Map.of(\n        \"principalJsonKey\", List.of(\"principalJson\")), Map.of(\n        \"conditionsKey\", conditions));","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar conditions interface{}\n\nprincipalPolicyFragment := iam.NewPrincipalPolicyFragment(map[string][]*string{\n\t\"principalJsonKey\": []*string{\n\t\tjsii.String(\"principalJson\"),\n\t},\n}, map[string]interface{}{\n\t\"conditionsKey\": conditions,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\nconst principalPolicyFragment = new iam.PrincipalPolicyFragment({\n  principalJsonKey: ['principalJson'],\n}, /* all optional props */ {\n  conditionsKey: conditions,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PrincipalPolicyFragment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.PrincipalPolicyFragment"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst principalPolicyFragment = new iam.PrincipalPolicyFragment({\n  principalJsonKey: ['principalJson'],\n}, /* all optional props */ {\n  conditionsKey: conditions,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":8,"125":1,"130":1,"192":1,"193":2,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"e608dd10afdebf81d4b615f8a2ca8112c5680f8f729310fc3417126bd044e698"},"2b23c8714bd6cfed8a4473477802035934cf9e95a1e2950429c5153994aa8963":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# conditions: Any\n# principal: iam.IPrincipal\n\nprincipal_with_conditions = iam.PrincipalWithConditions(principal, {\n    \"conditions_key\": conditions\n})","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar conditions;\nIPrincipal principal;\n\nvar principalWithConditions = new PrincipalWithConditions(principal, new Dictionary<string, object> {\n    { \"conditionsKey\", conditions }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject conditions;\nIPrincipal principal;\n\nPrincipalWithConditions principalWithConditions = new PrincipalWithConditions(principal, Map.of(\n        \"conditionsKey\", conditions));","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar conditions interface{}\nvar principal iPrincipal\n\nprincipalWithConditions := iam.NewPrincipalWithConditions(principal, map[string]interface{}{\n\t\"conditionsKey\": conditions,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\ndeclare const principal: iam.IPrincipal;\nconst principalWithConditions = new iam.PrincipalWithConditions(principal, {\n  conditionsKey: conditions,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.PrincipalWithConditions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.PrincipalWithConditions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\ndeclare const principal: iam.IPrincipal;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst principalWithConditions = new iam.PrincipalWithConditions(principal, {\n  conditionsKey: conditions,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":11,"125":1,"130":2,"153":1,"169":1,"193":1,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"c0168b510788b343614cc4a4e2285d017800fb34ad557b9a6d209a1d4bebd5e8"},"49db63d3ddda6cc8a4ff2f2f34f153b73294f8debcfefb3ca5974790b5339556":{"translations":{"python":{"source":"lambda_role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"),\n    description=\"Example role...\"\n)\n\nstream = kinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS\n)\n\n# give lambda permissions to read stream\nstream.grant_read(lambda_role)","version":"2"},"csharp":{"source":"var lambdaRole = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\"),\n    Description = \"Example role...\"\n});\n\nvar stream = new Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS\n});\n\n// give lambda permissions to read stream\nstream.GrantRead(lambdaRole);","version":"1"},"java":{"source":"Role lambdaRole = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\"))\n        .description(\"Example role...\")\n        .build();\n\nStream stream = Stream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .build();\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);","version":"1"},"go":{"source":"lambdaRole := iam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"lambda.amazonaws.com\")),\n\tDescription: jsii.String(\"Example role...\"),\n})\n\nstream := kinesis.NewStream(this, jsii.String(\"MyEncryptedStream\"), &StreamProps{\n\tEncryption: kinesis.StreamEncryption_KMS,\n})\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole)","version":"1"},"$":{"source":"const lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.Role"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-kinesis.Stream","@aws-cdk/aws-kinesis.StreamEncryption","@aws-cdk/aws-kinesis.StreamEncryption#KMS","@aws-cdk/aws-kinesis.StreamProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":4,"75":17,"104":2,"193":2,"194":6,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":3},"fqnsFingerprint":"f5ab6a25c376270d9d396897e126008b38fb32f0eaed07bc559785006831ef51"},"0d24ee6c0eb1dcab73dd195781bd69db5eef36f412b1639c55282375b4bf80f8":{"translations":{"python":{"source":"lambda_role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"),\n    description=\"Example role...\"\n)\n\nstream = kinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS\n)\n\n# give lambda permissions to read stream\nstream.grant_read(lambda_role)","version":"2"},"csharp":{"source":"var lambdaRole = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\"),\n    Description = \"Example role...\"\n});\n\nvar stream = new Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS\n});\n\n// give lambda permissions to read stream\nstream.GrantRead(lambdaRole);","version":"1"},"java":{"source":"Role lambdaRole = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\"))\n        .description(\"Example role...\")\n        .build();\n\nStream stream = Stream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .build();\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);","version":"1"},"go":{"source":"lambdaRole := iam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"lambda.amazonaws.com\")),\n\tDescription: jsii.String(\"Example role...\"),\n})\n\nstream := kinesis.NewStream(this, jsii.String(\"MyEncryptedStream\"), &StreamProps{\n\tEncryption: kinesis.StreamEncryption_KMS,\n})\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole)","version":"1"},"$":{"source":"const lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.RoleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-kinesis.Stream","@aws-cdk/aws-kinesis.StreamEncryption","@aws-cdk/aws-kinesis.StreamEncryption#KMS","@aws-cdk/aws-kinesis.StreamProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":4,"75":17,"104":2,"193":2,"194":6,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":3},"fqnsFingerprint":"f5ab6a25c376270d9d396897e126008b38fb32f0eaed07bc559785006831ef51"},"5952db042452a4b9b587e0b4982ca00fbd021443108ff52347a5259262151140":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\niam.Role(self, \"Role\",\n    assumed_by=iam.SamlConsolePrincipal(provider)\n)","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nnew Role(this, \"Role\", new RoleProps {\n    AssumedBy = new SamlConsolePrincipal(provider)\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nRole.Builder.create(this, \"Role\")\n        .assumedBy(new SamlConsolePrincipal(provider))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\niam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewSamlConsolePrincipal(provider),\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.SamlConsolePrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.SamlConsolePrincipal","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":13,"104":2,"193":2,"194":5,"196":1,"197":3,"225":1,"226":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"d4029b4631f3c0ea567e8f3d59888b23fe8bfac0f63be5f6e2f112e47412bd9c"},"a4fa1690e052b3ce79c48e94948ebd968add5c072305b967aa35f19beea7ee62":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\nprincipal = iam.SamlPrincipal(provider, {\n    \"StringEquals\": {\n        \"SAML:iss\": \"issuer\"\n    }\n})","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nvar principal = new SamlPrincipal(provider, new Dictionary<string, object> {\n    { \"StringEquals\", new Dictionary<string, string> {\n        { \"SAML:iss\", \"issuer\" }\n    } }\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nSamlPrincipal principal = new SamlPrincipal(provider, Map.of(\n        \"StringEquals\", Map.of(\n                \"SAML:iss\", \"issuer\")));","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\nprincipal := iam.NewSamlPrincipal(provider, map[string]interface{}{\n\t\"StringEquals\": map[string]*string{\n\t\t\"SAML:iss\": jsii.String(\"issuer\"),\n\t},\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nconst principal = new iam.SamlPrincipal(provider, {\n  StringEquals: {\n    'SAML:iss': 'issuer',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.SamlMetadataDocument"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlPrincipal","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nconst principal = new iam.SamlPrincipal(provider, {\n  StringEquals: {\n    'SAML:iss': 'issuer',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":12,"104":1,"193":3,"194":4,"196":1,"197":2,"225":2,"242":2,"243":2,"281":3},"fqnsFingerprint":"cdec2d83ffe1e24eeb5fb76b3c5af0ce6d66d0d92971599029ab1fb7f8eaec95"},"3617b40647c75319a196b8ed88617f011d1bbc3b0e3855f19569a3f284564a45":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\nprincipal = iam.SamlPrincipal(provider, {\n    \"StringEquals\": {\n        \"SAML:iss\": \"issuer\"\n    }\n})","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nvar principal = new SamlPrincipal(provider, new Dictionary<string, object> {\n    { \"StringEquals\", new Dictionary<string, string> {\n        { \"SAML:iss\", \"issuer\" }\n    } }\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nSamlPrincipal principal = new SamlPrincipal(provider, Map.of(\n        \"StringEquals\", Map.of(\n                \"SAML:iss\", \"issuer\")));","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\nprincipal := iam.NewSamlPrincipal(provider, map[string]interface{}{\n\t\"StringEquals\": map[string]*string{\n\t\t\"SAML:iss\": jsii.String(\"issuer\"),\n\t},\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nconst principal = new iam.SamlPrincipal(provider, {\n  StringEquals: {\n    'SAML:iss': 'issuer',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.SamlPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlPrincipal","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nconst principal = new iam.SamlPrincipal(provider, {\n  StringEquals: {\n    'SAML:iss': 'issuer',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":12,"104":1,"193":3,"194":4,"196":1,"197":2,"225":2,"242":2,"243":2,"281":3},"fqnsFingerprint":"cdec2d83ffe1e24eeb5fb76b3c5af0ce6d66d0d92971599029ab1fb7f8eaec95"},"eab80f639ff3acf0b6247773007573c44708cfdbc337069c2fab584914683841":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\niam.Role(self, \"Role\",\n    assumed_by=iam.SamlConsolePrincipal(provider)\n)","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nnew Role(this, \"Role\", new RoleProps {\n    AssumedBy = new SamlConsolePrincipal(provider)\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nRole.Builder.create(this, \"Role\")\n        .assumedBy(new SamlConsolePrincipal(provider))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\niam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewSamlConsolePrincipal(provider),\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.SamlProvider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.SamlConsolePrincipal","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":13,"104":2,"193":2,"194":5,"196":1,"197":3,"225":1,"226":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"d4029b4631f3c0ea567e8f3d59888b23fe8bfac0f63be5f6e2f112e47412bd9c"},"a69c3b1fd7da7ce81693c8c07104b687c2e28c24611452b7b97c40e11e64870a":{"translations":{"python":{"source":"provider = iam.SamlProvider(self, \"Provider\",\n    metadata_document=iam.SamlMetadataDocument.from_file(\"/path/to/saml-metadata-document.xml\")\n)\niam.Role(self, \"Role\",\n    assumed_by=iam.SamlConsolePrincipal(provider)\n)","version":"2"},"csharp":{"source":"var provider = new SamlProvider(this, \"Provider\", new SamlProviderProps {\n    MetadataDocument = SamlMetadataDocument.FromFile(\"/path/to/saml-metadata-document.xml\")\n});\nnew Role(this, \"Role\", new RoleProps {\n    AssumedBy = new SamlConsolePrincipal(provider)\n});","version":"1"},"java":{"source":"SamlProvider provider = SamlProvider.Builder.create(this, \"Provider\")\n        .metadataDocument(SamlMetadataDocument.fromFile(\"/path/to/saml-metadata-document.xml\"))\n        .build();\nRole.Builder.create(this, \"Role\")\n        .assumedBy(new SamlConsolePrincipal(provider))\n        .build();","version":"1"},"go":{"source":"provider := iam.NewSamlProvider(this, jsii.String(\"Provider\"), &SamlProviderProps{\n\tMetadataDocument: iam.SamlMetadataDocument_FromFile(jsii.String(\"/path/to/saml-metadata-document.xml\")),\n})\niam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewSamlConsolePrincipal(provider),\n})","version":"1"},"$":{"source":"const provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.SamlProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.ISamlProvider","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.SamlConsolePrincipal","@aws-cdk/aws-iam.SamlMetadataDocument","@aws-cdk/aws-iam.SamlMetadataDocument#fromFile","@aws-cdk/aws-iam.SamlProvider","@aws-cdk/aws-iam.SamlProviderProps","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new iam.SamlProvider(this, 'Provider', {\n  metadataDocument: iam.SamlMetadataDocument.fromFile('/path/to/saml-metadata-document.xml'),\n});\nnew iam.Role(this, 'Role', {\n  assumedBy: new iam.SamlConsolePrincipal(provider),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":13,"104":2,"193":2,"194":5,"196":1,"197":3,"225":1,"226":1,"242":1,"243":1,"281":2},"fqnsFingerprint":"d4029b4631f3c0ea567e8f3d59888b23fe8bfac0f63be5f6e2f112e47412bd9c"},"7ac132e0c8f14218f0cf203650d98f33f717946538d5ffae74f158abbac61339":{"translations":{"python":{"source":"lambda_role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\"),\n    description=\"Example role...\"\n)\n\nstream = kinesis.Stream(self, \"MyEncryptedStream\",\n    encryption=kinesis.StreamEncryption.KMS\n)\n\n# give lambda permissions to read stream\nstream.grant_read(lambda_role)","version":"2"},"csharp":{"source":"var lambdaRole = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\"),\n    Description = \"Example role...\"\n});\n\nvar stream = new Stream(this, \"MyEncryptedStream\", new StreamProps {\n    Encryption = StreamEncryption.KMS\n});\n\n// give lambda permissions to read stream\nstream.GrantRead(lambdaRole);","version":"1"},"java":{"source":"Role lambdaRole = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\"))\n        .description(\"Example role...\")\n        .build();\n\nStream stream = Stream.Builder.create(this, \"MyEncryptedStream\")\n        .encryption(StreamEncryption.KMS)\n        .build();\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);","version":"1"},"go":{"source":"lambdaRole := iam.NewRole(this, jsii.String(\"Role\"), &RoleProps{\n\tAssumedBy: iam.NewServicePrincipal(jsii.String(\"lambda.amazonaws.com\")),\n\tDescription: jsii.String(\"Example role...\"),\n})\n\nstream := kinesis.NewStream(this, jsii.String(\"MyEncryptedStream\"), &StreamProps{\n\tEncryption: kinesis.StreamEncryption_KMS,\n})\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole)","version":"1"},"$":{"source":"const lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.ServicePrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-kinesis.Stream","@aws-cdk/aws-kinesis.StreamEncryption","@aws-cdk/aws-kinesis.StreamEncryption#KMS","@aws-cdk/aws-kinesis.StreamProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n});\n\nconst stream = new kinesis.Stream(this, 'MyEncryptedStream', {\n  encryption: kinesis.StreamEncryption.KMS,\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":4,"75":17,"104":2,"193":2,"194":6,"196":1,"197":3,"225":2,"226":1,"242":2,"243":2,"281":3},"fqnsFingerprint":"f5ab6a25c376270d9d396897e126008b38fb32f0eaed07bc559785006831ef51"},"c96e88d5ea2fb477008cddcb25489f7bd98fa144ebeea0246a58790bdfae8743":{"translations":{"python":{"source":"principal_name = iam.ServicePrincipal.service_principal_name(\"ec2.amazonaws.com\")","version":"2"},"csharp":{"source":"var principalName = ServicePrincipal.ServicePrincipalName(\"ec2.amazonaws.com\");","version":"1"},"java":{"source":"String principalName = ServicePrincipal.servicePrincipalName(\"ec2.amazonaws.com\");","version":"1"},"go":{"source":"principalName := iam.ServicePrincipal_ServicePrincipalName(jsii.String(\"ec2.amazonaws.com\"))","version":"1"},"$":{"source":"const principalName = iam.ServicePrincipal.servicePrincipalName('ec2.amazonaws.com');","version":"0"}},"location":{"api":{"api":"member","fqn":"@aws-cdk/aws-iam.ServicePrincipal","memberName":"servicePrincipalName"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-iam.ServicePrincipal#servicePrincipalName"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst principalName = iam.ServicePrincipal.servicePrincipalName('ec2.amazonaws.com');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":4,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"12d4358649dd3a16698ac461b1512ae68bc284d1b71c2f7ea5e7696a3fd793dd"},"6e6d0eadaa8dfba737043bfd39bb9def63524d042477d26a1caa5b1917b49ebd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# conditions: Any\n\nservice_principal_opts = iam.ServicePrincipalOpts(\n    conditions={\n        \"conditions_key\": conditions\n    },\n    region=\"region\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar conditions;\n\nvar servicePrincipalOpts = new ServicePrincipalOpts {\n    Conditions = new Dictionary<string, object> {\n        { \"conditionsKey\", conditions }\n    },\n    Region = \"region\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nObject conditions;\n\nServicePrincipalOpts servicePrincipalOpts = ServicePrincipalOpts.builder()\n        .conditions(Map.of(\n                \"conditionsKey\", conditions))\n        .region(\"region\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar conditions interface{}\n\nservicePrincipalOpts := &ServicePrincipalOpts{\n\tConditions: map[string]interface{}{\n\t\t\"conditionsKey\": conditions,\n\t},\n\tRegion: jsii.String(\"region\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\nconst servicePrincipalOpts: iam.ServicePrincipalOpts = {\n  conditions: {\n    conditionsKey: conditions,\n  },\n  region: 'region',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.ServicePrincipalOpts"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.ServicePrincipalOpts"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const conditions: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst servicePrincipalOpts: iam.ServicePrincipalOpts = {\n  conditions: {\n    conditionsKey: conditions,\n  },\n  region: 'region',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"125":1,"130":1,"153":1,"169":1,"193":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"291cba2331481a698a2d8893899f980702d05d929d55221ddd6fd3229ec47d33"},"9cb38653654acc5ea31abdfce11927e9627d6cb11bf88b2c3298e02bd6a02dd1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\n# principal: iam.IPrincipal\n\nsession_tags_principal = iam.SessionTagsPrincipal(principal)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nIPrincipal principal;\n\nvar sessionTagsPrincipal = new SessionTagsPrincipal(principal);","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nIPrincipal principal;\n\nSessionTagsPrincipal sessionTagsPrincipal = new SessionTagsPrincipal(principal);","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar principal iPrincipal\n\nsessionTagsPrincipal := iam.NewSessionTagsPrincipal(principal)","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const principal: iam.IPrincipal;\nconst sessionTagsPrincipal = new iam.SessionTagsPrincipal(principal);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.SessionTagsPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.SessionTagsPrincipal"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const principal: iam.IPrincipal;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sessionTagsPrincipal = new iam.SessionTagsPrincipal(principal);\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":8,"130":1,"153":1,"169":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"4437e16cc6e137e55e1553e0b34935cb2c39d768ccddbf456c6e609e98efd6dd"},"3229f27fe6695ab3ce928ba92eac9d7509f1eca55a6047230ca33ba536bb74e7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\nstar_principal = iam.StarPrincipal()","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar starPrincipal = new StarPrincipal();","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nStarPrincipal starPrincipal = new StarPrincipal();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nstarPrincipal := iam.NewStarPrincipal()","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst starPrincipal = new iam.StarPrincipal();","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.StarPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.StarPrincipal"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst starPrincipal = new iam.StarPrincipal();\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"e8d36ec50b6aae6c6bcb5fd2e0c0d1e17b7f8415f6f5497ba7c93351dc67efee"},"5321d08a5adfabc36dae7d9d1b30977e3cd5c212d0d6439b20fdb0f67481e538":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport constructs as constructs\n\n# construct: constructs.Construct\n\nunknown_principal = iam.UnknownPrincipal(\n    resource=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Constructs;\n\nConstruct construct;\n\nvar unknownPrincipal = new UnknownPrincipal(new UnknownPrincipalProps {\n    Resource = construct\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.constructs.*;\n\nConstruct construct;\n\nUnknownPrincipal unknownPrincipal = UnknownPrincipal.Builder.create()\n        .resource(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport constructs \"github.com/aws/constructs-go/constructs\"\n\nvar construct construct\n\nunknownPrincipal := iam.NewUnknownPrincipal(&UnknownPrincipalProps{\n\tResource: construct,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\nconst unknownPrincipal = new iam.UnknownPrincipal({\n  resource: construct,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.UnknownPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.UnknownPrincipal","@aws-cdk/aws-iam.UnknownPrincipalProps","constructs.IConstruct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst unknownPrincipal = new iam.UnknownPrincipal({\n  resource: construct,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":10,"130":1,"153":1,"169":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":1,"290":1},"fqnsFingerprint":"eb4fff5a45c3f6a4bf958222b77032af303b42fd6405522aa29e33dc1c29de42"},"7503ecd882e6d401382095d1ebfcf02a7da7a9aea6ec130810748b606fc641af":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport constructs as constructs\n\n# construct: constructs.Construct\n\nunknown_principal_props = iam.UnknownPrincipalProps(\n    resource=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Constructs;\n\nConstruct construct;\n\nvar unknownPrincipalProps = new UnknownPrincipalProps {\n    Resource = construct\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.constructs.*;\n\nConstruct construct;\n\nUnknownPrincipalProps unknownPrincipalProps = UnknownPrincipalProps.builder()\n        .resource(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport constructs \"github.com/aws/constructs-go/constructs\"\n\nvar construct construct\n\nunknownPrincipalProps := &UnknownPrincipalProps{\n\tResource: construct,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\nconst unknownPrincipalProps: iam.UnknownPrincipalProps = {\n  resource: construct,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.UnknownPrincipalProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.UnknownPrincipalProps","constructs.IConstruct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst unknownPrincipalProps: iam.UnknownPrincipalProps = {\n  resource: construct,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":10,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":1,"290":1},"fqnsFingerprint":"11aa57a9d7e7cae8d70eb79be694a6b0c901d9e35235e7be887d6e2eea00523c"},"b6d7f6c98a8fdf4247186afdeb42a3acef9225d766bc3dc302b31d146b365751":{"translations":{"python":{"source":"user = iam.User(self, \"MyUser\") # or User.fromUserName(stack, 'User', 'johnsmith');\ngroup = iam.Group(self, \"MyGroup\") # or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.add_to_group(group)\n# or\ngroup.add_user(user)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\"); // or User.fromUserName(stack, 'User', 'johnsmith');\nvar group = new Group(this, \"MyGroup\"); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.AddToGroup(group);\n// or\ngroup.AddUser(user);","version":"1"},"java":{"source":"User user = new User(this, \"MyUser\"); // or User.fromUserName(stack, 'User', 'johnsmith');\nGroup group = new Group(this, \"MyGroup\"); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"MyUser\")) // or User.fromUserName(stack, 'User', 'johnsmith');\ngroup := iam.NewGroup(this, jsii.String(\"MyGroup\")) // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.AddToGroup(group)\n// or\ngroup.addUser(user)","version":"1"},"$":{"source":"const user = new iam.User(this, 'MyUser'); // or User.fromUserName(stack, 'User', 'johnsmith');\nconst group = new iam.Group(this, 'MyGroup'); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.User"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.IGroup","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#addToGroup","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'MyUser'); // or User.fromUserName(stack, 'User', 'johnsmith');\nconst group = new iam.Group(this, 'MyGroup'); // or Group.fromGroupArn(stack, 'Group', 'arn:aws:iam::account-id:group/group-name');\n\nuser.addToGroup(group);\n// or\ngroup.addUser(user);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":12,"104":2,"194":4,"196":2,"197":2,"225":2,"226":2,"242":2,"243":2},"fqnsFingerprint":"4b551b1b326b6c22fceca09e2e88f31eb72a9dae7e0ea9153196cebb9a3affde"},"e90f2a1af4abfea90ac28f3d752ee9e8f932d91bcbd5d4abfbf5e1b5ace31e68":{"translations":{"python":{"source":"user = iam.User.from_user_attributes(self, \"MyImportedUserByAttributes\",\n    user_arn=\"arn:aws:iam::123456789012:user/johnsmith\"\n)","version":"2"},"csharp":{"source":"var user = User.FromUserAttributes(this, \"MyImportedUserByAttributes\", new UserAttributes {\n    UserArn = \"arn:aws:iam::123456789012:user/johnsmith\"\n});","version":"1"},"java":{"source":"IUser user = User.fromUserAttributes(this, \"MyImportedUserByAttributes\", UserAttributes.builder()\n        .userArn(\"arn:aws:iam::123456789012:user/johnsmith\")\n        .build());","version":"1"},"go":{"source":"user := iam.User_FromUserAttributes(this, jsii.String(\"MyImportedUserByAttributes\"), &UserAttributes{\n\tUserArn: jsii.String(\"arn:aws:iam::123456789012:user/johnsmith\"),\n})","version":"1"},"$":{"source":"const user = iam.User.fromUserAttributes(this, 'MyImportedUserByAttributes', {\n  userArn: 'arn:aws:iam::123456789012:user/johnsmith',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.UserAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#fromUserAttributes","@aws-cdk/aws-iam.UserAttributes","constructs.Construct"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = iam.User.fromUserAttributes(this, 'MyImportedUserByAttributes', {\n  userArn: 'arn:aws:iam::123456789012:user/johnsmith',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":5,"104":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"fc2a539de134f0f4cd74d4fbddd10b44362ee1660dd9b7109c5d0bc74810c030"},"3bdb36557191c29ae7f00f987332f9441027771c9205a9ad3fdaaa392893a9cf":{"translations":{"python":{"source":"user = User(self, \"MyUser\", password=cdk.SecretValue.unsafe_plain_text(\"1234\"))\ngroup = Group(self, \"MyGroup\")\n\npolicy = Policy(self, \"MyPolicy\")\npolicy.attach_to_user(user)\ngroup.attach_inline_policy(policy)","version":"2"},"csharp":{"source":"var user = new User(this, \"MyUser\", new UserProps { Password = SecretValue.UnsafePlainText(\"1234\") });\nvar group = new Group(this, \"MyGroup\");\n\nvar policy = new Policy(this, \"MyPolicy\");\npolicy.AttachToUser(user);\ngroup.AttachInlinePolicy(policy);","version":"1"},"java":{"source":"User user = User.Builder.create(this, \"MyUser\").password(SecretValue.unsafePlainText(\"1234\")).build();\nGroup group = new Group(this, \"MyGroup\");\n\nPolicy policy = new Policy(this, \"MyPolicy\");\npolicy.attachToUser(user);\ngroup.attachInlinePolicy(policy);","version":"1"},"go":{"source":"user := lib.NewUser(this, jsii.String(\"MyUser\"), &UserProps{\n\tPassword: cdk.SecretValue_UnsafePlainText(jsii.String(\"1234\")),\n})\ngroup := lib.NewGroup(this, jsii.String(\"MyGroup\"))\n\npolicy := lib.NewPolicy(this, jsii.String(\"MyPolicy\"))\npolicy.AttachToUser(user)\ngroup.attachInlinePolicy(policy)","version":"1"},"$":{"source":"    const user = new User(this, 'MyUser', { password: cdk.SecretValue.unsafePlainText('1234') });\n    const group = new Group(this, 'MyGroup');\n\n    const policy = new Policy(this, 'MyPolicy');\n    policy.attachToUser(user);\n    group.attachInlinePolicy(policy);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.UserProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.Group","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.Policy","@aws-cdk/aws-iam.Policy#attachToUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.UserProps","@aws-cdk/core.SecretValue","@aws-cdk/core.SecretValue#unsafePlainText","constructs.Construct"],"fullSource":"import * as cdk from '@aws-cdk/core';\nimport * as constructs from 'constructs';\nimport { Group, Policy, User } from '../lib';\n\n// keep this import separate from other imports to reduce chance for merge conflicts with v2-main\n// eslint-disable-next-line no-duplicate-imports, import/order\nimport { Construct } from '@aws-cdk/core';\n\nexport class ExampleConstruct extends Construct {\n  constructor(scope: constructs.Construct, id: string) {\n    super(scope, id);\n\n    /// !show\n    const user = new User(this, 'MyUser', { password: cdk.SecretValue.unsafePlainText('1234') });\n    const group = new Group(this, 'MyGroup');\n\n    const policy = new Policy(this, 'MyPolicy');\n    policy.attachToUser(user);\n    group.attachInlinePolicy(policy);\n    /// !hide\n  }\n}\n","syntaxKindCounter":{"10":4,"75":16,"104":3,"193":1,"194":4,"196":3,"197":3,"225":3,"226":2,"242":3,"243":3,"281":1},"fqnsFingerprint":"13df7914459f4f8453db458eb281a08de7f32eb1d09e32f8cbdba51b7b8e92aa"},"3626a953cffefda7e4d4d20d7982db1c8aa1282ee4272597f45936cc0b34b8d0":{"translations":{"python":{"source":"principal = iam.WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", {\n    \"StringEquals\": {\"cognito-identity.amazonaws.com:aud\": \"us-east-2:12345678-abcd-abcd-abcd-123456\"},\n    \"ForAnyValue:StringLike\": {\"cognito-identity.amazonaws.com:amr\": \"unauthenticated\"}\n})","version":"2"},"csharp":{"source":"var principal = new WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", new Dictionary<string, object> {\n    { \"StringEquals\", new Dictionary<string, string> { { \"cognito-identity.amazonaws.com:aud\", \"us-east-2:12345678-abcd-abcd-abcd-123456\" } } },\n    { \"ForAnyValue:StringLike\", new Dictionary<string, string> { { \"cognito-identity.amazonaws.com:amr\", \"unauthenticated\" } } }\n});","version":"1"},"java":{"source":"WebIdentityPrincipal principal = new WebIdentityPrincipal(\"cognito-identity.amazonaws.com\", Map.of(\n        \"StringEquals\", Map.of(\"cognito-identity.amazonaws.com:aud\", \"us-east-2:12345678-abcd-abcd-abcd-123456\"),\n        \"ForAnyValue:StringLike\", Map.of(\"cognito-identity.amazonaws.com:amr\", \"unauthenticated\")));","version":"1"},"go":{"source":"principal := iam.NewWebIdentityPrincipal(jsii.String(\"cognito-identity.amazonaws.com\"), map[string]interface{}{\n\t\"StringEquals\": map[string]*string{\n\t\t\"cognito-identity.amazonaws.com:aud\": jsii.String(\"us-east-2:12345678-abcd-abcd-abcd-123456\"),\n\t},\n\t\"ForAnyValue:StringLike\": map[string]*string{\n\t\t\"cognito-identity.amazonaws.com:amr\": jsii.String(\"unauthenticated\"),\n\t},\n})","version":"1"},"$":{"source":"const principal = new iam.WebIdentityPrincipal('cognito-identity.amazonaws.com', {\n  'StringEquals': { 'cognito-identity.amazonaws.com:aud': 'us-east-2:12345678-abcd-abcd-abcd-123456' },\n  'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated' },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.WebIdentityPrincipal"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.WebIdentityPrincipal"],"fullSource":"import { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst principal = new iam.WebIdentityPrincipal('cognito-identity.amazonaws.com', {\n  'StringEquals': { 'cognito-identity.amazonaws.com:aud': 'us-east-2:12345678-abcd-abcd-abcd-123456' },\n  'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated' },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":3,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"281":4},"fqnsFingerprint":"0857ec53373f955628da1d4d15055069bd91dcc25d733a59366b3b0fe1b4eb40"},"fed506cb67536f7a7f4f0f3e19be5c1036b962ff7126c80b4aa2fa04491de355":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\n\nwithout_policy_updates_options = iam.WithoutPolicyUpdatesOptions(\n    add_grants_to_resources=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\n\nvar withoutPolicyUpdatesOptions = new WithoutPolicyUpdatesOptions {\n    AddGrantsToResources = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\n\nWithoutPolicyUpdatesOptions withoutPolicyUpdatesOptions = WithoutPolicyUpdatesOptions.builder()\n        .addGrantsToResources(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nwithoutPolicyUpdatesOptions := &WithoutPolicyUpdatesOptions{\n\tAddGrantsToResources: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nconst withoutPolicyUpdatesOptions: iam.WithoutPolicyUpdatesOptions = {\n  addGrantsToResources: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-iam.WithoutPolicyUpdatesOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.WithoutPolicyUpdatesOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst withoutPolicyUpdatesOptions: iam.WithoutPolicyUpdatesOptions = {\n  addGrantsToResources: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":5,"91":1,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"34e2aa4431ebfe66760b7aca21944f26f4017d25616d5647e36a9233b5297d85"}}}