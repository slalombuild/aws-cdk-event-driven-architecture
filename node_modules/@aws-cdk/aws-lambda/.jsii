{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-applicationautoscaling": "1.199.0",
    "@aws-cdk/aws-cloudwatch": "1.199.0",
    "@aws-cdk/aws-codeguruprofiler": "1.199.0",
    "@aws-cdk/aws-ec2": "1.199.0",
    "@aws-cdk/aws-ecr": "1.199.0",
    "@aws-cdk/aws-ecr-assets": "1.199.0",
    "@aws-cdk/aws-efs": "1.199.0",
    "@aws-cdk/aws-events": "1.199.0",
    "@aws-cdk/aws-iam": "1.199.0",
    "@aws-cdk/aws-kms": "1.199.0",
    "@aws-cdk/aws-logs": "1.199.0",
    "@aws-cdk/aws-s3": "1.199.0",
    "@aws-cdk/aws-s3-assets": "1.199.0",
    "@aws-cdk/aws-signer": "1.199.0",
    "@aws-cdk/aws-sns": "1.199.0",
    "@aws-cdk/aws-sqs": "1.199.0",
    "@aws-cdk/core": "1.199.0",
    "@aws-cdk/cx-api": "1.199.0",
    "@aws-cdk/region-info": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Lambda",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "lambda"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-lambda",
  "readme": {
    "markdown": "# AWS Lambda Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis construct library allows you to define AWS Lambda Functions.\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n```\n\n## Handler Code\n\nThe `lambda.Code` class includes static convenience methods for various types of\nruntime code.\n\n * `lambda.Code.fromBucket(bucket, key[, objectVersion])` - specify an S3 object\n   that contains the archive of your runtime code.\n * `lambda.Code.fromInline(code)` - inline the handle code as a string. This is\n   limited to supported runtimes and the code cannot exceed 4KiB.\n * `lambda.Code.fromAsset(path)` - specify a directory or a .zip file in the local\n   filesystem which will be zipped and uploaded to S3 before deployment. See also\n   [bundling asset code](#bundling-asset-code).\n * `lambda.Code.fromDockerBuild(path, options)` - use the result of a Docker\n   build as code. The runtime code is expected to be located at `/asset` in the\n   image and will be zipped and uploaded to S3 as an asset.\n\nThe following example shows how to define a Python function and deploy the code\nfrom the local directory `my-lambda-handler` to it:\n\n```ts lit=test/integ.assets.lit.ts\nnew lambda.Function(this, 'MyLambda', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'my-lambda-handler')),\n  handler: 'index.main',\n  runtime: lambda.Runtime.PYTHON_3_9,\n});\n```\n\nWhen deploying a stack that contains this code, the directory will be zip\narchived and then uploaded to an S3 bucket, then the exact location of the S3\nobjects will be passed when the stack is deployed.\n\nDuring synthesis, the CDK expects to find a directory on disk at the asset\ndirectory specified. Note that we are referencing the asset directory relatively\nto our CDK project directory. This is especially important when we want to share\nthis construct through a library. Different programming languages will have\ndifferent techniques for bundling resources into libraries.\n\n## Docker Images\n\nLambda functions allow specifying their handlers within docker images. The docker\nimage can be an image from ECR or a local asset that the CDK will package and load\ninto ECR.\n\nThe following `DockerImageFunction` construct uses a local folder with a\nDockerfile as the asset that will be used as the function handler.\n\n```ts\nnew lambda.DockerImageFunction(this, 'AssetFunction', {\n  code: lambda.DockerImageCode.fromImageAsset(path.join(__dirname, 'docker-handler')),\n});\n```\n\nYou can also specify an image that already exists in ECR as the function handler.\n\n```ts\nimport * as ecr from '@aws-cdk/aws-ecr';\nconst repo = new ecr.Repository(this, 'Repository');\n\nnew lambda.DockerImageFunction(this, 'ECRFunction', {\n  code: lambda.DockerImageCode.fromEcr(repo),\n});\n```\n\nThe props for these docker image resources allow overriding the image's `CMD`, `ENTRYPOINT`, and `WORKDIR`\nconfigurations as well as choosing a specific tag or digest. See their docs for more information.\n\n## Execution Role\n\nLambda functions assume an IAM role during execution. In CDK by default, Lambda\nfunctions will use an autogenerated Role if one is not provided.\n\nThe autogenerated Role is automatically given permissions to execute the Lambda\nfunction. To reference the autogenerated Role:\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\nconst role = fn.role; // the Role\n```\n\nYou can also provide your own IAM role. Provided IAM roles will not automatically\nbe given permissions to execute the Lambda function. To provide a role and grant\nit appropriate permissions:\n\n```ts\nconst myRole = new iam.Role(this, 'My Role', {\n  assumedBy: new iam.ServicePrincipal('sns.amazonaws.com'),\n});\n\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  role: myRole, // user-provided role\n});\n\nmyRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaBasicExecutionRole\"));\nmyRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(\"service-role/AWSLambdaVPCAccessExecutionRole\")); // only required if your function lives in a VPC\n```\n\n## Function Timeout\n\nAWS Lambda functions have a default timeout of 3 seconds, but this can be increased\nup to 15 minutes. The timeout is available as a property of `Function` so that\nyou can reference it elsewhere in your stack. For instance, you could use it to create\na CloudWatch alarm to report when your function timed out:\n\n```ts\nimport * as cdk from '@aws-cdk/core';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nconst fn = new lambda.Function(this, 'MyFunction', {\n   runtime: lambda.Runtime.NODEJS_16_X,\n   handler: 'index.handler',\n   code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n   timeout: cdk.Duration.minutes(5),\n});\n\nif (fn.timeout) {\n   new cloudwatch.Alarm(this, `MyAlarm`, {\n      metric: fn.metricDuration().with({\n         statistic: 'Maximum',\n      }),\n      evaluationPeriods: 1,\n      datapointsToAlarm: 1,\n      threshold: fn.timeout.toMilliseconds(),\n      treatMissingData: cloudwatch.TreatMissingData.IGNORE,\n      alarmName: 'My Lambda Timeout',\n   });\n}\n```\n\n## Resource-based Policies\n\nAWS Lambda supports resource-based policies for controlling access to Lambda\nfunctions and layers on a per-resource basis. In particular, this allows you to\ngive permission to AWS services and other AWS accounts to modify and invoke your\nfunctions. You can also restrict permissions given to AWS services by providing\na source account or ARN (representing the account and identifier of the resource\nthat accesses the function or layer).\n\n```ts\ndeclare const fn: lambda.Function;\nconst principal = new iam.ServicePrincipal('my-service');\n\nfn.grantInvoke(principal);\n\n// Equivalent to:\nfn.addPermission('my-service Invocation', {\n  principal: principal,\n});\n```\n\nFor more information, see [Resource-based\npolicies](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html)\nin the AWS Lambda Developer Guide.\n\nProviding an unowned principal (such as account principals, generic ARN\nprincipals, service principals, and principals in other accounts) to a call to\n`fn.grantInvoke` will result in a resource-based policy being created. If the\nprincipal in question has conditions limiting the source account or ARN of the\noperation (see above), these conditions will be automatically added to the\nresource policy.\n\n```ts\ndeclare const fn: lambda.Function;\nconst servicePrincipal = new iam.ServicePrincipal('my-service');\nconst sourceArn = 'arn:aws:s3:::my-bucket';\nconst sourceAccount = '111122223333';\nconst servicePrincipalWithConditions = servicePrincipal.withConditions({\n  ArnLike: {\n    'aws:SourceArn': sourceArn,\n  },\n  StringEquals: {\n    'aws:SourceAccount': sourceAccount,\n  },\n});\n\nfn.grantInvoke(servicePrincipalWithConditions);\n\n// Equivalent to:\nfn.addPermission('my-service Invocation', {\n  principal: servicePrincipal,\n  sourceArn: sourceArn,\n  sourceAccount: sourceAccount,\n});\n```\n\n## Versions\n\nYou can use\n[versions](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\nto manage the deployment of your AWS Lambda functions. For example, you can\npublish a new version of a function for beta testing without affecting users of\nthe stable production version.\n\nThe function version includes the following information:\n\n* The function code and all associated dependencies.\n* The Lambda runtime that executes the function.\n* All of the function settings, including the environment variables.\n* A unique Amazon Resource Name (ARN) to identify this version of the function.\n\nYou could create a version to your lambda function using the `Version` construct.\n\n```ts\ndeclare const fn: lambda.Function;\nconst version = new lambda.Version(this, 'MyVersion', {\n  lambda: fn,\n});\n```\n\nThe major caveat to know here is that a function version must always point to a\nspecific 'version' of the function. When the function is modified, the version\nwill continue to point to the 'then version' of the function.\n\nOne way to ensure that the `lambda.Version` always points to the latest version\nof your `lambda.Function` is to set an environment variable which changes at\nleast as often as your code does. This makes sure the function always has the\nlatest code. For instance -\n\n```ts\nconst codeVersion = \"stringOrMethodToGetCodeVersion\";\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  environment: {\n    'CodeVersionString': codeVersion,\n  },\n});\n```\n\nThe `fn.latestVersion` property returns a `lambda.IVersion` which represents\nthe `$LATEST` pseudo-version.\n\nHowever, most AWS services require a specific AWS Lambda version,\nand won't allow you to use `$LATEST`. Therefore, you would normally want\nto use `lambda.currentVersion`.\n\nThe `fn.currentVersion` property can be used to obtain a `lambda.Version`\nresource that represents the AWS Lambda function defined in your application.\nAny change to your function's code or configuration will result in the creation\nof a new version resource. You can specify options for this version through the\n`currentVersionOptions` property.\n\nNOTE: The `currentVersion` property is only supported when your AWS Lambda function\nuses either `lambda.Code.fromAsset` or `lambda.Code.fromInline`. Other types\nof code providers (such as `lambda.Code.fromBucket`) require that you define a\n`lambda.Version` resource directly since the CDK is unable to determine if\ntheir contents had changed.\n\n### `currentVersion`: Updated hashing logic\n\nTo produce a new lambda version each time the lambda function is modified, the\n`currentVersion` property under the hood, computes a new logical id based on the\nproperties of the function. This informs CloudFormation that a new\n`AWS::Lambda::Version` resource should be created pointing to the updated Lambda\nfunction.\n\nHowever, a bug was introduced in this calculation that caused the logical id to\nchange when it was not required (ex: when the Function's `Tags` property, or\nwhen the `DependsOn` clause was modified). This caused the deployment to fail\nsince the Lambda service does not allow creating duplicate versions.\n\nThis has been fixed in the AWS CDK but *existing* users need to opt-in via a\n[feature flag]. Users who have run `cdk init` since this fix will be opted in,\nby default.\n\nOtherwise, you will need to enable the [feature flag]\n`@aws-cdk/aws-lambda:recognizeVersionProps`. Since CloudFormation does not\nallow duplicate versions, you will also need to make some modification to\nyour function so that a new version can be created. To efficiently and trivially\nmodify all your lambda functions at once, you can attach the\n`FunctionVersionUpgrade` aspect to the stack, which slightly alters the\nfunction description. This aspect is intended for one-time use to upgrade the\nversion of all your functions at the same time, and can safely be removed after\ndeploying once.\n\n```ts\nconst stack = new Stack();\nAspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_VERSION_PROPS));\n```\n\nWhen the new logic is in effect, you may rarely come across the following error:\n`The following properties are not recognized as version properties`. This will\noccur, typically when [property overrides] are used, when a new property\nintroduced in `AWS::Lambda::Function` is used that CDK is still unaware of.\n\nTo overcome this error, use the API `Function.classifyVersionProperty()` to\nrecord whether a new version should be generated when this property is changed.\nThis can be typically determined by checking whether the property can be\nmodified using the *[UpdateFunctionConfiguration]* API or not.\n\n### `currentVersion`: Updated hashing logic for layer versions\n\nAn additional update to the hashing logic fixes two issues surrounding layers.\nPrior to this change, updating the lambda layer version would have no effect on\nthe function version. Also, the order of lambda layers provided to the function\nwas unnecessarily baked into the hash.\n\nThis has been fixed in the AWS CDK starting with version 2.27. If you ran\n`cdk init` with an earlier version, you will need to opt-in via a [feature flag].\nIf you run `cdk init` with v2.27 or later, this fix will be opted in, by default.\n\nExisting users will need to enable the [feature flag]\n`@aws-cdk/aws-lambda:recognizeLayerVersion`. Since CloudFormation does not\nallow duplicate versions, they will also need to make some modification to\ntheir function so that a new version can be created. To efficiently and trivially\nmodify all your lambda functions at once, users can attach the\n`FunctionVersionUpgrade` aspect to the stack, which slightly alters the\nfunction description. This aspect is intended for one-time use to upgrade the\nversion of all your functions at the same time, and can safely be removed after\ndeploying once.\n\n```ts\nconst stack = new Stack();\nAspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_LAYER_VERSION));\n```\n\n[feature flag]: https://docs.aws.amazon.com/cdk/latest/guide/featureflags.html\n[property overrides]: https://docs.aws.amazon.com/cdk/latest/guide/cfn_layer.html#cfn_layer_raw\n[UpdateFunctionConfiguration]: https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html\n\n## Aliases\n\nYou can define one or more\n[aliases](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html)\nfor your AWS Lambda function. A Lambda alias is like a pointer to a specific\nLambda function version. Users can access the function version using the alias\nARN.\n\nThe `version.addAlias()` method can be used to define an AWS Lambda alias that\npoints to a specific version.\n\nThe following example defines an alias named `live` which will always point to a\nversion that represents the function as defined in your CDK app. When you change\nyour lambda code or configuration, a new resource will be created. You can\nspecify options for the current version through the `currentVersionOptions`\nproperty.\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  currentVersionOptions: {\n    removalPolicy: RemovalPolicy.RETAIN, // retain old versions\n    retryAttempts: 1,                   // async retry attempts\n  },\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\nfn.addAlias('live');\n```\n\n## Function URL\n\nA function URL is a dedicated HTTP(S) endpoint for your Lambda function. When you create a function URL, Lambda automatically generates a unique URL endpoint for you. Function URLs can be created for the latest version Lambda Functions, or Function Aliases (but not for Versions).\n\nFunction URLs are dual stack-enabled, supporting IPv4 and IPv6, and cross-origin resource sharing (CORS) configuration. After you configure a function URL for your function, you can invoke your function through its HTTP(S) endpoint via a web browser, curl, Postman, or any HTTP client. To invoke a function using IAM authentication your HTTP client must support SigV4 signing.\n\nSee the [Invoking Function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-invocation.html) section of the AWS Lambda Developer Guide\nfor more information on the input and output payloads of Functions invoked in this way.\n\n### IAM-authenticated Function URLs\n\nTo create a Function URL which can be called by an IAM identity, call `addFunctionUrl()`, followed by `grantInvokeFunctionUrl()`:\n\n```ts\n// Can be a Function or an Alias\ndeclare const fn: lambda.Function;\ndeclare const myRole: iam.Role;\n\nconst fnUrl = fn.addFunctionUrl();\nfnUrl.grantInvokeUrl(myRole);\n\nnew CfnOutput(this, 'TheUrl', {\n  // The .url attributes will return the unique Function URL\n  value: fnUrl.url,\n});\n```\n\nCalls to this URL need to be signed with SigV4.\n\n### Anonymous Function URLs\n\nTo create a Function URL which can be called anonymously, pass `authType: FunctionUrlAuthType.NONE` to `addFunctionUrl()`:\n\n```ts\n// Can be a Function or an Alias\ndeclare const fn: lambda.Function;\n\nconst fnUrl = fn.addFunctionUrl({\n  authType: lambda.FunctionUrlAuthType.NONE,\n});\n\nnew CfnOutput(this, 'TheUrl', {\n  value: fnUrl.url,\n});\n```\n\n### CORS configuration for Function URLs\n\nIf you want your Function URLs to be invokable from a web page in browser, you\nwill need to configure cross-origin resource sharing to allow the call (if you do\nnot do this, your browser will refuse to make the call):\n\n```ts\ndeclare const fn: lambda.Function;\n\nfn.addFunctionUrl({\n  authType: lambda.FunctionUrlAuthType.NONE,\n  cors: {\n    // Allow this to be called from websites on https://example.com.\n    // Can also be ['*'] to allow all domain.\n    allowedOrigins: ['https://example.com'],\n\n    // More options are possible here, see the documentation for FunctionUrlCorsOptions\n  },\n});\n```\n\n## Layers\n\nThe `lambda.LayerVersion` class can be used to define Lambda layers and manage\ngranting permissions to other AWS accounts or organizations.\n\n```ts lit=test/integ.layer-version.lit.ts\nconst layer = new lambda.LayerVersion(stack, 'MyLayer', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'layer-code')),\n  compatibleRuntimes: [lambda.Runtime.NODEJS_14_X],\n  license: 'Apache-2.0',\n  description: 'A layer to test the L2 construct',\n});\n\n// To grant usage by other AWS accounts\nlayer.addPermission('remote-account-grant', { accountId: awsAccountId });\n\n// To grant usage to all accounts in some AWS Ogranization\n// layer.grantUsage({ accountId: '*', organizationId });\n\nnew lambda.Function(stack, 'MyLayeredLambda', {\n  code: new lambda.InlineCode('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  layers: [layer],\n});\n```\n\nBy default, updating a layer creates a new layer version, and CloudFormation will delete the old version as part of the stack update.\n\nAlternatively, a removal policy can be used to retain the old version:\n\n```ts\nnew lambda.LayerVersion(this, 'MyLayer', {\n  removalPolicy: RemovalPolicy.RETAIN,\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n```\n\n## Architecture\n\nLambda functions, by default, run on compute systems that have the 64 bit x86 architecture.\n\nThe AWS Lambda service also runs compute on the ARM architecture, which can reduce cost\nfor some workloads.\n\nA lambda function can be configured to be run on one of these platforms:\n\n```ts\nnew lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  architecture: lambda.Architecture.ARM_64,\n});\n```\n\nSimilarly, lambda layer versions can also be tagged with architectures it is compatible with.\n\n```ts\nnew lambda.LayerVersion(this, 'MyLayer', {\n  removalPolicy: RemovalPolicy.RETAIN,\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  compatibleArchitectures: [lambda.Architecture.X86_64, lambda.Architecture.ARM_64],\n});\n```\n\n## Lambda Insights\n\nLambda functions can be configured to use CloudWatch [Lambda Insights](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights.html)\nwhich provides low-level runtime metrics for a Lambda functions.\n\n```ts\nnew lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_98_0,\n});\n```\n\nIf the version of insights is not yet available in the CDK, you can also provide the ARN directly as so -\n\n```ts\nconst layerArn = 'arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:14';\nnew lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  insightsVersion: lambda.LambdaInsightsVersion.fromInsightVersionArn(layerArn),\n});\n```\n\nIf you are deploying an ARM_64 Lambda Function, you must specify a\nLambda Insights Version >= `1_0_119_0`.\n\n```ts\nnew lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  architecture: lambda.Architecture.ARM_64,\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_119_0,\n});\n```\n\n## Event Rule Target\n\nYou can use an AWS Lambda function as a target for an Amazon CloudWatch event\nrule:\n\n```ts\nimport * as events from '@aws-cdk/aws-events';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\ndeclare const fn: lambda.Function;\nconst rule = new events.Rule(this, 'Schedule Rule', {\n schedule: events.Schedule.cron({ minute: '0', hour: '4' }),\n});\nrule.addTarget(new targets.LambdaFunction(fn));\n```\n\n## Event Sources\n\nAWS Lambda supports a [variety of event sources](https://docs.aws.amazon.com/lambda/latest/dg/invoking-lambda-function.html).\n\nIn most cases, it is possible to trigger a function as a result of an event by\nusing one of the `add<Event>Notification` methods on the source construct. For\nexample, the `s3.Bucket` construct has an `onEvent` method which can be used to\ntrigger a Lambda when an event, such as PutObject occurs on an S3 bucket.\n\nAn alternative way to add event sources to a function is to use `function.addEventSource(source)`.\nThis method accepts an `IEventSource` object. The module __@aws-cdk/aws-lambda-event-sources__\nincludes classes for the various event sources supported by AWS Lambda.\n\nFor example, the following code adds an SQS queue as an event source for a function:\n\n```ts\nimport * as eventsources from '@aws-cdk/aws-lambda-event-sources';\nimport * as sqs from '@aws-cdk/aws-sqs';\n\ndeclare const fn: lambda.Function;\nconst queue = new sqs.Queue(this, 'Queue');\nfn.addEventSource(new eventsources.SqsEventSource(queue));\n```\n\nThe following code adds an S3 bucket notification as an event source:\n\n```ts\nimport * as eventsources from '@aws-cdk/aws-lambda-event-sources';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const fn: lambda.Function;\nconst bucket = new s3.Bucket(this, 'Bucket');\nfn.addEventSource(new eventsources.S3EventSource(bucket, {\n  events: [ s3.EventType.OBJECT_CREATED, s3.EventType.OBJECT_REMOVED ],\n  filters: [ { prefix: 'subdir/' } ] // optional\n}));\n```\n\nSee the documentation for the __@aws-cdk/aws-lambda-event-sources__ module for more details.\n\n## Imported Lambdas\n\nWhen referencing an imported lambda in the CDK, use `fromFunctionArn()` for most use cases:\n\n```ts\nconst fn = lambda.Function.fromFunctionArn(\n  this,\n  'Function',\n  'arn:aws:lambda:us-east-1:123456789012:function:MyFn',\n);\n```\n\nThe `fromFunctionAttributes()` API is available for more specific use cases:\n\n```ts\nconst fn = lambda.Function.fromFunctionAttributes(this, 'Function', {\n  functionArn: 'arn:aws:lambda:us-east-1:123456789012:function:MyFn',\n  // The following are optional properties for specific use cases and should be used with caution:\n\n  // Use Case: imported function is in the same account as the stack. This tells the CDK that it\n  // can modify the function's permissions.\n  sameEnvironment: true,\n\n  // Use Case: imported function is in a different account and user commits to ensuring that the\n  // imported function has the correct permissions outside the CDK.\n  skipPermissions: true,\n});\n```\n\nIf `fromFunctionArn()` causes an error related to having to provide an account and/or region in a different construct,\nand the lambda is in the same account and region as the stack you're importing it into,\nyou can use `Function.fromFunctionName()` instead:\n\n```ts\nconst fn = lambda.Function.fromFunctionName(this, 'Function', 'MyFn');\n```\n\n## Lambda with DLQ\n\nA dead-letter queue can be automatically created for a Lambda function by\nsetting the `deadLetterQueueEnabled: true` configuration. In such case CDK creates\na `sqs.Queue` as `deadLetterQueue`.\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { return cb(null, \"hi\"); }'),\n  deadLetterQueueEnabled: true,\n});\n```\n\nIt is also possible to provide a dead-letter queue instead of getting a new queue created:\n\n```ts\nimport * as sqs from '@aws-cdk/aws-sqs';\n\nconst dlq = new sqs.Queue(this, 'DLQ');\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { return cb(null, \"hi\"); }'),\n  deadLetterQueue: dlq,\n});\n```\n\nYou can also use a `sns.Topic` instead of an `sqs.Queue` as dead-letter queue:\n\n```ts\nimport * as sns from '@aws-cdk/aws-sns';\n\nconst dlt = new sns.Topic(this, 'DLQ');\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('// your code here'),\n  deadLetterTopic: dlt,\n});\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/dlq.html)\nto learn more about AWS Lambdas and DLQs.\n\n## Lambda with X-Ray Tracing\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { return cb(null, \"hi\"); }'),\n  tracing: lambda.Tracing.ACTIVE,\n});\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html)\nto learn more about AWS Lambda's X-Ray support.\n\n## Lambda with Profiling\n\nThe following code configures the lambda function with CodeGuru profiling. By default, this creates a new CodeGuru\nprofiling group -\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.PYTHON_3_9,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset('lambda-handler'),\n  profiling: true,\n});\n```\n\nThe `profilingGroup` property can be used to configure an existing CodeGuru profiler group.\n\nCodeGuru profiling is supported for all Java runtimes and Python3.6+ runtimes.\n\nSee [the AWS documentation](https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html)\nto learn more about AWS Lambda's Profiling support.\n\n## Lambda with Reserved Concurrent Executions\n\n```ts\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { return cb(null, \"hi\"); }'),\n  reservedConcurrentExecutions: 100,\n});\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)\nmanaging concurrency.\n\n## AutoScaling\n\nYou can use Application AutoScaling to automatically configure the provisioned concurrency for your functions. AutoScaling can be set to track utilization or be based on a schedule. To configure AutoScaling on a function alias:\n\n```ts\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});\n```\n\n```ts lit=test/integ.autoscaling.lit.ts\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cdk from '@aws-cdk/core';\nimport { LAMBDA_RECOGNIZE_LAYER_VERSION } from '@aws-cdk/cx-api';\nimport * as lambda from '../lib';\n\n/**\n* Stack verification steps:\n* aws application-autoscaling describe-scalable-targets --service-namespace lambda --resource-ids function:<function name>:prod\n* has a minCapacity of 3 and maxCapacity of 50\n*/\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new lambda.Function(this, 'MyLambda', {\n      code: new lambda.InlineCode('exports.handler = async () => { console.log(\\'hello world\\'); };'),\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_14_X,\n    });\n\n    const version = fn.currentVersion;\n\n    const alias = new lambda.Alias(this, 'Alias', {\n      aliasName: 'prod',\n      version,\n    });\n\n    const scalingTarget = alias.addAutoScaling({ minCapacity: 3, maxCapacity: 50 });\n\n    scalingTarget.scaleOnUtilization({\n      utilizationTarget: 0.5,\n    });\n\n    scalingTarget.scaleOnSchedule('ScaleUpInTheMorning', {\n      schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n      minCapacity: 20,\n    });\n\n    scalingTarget.scaleOnSchedule('ScaleDownAtNight', {\n      schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n      maxCapacity: 20,\n    });\n\n    new cdk.CfnOutput(this, 'FunctionName', {\n      value: fn.functionName,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nconst stack = new TestStack(app, 'aws-lambda-autoscaling');\n\n// Changes the function description when the feature flag is present\n// to validate the changed function hash.\ncdk.Aspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_LAYER_VERSION));\n\napp.synth();\n\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/invocation-scaling.html) on autoscaling lambda functions.\n\n## Log Group\n\nLambda functions automatically create a log group with the name `/aws/lambda/<function-name>` upon first execution with\nlog data set to never expire.\n\nThe `logRetention` property can be used to set a different expiration period.\n\nIt is possible to obtain the function's log group as a `logs.ILogGroup` by calling the `logGroup` property of the\n`Function` construct.\n\nBy default, CDK uses the AWS SDK retry options when creating a log group. The `logRetentionRetryOptions` property\nallows you to customize the maximum number of retries and base backoff duration.\n\n*Note* that, if either `logRetention` is set or `logGroup` property is called, a [CloudFormation custom\nresource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html) is added\nto the stack that pre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the\ncorrect log retention period (never expire, by default).\n\n*Further note* that, if the log group already exists and the `logRetention` is not set, the custom resource will reset\nthe log retention to never expire even if it was configured with a different value.\n\n## FileSystem Access\n\nYou can configure a function to mount an Amazon Elastic File System (Amazon EFS) to a\ndirectory in your runtime environment with the `filesystem` property. To access Amazon EFS\nfrom lambda function, the Amazon EFS access point will be required.\n\nThe following sample allows the lambda function to mount the Amazon EFS access point to `/mnt/msg` in the runtime environment and access the filesystem with the POSIX identity defined in `posixUser`.\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as efs from '@aws-cdk/aws-efs';\n\n// create a new VPC\nconst vpc = new ec2.Vpc(this, 'VPC');\n\n// create a new Amazon EFS filesystem\nconst fileSystem = new efs.FileSystem(this, 'Efs', { vpc });\n\n// create a new access point from the filesystem\nconst accessPoint = fileSystem.addAccessPoint('AccessPoint', {\n  // set /export/lambda as the root of the access point\n  path: '/export/lambda',\n  // as /export/lambda does not exist in a new efs filesystem, the efs will create the directory with the following createAcl\n  createAcl: {\n    ownerUid: '1001',\n    ownerGid: '1001',\n    permissions: '750',\n  },\n  // enforce the POSIX identity so lambda function will access with this identity\n  posixUser: {\n    uid: '1001',\n    gid: '1001',\n  },\n});\n\nconst fn = new lambda.Function(this, 'MyLambda', {\n  // mount the access point to /mnt/msg in the lambda runtime environment\n  filesystem: lambda.FileSystem.fromEfsAccessPoint(accessPoint, '/mnt/msg'),\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  vpc,\n});\n```\n\n## Ephemeral Storage\n\nYou can configure ephemeral storage on a function to control the amount of storage it gets for reading\nor writing data, allowing you to use AWS Lambda for ETL jobs, ML inference, or other data-intensive workloads.\nThe ephemeral storage will be accessible in the functions' `/tmp` directory.\n\n```ts\nimport { Size } from '@aws-cdk/core';\n\nconst fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  ephemeralStorageSize: Size.mebibytes(1024),\n});\n```\n\nRead more about using this feature in [this AWS blog post](https://aws.amazon.com/blogs/aws/aws-lambda-now-supports-up-to-10-gb-ephemeral-storage/).\n\n## Singleton Function\n\nThe `SingletonFunction` construct is a way to guarantee that a lambda function will be guaranteed to be part of the stack,\nonce and only once, irrespective of how many times the construct is declared to be part of the stack. This is guaranteed\nas long as the `uuid` property and the optional `lambdaPurpose` property stay the same whenever they're declared into the\nstack.\n\nA typical use case of this function is when a higher level construct needs to declare a Lambda function as part of it but\nneeds to guarantee that the function is declared once. However, a user of this higher level construct can declare it any\nnumber of times and with different properties. Using `SingletonFunction` here with a fixed `uuid` will guarantee this.\n\nFor example, the `LogRetention` construct requires only one single lambda function for all different log groups whose\nretention it seeks to manage.\n\n## Bundling Asset Code\n\nWhen using `lambda.Code.fromAsset(path)` it is possible to bundle the code by running a\ncommand in a Docker container. The asset path will be mounted at `/asset-input`. The\nDocker container is responsible for putting content at `/asset-output`. The content at\n`/asset-output` will be zipped and used as Lambda code.\n\nExample with Python:\n\n```ts\nnew lambda.Function(this, 'Function', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'my-python-handler'), {\n    bundling: {\n      image: lambda.Runtime.PYTHON_3_9.bundlingImage,\n      command: [\n        'bash', '-c',\n        'pip install -r requirements.txt -t /asset-output && cp -au . /asset-output'\n      ],\n    },\n  }),\n  runtime: lambda.Runtime.PYTHON_3_9,\n  handler: 'index.handler',\n});\n```\n\nRuntimes expose a `bundlingImage` property that points to the [AWS SAM](https://github.com/awslabs/aws-sam-cli) build image.\n\nUse `cdk.DockerImage.fromRegistry(image)` to use an existing image or\n`cdk.DockerImage.fromBuild(path)` to build a specific image:\n\n```ts\nnew lambda.Function(this, 'Function', {\n  code: lambda.Code.fromAsset('/path/to/handler', {\n    bundling: {\n      image: DockerImage.fromBuild('/path/to/dir/with/DockerFile', {\n        buildArgs: {\n          ARG1: 'value1',\n        },\n      }),\n      command: ['my', 'cool', 'command'],\n    },\n  }),\n  runtime: lambda.Runtime.PYTHON_3_9,\n  handler: 'index.handler',\n});\n```\n\n## Language-specific APIs\n\nLanguage-specific higher level constructs are provided in separate modules:\n\n* `@aws-cdk/aws-lambda-nodejs`: [Github](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/aws-lambda-nodejs) & [CDK Docs](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-lambda-nodejs-readme.html)\n* `@aws-cdk/aws-lambda-python`: [Github](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/aws-lambda-python) & [CDK Docs](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-lambda-python-readme.html)\n\n## Code Signing\n\nCode signing for AWS Lambda helps to ensure that only trusted code runs in your Lambda functions.\nWhen enabled, AWS Lambda checks every code deployment and verifies that the code package is signed by a trusted source.\nFor more information, see [Configuring code signing for AWS Lambda](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html).\nThe following code configures a function with code signing.\n\n```ts\nimport * as signer from '@aws-cdk/aws-signer';\n\nconst signingProfile = new signer.SigningProfile(this, 'SigningProfile', {\n  platform: signer.Platform.AWS_LAMBDA_SHA384_ECDSA,\n});\n\nconst codeSigningConfig = new lambda.CodeSigningConfig(this, 'CodeSigningConfig', {\n  signingProfiles: [signingProfile],\n});\n\nnew lambda.Function(this, 'Function', {\n  codeSigningConfig,\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-lambda",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Lambda",
      "packageId": "Amazon.CDK.AWS.Lambda"
    },
    "java": {
      "maven": {
        "artifactId": "lambda",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.lambda"
    },
    "js": {
      "npm": "@aws-cdk/aws-lambda"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-lambda",
      "module": "aws_cdk.aws_lambda"
    }
  },
  "types": {
    "@aws-cdk/aws-lambda.Alias": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
      "docs": {
        "stability": "stable",
        "summary": "A new alias to a particular version of a Lambda function.",
        "example": "const lambdaCode = lambda.Code.fromCfnParameters();\nconst func = new lambda.Function(this, 'Lambda', {\n  code: lambdaCode,\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n// used to make sure each CDK synthesis produces a different Version\nconst version = func.currentVersion;\nconst alias = new lambda.Alias(this, 'LambdaAlias', {\n  aliasName: 'Prod',\n  version,\n});\n\nnew codedeploy.LambdaDeploymentGroup(this, 'DeploymentGroup', {\n  alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Alias",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alias.ts",
          "line": 144
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AliasProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IAlias"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alias.ts",
        "line": 91
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 92
          },
          "name": "fromAliasAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AliasAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IAlias"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Returns a scalable attribute that can call\n`scaleOnUtilization()` and `scaleOnSchedule()`.",
            "stability": "stable",
            "summary": "Configure provisioned concurrency autoscaling on a function alias."
          },
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 224
          },
          "name": "addAutoScaling",
          "parameters": [
            {
              "docs": {
                "summary": "Autoscaling options."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AutoScalingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IScalableFunctionAttribute"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this Function."
          },
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 204
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Alias",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Name of this alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 114
          },
          "name": "aliasName",
          "overrides": "@aws-cdk/aws-lambda.IAlias",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The architecture of this Lambda Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 125
          },
          "name": "architecture",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "docs": {
            "remarks": "True for new Lambdas, false for version $LATEST and imported Lambdas\nfrom different accounts.",
            "stability": "stable",
            "summary": "Whether the addPermission() call adds any permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 139
          },
          "name": "canCreatePermissions",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Used to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names.",
            "stability": "stable",
            "summary": "ARN of this alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 135
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Used to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names.",
            "stability": "stable",
            "summary": "ARN of this alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 121
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal this Lambda Function is running as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 196
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 123
          },
          "name": "lambda",
          "overrides": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "docs": {
            "remarks": "A qualifier is the identifier that's appended to a version or alias ARN.",
            "stability": "stable",
            "summary": "The qualifier of the version or alias of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 137
          },
          "name": "qualifier",
          "overrides": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The underlying Lambda function version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 127
          },
          "name": "version",
          "overrides": "@aws-cdk/aws-lambda.IAlias",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "docs": {
            "remarks": "Undefined if the function was imported without a role.",
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 200
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/alias:Alias"
    },
    "@aws-cdk/aws-lambda.AliasAttributes": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const version: lambda.Version;\nconst aliasAttributes: lambda.AliasAttributes = {\n  aliasName: 'aliasName',\n  aliasVersion: version,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AliasAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias.ts",
        "line": 83
      },
      "name": "AliasAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 84
          },
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 85
          },
          "name": "aliasVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        }
      ],
      "symbolId": "lib/alias:AliasAttributes"
    },
    "@aws-cdk/aws-lambda.AliasOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `lambda.Alias`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const destination: lambda.IDestination;\ndeclare const version: lambda.Version;\nconst aliasOptions: lambda.AliasOptions = {\n  additionalVersions: [{\n    version: version,\n    weight: 123,\n  }],\n  description: 'description',\n  maxEventAge: cdk.Duration.minutes(30),\n  onFailure: destination,\n  onSuccess: destination,\n  provisionedConcurrentExecutions: 123,\n  retryAttempts: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AliasOptions",
      "interfaces": [
        "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias.ts",
        "line": 31
      },
      "name": "AliasOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No additional versions",
            "remarks": "Individual additional version weights specified here should add up to\n(less than) one. All remaining weight is routed to the default\nversion.\n\nFor example, the config is\n\n    version: \"1\"\n    additionalVersions: [{ version: \"2\", weight: 0.05 }]\n\nThen 5% of traffic will be routed to function version 2, while\nthe remaining 95% of traffic will be routed to function version 1.",
            "stability": "stable",
            "summary": "Additional versions with individual weights this alias points to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 56
          },
          "name": "additionalVersions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.VersionWeight"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "stability": "stable",
            "summary": "Description for the alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 37
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No provisioned concurrency",
            "stability": "stable",
            "summary": "Specifies a provisioned concurrency configuration for a function's alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 63
          },
          "name": "provisionedConcurrentExecutions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/alias:AliasOptions"
    },
    "@aws-cdk/aws-lambda.AliasProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a new Lambda alias.",
        "example": "const lambdaCode = lambda.Code.fromCfnParameters();\nconst func = new lambda.Function(this, 'Lambda', {\n  code: lambdaCode,\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n// used to make sure each CDK synthesis produces a different Version\nconst version = func.currentVersion;\nconst alias = new lambda.Alias(this, 'LambdaAlias', {\n  aliasName: 'Prod',\n  version,\n});\n\nnew codedeploy.LambdaDeploymentGroup(this, 'DeploymentGroup', {\n  alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AliasProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.AliasOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias.ts",
        "line": 69
      },
      "name": "AliasProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of this alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 73
          },
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use lambda.currentVersion to reference a version with your latest changes.",
            "stability": "stable",
            "summary": "Function version this alias refers to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 80
          },
          "name": "version",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        }
      ],
      "symbolId": "lib/alias:AliasProps"
    },
    "@aws-cdk/aws-lambda.Architecture": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Architectures supported by AWS Lambda.",
        "example": "new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  architecture: lambda.Architecture.ARM_64,\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_119_0,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Architecture",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/architecture.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "remarks": "Use this if the architecture name is not yet supported by the CDK.",
            "stability": "stable",
            "summary": "Used to specify a custom architecture name."
          },
          "locationInModule": {
            "filename": "lib/architecture.ts",
            "line": 21
          },
          "name": "custom",
          "parameters": [
            {
              "docs": {
                "summary": "the architecture name as recognized by AWS Lambda."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the platform to use for this architecture when building with Docker."
              },
              "name": "dockerPlatform",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Architecture"
            }
          },
          "static": true
        }
      ],
      "name": "Architecture",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "64 bit architecture with the ARM instruction set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/architecture.ts",
            "line": 13
          },
          "name": "ARM_64",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "64 bit architecture with x86 instruction set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/architecture.ts",
            "line": 8
          },
          "name": "X86_64",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The platform to use for this architecture when building with Docker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/architecture.ts",
            "line": 33
          },
          "name": "dockerPlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the architecture as recognized by the AWS Lambda service APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/architecture.ts",
            "line": 28
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/architecture:Architecture"
    },
    "@aws-cdk/aws-lambda.AssetCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Code",
      "docs": {
        "stability": "stable",
        "summary": "Lambda code from a local directory.",
        "example": "import * as path from 'path';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport { App, Stack } from '@aws-cdk/core';\nimport { MockIntegration, PassthroughBehavior, RestApi, TokenAuthorizer } from '../../lib';\n\n/*\n * Stack verification steps:\n * * `curl -s -o /dev/null -w \"%{http_code}\" <url>` should return 401\n * * `curl -s -o /dev/null -w \"%{http_code}\" -H 'Authorization: deny' <url>` should return 403\n * * `curl -s -o /dev/null -w \"%{http_code}\" -H 'Authorization: allow' <url>` should return 200\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'TokenAuthorizerInteg');\n\nconst authorizerFn = new lambda.Function(stack, 'MyAuthorizerFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.AssetCode.fromAsset(path.join(__dirname, 'integ.token-authorizer.handler')),\n});\n\nconst restapi = new RestApi(stack, 'MyRestApi');\n\nconst authorizer = new TokenAuthorizer(stack, 'MyAuthorizer', {\n  handler: authorizerFn,\n});\n\nrestapi.root.addMethod('ANY', new MockIntegration({\n  integrationResponses: [\n    { statusCode: '200' },\n  ],\n  passthroughBehavior: PassthroughBehavior.NEVER,\n  requestTemplates: {\n    'application/json': '{ \"statusCode\": 200 }',\n  },\n}), {\n  methodResponses: [\n    { statusCode: '200' },\n  ],\n  authorizer,\n});",
        "custom": {
          "exampleMetadata": "lit=test/authorizers/integ.token-authorizer.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AssetCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 278
        },
        "parameters": [
          {
            "docs": {
              "summary": "The path to the asset file or directory."
            },
            "name": "path",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-s3-assets.AssetOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 271
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 282
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
            "stability": "stable",
            "summary": "Called after the CFN function resource has been created to allow the code class to bind to it."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 306
          },
          "name": "bindToResource",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.ResourceBindOptions"
              }
            }
          ]
        }
      ],
      "name": "AssetCode",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 272
          },
          "name": "isInline",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The path to the asset file or directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 278
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:AssetCode"
    },
    "@aws-cdk/aws-lambda.AssetImageCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Code",
      "docs": {
        "stability": "stable",
        "summary": "Represents an ECR image that will be constructed from the specified asset and can be bound as Lambda code.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as ecr_assets from '@aws-cdk/aws-ecr-assets';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkMode: ecr_assets.NetworkMode;\ndeclare const platform: ecr_assets.Platform;\nconst assetImageCode = new lambda.AssetImageCode('directory', {\n  buildArgs: {\n    buildArgsKey: 'buildArgs',\n  },\n  cmd: ['cmd'],\n  entrypoint: ['entrypoint'],\n  exclude: ['exclude'],\n  extraHash: 'extraHash',\n  file: 'file',\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  invalidation: {\n    buildArgs: false,\n    extraHash: false,\n    file: false,\n    networkMode: false,\n    platform: false,\n    repositoryName: false,\n    target: false,\n  },\n  networkMode: networkMode,\n  platform: platform,\n  repositoryName: 'repositoryName',\n  target: 'target',\n  workingDirectory: 'workingDirectory',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AssetImageCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 529
        },
        "parameters": [
          {
            "name": "directory",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AssetImageCodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 525
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 533
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
            "stability": "stable",
            "summary": "Called after the CFN function resource has been created to allow the code class to bind to it."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 556
          },
          "name": "bindToResource",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.ResourceBindOptions"
              }
            }
          ]
        }
      ],
      "name": "AssetImageCode",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 526
          },
          "name": "isInline",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/code:AssetImageCode"
    },
    "@aws-cdk/aws-lambda.AssetImageCodeProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize a new AssetImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as ecr_assets from '@aws-cdk/aws-ecr-assets';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const networkMode: ecr_assets.NetworkMode;\ndeclare const platform: ecr_assets.Platform;\nconst assetImageCodeProps: lambda.AssetImageCodeProps = {\n  buildArgs: {\n    buildArgsKey: 'buildArgs',\n  },\n  cmd: ['cmd'],\n  entrypoint: ['entrypoint'],\n  exclude: ['exclude'],\n  extraHash: 'extraHash',\n  file: 'file',\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  invalidation: {\n    buildArgs: false,\n    extraHash: false,\n    file: false,\n    networkMode: false,\n    platform: false,\n    repositoryName: false,\n    target: false,\n  },\n  networkMode: networkMode,\n  platform: platform,\n  repositoryName: 'repositoryName',\n  target: 'target',\n  workingDirectory: 'workingDirectory',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AssetImageCodeProps",
      "interfaces": [
        "@aws-cdk/aws-ecr-assets.DockerImageAssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 495
      },
      "name": "AssetImageCodeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use the CMD specified in the docker image or Dockerfile.",
            "remarks": "This needs to be in the 'exec form', viz., `[ 'executable', 'param1', 'param2' ]`.",
            "see": "https://docs.docker.com/engine/reference/builder/#cmd",
            "stability": "stable",
            "summary": "Specify or override the CMD on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 502
          },
          "name": "cmd",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the ENTRYPOINT in the docker image or Dockerfile.",
            "remarks": "An ENTRYPOINT allows you to configure a container that will run as an executable.\nThis needs to be in the 'exec form', viz., `[ 'executable', 'param1', 'param2' ]`.",
            "see": "https://docs.docker.com/engine/reference/builder/#entrypoint",
            "stability": "stable",
            "summary": "Specify or override the ENTRYPOINT on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 511
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the WORKDIR in the docker image or Dockerfile.",
            "remarks": "A WORKDIR allows you to configure the working directory the container will use.",
            "see": "https://docs.docker.com/engine/reference/builder/#workdir",
            "stability": "stable",
            "summary": "Specify or override the WORKDIR on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 519
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:AssetImageCodeProps"
    },
    "@aws-cdk/aws-lambda.AutoScalingOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling Lambda autoscaling.",
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.AutoScalingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-attribute-api.ts",
        "line": 34
      },
      "name": "AutoScalingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Maximum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-attribute-api.ts",
            "line": 45
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Minimum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-attribute-api.ts",
            "line": 40
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/scalable-attribute-api:AutoScalingOptions"
    },
    "@aws-cdk/aws-lambda.CfnAlias": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::Alias",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::Alias` resource creates an [alias](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.\n\nYou can also map an alias to split invocation requests between two versions. Use the `RoutingConfig` parameter to specify a second version and the percentage of invocation requests that it receives.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::Alias`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnAlias = new lambda.CfnAlias(this, 'MyCfnAlias', {\n  functionName: 'functionName',\n  functionVersion: 'functionVersion',\n  name: 'name',\n\n  // the properties below are optional\n  description: 'description',\n  provisionedConcurrencyConfig: {\n    provisionedConcurrentExecutions: 123,\n  },\n  routingConfig: {\n    additionalVersionWeights: [{\n      functionVersion: 'functionVersion',\n      functionWeight: 123,\n    }],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnAlias",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::Alias`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 225
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnAliasProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 145
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 245
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 261
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAlias",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 149
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 250
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionname"
            },
            "remarks": "**Name formats** - *Function name* - `MyFunction` .\n- *Function ARN* - `arn:aws:lambda:us-west-2:123456789012:function:MyFunction` .\n- *Partial ARN* - `123456789012:function:MyFunction` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 181
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionversion"
            },
            "stability": "external",
            "summary": "The function version that the alias invokes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 188
          },
          "name": "functionVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-name"
            },
            "stability": "external",
            "summary": "The name of the alias."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 195
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-description"
            },
            "stability": "external",
            "summary": "A description of the alias."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 202
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-provisionedconcurrencyconfig"
            },
            "stability": "external",
            "summary": "Specifies a [provisioned concurrency](https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html) configuration for a function's alias."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 209
          },
          "name": "provisionedConcurrencyConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnAlias.ProvisionedConcurrencyConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-routingconfig"
            },
            "stability": "external",
            "summary": "The [routing configuration](https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html) of the alias."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 216
          },
          "name": "routingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnAlias.AliasRoutingConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnAlias"
    },
    "@aws-cdk/aws-lambda.CfnAlias.AliasRoutingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-aliasroutingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The [traffic-shifting](https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html) configuration of a Lambda function alias.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst aliasRoutingConfigurationProperty: lambda.CfnAlias.AliasRoutingConfigurationProperty = {\n  additionalVersionWeights: [{\n    functionVersion: 'functionVersion',\n    functionWeight: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnAlias.AliasRoutingConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 275
      },
      "name": "AliasRoutingConfigurationProperty",
      "namespace": "CfnAlias",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-aliasroutingconfiguration.html#cfn-lambda-alias-aliasroutingconfiguration-additionalversionweights"
            },
            "stability": "external",
            "summary": "The second version, and the percentage of traffic that's routed to it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 281
          },
          "name": "additionalVersionWeights",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.CfnAlias.VersionWeightProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnAlias.AliasRoutingConfigurationProperty"
    },
    "@aws-cdk/aws-lambda.CfnAlias.ProvisionedConcurrencyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-provisionedconcurrencyconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A provisioned concurrency configuration for a function's alias.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst provisionedConcurrencyConfigurationProperty: lambda.CfnAlias.ProvisionedConcurrencyConfigurationProperty = {\n  provisionedConcurrentExecutions: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnAlias.ProvisionedConcurrencyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 343
      },
      "name": "ProvisionedConcurrencyConfigurationProperty",
      "namespace": "CfnAlias",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-provisionedconcurrencyconfiguration.html#cfn-lambda-alias-provisionedconcurrencyconfiguration-provisionedconcurrentexecutions"
            },
            "stability": "external",
            "summary": "The amount of provisioned concurrency to allocate for the alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 349
          },
          "name": "provisionedConcurrentExecutions",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnAlias.ProvisionedConcurrencyConfigurationProperty"
    },
    "@aws-cdk/aws-lambda.CfnAlias.VersionWeightProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The [traffic-shifting](https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html) configuration of a Lambda function alias.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst versionWeightProperty: lambda.CfnAlias.VersionWeightProperty = {\n  functionVersion: 'functionVersion',\n  functionWeight: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnAlias.VersionWeightProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 411
      },
      "name": "VersionWeightProperty",
      "namespace": "CfnAlias",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html#cfn-lambda-alias-versionweight-functionversion"
            },
            "stability": "external",
            "summary": "The qualifier of the second version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 417
          },
          "name": "functionVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html#cfn-lambda-alias-versionweight-functionweight"
            },
            "stability": "external",
            "summary": "The percentage of traffic that the alias routes to the second version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 423
          },
          "name": "functionWeight",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnAlias.VersionWeightProperty"
    },
    "@aws-cdk/aws-lambda.CfnAliasProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnAlias`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnAliasProps: lambda.CfnAliasProps = {\n  functionName: 'functionName',\n  functionVersion: 'functionVersion',\n  name: 'name',\n\n  // the properties below are optional\n  description: 'description',\n  provisionedConcurrencyConfig: {\n    provisionedConcurrentExecutions: 123,\n  },\n  routingConfig: {\n    additionalVersionWeights: [{\n      functionVersion: 'functionVersion',\n      functionWeight: 123,\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnAliasProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 19
      },
      "name": "CfnAliasProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionname"
            },
            "remarks": "**Name formats** - *Function name* - `MyFunction` .\n- *Function ARN* - `arn:aws:lambda:us-west-2:123456789012:function:MyFunction` .\n- *Partial ARN* - `123456789012:function:MyFunction` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 32
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionversion"
            },
            "stability": "external",
            "summary": "The function version that the alias invokes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 39
          },
          "name": "functionVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-name"
            },
            "stability": "external",
            "summary": "The name of the alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 46
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-description"
            },
            "stability": "external",
            "summary": "A description of the alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 53
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-provisionedconcurrencyconfig"
            },
            "stability": "external",
            "summary": "Specifies a [provisioned concurrency](https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html) configuration for a function's alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 60
          },
          "name": "provisionedConcurrencyConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnAlias.ProvisionedConcurrencyConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-routingconfig"
            },
            "stability": "external",
            "summary": "The [routing configuration](https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html) of the alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 67
          },
          "name": "routingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnAlias.AliasRoutingConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnAliasProps"
    },
    "@aws-cdk/aws-lambda.CfnCodeSigningConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::CodeSigningConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Details about a [Code signing configuration](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::CodeSigningConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnCodeSigningConfig = new lambda.CfnCodeSigningConfig(this, 'MyCfnCodeSigningConfig', {\n  allowedPublishers: {\n    signingProfileVersionArns: ['signingProfileVersionArns'],\n  },\n\n  // the properties below are optional\n  codeSigningPolicies: {\n    untrustedArtifactOnDeployment: 'untrustedArtifactOnDeployment',\n  },\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::CodeSigningConfig`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 639
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 574
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 656
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 669
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCodeSigningConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 578
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CodeSigningConfigArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the code signing configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 603
          },
          "name": "attrCodeSigningConfigArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CodeSigningConfigId"
            },
            "stability": "external",
            "summary": "The code signing configuration ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 609
          },
          "name": "attrCodeSigningConfigId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 661
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-allowedpublishers"
            },
            "stability": "external",
            "summary": "List of allowed publishers."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 616
          },
          "name": "allowedPublishers",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig.AllowedPublishersProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-codesigningpolicies"
            },
            "stability": "external",
            "summary": "The code signing policy controls the validation failure action for signature mismatch or expiry."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 623
          },
          "name": "codeSigningPolicies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig.CodeSigningPoliciesProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-description"
            },
            "stability": "external",
            "summary": "Code signing configuration description."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 630
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnCodeSigningConfig"
    },
    "@aws-cdk/aws-lambda.CfnCodeSigningConfig.AllowedPublishersProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-codesigningconfig-allowedpublishers.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "List of signing profiles that can sign a code package.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst allowedPublishersProperty: lambda.CfnCodeSigningConfig.AllowedPublishersProperty = {\n  signingProfileVersionArns: ['signingProfileVersionArns'],\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig.AllowedPublishersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 683
      },
      "name": "AllowedPublishersProperty",
      "namespace": "CfnCodeSigningConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-codesigningconfig-allowedpublishers.html#cfn-lambda-codesigningconfig-allowedpublishers-signingprofileversionarns"
            },
            "remarks": "A signing profile defines a trusted user who can sign a code package.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for each of the signing profiles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 689
          },
          "name": "signingProfileVersionArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnCodeSigningConfig.AllowedPublishersProperty"
    },
    "@aws-cdk/aws-lambda.CfnCodeSigningConfig.CodeSigningPoliciesProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-codesigningconfig-codesigningpolicies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Code signing configuration [policies](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html#config-codesigning-policies) specify the validation failure action for signature mismatch or expiry.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst codeSigningPoliciesProperty: lambda.CfnCodeSigningConfig.CodeSigningPoliciesProperty = {\n  untrustedArtifactOnDeployment: 'untrustedArtifactOnDeployment',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig.CodeSigningPoliciesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 751
      },
      "name": "CodeSigningPoliciesProperty",
      "namespace": "CfnCodeSigningConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-codesigningconfig-codesigningpolicies.html#cfn-lambda-codesigningconfig-codesigningpolicies-untrustedartifactondeployment"
            },
            "remarks": "If you set the policy to `Enforce` , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to `Warn` , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: `Warn`",
            "stability": "external",
            "summary": "Code signing configuration policy for deployment validation failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 759
          },
          "name": "untrustedArtifactOnDeployment",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnCodeSigningConfig.CodeSigningPoliciesProperty"
    },
    "@aws-cdk/aws-lambda.CfnCodeSigningConfigProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCodeSigningConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnCodeSigningConfigProps: lambda.CfnCodeSigningConfigProps = {\n  allowedPublishers: {\n    signingProfileVersionArns: ['signingProfileVersionArns'],\n  },\n\n  // the properties below are optional\n  codeSigningPolicies: {\n    untrustedArtifactOnDeployment: 'untrustedArtifactOnDeployment',\n  },\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 488
      },
      "name": "CfnCodeSigningConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-allowedpublishers"
            },
            "stability": "external",
            "summary": "List of allowed publishers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 495
          },
          "name": "allowedPublishers",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig.AllowedPublishersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-codesigningpolicies"
            },
            "stability": "external",
            "summary": "The code signing policy controls the validation failure action for signature mismatch or expiry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 502
          },
          "name": "codeSigningPolicies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnCodeSigningConfig.CodeSigningPoliciesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-description"
            },
            "stability": "external",
            "summary": "Code signing configuration description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 509
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnCodeSigningConfigProps"
    },
    "@aws-cdk/aws-lambda.CfnEventInvokeConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::EventInvokeConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::EventInvokeConfig` resource configures options for [asynchronous invocation](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html) on a version or an alias.\n\nBy default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::EventInvokeConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnEventInvokeConfig = new lambda.CfnEventInvokeConfig(this, 'MyCfnEventInvokeConfig', {\n  functionName: 'functionName',\n  qualifier: 'qualifier',\n\n  // the properties below are optional\n  destinationConfig: {\n    onFailure: {\n      destination: 'destination',\n    },\n    onSuccess: {\n      destination: 'destination',\n    },\n  },\n  maximumEventAgeInSeconds: 123,\n  maximumRetryAttempts: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::EventInvokeConfig`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 1026
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 944
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1044
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1059
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEventInvokeConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 948
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1049
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-functionname"
            },
            "remarks": "*Minimum* : `1`\n\n*Maximum* : `64`\n\n*Pattern* : `([a-zA-Z0-9-_]+)`",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 980
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-qualifier"
            },
            "remarks": "- *Version* - A version number.\n- *Alias* - An alias name.\n- *Latest* - To specify the unpublished version, use `$LATEST` .",
            "stability": "external",
            "summary": "The identifier of a version or alias."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 991
          },
          "name": "qualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-destinationconfig"
            },
            "remarks": "**Destinations** - *Function* - The Amazon Resource Name (ARN) of a Lambda function.\n- *Queue* - The ARN of a standard SQS queue.\n- *Topic* - The ARN of a standard SNS topic.\n- *Event Bus* - The ARN of an Amazon EventBridge event bus.",
            "stability": "external",
            "summary": "A destination for events after they have been sent to a function for processing."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1003
          },
          "name": "destinationConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.DestinationConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-maximumeventageinseconds"
            },
            "stability": "external",
            "summary": "The maximum age of a request that Lambda sends to a function for processing."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1010
          },
          "name": "maximumEventAgeInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-maximumretryattempts"
            },
            "stability": "external",
            "summary": "The maximum number of times to retry when the function returns an error."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1017
          },
          "name": "maximumRetryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventInvokeConfig"
    },
    "@aws-cdk/aws-lambda.CfnEventInvokeConfig.DestinationConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A configuration object that specifies the destination of an event after Lambda processes it.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst destinationConfigProperty: lambda.CfnEventInvokeConfig.DestinationConfigProperty = {\n  onFailure: {\n    destination: 'destination',\n  },\n  onSuccess: {\n    destination: 'destination',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.DestinationConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 1073
      },
      "name": "DestinationConfigProperty",
      "namespace": "CfnEventInvokeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig.html#cfn-lambda-eventinvokeconfig-destinationconfig-onfailure"
            },
            "stability": "external",
            "summary": "The destination configuration for failed invocations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1079
          },
          "name": "onFailure",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.OnFailureProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig.html#cfn-lambda-eventinvokeconfig-destinationconfig-onsuccess"
            },
            "stability": "external",
            "summary": "The destination configuration for successful invocations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1085
          },
          "name": "onSuccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.OnSuccessProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventInvokeConfig.DestinationConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventInvokeConfig.OnFailureProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig-onfailure.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A destination for events that failed processing.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst onFailureProperty: lambda.CfnEventInvokeConfig.OnFailureProperty = {\n  destination: 'destination',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.OnFailureProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 1149
      },
      "name": "OnFailureProperty",
      "namespace": "CfnEventInvokeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig-onfailure.html#cfn-lambda-eventinvokeconfig-destinationconfig-onfailure-destination"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the destination resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1155
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventInvokeConfig.OnFailureProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventInvokeConfig.OnSuccessProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig-onsuccess.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A destination for events that were processed successfully.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst onSuccessProperty: lambda.CfnEventInvokeConfig.OnSuccessProperty = {\n  destination: 'destination',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.OnSuccessProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 1217
      },
      "name": "OnSuccessProperty",
      "namespace": "CfnEventInvokeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventinvokeconfig-destinationconfig-onsuccess.html#cfn-lambda-eventinvokeconfig-destinationconfig-onsuccess-destination"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the destination resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1223
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventInvokeConfig.OnSuccessProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventInvokeConfigProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEventInvokeConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnEventInvokeConfigProps: lambda.CfnEventInvokeConfigProps = {\n  functionName: 'functionName',\n  qualifier: 'qualifier',\n\n  // the properties below are optional\n  destinationConfig: {\n    onFailure: {\n      destination: 'destination',\n    },\n    onSuccess: {\n      destination: 'destination',\n    },\n  },\n  maximumEventAgeInSeconds: 123,\n  maximumRetryAttempts: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 820
      },
      "name": "CfnEventInvokeConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-functionname"
            },
            "remarks": "*Minimum* : `1`\n\n*Maximum* : `64`\n\n*Pattern* : `([a-zA-Z0-9-_]+)`",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 833
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-qualifier"
            },
            "remarks": "- *Version* - A version number.\n- *Alias* - An alias name.\n- *Latest* - To specify the unpublished version, use `$LATEST` .",
            "stability": "external",
            "summary": "The identifier of a version or alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 844
          },
          "name": "qualifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-destinationconfig"
            },
            "remarks": "**Destinations** - *Function* - The Amazon Resource Name (ARN) of a Lambda function.\n- *Queue* - The ARN of a standard SQS queue.\n- *Topic* - The ARN of a standard SNS topic.\n- *Event Bus* - The ARN of an Amazon EventBridge event bus.",
            "stability": "external",
            "summary": "A destination for events after they have been sent to a function for processing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 856
          },
          "name": "destinationConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventInvokeConfig.DestinationConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-maximumeventageinseconds"
            },
            "stability": "external",
            "summary": "The maximum age of a request that Lambda sends to a function for processing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 863
          },
          "name": "maximumEventAgeInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-maximumretryattempts"
            },
            "stability": "external",
            "summary": "The maximum number of times to retry when the function returns an error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 870
          },
          "name": "maximumRetryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventInvokeConfigProps"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::EventSourceMapping",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::EventSourceMapping` resource creates a mapping between an event source and an AWS Lambda function. Lambda reads items from the event source and triggers the function.\n\nFor details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source.\n\n- [Configuring a Dynamo DB stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping)\n- [Configuring a Kinesis stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping)\n- [Configuring an SQS queue as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource)\n- [Configuring an MQ broker as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping)\n- [Configuring MSK as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html)\n- [Configuring Self-Managed Apache Kafka as an event source](https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html)\n- [Configuring Amazon DocumentDB as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html)",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::EventSourceMapping`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnEventSourceMapping = new lambda.CfnEventSourceMapping(this, 'MyCfnEventSourceMapping', {\n  functionName: 'functionName',\n\n  // the properties below are optional\n  amazonManagedKafkaEventSourceConfig: {\n    consumerGroupId: 'consumerGroupId',\n  },\n  batchSize: 123,\n  bisectBatchOnFunctionError: false,\n  destinationConfig: {\n    onFailure: {\n      destination: 'destination',\n    },\n  },\n  documentDbEventSourceConfig: {\n    collectionName: 'collectionName',\n    databaseName: 'databaseName',\n    fullDocument: 'fullDocument',\n  },\n  enabled: false,\n  eventSourceArn: 'eventSourceArn',\n  filterCriteria: {\n    filters: [{\n      pattern: 'pattern',\n    }],\n  },\n  functionResponseTypes: ['functionResponseTypes'],\n  maximumBatchingWindowInSeconds: 123,\n  maximumRecordAgeInSeconds: 123,\n  maximumRetryAttempts: 123,\n  parallelizationFactor: 123,\n  queues: ['queues'],\n  scalingConfig: {\n    maximumConcurrency: 123,\n  },\n  selfManagedEventSource: {\n    endpoints: {\n      kafkaBootstrapServers: ['kafkaBootstrapServers'],\n    },\n  },\n  selfManagedKafkaEventSourceConfig: {\n    consumerGroupId: 'consumerGroupId',\n  },\n  sourceAccessConfigurations: [{\n    type: 'type',\n    uri: 'uri',\n  }],\n  startingPosition: 'startingPosition',\n  startingPositionTimestamp: 123,\n  topics: ['topics'],\n  tumblingWindowInSeconds: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::EventSourceMapping`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 1859
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMappingProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 1620
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1895
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1928
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEventSourceMapping",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1624
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The event source mapping's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1649
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1900
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionname"
            },
            "remarks": "**Name formats** - *Function name* – `MyFunction` .\n- *Function ARN* – `arn:aws:lambda:us-west-2:123456789012:function:MyFunction` .\n- *Version or Alias ARN* – `arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD` .\n- *Partial ARN* – `123456789012:function:MyFunction` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1663
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig"
            },
            "stability": "external",
            "summary": "Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1670
          },
          "name": "amazonManagedKafkaEventSourceConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.AmazonManagedKafkaEventSourceConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-batchsize"
            },
            "remarks": "Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\n- *Amazon Kinesis* – Default 100. Max 10,000.\n- *Amazon DynamoDB Streams* – Default 100. Max 10,000.\n- *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.\n- *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.\n- *Self-managed Apache Kafka* – Default 100. Max 10,000.\n- *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.\n- *DocumentDB* – Default 100. Max 10,000.",
            "stability": "external",
            "summary": "The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1685
          },
          "name": "batchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-bisectbatchonfunctionerror"
            },
            "remarks": "The default value is false.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1692
          },
          "name": "bisectBatchOnFunctionError",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-destinationconfig"
            },
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1699
          },
          "name": "destinationConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.DestinationConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig"
            },
            "stability": "external",
            "summary": "Specific configuration settings for a DocumentDB event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1706
          },
          "name": "documentDbEventSourceConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.DocumentDBEventSourceConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-enabled"
            },
            "remarks": "Default: True",
            "stability": "external",
            "summary": "When true, the event source mapping is active. When false, Lambda pauses polling and invocation."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1715
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-eventsourcearn"
            },
            "remarks": "- *Amazon Kinesis* – The ARN of the data stream or a stream consumer.\n- *Amazon DynamoDB Streams* – The ARN of the stream.\n- *Amazon Simple Queue Service* – The ARN of the queue.\n- *Amazon Managed Streaming for Apache Kafka* – The ARN of the cluster.\n- *Amazon MQ* – The ARN of the broker.\n- *Amazon DocumentDB* – The ARN of the DocumentDB change stream.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1729
          },
          "name": "eventSourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-filtercriteria"
            },
            "remarks": "For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html) .",
            "stability": "external",
            "summary": "An object that defines the filter criteria that determine whether Lambda should process an event."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1736
          },
          "name": "filterCriteria",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterCriteriaProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionresponsetypes"
            },
            "remarks": "Valid Values: `ReportBatchItemFailures`",
            "stability": "external",
            "summary": "(Streams and SQS) A list of current response type enums applied to the event source mapping."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1745
          },
          "name": "functionResponseTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumbatchingwindowinseconds"
            },
            "remarks": "*Default ( Kinesis , DynamoDB , Amazon SQS event sources)* : 0\n\n*Default ( Amazon MSK , Kafka, Amazon MQ , Amazon DocumentDB event sources)* : 500 ms\n\n*Related setting:* For Amazon SQS event sources, when you set `BatchSize` to a value greater than 10, you must set `MaximumBatchingWindowInSeconds` to at least 1.",
            "stability": "external",
            "summary": "The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1758
          },
          "name": "maximumBatchingWindowInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumrecordageinseconds"
            },
            "remarks": "The default value is -1,\nwhich sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\n> The minimum value that can be set is 60 seconds.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) Discard records older than the specified age."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1768
          },
          "name": "maximumRecordAgeInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumretryattempts"
            },
            "remarks": "The default value is -1,\nwhich sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) Discard records after the specified number of retries."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1776
          },
          "name": "maximumRetryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-parallelizationfactor"
            },
            "remarks": "The default value is 1.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1783
          },
          "name": "parallelizationFactor",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-queues"
            },
            "stability": "external",
            "summary": "(Amazon MQ) The name of the Amazon MQ broker destination queue to consume."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1790
          },
          "name": "queues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-scalingconfig"
            },
            "remarks": "For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency) .",
            "stability": "external",
            "summary": "( Amazon Simple Queue Service only) The scaling configuration for the event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1797
          },
          "name": "scalingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.ScalingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedeventsource"
            },
            "stability": "external",
            "summary": "The self-managed Apache Kafka cluster for your event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1804
          },
          "name": "selfManagedEventSource",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedEventSourceProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig"
            },
            "stability": "external",
            "summary": "Specific configuration settings for a self-managed Apache Kafka event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1811
          },
          "name": "selfManagedKafkaEventSourceConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedKafkaEventSourceConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-sourceaccessconfigurations"
            },
            "stability": "external",
            "summary": "An array of the authentication protocol, VPC components, or virtual host to secure and define your event source."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1818
          },
          "name": "sourceAccessConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SourceAccessConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingposition"
            },
            "remarks": "- *LATEST* - Read only new records.\n- *TRIM_HORIZON* - Process all available records.\n- *AT_TIMESTAMP* - Specify a time from which to start reading records.",
            "stability": "external",
            "summary": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1829
          },
          "name": "startingPosition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingpositiontimestamp"
            },
            "stability": "external",
            "summary": "With `StartingPosition` set to `AT_TIMESTAMP` , the time from which to start reading, in Unix time seconds."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1836
          },
          "name": "startingPositionTimestamp",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-topics"
            },
            "stability": "external",
            "summary": "The name of the Kafka topic."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1843
          },
          "name": "topics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-tumblingwindowinseconds"
            },
            "remarks": "A value of 0 seconds indicates no tumbling window.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1850
          },
          "name": "tumblingWindowInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.AmazonManagedKafkaEventSourceConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst amazonManagedKafkaEventSourceConfigProperty: lambda.CfnEventSourceMapping.AmazonManagedKafkaEventSourceConfigProperty = {\n  consumerGroupId: 'consumerGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.AmazonManagedKafkaEventSourceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 1942
      },
      "name": "AmazonManagedKafkaEventSourceConfigProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig.html#cfn-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig-consumergroupid"
            },
            "remarks": "The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see [Customizable consumer group ID](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-consumer-group-id) .",
            "stability": "external",
            "summary": "The identifier for the Kafka consumer group to join."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1948
          },
          "name": "consumerGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.AmazonManagedKafkaEventSourceConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.DestinationConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-destinationconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A configuration object that specifies the destination of an event after Lambda processes it.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst destinationConfigProperty: lambda.CfnEventSourceMapping.DestinationConfigProperty = {\n  onFailure: {\n    destination: 'destination',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.DestinationConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2009
      },
      "name": "DestinationConfigProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-destinationconfig.html#cfn-lambda-eventsourcemapping-destinationconfig-onfailure"
            },
            "stability": "external",
            "summary": "The destination configuration for failed invocations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2015
          },
          "name": "onFailure",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.OnFailureProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.DestinationConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.DocumentDBEventSourceConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-documentdbeventsourceconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specific configuration settings for a DocumentDB event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst documentDBEventSourceConfigProperty: lambda.CfnEventSourceMapping.DocumentDBEventSourceConfigProperty = {\n  collectionName: 'collectionName',\n  databaseName: 'databaseName',\n  fullDocument: 'fullDocument',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.DocumentDBEventSourceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2076
      },
      "name": "DocumentDBEventSourceConfigProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-documentdbeventsourceconfig.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig-collectionname"
            },
            "remarks": "If you do not specify a collection, Lambda consumes all collections.",
            "stability": "external",
            "summary": "The name of the collection to consume within the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2082
          },
          "name": "collectionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-documentdbeventsourceconfig.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig-databasename"
            },
            "stability": "external",
            "summary": "The name of the database to consume within the DocumentDB cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2088
          },
          "name": "databaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-documentdbeventsourceconfig.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig-fulldocument"
            },
            "remarks": "If set to UpdateLookup, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes.",
            "stability": "external",
            "summary": "Determines what DocumentDB sends to your event stream during document update operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2094
          },
          "name": "fullDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.DocumentDBEventSourceConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.EndpointsProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-endpoints.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The list of bootstrap servers for your Kafka brokers in the following format: `\"KafkaBootstrapServers\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"]` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst endpointsProperty: lambda.CfnEventSourceMapping.EndpointsProperty = {\n  kafkaBootstrapServers: ['kafkaBootstrapServers'],\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.EndpointsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2161
      },
      "name": "EndpointsProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-endpoints.html#cfn-lambda-eventsourcemapping-endpoints-kafkabootstrapservers"
            },
            "stability": "external",
            "summary": "The list of bootstrap servers for your Kafka brokers in the following format: `\"KafkaBootstrapServers\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"]` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2167
          },
          "name": "kafkaBootstrapServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.EndpointsProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterCriteriaProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-filtercriteria.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that contains the filters for an event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst filterCriteriaProperty: lambda.CfnEventSourceMapping.FilterCriteriaProperty = {\n  filters: [{\n    pattern: 'pattern',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterCriteriaProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2295
      },
      "name": "FilterCriteriaProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-filtercriteria.html#cfn-lambda-eventsourcemapping-filtercriteria-filters"
            },
            "stability": "external",
            "summary": "A list of filters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2301
          },
          "name": "filters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.FilterCriteriaProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-filter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A structure within a `FilterCriteria` object that defines an event filtering pattern.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst filterProperty: lambda.CfnEventSourceMapping.FilterProperty = {\n  pattern: 'pattern',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2228
      },
      "name": "FilterProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-filter.html#cfn-lambda-eventsourcemapping-filter-pattern"
            },
            "remarks": "For more information on the syntax of a filter pattern, see [Filter rule syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax) .",
            "stability": "external",
            "summary": "A filter pattern."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2234
          },
          "name": "pattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.FilterProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.OnFailureProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-onfailure.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A destination for events that failed processing.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst onFailureProperty: lambda.CfnEventSourceMapping.OnFailureProperty = {\n  destination: 'destination',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.OnFailureProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2362
      },
      "name": "OnFailureProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-onfailure.html#cfn-lambda-eventsourcemapping-onfailure-destination"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the destination resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2368
          },
          "name": "destination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.OnFailureProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.ScalingConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-scalingconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency) .",
        "stability": "external",
        "summary": "( Amazon Simple Queue Service only) The scaling configuration for the event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst scalingConfigProperty: lambda.CfnEventSourceMapping.ScalingConfigProperty = {\n  maximumConcurrency: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.ScalingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2429
      },
      "name": "ScalingConfigProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-scalingconfig.html#cfn-lambda-eventsourcemapping-scalingconfig-maximumconcurrency"
            },
            "stability": "external",
            "summary": "Limits the number of concurrent instances that the Amazon SQS event source can invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2435
          },
          "name": "maximumConcurrency",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.ScalingConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedEventSourceProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-selfmanagedeventsource.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The self-managed Apache Kafka cluster for your event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst selfManagedEventSourceProperty: lambda.CfnEventSourceMapping.SelfManagedEventSourceProperty = {\n  endpoints: {\n    kafkaBootstrapServers: ['kafkaBootstrapServers'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedEventSourceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2496
      },
      "name": "SelfManagedEventSourceProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-selfmanagedeventsource.html#cfn-lambda-eventsourcemapping-selfmanagedeventsource-endpoints"
            },
            "stability": "external",
            "summary": "The list of bootstrap servers for your Kafka brokers in the following format: `\"KafkaBootstrapServers\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"]` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2502
          },
          "name": "endpoints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.EndpointsProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.SelfManagedEventSourceProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedKafkaEventSourceConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specific configuration settings for a self-managed Apache Kafka event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst selfManagedKafkaEventSourceConfigProperty: lambda.CfnEventSourceMapping.SelfManagedKafkaEventSourceConfigProperty = {\n  consumerGroupId: 'consumerGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedKafkaEventSourceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2563
      },
      "name": "SelfManagedKafkaEventSourceConfigProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig.html#cfn-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig-consumergroupid"
            },
            "remarks": "The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see [Customizable consumer group ID](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-consumer-group-id) .",
            "stability": "external",
            "summary": "The identifier for the Kafka consumer group to join."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2569
          },
          "name": "consumerGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.SelfManagedKafkaEventSourceConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMapping.SourceAccessConfigurationProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-sourceaccessconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst sourceAccessConfigurationProperty: lambda.CfnEventSourceMapping.SourceAccessConfigurationProperty = {\n  type: 'type',\n  uri: 'uri',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SourceAccessConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2630
      },
      "name": "SourceAccessConfigurationProperty",
      "namespace": "CfnEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-sourceaccessconfiguration.html#cfn-lambda-eventsourcemapping-sourceaccessconfiguration-type"
            },
            "remarks": "- `BASIC_AUTH` – (Amazon MQ) The AWS Secrets Manager secret that stores your broker credentials.\n- `BASIC_AUTH` – (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n- `VPC_SUBNET` – (Self-managed Apache Kafka) The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n- `VPC_SECURITY_GROUP` – (Self-managed Apache Kafka) The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n- `SASL_SCRAM_256_AUTH` – (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n- `SASL_SCRAM_512_AUTH` – (Amazon MSK, Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n- `VIRTUAL_HOST` –- (RabbitMQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source. This property cannot be specified in an UpdateEventSourceMapping API call.\n- `CLIENT_CERTIFICATE_TLS_AUTH` – (Amazon MSK, self-managed Apache Kafka) The Secrets Manager ARN of your secret key containing the certificate chain (X.509 PEM), private key (PKCS#8 PEM), and private key password (optional) used for mutual TLS authentication of your MSK/Apache Kafka brokers.\n- `SERVER_ROOT_CA_CERTIFICATE` – (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key containing the root CA certificate (X.509 PEM) used for TLS encryption of your Apache Kafka brokers.",
            "stability": "external",
            "summary": "The type of authentication protocol, VPC components, or virtual host for your event source. For example: `\"Type\":\"SASL_SCRAM_512_AUTH\"` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2646
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-sourceaccessconfiguration.html#cfn-lambda-eventsourcemapping-sourceaccessconfiguration-uri"
            },
            "remarks": "For example: `\"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\"` .",
            "stability": "external",
            "summary": "The value for your chosen configuration in `Type` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2652
          },
          "name": "uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMapping.SourceAccessConfigurationProperty"
    },
    "@aws-cdk/aws-lambda.CfnEventSourceMappingProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEventSourceMapping`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnEventSourceMappingProps: lambda.CfnEventSourceMappingProps = {\n  functionName: 'functionName',\n\n  // the properties below are optional\n  amazonManagedKafkaEventSourceConfig: {\n    consumerGroupId: 'consumerGroupId',\n  },\n  batchSize: 123,\n  bisectBatchOnFunctionError: false,\n  destinationConfig: {\n    onFailure: {\n      destination: 'destination',\n    },\n  },\n  documentDbEventSourceConfig: {\n    collectionName: 'collectionName',\n    databaseName: 'databaseName',\n    fullDocument: 'fullDocument',\n  },\n  enabled: false,\n  eventSourceArn: 'eventSourceArn',\n  filterCriteria: {\n    filters: [{\n      pattern: 'pattern',\n    }],\n  },\n  functionResponseTypes: ['functionResponseTypes'],\n  maximumBatchingWindowInSeconds: 123,\n  maximumRecordAgeInSeconds: 123,\n  maximumRetryAttempts: 123,\n  parallelizationFactor: 123,\n  queues: ['queues'],\n  scalingConfig: {\n    maximumConcurrency: 123,\n  },\n  selfManagedEventSource: {\n    endpoints: {\n      kafkaBootstrapServers: ['kafkaBootstrapServers'],\n    },\n  },\n  selfManagedKafkaEventSourceConfig: {\n    consumerGroupId: 'consumerGroupId',\n  },\n  sourceAccessConfigurations: [{\n    type: 'type',\n    uri: 'uri',\n  }],\n  startingPosition: 'startingPosition',\n  startingPositionTimestamp: 123,\n  topics: ['topics'],\n  tumblingWindowInSeconds: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMappingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 1284
      },
      "name": "CfnEventSourceMappingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionname"
            },
            "remarks": "**Name formats** - *Function name* – `MyFunction` .\n- *Function ARN* – `arn:aws:lambda:us-west-2:123456789012:function:MyFunction` .\n- *Version or Alias ARN* – `arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD` .\n- *Partial ARN* – `123456789012:function:MyFunction` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1298
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig"
            },
            "stability": "external",
            "summary": "Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1305
          },
          "name": "amazonManagedKafkaEventSourceConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.AmazonManagedKafkaEventSourceConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-batchsize"
            },
            "remarks": "Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\n- *Amazon Kinesis* – Default 100. Max 10,000.\n- *Amazon DynamoDB Streams* – Default 100. Max 10,000.\n- *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.\n- *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.\n- *Self-managed Apache Kafka* – Default 100. Max 10,000.\n- *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.\n- *DocumentDB* – Default 100. Max 10,000.",
            "stability": "external",
            "summary": "The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1320
          },
          "name": "batchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-bisectbatchonfunctionerror"
            },
            "remarks": "The default value is false.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1327
          },
          "name": "bisectBatchOnFunctionError",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-destinationconfig"
            },
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1334
          },
          "name": "destinationConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.DestinationConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig"
            },
            "stability": "external",
            "summary": "Specific configuration settings for a DocumentDB event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1341
          },
          "name": "documentDbEventSourceConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.DocumentDBEventSourceConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-enabled"
            },
            "remarks": "Default: True",
            "stability": "external",
            "summary": "When true, the event source mapping is active. When false, Lambda pauses polling and invocation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1350
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-eventsourcearn"
            },
            "remarks": "- *Amazon Kinesis* – The ARN of the data stream or a stream consumer.\n- *Amazon DynamoDB Streams* – The ARN of the stream.\n- *Amazon Simple Queue Service* – The ARN of the queue.\n- *Amazon Managed Streaming for Apache Kafka* – The ARN of the cluster.\n- *Amazon MQ* – The ARN of the broker.\n- *Amazon DocumentDB* – The ARN of the DocumentDB change stream.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1364
          },
          "name": "eventSourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-filtercriteria"
            },
            "remarks": "For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html) .",
            "stability": "external",
            "summary": "An object that defines the filter criteria that determine whether Lambda should process an event."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1371
          },
          "name": "filterCriteria",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.FilterCriteriaProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionresponsetypes"
            },
            "remarks": "Valid Values: `ReportBatchItemFailures`",
            "stability": "external",
            "summary": "(Streams and SQS) A list of current response type enums applied to the event source mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1380
          },
          "name": "functionResponseTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumbatchingwindowinseconds"
            },
            "remarks": "*Default ( Kinesis , DynamoDB , Amazon SQS event sources)* : 0\n\n*Default ( Amazon MSK , Kafka, Amazon MQ , Amazon DocumentDB event sources)* : 500 ms\n\n*Related setting:* For Amazon SQS event sources, when you set `BatchSize` to a value greater than 10, you must set `MaximumBatchingWindowInSeconds` to at least 1.",
            "stability": "external",
            "summary": "The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1393
          },
          "name": "maximumBatchingWindowInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumrecordageinseconds"
            },
            "remarks": "The default value is -1,\nwhich sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\n> The minimum value that can be set is 60 seconds.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) Discard records older than the specified age."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1403
          },
          "name": "maximumRecordAgeInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumretryattempts"
            },
            "remarks": "The default value is -1,\nwhich sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) Discard records after the specified number of retries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1411
          },
          "name": "maximumRetryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-parallelizationfactor"
            },
            "remarks": "The default value is 1.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1418
          },
          "name": "parallelizationFactor",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-queues"
            },
            "stability": "external",
            "summary": "(Amazon MQ) The name of the Amazon MQ broker destination queue to consume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1425
          },
          "name": "queues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-scalingconfig"
            },
            "remarks": "For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency) .",
            "stability": "external",
            "summary": "( Amazon Simple Queue Service only) The scaling configuration for the event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1432
          },
          "name": "scalingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.ScalingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedeventsource"
            },
            "stability": "external",
            "summary": "The self-managed Apache Kafka cluster for your event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1439
          },
          "name": "selfManagedEventSource",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedEventSourceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig"
            },
            "stability": "external",
            "summary": "Specific configuration settings for a self-managed Apache Kafka event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1446
          },
          "name": "selfManagedKafkaEventSourceConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SelfManagedKafkaEventSourceConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-sourceaccessconfigurations"
            },
            "stability": "external",
            "summary": "An array of the authentication protocol, VPC components, or virtual host to secure and define your event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1453
          },
          "name": "sourceAccessConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.CfnEventSourceMapping.SourceAccessConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingposition"
            },
            "remarks": "- *LATEST* - Read only new records.\n- *TRIM_HORIZON* - Process all available records.\n- *AT_TIMESTAMP* - Specify a time from which to start reading records.",
            "stability": "external",
            "summary": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1464
          },
          "name": "startingPosition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingpositiontimestamp"
            },
            "stability": "external",
            "summary": "With `StartingPosition` set to `AT_TIMESTAMP` , the time from which to start reading, in Unix time seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1471
          },
          "name": "startingPositionTimestamp",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-topics"
            },
            "stability": "external",
            "summary": "The name of the Kafka topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1478
          },
          "name": "topics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-tumblingwindowinseconds"
            },
            "remarks": "A value of 0 seconds indicates no tumbling window.",
            "stability": "external",
            "summary": "(Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 1485
          },
          "name": "tumblingWindowInSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnEventSourceMappingProps"
    },
    "@aws-cdk/aws-lambda.CfnFunction": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::Function",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::Function` resource creates a Lambda function. To create a function, you need a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html) and an [execution role](https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html) . The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use AWS services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing.\n\nYou set the package type to `Image` if the deployment package is a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) . For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties.\n\nYou set the package type to `Zip` if the deployment package is a [.zip file archive](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip) . For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties. For a Python example, see [Deploy Python Lambda functions with .zip file archives](https://docs.aws.amazon.com/lambda/latest/dg/python-package.html) .\n\nYou can use [code signing](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html) if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with `UpdateFunctionCode` , Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.\n\nNote that you configure [provisioned concurrency](https://docs.aws.amazon.com/lambda/latest/dg/provisioned-concurrency.html) on a `AWS::Lambda::Version` or a `AWS::Lambda::Alias` .\n\nFor a complete introduction to Lambda functions, see [What is Lambda?](https://docs.aws.amazon.com/lambda/latest/dg/lambda-welcome.html) in the *Lambda developer guide.*",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::Function`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnFunction = new lambda.CfnFunction(this, 'MyCfnFunction', {\n  code: {\n    imageUri: 'imageUri',\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n    s3ObjectVersion: 's3ObjectVersion',\n    zipFile: 'zipFile',\n  },\n  role: 'role',\n\n  // the properties below are optional\n  architectures: ['architectures'],\n  codeSigningConfigArn: 'codeSigningConfigArn',\n  deadLetterConfig: {\n    targetArn: 'targetArn',\n  },\n  description: 'description',\n  environment: {\n    variables: {\n      variablesKey: 'variables',\n    },\n  },\n  ephemeralStorage: {\n    size: 123,\n  },\n  fileSystemConfigs: [{\n    arn: 'arn',\n    localMountPath: 'localMountPath',\n  }],\n  functionName: 'functionName',\n  handler: 'handler',\n  imageConfig: {\n    command: ['command'],\n    entryPoint: ['entryPoint'],\n    workingDirectory: 'workingDirectory',\n  },\n  kmsKeyArn: 'kmsKeyArn',\n  layers: ['layers'],\n  memorySize: 123,\n  packageType: 'packageType',\n  reservedConcurrentExecutions: 123,\n  runtime: 'runtime',\n  runtimeManagementConfig: {\n    updateRuntimeOn: 'updateRuntimeOn',\n\n    // the properties below are optional\n    runtimeVersionArn: 'runtimeVersionArn',\n  },\n  snapStart: {\n    applyOn: 'applyOn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeout: 123,\n  tracingConfig: {\n    mode: 'mode',\n  },\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::Function`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 3254
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3029
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3294
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3328
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFunction",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3033
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3058
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SnapStartResponse.ApplyOn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3064
          },
          "name": "attrSnapStartResponseApplyOn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SnapStartResponse.OptimizationStatus"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3070
          },
          "name": "attrSnapStartResponseOptimizationStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3299
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags"
            },
            "stability": "external",
            "summary": "A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3224
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code"
            },
            "stability": "external",
            "summary": "The code for the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3077
          },
          "name": "code",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.CodeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function's execution role."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3084
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-architectures"
            },
            "remarks": "Enter a string array with one of the valid values (arm64 or x86_64). The default value is `x86_64` .",
            "stability": "external",
            "summary": "The instruction set architecture that the function supports."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3091
          },
          "name": "architectures",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-codesigningconfigarn"
            },
            "remarks": "A code-signing configuration\nincludes a set of signing profiles, which define the trusted publishers for this function.",
            "stability": "external",
            "summary": "To enable code signing for this function, specify the ARN of a code-signing configuration."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3099
          },
          "name": "codeSigningConfigArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig"
            },
            "remarks": "For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .",
            "stability": "external",
            "summary": "A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3106
          },
          "name": "deadLetterConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.DeadLetterConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description"
            },
            "stability": "external",
            "summary": "A description of the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3113
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment"
            },
            "stability": "external",
            "summary": "Environment variables that are accessible from function code during execution."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3120
          },
          "name": "environment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.EnvironmentProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-ephemeralstorage"
            },
            "remarks": "The default value is 512, but it can be any whole number between 512 and 10,240 MB.",
            "stability": "external",
            "summary": "The size of the function's `/tmp` directory in MB."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3127
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.EphemeralStorageProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-filesystemconfigs"
            },
            "remarks": "To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a `DependsOn` attribute to ensure that the mount target is created or updated before the function.\n\nFor more information about using the `DependsOn` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .",
            "stability": "external",
            "summary": "Connection settings for an Amazon EFS file system."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3136
          },
          "name": "fileSystemConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.CfnFunction.FileSystemConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates one.\n\nIf you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
            "stability": "external",
            "summary": "The name of the Lambda function, up to 64 characters in length."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3145
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler"
            },
            "remarks": "Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .",
            "stability": "external",
            "summary": "The name of the method within your code that Lambda calls to run your function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3152
          },
          "name": "handler",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-imageconfig"
            },
            "remarks": "For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .",
            "stability": "external",
            "summary": "Configuration values that override the container image Dockerfile settings."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3159
          },
          "name": "imageConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.ImageConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn"
            },
            "stability": "external",
            "summary": "The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3166
          },
          "name": "kmsKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-layers"
            },
            "stability": "external",
            "summary": "A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3173
          },
          "name": "layers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize"
            },
            "stability": "external",
            "summary": "The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3180
          },
          "name": "memorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-packagetype"
            },
            "remarks": "Set to `Image` for container image and set `Zip` for .zip file archive.",
            "stability": "external",
            "summary": "The type of deployment package."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3187
          },
          "name": "packageType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions"
            },
            "stability": "external",
            "summary": "The number of simultaneous executions to reserve for the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3194
          },
          "name": "reservedConcurrentExecutions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime"
            },
            "remarks": "The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .",
            "stability": "external",
            "summary": "The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3203
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtimemanagementconfig"
            },
            "remarks": "For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .",
            "stability": "external",
            "summary": "Sets the runtime management configuration for a function's version."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3210
          },
          "name": "runtimeManagementConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.RuntimeManagementConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-snapstart"
            },
            "stability": "external",
            "summary": "The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3217
          },
          "name": "snapStart",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.SnapStartProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout"
            },
            "remarks": "The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .",
            "stability": "external",
            "summary": "The amount of time (in seconds) that Lambda allows a function to run before stopping it."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3231
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig"
            },
            "stability": "external",
            "summary": "Set `Mode` to `Active` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) ."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3238
          },
          "name": "tracingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.TracingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig"
            },
            "stability": "external",
            "summary": "For network connectivity to AWS resources in a [VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-network.html) , specify a list of security groups and subnets in the VPC."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3245
          },
          "name": "vpcConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.VpcConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction"
    },
    "@aws-cdk/aws-lambda.CfnFunction.CodeProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Changes to a deployment package in Amazon S3 are not detected automatically during stack updates. To update the function code, change the object key or version in the template.",
        "stability": "external",
        "summary": "The [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html) for a Lambda function. To deploy a function defined as a container image, you specify the location of a container image in the Amazon ECR registry. For a .zip file deployment package, you can specify the location of an object in Amazon S3. For Node.js and Python functions, you can specify the function code inline in the template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst codeProperty: lambda.CfnFunction.CodeProperty = {\n  imageUri: 'imageUri',\n  s3Bucket: 's3Bucket',\n  s3Key: 's3Key',\n  s3ObjectVersion: 's3ObjectVersion',\n  zipFile: 'zipFile',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.CodeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3344
      },
      "name": "CodeProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-imageuri"
            },
            "stability": "external",
            "summary": "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3350
          },
          "name": "imageUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3bucket"
            },
            "remarks": "The bucket can be in a different AWS account .",
            "stability": "external",
            "summary": "An Amazon S3 bucket in the same AWS Region as your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3356
          },
          "name": "s3Bucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3key"
            },
            "stability": "external",
            "summary": "The Amazon S3 key of the deployment package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3362
          },
          "name": "s3Key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3objectversion"
            },
            "stability": "external",
            "summary": "For versioned objects, the version of the deployment package object to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3368
          },
          "name": "s3ObjectVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-zipfile"
            },
            "remarks": "For JSON, you must escape quotes and special characters such as newline ( `\\n` ) with a backslash.\n\nIf you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response module ( [cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html) ) that simplifies sending responses. See [Using AWS Lambda with AWS CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html) for details.",
            "stability": "external",
            "summary": "(Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named `index` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html) . This zip file cannot exceed 4MB. For the `Handler` property, the first part of the handler identifier must be `index` . For example, `index.handler` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3378
          },
          "name": "zipFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.CodeProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.DeadLetterConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The [dead-letter queue](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq) for failed asynchronous invocations.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst deadLetterConfigProperty: lambda.CfnFunction.DeadLetterConfigProperty = {\n  targetArn: 'targetArn',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.DeadLetterConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3451
      },
      "name": "DeadLetterConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-targetarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3457
          },
          "name": "targetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.DeadLetterConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.EnvironmentProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.",
        "stability": "external",
        "summary": "A function's environment variable settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst environmentProperty: lambda.CfnFunction.EnvironmentProperty = {\n  variables: {\n    variablesKey: 'variables',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.EnvironmentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3518
      },
      "name": "EnvironmentProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-variables"
            },
            "remarks": "For more information, see [Using Lambda environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html) .",
            "stability": "external",
            "summary": "Environment variable key-value pairs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3524
          },
          "name": "variables",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.EnvironmentProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.EphemeralStorageProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The default value is 512, but it can be any whole number between 512 and 10,240 MB.",
        "stability": "external",
        "summary": "The size of the function's `/tmp` directory in MB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst ephemeralStorageProperty: lambda.CfnFunction.EphemeralStorageProperty = {\n  size: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.EphemeralStorageProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3585
      },
      "name": "EphemeralStorageProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-ephemeralstorage.html#cfn-lambda-function-ephemeralstorage-size"
            },
            "stability": "external",
            "summary": "The size of the function's `/tmp` directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3591
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.EphemeralStorageProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.FileSystemConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Details about the connection between a Lambda function and an [Amazon EFS file system](https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst fileSystemConfigProperty: lambda.CfnFunction.FileSystemConfigProperty = {\n  arn: 'arn',\n  localMountPath: 'localMountPath',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.FileSystemConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3653
      },
      "name": "FileSystemConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3659
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-filesystemconfig.html#cfn-lambda-function-filesystemconfig-localmountpath"
            },
            "stability": "external",
            "summary": "The path where the function can access the file system, starting with `/mnt/` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3665
          },
          "name": "localMountPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.FileSystemConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.ImageConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .",
        "stability": "external",
        "summary": "Configuration values that override the container image Dockerfile settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst imageConfigProperty: lambda.CfnFunction.ImageConfigProperty = {\n  command: ['command'],\n  entryPoint: ['entryPoint'],\n  workingDirectory: 'workingDirectory',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.ImageConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3731
      },
      "name": "ImageConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-command"
            },
            "remarks": "You can specify a maximum of 1,500 parameters in the list.",
            "stability": "external",
            "summary": "Specifies parameters that you want to pass in with ENTRYPOINT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3737
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-entrypoint"
            },
            "remarks": "You can specify a maximum of 1,500 string entries in the list.",
            "stability": "external",
            "summary": "Specifies the entry point to their application, which is typically the location of the runtime executable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3743
          },
          "name": "entryPoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-workingdirectory"
            },
            "remarks": "The length of the directory string cannot exceed 1,000 characters.",
            "stability": "external",
            "summary": "Specifies the working directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3749
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.ImageConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.RuntimeManagementConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .",
        "stability": "external",
        "summary": "Sets the runtime management configuration for a function's version.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst runtimeManagementConfigProperty: lambda.CfnFunction.RuntimeManagementConfigProperty = {\n  updateRuntimeOn: 'updateRuntimeOn',\n\n  // the properties below are optional\n  runtimeVersionArn: 'runtimeVersionArn',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.RuntimeManagementConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3816
      },
      "name": "RuntimeManagementConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-updateruntimeon"
            },
            "remarks": "- *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase) . This is the best choice for most customers to ensure they always benefit from runtime updates.\n- *FunctionUpdate* - Lambda updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.\n- *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback) .\n\n*Valid Values* : `Auto` | `FunctionUpdate` | `Manual`",
            "stability": "external",
            "summary": "Specify the runtime update mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3836
          },
          "name": "updateRuntimeOn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html#cfn-lambda-function-runtimemanagementconfig-runtimeversionarn"
            },
            "remarks": "> This is only required if you're using the *Manual* runtime update mode.",
            "stability": "external",
            "summary": "The ARN of the runtime version you want the function to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3824
          },
          "name": "runtimeVersionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.RuntimeManagementConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.SnapStartProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst snapStartProperty: lambda.CfnFunction.SnapStartProperty = {\n  applyOn: 'applyOn',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.SnapStartProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3901
      },
      "name": "SnapStartProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstart.html#cfn-lambda-function-snapstart-applyon"
            },
            "stability": "external",
            "summary": "Set `ApplyOn` to `PublishedVersions` to create a snapshot of the initialized execution environment when you publish a function version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3907
          },
          "name": "applyOn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.SnapStartProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.SnapStartResponseProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst snapStartResponseProperty: lambda.CfnFunction.SnapStartResponseProperty = {\n  applyOn: 'applyOn',\n  optimizationStatus: 'optimizationStatus',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.SnapStartResponseProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 3969
      },
      "name": "SnapStartResponseProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-applyon"
            },
            "stability": "external",
            "summary": "`CfnFunction.SnapStartResponseProperty.ApplyOn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3975
          },
          "name": "applyOn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-snapstartresponse.html#cfn-lambda-function-snapstartresponse-optimizationstatus"
            },
            "stability": "external",
            "summary": "`CfnFunction.SnapStartResponseProperty.OptimizationStatus`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 3981
          },
          "name": "optimizationStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.SnapStartResponseProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.TracingConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The function's [AWS X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) tracing configuration. To sample and record incoming requests, set `Mode` to `Active` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst tracingConfigProperty: lambda.CfnFunction.TracingConfigProperty = {\n  mode: 'mode',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.TracingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4045
      },
      "name": "TracingConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-mode"
            },
            "stability": "external",
            "summary": "The tracing mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4051
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.TracingConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunction.VpcConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "When you connect a function to a VPC, Lambda creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration. The function can only access resources and the internet through that VPC. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html) .\n\n> When you delete a function, AWS CloudFormation monitors the state of its network interfaces and waits for Lambda to delete them before proceeding. If the VPC is defined in the same stack, the network interfaces need to be deleted by Lambda before AWS CloudFormation can delete the VPC's resources.\n>\n> To monitor network interfaces, AWS CloudFormation needs the `ec2:DescribeNetworkInterfaces` permission. It obtains this from the user or role that modifies the stack. If you don't provide this permission, AWS CloudFormation does not wait for network interfaces to be deleted.",
        "stability": "external",
        "summary": "The VPC security groups and subnets that are attached to a Lambda function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst vpcConfigProperty: lambda.CfnFunction.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunction.VpcConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4116
      },
      "name": "VpcConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-securitygroupids"
            },
            "stability": "external",
            "summary": "A list of VPC security group IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4122
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-subnetids"
            },
            "stability": "external",
            "summary": "A list of VPC subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4128
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunction.VpcConfigProperty"
    },
    "@aws-cdk/aws-lambda.CfnFunctionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFunction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnFunctionProps: lambda.CfnFunctionProps = {\n  code: {\n    imageUri: 'imageUri',\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n    s3ObjectVersion: 's3ObjectVersion',\n    zipFile: 'zipFile',\n  },\n  role: 'role',\n\n  // the properties below are optional\n  architectures: ['architectures'],\n  codeSigningConfigArn: 'codeSigningConfigArn',\n  deadLetterConfig: {\n    targetArn: 'targetArn',\n  },\n  description: 'description',\n  environment: {\n    variables: {\n      variablesKey: 'variables',\n    },\n  },\n  ephemeralStorage: {\n    size: 123,\n  },\n  fileSystemConfigs: [{\n    arn: 'arn',\n    localMountPath: 'localMountPath',\n  }],\n  functionName: 'functionName',\n  handler: 'handler',\n  imageConfig: {\n    command: ['command'],\n    entryPoint: ['entryPoint'],\n    workingDirectory: 'workingDirectory',\n  },\n  kmsKeyArn: 'kmsKeyArn',\n  layers: ['layers'],\n  memorySize: 123,\n  packageType: 'packageType',\n  reservedConcurrentExecutions: 123,\n  runtime: 'runtime',\n  runtimeManagementConfig: {\n    updateRuntimeOn: 'updateRuntimeOn',\n\n    // the properties below are optional\n    runtimeVersionArn: 'runtimeVersionArn',\n  },\n  snapStart: {\n    applyOn: 'applyOn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeout: 123,\n  tracingConfig: {\n    mode: 'mode',\n  },\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnFunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 2715
      },
      "name": "CfnFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code"
            },
            "stability": "external",
            "summary": "The code for the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2722
          },
          "name": "code",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.CodeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function's execution role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2729
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-architectures"
            },
            "remarks": "Enter a string array with one of the valid values (arm64 or x86_64). The default value is `x86_64` .",
            "stability": "external",
            "summary": "The instruction set architecture that the function supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2736
          },
          "name": "architectures",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-codesigningconfigarn"
            },
            "remarks": "A code-signing configuration\nincludes a set of signing profiles, which define the trusted publishers for this function.",
            "stability": "external",
            "summary": "To enable code signing for this function, specify the ARN of a code-signing configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2744
          },
          "name": "codeSigningConfigArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig"
            },
            "remarks": "For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq) .",
            "stability": "external",
            "summary": "A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2751
          },
          "name": "deadLetterConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.DeadLetterConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description"
            },
            "stability": "external",
            "summary": "A description of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2758
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment"
            },
            "stability": "external",
            "summary": "Environment variables that are accessible from function code during execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2765
          },
          "name": "environment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.EnvironmentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-ephemeralstorage"
            },
            "remarks": "The default value is 512, but it can be any whole number between 512 and 10,240 MB.",
            "stability": "external",
            "summary": "The size of the function's `/tmp` directory in MB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2772
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.EphemeralStorageProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-filesystemconfigs"
            },
            "remarks": "To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a `DependsOn` attribute to ensure that the mount target is created or updated before the function.\n\nFor more information about using the `DependsOn` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .",
            "stability": "external",
            "summary": "Connection settings for an Amazon EFS file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2781
          },
          "name": "fileSystemConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.CfnFunction.FileSystemConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates one.\n\nIf you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
            "stability": "external",
            "summary": "The name of the Lambda function, up to 64 characters in length."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2790
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler"
            },
            "remarks": "Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html) .",
            "stability": "external",
            "summary": "The name of the method within your code that Lambda calls to run your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2797
          },
          "name": "handler",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-imageconfig"
            },
            "remarks": "For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms) .",
            "stability": "external",
            "summary": "Configuration values that override the container image Dockerfile settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2804
          },
          "name": "imageConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.ImageConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn"
            },
            "stability": "external",
            "summary": "The ARN of the AWS Key Management Service ( AWS KMS ) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption) . When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2811
          },
          "name": "kmsKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-layers"
            },
            "stability": "external",
            "summary": "A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2818
          },
          "name": "layers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize"
            },
            "stability": "external",
            "summary": "The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2825
          },
          "name": "memorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-packagetype"
            },
            "remarks": "Set to `Image` for container image and set `Zip` for .zip file archive.",
            "stability": "external",
            "summary": "The type of deployment package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2832
          },
          "name": "packageType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions"
            },
            "stability": "external",
            "summary": "The number of simultaneous executions to reserve for the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2839
          },
          "name": "reservedConcurrentExecutions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime"
            },
            "remarks": "The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy) .",
            "stability": "external",
            "summary": "The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Runtime is required if the deployment package is a .zip file archive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2848
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtimemanagementconfig"
            },
            "remarks": "For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html) .",
            "stability": "external",
            "summary": "Sets the runtime management configuration for a function's version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2855
          },
          "name": "runtimeManagementConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.RuntimeManagementConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-snapstart"
            },
            "stability": "external",
            "summary": "The function's [AWS Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2862
          },
          "name": "snapStart",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.SnapStartProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags"
            },
            "stability": "external",
            "summary": "A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2869
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout"
            },
            "remarks": "The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) .",
            "stability": "external",
            "summary": "The amount of time (in seconds) that Lambda allows a function to run before stopping it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2876
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig"
            },
            "stability": "external",
            "summary": "Set `Mode` to `Active` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2883
          },
          "name": "tracingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.TracingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig"
            },
            "stability": "external",
            "summary": "For network connectivity to AWS resources in a [VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-network.html) , specify a list of security groups and subnets in the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 2890
          },
          "name": "vpcConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction.VpcConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnFunctionProps"
    },
    "@aws-cdk/aws-lambda.CfnLayerVersion": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::LayerVersion",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::LayerVersion` resource creates a [Lambda layer](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) from a ZIP archive.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::LayerVersion`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnLayerVersion = new lambda.CfnLayerVersion(this, 'MyCfnLayerVersion', {\n  content: {\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n\n    // the properties below are optional\n    s3ObjectVersion: 's3ObjectVersion',\n  },\n\n  // the properties below are optional\n  compatibleArchitectures: ['compatibleArchitectures'],\n  compatibleRuntimes: ['compatibleRuntimes'],\n  description: 'description',\n  layerName: 'layerName',\n  licenseInfo: 'licenseInfo',\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnLayerVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::LayerVersion`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 4389
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnLayerVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4311
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4407
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4423
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLayerVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4315
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4412
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-content"
            },
            "stability": "external",
            "summary": "The function layer archive."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4341
          },
          "name": "content",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnLayerVersion.ContentProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-compatiblearchitectures"
            },
            "stability": "external",
            "summary": "A list of compatible [instruction set architectures](https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html) ."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4348
          },
          "name": "compatibleArchitectures",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-compatibleruntimes"
            },
            "stability": "external",
            "summary": "A list of compatible [function runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Used for filtering with [ListLayers](https://docs.aws.amazon.com/lambda/latest/dg/API_ListLayers.html) and [ListLayerVersions](https://docs.aws.amazon.com/lambda/latest/dg/API_ListLayerVersions.html) ."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4355
          },
          "name": "compatibleRuntimes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-description"
            },
            "stability": "external",
            "summary": "The description of the version."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4362
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-layername"
            },
            "stability": "external",
            "summary": "The name or Amazon Resource Name (ARN) of the layer."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4369
          },
          "name": "layerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-licenseinfo"
            },
            "remarks": "- An [SPDX license identifier](https://docs.aws.amazon.com/https://spdx.org/licenses/) . For example, `MIT` .\n- The URL of a license hosted on the internet. For example, `https://opensource.org/licenses/MIT` .\n- The full text of the license.",
            "stability": "external",
            "summary": "The layer's software license. It can be any of the following:."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4380
          },
          "name": "licenseInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnLayerVersion"
    },
    "@aws-cdk/aws-lambda.CfnLayerVersion.ContentProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A ZIP archive that contains the contents of an [Lambda layer](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst contentProperty: lambda.CfnLayerVersion.ContentProperty = {\n  s3Bucket: 's3Bucket',\n  s3Key: 's3Key',\n\n  // the properties below are optional\n  s3ObjectVersion: 's3ObjectVersion',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnLayerVersion.ContentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4437
      },
      "name": "ContentProperty",
      "namespace": "CfnLayerVersion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html#cfn-lambda-layerversion-content-s3bucket"
            },
            "stability": "external",
            "summary": "The Amazon S3 bucket of the layer archive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4443
          },
          "name": "s3Bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html#cfn-lambda-layerversion-content-s3key"
            },
            "stability": "external",
            "summary": "The Amazon S3 key of the layer archive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4449
          },
          "name": "s3Key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html#cfn-lambda-layerversion-content-s3objectversion"
            },
            "stability": "external",
            "summary": "For versioned objects, the version of the layer archive object to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4455
          },
          "name": "s3ObjectVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnLayerVersion.ContentProperty"
    },
    "@aws-cdk/aws-lambda.CfnLayerVersionPermission": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::LayerVersionPermission",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::LayerVersionPermission` resource adds permissions to the resource-based policy of a version of an [Lambda layer](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) . Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all AWS accounts, or all accounts in an organization.\n\n> Since the release of the [UpdateReplacePolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html) both `UpdateReplacePolicy` and `DeletionPolicy` are required to protect your Resources/LayerPermissions from deletion.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::LayerVersionPermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnLayerVersionPermission = new lambda.CfnLayerVersionPermission(this, 'MyCfnLayerVersionPermission', {\n  action: 'action',\n  layerVersionArn: 'layerVersionArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  organizationId: 'organizationId',\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnLayerVersionPermission",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::LayerVersionPermission`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 4683
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnLayerVersionPermissionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4623
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4701
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4715
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLayerVersionPermission",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4627
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4706
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-action"
            },
            "remarks": "For example, `lambda:GetLayerVersion` .",
            "stability": "external",
            "summary": "The API action that grants access to the layer."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4653
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-layerversionarn"
            },
            "stability": "external",
            "summary": "The name or Amazon Resource Name (ARN) of the layer."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4660
          },
          "name": "layerVersionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-principal"
            },
            "remarks": "For the last case, make sure that you really do want all AWS accounts to have usage permission to this layer.",
            "stability": "external",
            "summary": "An account ID, or `*` to grant layer usage permission to all accounts in an organization, or all AWS accounts (if `organizationId` is not specified)."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4667
          },
          "name": "principal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-organizationid"
            },
            "stability": "external",
            "summary": "With the principal set to `*` , grant permission to all accounts in the specified organization."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4674
          },
          "name": "organizationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnLayerVersionPermission"
    },
    "@aws-cdk/aws-lambda.CfnLayerVersionPermissionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLayerVersionPermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnLayerVersionPermissionProps: lambda.CfnLayerVersionPermissionProps = {\n  action: 'action',\n  layerVersionArn: 'layerVersionArn',\n  principal: 'principal',\n\n  // the properties below are optional\n  organizationId: 'organizationId',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnLayerVersionPermissionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4523
      },
      "name": "CfnLayerVersionPermissionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-action"
            },
            "remarks": "For example, `lambda:GetLayerVersion` .",
            "stability": "external",
            "summary": "The API action that grants access to the layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4530
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-layerversionarn"
            },
            "stability": "external",
            "summary": "The name or Amazon Resource Name (ARN) of the layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4537
          },
          "name": "layerVersionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-principal"
            },
            "remarks": "For the last case, make sure that you really do want all AWS accounts to have usage permission to this layer.",
            "stability": "external",
            "summary": "An account ID, or `*` to grant layer usage permission to all accounts in an organization, or all AWS accounts (if `organizationId` is not specified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4544
          },
          "name": "principal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-organizationid"
            },
            "stability": "external",
            "summary": "With the principal set to `*` , grant permission to all accounts in the specified organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4551
          },
          "name": "organizationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnLayerVersionPermissionProps"
    },
    "@aws-cdk/aws-lambda.CfnLayerVersionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLayerVersion`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnLayerVersionProps: lambda.CfnLayerVersionProps = {\n  content: {\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n\n    // the properties below are optional\n    s3ObjectVersion: 's3ObjectVersion',\n  },\n\n  // the properties below are optional\n  compatibleArchitectures: ['compatibleArchitectures'],\n  compatibleRuntimes: ['compatibleRuntimes'],\n  description: 'description',\n  layerName: 'layerName',\n  licenseInfo: 'licenseInfo',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnLayerVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4191
      },
      "name": "CfnLayerVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-content"
            },
            "stability": "external",
            "summary": "The function layer archive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4198
          },
          "name": "content",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnLayerVersion.ContentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-compatiblearchitectures"
            },
            "stability": "external",
            "summary": "A list of compatible [instruction set architectures](https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4205
          },
          "name": "compatibleArchitectures",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-compatibleruntimes"
            },
            "stability": "external",
            "summary": "A list of compatible [function runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) . Used for filtering with [ListLayers](https://docs.aws.amazon.com/lambda/latest/dg/API_ListLayers.html) and [ListLayerVersions](https://docs.aws.amazon.com/lambda/latest/dg/API_ListLayerVersions.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4212
          },
          "name": "compatibleRuntimes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-description"
            },
            "stability": "external",
            "summary": "The description of the version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4219
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-layername"
            },
            "stability": "external",
            "summary": "The name or Amazon Resource Name (ARN) of the layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4226
          },
          "name": "layerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-licenseinfo"
            },
            "remarks": "- An [SPDX license identifier](https://docs.aws.amazon.com/https://spdx.org/licenses/) . For example, `MIT` .\n- The URL of a license hosted on the internet. For example, `https://opensource.org/licenses/MIT` .\n- The full text of the license.",
            "stability": "external",
            "summary": "The layer's software license. It can be any of the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4237
          },
          "name": "licenseInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnLayerVersionProps"
    },
    "@aws-cdk/aws-lambda.CfnParametersCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Code",
      "docs": {
        "remarks": "Useful when you don't have access to the code of your Lambda from your CDK code, so you can't use Assets,\nand you want to deploy the Lambda in a CodePipeline, using CloudFormation Actions -\nyou can fill the parameters using the {@link #assign} method.",
        "stability": "stable",
        "summary": "Lambda code defined using 2 CloudFormation parameters.",
        "example": "const lambdaStack = new cdk.Stack(app, 'LambdaStack');\nconst lambdaCode = lambda.Code.fromCfnParameters();\nnew lambda.Function(lambdaStack, 'Lambda', {\n  code: lambdaCode,\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n// other resources that your Lambda needs, added to the lambdaStack...\n\nconst pipelineStack = new cdk.Stack(app, 'PipelineStack');\nconst pipeline = new codepipeline.Pipeline(pipelineStack, 'Pipeline');\n\n// add the source code repository containing this code to your Pipeline,\n// and the source code of the Lambda Function, if they're separate\nconst cdkSourceOutput = new codepipeline.Artifact();\nconst cdkSourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  repository: new codecommit.Repository(pipelineStack, 'CdkCodeRepo', {\n    repositoryName: 'CdkCodeRepo',\n  }),\n  actionName: 'CdkCode_Source',\n  output: cdkSourceOutput,\n});\nconst lambdaSourceOutput = new codepipeline.Artifact();\nconst lambdaSourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  repository: new codecommit.Repository(pipelineStack, 'LambdaCodeRepo', {\n    repositoryName: 'LambdaCodeRepo',\n  }),\n  actionName: 'LambdaCode_Source',\n  output: lambdaSourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [cdkSourceAction, lambdaSourceAction],\n});\n\n// synthesize the Lambda CDK template, using CodeBuild\n// the below values are just examples, assuming your CDK code is in TypeScript/JavaScript -\n// adjust the build environment and/or commands accordingly\nconst cdkBuildProject = new codebuild.Project(pipelineStack, 'CdkBuildProject', {\n  environment: {\n    buildImage: codebuild.LinuxBuildImage.UBUNTU_14_04_NODEJS_10_1_0,\n  },\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      install: {\n        commands: 'npm install',\n      },\n      build: {\n        commands: [\n          'npm run build',\n          'npm run cdk synth LambdaStack -- -o .',\n        ],\n      },\n    },\n    artifacts: {\n      files: 'LambdaStack.template.yaml',\n    },\n  }),\n});\nconst cdkBuildOutput = new codepipeline.Artifact();\nconst cdkBuildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CDK_Build',\n  project: cdkBuildProject,\n  input: cdkSourceOutput,\n  outputs: [cdkBuildOutput],\n});\n\n// build your Lambda code, using CodeBuild\n// again, this example assumes your Lambda is written in TypeScript/JavaScript -\n// make sure to adjust the build environment and/or commands if they don't match your specific situation\nconst lambdaBuildProject = new codebuild.Project(pipelineStack, 'LambdaBuildProject', {\n  environment: {\n    buildImage: codebuild.LinuxBuildImage.UBUNTU_14_04_NODEJS_10_1_0,\n  },\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      install: {\n        commands: 'npm install',\n      },\n      build: {\n        commands: 'npm run build',\n      },\n    },\n    artifacts: {\n      files: [\n        'index.js',\n        'node_modules/**/*',\n      ],\n    },\n  }),\n});\nconst lambdaBuildOutput = new codepipeline.Artifact();\nconst lambdaBuildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'Lambda_Build',\n  project: lambdaBuildProject,\n  input: lambdaSourceOutput,\n  outputs: [lambdaBuildOutput],\n});\n\npipeline.addStage({\n  stageName: 'Build',\n  actions: [cdkBuildAction, lambdaBuildAction],\n});\n\n// finally, deploy your Lambda Stack\npipeline.addStage({\n  stageName: 'Deploy',\n  actions: [\n    new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n      actionName: 'Lambda_CFN_Deploy',\n      templatePath: cdkBuildOutput.atPath('LambdaStack.template.yaml'),\n      stackName: 'LambdaStackDeployedName',\n      adminPermissions: true,\n      parameterOverrides: lambdaCode.assign(lambdaBuildOutput.s3Location),\n      extraInputs: [\n        lambdaBuildOutput,\n      ],\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "lit=test/integ.lambda-deployed-through-codepipeline.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.CfnParametersCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 361
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnParametersCodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 356
      },
      "methods": [
        {
          "docs": {
            "remarks": "It returns a map with 2 keys that correspond to the names of the parameters defined in this Lambda code,\nand as values it contains the appropriate expressions pointing at the provided S3 location\n(most likely, obtained from a CodePipeline Artifact by calling the `artifact.s3Location` method).\nThe result should be provided to the CloudFormation Action\nthat is deploying the Stack that the Lambda with this code is part of,\nin the `parameterOverrides` property.",
            "stability": "stable",
            "summary": "Create a parameters map from this instance's CloudFormation parameters."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 401
          },
          "name": "assign",
          "parameters": [
            {
              "docs": {
                "summary": "the location of the object in S3 that represents the Lambda code."
              },
              "name": "location",
              "type": {
                "fqn": "@aws-cdk/aws-s3.Location"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 368
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        }
      ],
      "name": "CfnParametersCode",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 408
          },
          "name": "bucketNameParam",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 357
          },
          "name": "isInline",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 416
          },
          "name": "objectKeyParam",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:CfnParametersCode"
    },
    "@aws-cdk/aws-lambda.CfnParametersCodeProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link CfnParametersCode}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const cfnParameter: cdk.CfnParameter;\nconst cfnParametersCodeProps: lambda.CfnParametersCodeProps = {\n  bucketNameParam: cfnParameter,\n  objectKeyParam: cfnParameter,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.CfnParametersCodeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 330
      },
      "name": "CfnParametersCodeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "a new parameter will be created",
            "remarks": "Must be of type 'String'.",
            "stability": "stable",
            "summary": "The CloudFormation parameter that represents the name of the S3 Bucket where the Lambda code will be located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 338
          },
          "name": "bucketNameParam",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnParameter"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a new parameter will be created",
            "remarks": "Must be of type 'String'.",
            "stability": "stable",
            "summary": "The CloudFormation parameter that represents the path inside the S3 Bucket where the Lambda code will be located at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 347
          },
          "name": "objectKeyParam",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnParameter"
          }
        }
      ],
      "symbolId": "lib/code:CfnParametersCodeProps"
    },
    "@aws-cdk/aws-lambda.CfnPermission": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::Permission",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::Permission` resource grants an AWS service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.\n\nTo grant permission to another account, specify the account ID as the `Principal` . To grant permission to an organization defined in AWS Organizations , specify the organization ID as the `PrincipalOrgID` . For AWS services, the principal is a domain-style identifier defined by the service, like `s3.amazonaws.com` or `sns.amazonaws.com` . For AWS services, you can also specify the ARN of the associated resource as the `SourceArn` . If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.\n\nIf your function has a function URL, you can specify the `FunctionUrlAuthType` parameter. This adds a condition to your permission that only applies when your function URL's `AuthType` matches the specified `FunctionUrlAuthType` . For more information about the `AuthType` parameter, see [Security and auth model for Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) .\n\nThis resource adds a statement to a resource-based permission policy for the function. For more information about function policies, see [Lambda Function Policies](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::Permission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnPermission = new lambda.CfnPermission(this, 'MyCfnPermission', {\n  action: 'action',\n  functionName: 'functionName',\n  principal: 'principal',\n\n  // the properties below are optional\n  eventSourceToken: 'eventSourceToken',\n  functionUrlAuthType: 'functionUrlAuthType',\n  principalOrgId: 'principalOrgId',\n  sourceAccount: 'sourceAccount',\n  sourceArn: 'sourceArn',\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::Permission`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 4976
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnPermissionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4880
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4998
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5016
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPermission",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4884
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5003
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-action"
            },
            "remarks": "For example, `lambda:InvokeFunction` or `lambda:GetFunction` .",
            "stability": "external",
            "summary": "The action that the principal can use on the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4910
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionname"
            },
            "remarks": "**Name formats** - *Function name* – `my-function` (name-only), `my-function:v1` (with alias).\n- *Function ARN* – `arn:aws:lambda:us-west-2:123456789012:function:my-function` .\n- *Partial ARN* – `123456789012:function:my-function` .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function, version, or alias."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4923
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principal"
            },
            "remarks": "If you specify a service, use `SourceArn` or `SourceAccount` to limit who can invoke the function through that service.",
            "stability": "external",
            "summary": "The AWS service or AWS account that invokes the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4930
          },
          "name": "principal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-eventsourcetoken"
            },
            "stability": "external",
            "summary": "For Alexa Smart Home functions, a token that the invoker must supply."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4937
          },
          "name": "eventSourceToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionurlauthtype"
            },
            "remarks": "Set to `AWS_IAM` if you want to restrict access to authenticated users only. Set to `NONE` if you want to bypass IAM authentication to create a public endpoint. For more information, see [Security and auth model for Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) .",
            "stability": "external",
            "summary": "The type of authentication that your function URL uses."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4944
          },
          "name": "functionUrlAuthType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principalorgid"
            },
            "remarks": "Use this to grant permissions to all the AWS accounts under this organization.",
            "stability": "external",
            "summary": "The identifier for your organization in AWS Organizations ."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4951
          },
          "name": "principalOrgId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount"
            },
            "remarks": "Use this together with `SourceArn` to ensure that the specified account owns the resource. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.",
            "stability": "external",
            "summary": "For AWS service , the ID of the AWS account that owns the resource."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4958
          },
          "name": "sourceAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourcearn"
            },
            "remarks": "For example, an Amazon S3 bucket or Amazon SNS topic.\n\nNote that Lambda configures the comparison using the `StringLike` operator.",
            "stability": "external",
            "summary": "For AWS services , the ARN of the AWS resource that invokes the function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4967
          },
          "name": "sourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnPermission"
    },
    "@aws-cdk/aws-lambda.CfnPermissionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnPermissionProps: lambda.CfnPermissionProps = {\n  action: 'action',\n  functionName: 'functionName',\n  principal: 'principal',\n\n  // the properties below are optional\n  eventSourceToken: 'eventSourceToken',\n  functionUrlAuthType: 'functionUrlAuthType',\n  principalOrgId: 'principalOrgId',\n  sourceAccount: 'sourceAccount',\n  sourceArn: 'sourceArn',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnPermissionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 4728
      },
      "name": "CfnPermissionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-action"
            },
            "remarks": "For example, `lambda:InvokeFunction` or `lambda:GetFunction` .",
            "stability": "external",
            "summary": "The action that the principal can use on the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4735
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionname"
            },
            "remarks": "**Name formats** - *Function name* – `my-function` (name-only), `my-function:v1` (with alias).\n- *Function ARN* – `arn:aws:lambda:us-west-2:123456789012:function:my-function` .\n- *Partial ARN* – `123456789012:function:my-function` .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function, version, or alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4748
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principal"
            },
            "remarks": "If you specify a service, use `SourceArn` or `SourceAccount` to limit who can invoke the function through that service.",
            "stability": "external",
            "summary": "The AWS service or AWS account that invokes the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4755
          },
          "name": "principal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-eventsourcetoken"
            },
            "stability": "external",
            "summary": "For Alexa Smart Home functions, a token that the invoker must supply."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4762
          },
          "name": "eventSourceToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionurlauthtype"
            },
            "remarks": "Set to `AWS_IAM` if you want to restrict access to authenticated users only. Set to `NONE` if you want to bypass IAM authentication to create a public endpoint. For more information, see [Security and auth model for Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) .",
            "stability": "external",
            "summary": "The type of authentication that your function URL uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4769
          },
          "name": "functionUrlAuthType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principalorgid"
            },
            "remarks": "Use this to grant permissions to all the AWS accounts under this organization.",
            "stability": "external",
            "summary": "The identifier for your organization in AWS Organizations ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4776
          },
          "name": "principalOrgId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount"
            },
            "remarks": "Use this together with `SourceArn` to ensure that the specified account owns the resource. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.",
            "stability": "external",
            "summary": "For AWS service , the ID of the AWS account that owns the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4783
          },
          "name": "sourceAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourcearn"
            },
            "remarks": "For example, an Amazon S3 bucket or Amazon SNS topic.\n\nNote that Lambda configures the comparison using the `StringLike` operator.",
            "stability": "external",
            "summary": "For AWS services , the ARN of the AWS resource that invokes the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 4792
          },
          "name": "sourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnPermissionProps"
    },
    "@aws-cdk/aws-lambda.CfnUrl": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::Url",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::Url` resource creates a function URL with the specified configuration parameters. A [function URL](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html) is a dedicated HTTP(S) endpoint that you can use to invoke your function.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::Url`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnUrl = new lambda.CfnUrl(this, 'MyCfnUrl', {\n  authType: 'authType',\n  targetFunctionArn: 'targetFunctionArn',\n\n  // the properties below are optional\n  cors: {\n    allowCredentials: false,\n    allowHeaders: ['allowHeaders'],\n    allowMethods: ['allowMethods'],\n    allowOrigins: ['allowOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAge: 123,\n  },\n  invokeMode: 'invokeMode',\n  qualifier: 'qualifier',\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnUrl",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::Url`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 5233
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnUrlProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 5145
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5253
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5268
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnUrl",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5149
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5174
          },
          "name": "attrFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionUrl"
            },
            "stability": "external",
            "summary": "The HTTP URL endpoint for your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5180
          },
          "name": "attrFunctionUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5258
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-authtype"
            },
            "remarks": "Set to `AWS_IAM` if you want to restrict access to authenticated users only. Set to `NONE` if you want to bypass IAM authentication to create a public endpoint. For more information, see [Security and auth model for Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) .",
            "stability": "external",
            "summary": "The type of authentication that your function URL uses."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5187
          },
          "name": "authType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-targetfunctionarn"
            },
            "remarks": "**Name formats** - *Function name* - `my-function` .\n- *Function ARN* - `arn:aws:lambda:us-west-2:123456789012:function:my-function` .\n- *Partial ARN* - `123456789012:function:my-function` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5200
          },
          "name": "targetFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-cors"
            },
            "stability": "external",
            "summary": "The [Cross-Origin Resource Sharing (CORS)](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for your function URL."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5207
          },
          "name": "cors",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnUrl.CorsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-invokemode"
            },
            "remarks": "- `BUFFERED` – This is the default option. Lambda invokes your function using the `Invoke` API operation. Invocation results are available when the payload is complete. The maximum payload size is 6 MB.\n- `RESPONSE_STREAM` – Your function streams payload results as they become available. Lambda invokes your function using the `InvokeWithResponseStream` API operation. The maximum response payload size is 20 MB, however, you can [request a quota increase](https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html) .",
            "stability": "external",
            "summary": "Use one of the following options:."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5217
          },
          "name": "invokeMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-qualifier"
            },
            "stability": "external",
            "summary": "The alias name."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5224
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnUrl"
    },
    "@aws-cdk/aws-lambda.CfnUrl.CorsProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The [Cross-Origin Resource Sharing (CORS)](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for your function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst corsProperty: lambda.CfnUrl.CorsProperty = {\n  allowCredentials: false,\n  allowHeaders: ['allowHeaders'],\n  allowMethods: ['allowMethods'],\n  allowOrigins: ['allowOrigins'],\n  exposeHeaders: ['exposeHeaders'],\n  maxAge: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnUrl.CorsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 5282
      },
      "name": "CorsProperty",
      "namespace": "CfnUrl",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html#cfn-lambda-url-cors-allowcredentials"
            },
            "remarks": "The default is `false` .",
            "stability": "external",
            "summary": "Whether you want to allow cookies or other credentials in requests to your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5288
          },
          "name": "allowCredentials",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html#cfn-lambda-url-cors-allowheaders"
            },
            "remarks": "For example: `Date` , `Keep-Alive` , `X-Custom-Header` .",
            "stability": "external",
            "summary": "The HTTP headers that origins can include in requests to your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5294
          },
          "name": "allowHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html#cfn-lambda-url-cors-allowmethods"
            },
            "remarks": "For example: `GET` , `POST` , `DELETE` , or the wildcard character ( `*` ).",
            "stability": "external",
            "summary": "The HTTP methods that are allowed when calling your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5300
          },
          "name": "allowMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html#cfn-lambda-url-cors-alloworigins"
            },
            "remarks": "You can list any number of specific origins, separated by a comma. For example: `https://www.example.com` , `http://localhost:60905` .\n\nAlternatively, you can grant access to all origins with the wildcard character ( `*` ).",
            "stability": "external",
            "summary": "The origins that can access your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5308
          },
          "name": "allowOrigins",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html#cfn-lambda-url-cors-exposeheaders"
            },
            "remarks": "For example: `Date` , `Keep-Alive` , `X-Custom-Header` .",
            "stability": "external",
            "summary": "The HTTP headers in your function response that you want to expose to origins that call your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5314
          },
          "name": "exposeHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-url-cors.html#cfn-lambda-url-cors-maxage"
            },
            "remarks": "By default, this is set to `0` , which means the browser will not cache results.",
            "stability": "external",
            "summary": "The maximum amount of time, in seconds, that browsers can cache results of a preflight request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5320
          },
          "name": "maxAge",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnUrl.CorsProperty"
    },
    "@aws-cdk/aws-lambda.CfnUrlProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnUrl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnUrlProps: lambda.CfnUrlProps = {\n  authType: 'authType',\n  targetFunctionArn: 'targetFunctionArn',\n\n  // the properties below are optional\n  cors: {\n    allowCredentials: false,\n    allowHeaders: ['allowHeaders'],\n    allowMethods: ['allowMethods'],\n    allowOrigins: ['allowOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAge: 123,\n  },\n  invokeMode: 'invokeMode',\n  qualifier: 'qualifier',\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnUrlProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 5029
      },
      "name": "CfnUrlProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-authtype"
            },
            "remarks": "Set to `AWS_IAM` if you want to restrict access to authenticated users only. Set to `NONE` if you want to bypass IAM authentication to create a public endpoint. For more information, see [Security and auth model for Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) .",
            "stability": "external",
            "summary": "The type of authentication that your function URL uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5036
          },
          "name": "authType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-targetfunctionarn"
            },
            "remarks": "**Name formats** - *Function name* - `my-function` .\n- *Function ARN* - `arn:aws:lambda:us-west-2:123456789012:function:my-function` .\n- *Partial ARN* - `123456789012:function:my-function` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5049
          },
          "name": "targetFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-cors"
            },
            "stability": "external",
            "summary": "The [Cross-Origin Resource Sharing (CORS)](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5056
          },
          "name": "cors",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnUrl.CorsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-invokemode"
            },
            "remarks": "- `BUFFERED` – This is the default option. Lambda invokes your function using the `Invoke` API operation. Invocation results are available when the payload is complete. The maximum payload size is 6 MB.\n- `RESPONSE_STREAM` – Your function streams payload results as they become available. Lambda invokes your function using the `InvokeWithResponseStream` API operation. The maximum response payload size is 20 MB, however, you can [request a quota increase](https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html) .",
            "stability": "external",
            "summary": "Use one of the following options:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5066
          },
          "name": "invokeMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-qualifier"
            },
            "stability": "external",
            "summary": "The alias name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5073
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnUrlProps"
    },
    "@aws-cdk/aws-lambda.CfnVersion": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Lambda::Version",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Lambda::Version` resource creates a [version](https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html) from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn't change.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Lambda::Version`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnVersion = new lambda.CfnVersion(this, 'MyCfnVersion', {\n  functionName: 'functionName',\n\n  // the properties below are optional\n  codeSha256: 'codeSha256',\n  description: 'description',\n  provisionedConcurrencyConfig: {\n    provisionedConcurrentExecutions: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnVersion",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Lambda::Version`."
        },
        "locationInModule": {
          "filename": "lib/lambda.generated.ts",
          "line": 5569
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 5497
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5586
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5600
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5501
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Version"
            },
            "stability": "external",
            "summary": "The version number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5526
          },
          "name": "attrVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5591
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-functionname"
            },
            "remarks": "**Name formats** - *Function name* - `MyFunction` .\n- *Function ARN* - `arn:aws:lambda:us-west-2:123456789012:function:MyFunction` .\n- *Partial ARN* - `123456789012:function:MyFunction` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5539
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-codesha256"
            },
            "remarks": "Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.",
            "stability": "external",
            "summary": "Only publish a version if the hash value matches the value that's specified."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5546
          },
          "name": "codeSha256",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-description"
            },
            "remarks": "Updates are not supported for this property.",
            "stability": "external",
            "summary": "A description for the version to override the description in the function configuration."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5553
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-provisionedconcurrencyconfig"
            },
            "remarks": "Updates are not supported for this property.",
            "stability": "external",
            "summary": "Specifies a provisioned concurrency configuration for a function's version."
          },
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5560
          },
          "name": "provisionedConcurrencyConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnVersion.ProvisionedConcurrencyConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnVersion"
    },
    "@aws-cdk/aws-lambda.CfnVersion.ProvisionedConcurrencyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-version-provisionedconcurrencyconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A [provisioned concurrency](https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html) configuration for a function's version.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst provisionedConcurrencyConfigurationProperty: lambda.CfnVersion.ProvisionedConcurrencyConfigurationProperty = {\n  provisionedConcurrentExecutions: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnVersion.ProvisionedConcurrencyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 5614
      },
      "name": "ProvisionedConcurrencyConfigurationProperty",
      "namespace": "CfnVersion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-version-provisionedconcurrencyconfiguration.html#cfn-lambda-version-provisionedconcurrencyconfiguration-provisionedconcurrentexecutions"
            },
            "stability": "external",
            "summary": "The amount of provisioned concurrency to allocate for the version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5620
          },
          "name": "provisionedConcurrentExecutions",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnVersion.ProvisionedConcurrencyConfigurationProperty"
    },
    "@aws-cdk/aws-lambda.CfnVersionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVersion`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst cfnVersionProps: lambda.CfnVersionProps = {\n  functionName: 'functionName',\n\n  // the properties below are optional\n  codeSha256: 'codeSha256',\n  description: 'description',\n  provisionedConcurrencyConfig: {\n    provisionedConcurrentExecutions: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.CfnVersionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda.generated.ts",
        "line": 5395
      },
      "name": "CfnVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-functionname"
            },
            "remarks": "**Name formats** - *Function name* - `MyFunction` .\n- *Function ARN* - `arn:aws:lambda:us-west-2:123456789012:function:MyFunction` .\n- *Partial ARN* - `123456789012:function:MyFunction` .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
            "stability": "external",
            "summary": "The name of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5408
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-codesha256"
            },
            "remarks": "Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.",
            "stability": "external",
            "summary": "Only publish a version if the hash value matches the value that's specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5415
          },
          "name": "codeSha256",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-description"
            },
            "remarks": "Updates are not supported for this property.",
            "stability": "external",
            "summary": "A description for the version to override the description in the function configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5422
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-provisionedconcurrencyconfig"
            },
            "remarks": "Updates are not supported for this property.",
            "stability": "external",
            "summary": "Specifies a provisioned concurrency configuration for a function's version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda.generated.ts",
            "line": 5429
          },
          "name": "provisionedConcurrencyConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.CfnVersion.ProvisionedConcurrencyConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/lambda.generated:CfnVersionProps"
    },
    "@aws-cdk/aws-lambda.Code": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Represents the Lambda Handler Code.",
        "example": "import * as signer from '@aws-cdk/aws-signer';\n\nconst signingProfile = new signer.SigningProfile(this, 'SigningProfile', {\n  platform: signer.Platform.AWS_LAMBDA_SHA384_ECDSA,\n});\n\nconst codeSigningConfig = new lambda.CodeSigningConfig(this, 'CodeSigningConfig', {\n  signingProfiles: [signingProfile],\n});\n\nnew lambda.Function(this, 'Function', {\n  codeSigningConfig,\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Code",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "deprecated": "use `fromAsset`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 90
          },
          "name": "asset",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AssetCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `fromBucket`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 30
          },
          "name": "bucket",
          "parameters": [
            {
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "objectVersion",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.S3Code"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `fromCfnParameters`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 108
          },
          "name": "cfnParameters",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.CfnParametersCodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnParametersCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Loads the function code from a local disk path."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 56
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "Either a directory with the Lambda code bundle or a .zip file."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.AssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AssetCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an ECR image from the specified asset and bind it as the Lambda code."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 126
          },
          "name": "fromAssetImage",
          "parameters": [
            {
              "docs": {
                "summary": "the directory from which the asset must be created."
              },
              "name": "directory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "properties to further configure the selected image."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AssetImageCodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AssetImageCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Lambda handler code as an S3 object."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 22
          },
          "name": "fromBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The S3 bucket."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "The object key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Optional S3 object version."
              },
              "name": "objectVersion",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.S3Code"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new instance of `CfnParametersCode`",
            "stability": "stable",
            "summary": "Creates a new Lambda source defined using CloudFormation parameters."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 100
          },
          "name": "fromCfnParameters",
          "parameters": [
            {
              "docs": {
                "summary": "optional construction properties of {@link CfnParametersCode}."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.CfnParametersCodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CfnParametersCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
            "stability": "stable",
            "summary": "Loads the function code from an asset created by a Docker build."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 69
          },
          "name": "fromDockerBuild",
          "parameters": [
            {
              "docs": {
                "summary": "The path to the directory containing the Docker file."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Docker build options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.DockerBuildAssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AssetCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an existing ECR image as the Lambda code."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 117
          },
          "name": "fromEcrImage",
          "parameters": [
            {
              "docs": {
                "summary": "the ECR repository that the image is in."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "properties to further configure the selected image."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EcrImageCodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EcrImageCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "`LambdaInlineCode` with inline code.",
            "stability": "stable",
            "summary": "Inline code for Lambda handler."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 39
          },
          "name": "fromInline",
          "parameters": [
            {
              "docs": {
                "summary": "The actual handler code (limited to 4KiB)."
              },
              "name": "code",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.InlineCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `fromInline`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 47
          },
          "name": "inline",
          "parameters": [
            {
              "name": "code",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.InlineCode"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 145
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "remarks": "Don't be smart about trying to down-cast or\nassume it's initialized. You may just use it as a construct scope.",
                "summary": "The binding scope."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
            "stability": "stable",
            "summary": "Called after the CFN function resource has been created to allow the code class to bind to it."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 152
          },
          "name": "bindToResource",
          "parameters": [
            {
              "name": "_resource",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            },
            {
              "name": "_options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.ResourceBindOptions"
              }
            }
          ]
        }
      ],
      "name": "Code",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "deprecated": "this value is ignored since inline is now determined based on the\nthe `inlineCode` field of `CodeConfig` returned from `bind()`.",
            "stability": "deprecated",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 136
          },
          "name": "isInline",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/code:Code"
    },
    "@aws-cdk/aws-lambda.CodeConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Result of binding `Code` into a `Function`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst codeConfig: lambda.CodeConfig = {\n  image: {\n    imageUri: 'imageUri',\n\n    // the properties below are optional\n    cmd: ['cmd'],\n    entrypoint: ['entrypoint'],\n    workingDirectory: 'workingDirectory',\n  },\n  inlineCode: 'inlineCode',\n  s3Location: {\n    bucketName: 'bucketName',\n    objectKey: 'objectKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.CodeConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 160
      },
      "name": "CodeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- code is not an ECR container image",
            "stability": "stable",
            "summary": "Docker image configuration (mutually exclusive with `s3Location` and `inlineCode`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 177
          },
          "name": "image",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.CodeImageConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- code is not inline code",
            "stability": "stable",
            "summary": "Inline code (mutually exclusive with `s3Location` and `image`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 171
          },
          "name": "inlineCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- code is not an s3 location",
            "stability": "stable",
            "summary": "The location of the code in S3 (mutually exclusive with `inlineCode` and `image`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 165
          },
          "name": "s3Location",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.Location"
          }
        }
      ],
      "symbolId": "lib/code:CodeConfig"
    },
    "@aws-cdk/aws-lambda.CodeImageConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Result of the bind when an ECR image is used.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst codeImageConfig: lambda.CodeImageConfig = {\n  imageUri: 'imageUri',\n\n  // the properties below are optional\n  cmd: ['cmd'],\n  entrypoint: ['entrypoint'],\n  workingDirectory: 'workingDirectory',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.CodeImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 183
      },
      "name": "CodeImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "URI to the Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 187
          },
          "name": "imageUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the CMD specified in the docker image or Dockerfile.",
            "remarks": "This needs to be in the 'exec form', viz., `[ 'executable', 'param1', 'param2' ]`.",
            "see": "https://docs.docker.com/engine/reference/builder/#cmd",
            "stability": "stable",
            "summary": "Specify or override the CMD on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 195
          },
          "name": "cmd",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the ENTRYPOINT in the docker image or Dockerfile.",
            "remarks": "An ENTRYPOINT allows you to configure a container that will run as an executable.\nThis needs to be in the 'exec form', viz., `[ 'executable', 'param1', 'param2' ]`.",
            "see": "https://docs.docker.com/engine/reference/builder/#entrypoint",
            "stability": "stable",
            "summary": "Specify or override the ENTRYPOINT on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 204
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the WORKDIR in the docker image or Dockerfile.",
            "remarks": "A WORKDIR allows you to configure the working directory the container will use.",
            "see": "https://docs.docker.com/engine/reference/builder/#workdir",
            "stability": "stable",
            "summary": "Specify or override the WORKDIR on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 212
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:CodeImageConfig"
    },
    "@aws-cdk/aws-lambda.CodeSigningConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Lambda::CodeSigningConfig",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Defines a Code Signing Config.",
        "example": "import * as signer from '@aws-cdk/aws-signer';\n\nconst signingProfile = new signer.SigningProfile(this, 'SigningProfile', {\n  platform: signer.Platform.AWS_LAMBDA_SHA384_ECDSA,\n});\n\nconst codeSigningConfig = new lambda.CodeSigningConfig(this, 'CodeSigningConfig', {\n  signingProfiles: [signingProfile],\n});\n\nnew lambda.Function(this, 'Function', {\n  codeSigningConfig,\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.CodeSigningConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code-signing-config.ts",
          "line": 101
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeSigningConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.ICodeSigningConfig"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code-signing-config.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a Signing Profile construct that represents an external Signing Profile."
          },
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 81
          },
          "name": "fromCodeSigningConfigArn",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The ARN of code signing config."
              },
              "name": "codeSigningConfigArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.ICodeSigningConfig"
            }
          },
          "static": true
        }
      ],
      "name": "CodeSigningConfig",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of Code Signing Config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 98
          },
          "name": "codeSigningConfigArn",
          "overrides": "@aws-cdk/aws-lambda.ICodeSigningConfig",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The id of Code Signing Config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 99
          },
          "name": "codeSigningConfigId",
          "overrides": "@aws-cdk/aws-lambda.ICodeSigningConfig",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code-signing-config:CodeSigningConfig"
    },
    "@aws-cdk/aws-lambda.CodeSigningConfigProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a Code Signing Config object.",
        "example": "import * as signer from '@aws-cdk/aws-signer';\n\nconst signingProfile = new signer.SigningProfile(this, 'SigningProfile', {\n  platform: signer.Platform.AWS_LAMBDA_SHA384_ECDSA,\n});\n\nconst codeSigningConfig = new lambda.CodeSigningConfig(this, 'CodeSigningConfig', {\n  signingProfiles: [signingProfile],\n});\n\nnew lambda.Function(this, 'Function', {\n  codeSigningConfig,\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.CodeSigningConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code-signing-config.ts",
        "line": 42
      },
      "name": "CodeSigningConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of signing profiles that defines a trusted user who can sign a code package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 47
          },
          "name": "signingProfiles",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-signer.ISigningProfile"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "Code signing configuration description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 65
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "UntrustedArtifactOnDeployment.WARN",
            "remarks": "If you set the policy to Enforce, Lambda blocks the deployment request\nif signature validation checks fail.\nIf you set the policy to Warn, Lambda allows the deployment and\ncreates a CloudWatch log.",
            "stability": "stable",
            "summary": "Code signing configuration policy for deployment validation failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 58
          },
          "name": "untrustedArtifactOnDeployment",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.UntrustedArtifactOnDeployment"
          }
        }
      ],
      "symbolId": "lib/code-signing-config:CodeSigningConfigProps"
    },
    "@aws-cdk/aws-lambda.DestinationConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A destination configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst destinationConfig: lambda.DestinationConfig = {\n  destination: 'destination',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DestinationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 11
      },
      "name": "DestinationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the destination resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 15
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/destination:DestinationConfig"
    },
    "@aws-cdk/aws-lambda.DestinationOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when binding a destination to a function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst destinationOptions: lambda.DestinationOptions = {\n  type: lambda.DestinationType.FAILURE,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DestinationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 36
      },
      "name": "DestinationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The destination type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 40
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.DestinationType"
          }
        }
      ],
      "symbolId": "lib/destination:DestinationOptions"
    },
    "@aws-cdk/aws-lambda.DestinationType": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "The type of destination."
      },
      "fqn": "@aws-cdk/aws-lambda.DestinationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 21
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Failure."
          },
          "name": "FAILURE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Success."
          },
          "name": "SUCCESS"
        }
      ],
      "name": "DestinationType",
      "symbolId": "lib/destination:DestinationType"
    },
    "@aws-cdk/aws-lambda.DlqDestinationConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A destination configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst dlqDestinationConfig: lambda.DlqDestinationConfig = {\n  destination: 'destination',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DlqDestinationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dlq.ts",
        "line": 7
      },
      "name": "DlqDestinationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the destination resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dlq.ts",
            "line": 11
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/dlq:DlqDestinationConfig"
    },
    "@aws-cdk/aws-lambda.DockerBuildAssetOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when creating an asset from a Docker build.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst dockerBuildAssetOptions: lambda.DockerBuildAssetOptions = {\n  buildArgs: {\n    buildArgsKey: 'buildArgs',\n  },\n  file: 'file',\n  imagePath: 'imagePath',\n  outputPath: 'outputPath',\n  platform: 'platform',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DockerBuildAssetOptions",
      "interfaces": [
        "@aws-cdk/core.DockerBuildOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 571
      },
      "name": "DockerBuildAssetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "/asset",
            "stability": "stable",
            "summary": "The path in the Docker image where the asset is located after the build operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 578
          },
          "name": "imagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a unique temporary directory in the system temp directory",
            "stability": "stable",
            "summary": "The path on the local filesystem where the asset will be copied using `docker cp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 586
          },
          "name": "outputPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:DockerBuildAssetOptions"
    },
    "@aws-cdk/aws-lambda.DockerImageCode": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Code property for the DockerImageFunction construct.",
        "example": "new lambda.DockerImageFunction(this, 'AssetFunction', {\n  code: lambda.DockerImageCode.fromImageAsset(path.join(__dirname, 'docker-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DockerImageCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/image-function.ts",
        "line": 23
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an existing ECR image as the Lambda code."
          },
          "locationInModule": {
            "filename": "lib/image-function.ts",
            "line": 29
          },
          "name": "fromEcr",
          "parameters": [
            {
              "docs": {
                "summary": "the ECR repository that the image is in."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "properties to further configure the selected image."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EcrImageCodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.DockerImageCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an ECR image from the specified asset and bind it as the Lambda code."
          },
          "locationInModule": {
            "filename": "lib/image-function.ts",
            "line": 42
          },
          "name": "fromImageAsset",
          "parameters": [
            {
              "docs": {
                "summary": "the directory from which the asset must be created."
              },
              "name": "directory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "properties to further configure the selected image."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AssetImageCodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.DockerImageCode"
            }
          },
          "static": true
        }
      ],
      "name": "DockerImageCode",
      "symbolId": "lib/image-function:DockerImageCode"
    },
    "@aws-cdk/aws-lambda.DockerImageFunction": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Function",
      "docs": {
        "stability": "stable",
        "summary": "Create a lambda function where the handler is a docker image.",
        "example": "new lambda.DockerImageFunction(this, 'AssetFunction', {\n  code: lambda.DockerImageCode.fromImageAsset(path.join(__dirname, 'docker-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DockerImageFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/image-function.ts",
          "line": 61
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.DockerImageFunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/image-function.ts",
        "line": 60
      },
      "name": "DockerImageFunction",
      "symbolId": "lib/image-function:DockerImageFunction"
    },
    "@aws-cdk/aws-lambda.DockerImageFunctionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to configure a new DockerImageFunction construct.",
        "example": "new lambda.DockerImageFunction(this, 'AssetFunction', {\n  code: lambda.DockerImageCode.fromImageAsset(path.join(__dirname, 'docker-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.DockerImageFunctionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.FunctionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/image-function.ts",
        "line": 11
      },
      "name": "DockerImageFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text.",
            "stability": "stable",
            "summary": "The source code of your Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/image-function.ts",
            "line": 17
          },
          "name": "code",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.DockerImageCode"
          }
        }
      ],
      "symbolId": "lib/image-function:DockerImageFunctionProps"
    },
    "@aws-cdk/aws-lambda.EcrImageCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Code",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Docker image in ECR that can be bound as Lambda Code.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const repository: ecr.Repository;\nconst ecrImageCode = new lambda.EcrImageCode(repository, /* all optional props */ {\n  cmd: ['cmd'],\n  entrypoint: ['entrypoint'],\n  tag: 'tag',\n  tagOrDigest: 'tagOrDigest',\n  workingDirectory: 'workingDirectory',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EcrImageCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 474
        },
        "parameters": [
          {
            "name": "repository",
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EcrImageCodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 471
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 478
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        }
      ],
      "name": "EcrImageCode",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 472
          },
          "name": "isInline",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/code:EcrImageCode"
    },
    "@aws-cdk/aws-lambda.EcrImageCodeProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to initialize a new EcrImageCode.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst ecrImageCodeProps: lambda.EcrImageCodeProps = {\n  cmd: ['cmd'],\n  entrypoint: ['entrypoint'],\n  tag: 'tag',\n  tagOrDigest: 'tagOrDigest',\n  workingDirectory: 'workingDirectory',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EcrImageCodeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 428
      },
      "name": "EcrImageCodeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use the CMD specified in the docker image or Dockerfile.",
            "remarks": "This needs to be in the 'exec form', viz., `[ 'executable', 'param1', 'param2' ]`.",
            "see": "https://docs.docker.com/engine/reference/builder/#cmd",
            "stability": "stable",
            "summary": "Specify or override the CMD on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 435
          },
          "name": "cmd",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the ENTRYPOINT in the docker image or Dockerfile.",
            "remarks": "An ENTRYPOINT allows you to configure a container that will run as an executable.\nThis needs to be in the 'exec form', viz., `[ 'executable', 'param1', 'param2' ]`.",
            "see": "https://docs.docker.com/engine/reference/builder/#entrypoint",
            "stability": "stable",
            "summary": "Specify or override the ENTRYPOINT on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 444
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'latest'",
            "deprecated": "use `tagOrDigest`",
            "stability": "deprecated",
            "summary": "The image tag to use when pulling the image from ECR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 459
          },
          "name": "tag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'latest'",
            "stability": "stable",
            "summary": "The image tag or digest to use when pulling the image from ECR (digests must start with `sha256:`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 465
          },
          "name": "tagOrDigest",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the WORKDIR in the docker image or Dockerfile.",
            "remarks": "A WORKDIR allows you to configure the working directory the container will use.",
            "see": "https://docs.docker.com/engine/reference/builder/#workdir",
            "stability": "stable",
            "summary": "Specify or override the WORKDIR on the specified Docker image or Dockerfile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 452
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:EcrImageCodeProps"
    },
    "@aws-cdk/aws-lambda.EnvironmentOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Environment variables options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst environmentOptions: lambda.EnvironmentOptions = {\n  removeInEdge: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EnvironmentOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 1223
      },
      "name": "EnvironmentOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "Edge": "will throw"
            },
            "default": "false - using the function in Lambda",
            "remarks": "If not set, an error will be thrown.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-requirements-limits.html#lambda-requirements-lambda-function-configuration",
            "stability": "stable",
            "summary": "When used in Lambda@Edge via edgeArn() API, these environment variables will be removed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 1231
          },
          "name": "removeInEdge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/function:EnvironmentOptions"
    },
    "@aws-cdk/aws-lambda.EventInvokeConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "By default, Lambda retries an asynchronous invocation twice if the function\nreturns an error. It retains events in a queue for up to six hours. When an\nevent fails all processing attempts or stays in the asynchronous invocation\nqueue for too long, Lambda discards it.",
        "stability": "stable",
        "summary": "Configure options for asynchronous invocation on a version or an alias.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const destination: lambda.IDestination;\ndeclare const function_: lambda.Function;\nconst eventInvokeConfig = new lambda.EventInvokeConfig(this, 'MyEventInvokeConfig', {\n  function: function_,\n\n  // the properties below are optional\n  maxEventAge: cdk.Duration.minutes(30),\n  onFailure: destination,\n  onSuccess: destination,\n  qualifier: 'qualifier',\n  retryAttempts: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EventInvokeConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/event-invoke-config.ts",
          "line": 73
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/event-invoke-config.ts",
        "line": 72
      },
      "name": "EventInvokeConfig",
      "symbolId": "lib/event-invoke-config:EventInvokeConfig"
    },
    "@aws-cdk/aws-lambda.EventInvokeConfigOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to add an EventInvokeConfig to a function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const destination: lambda.IDestination;\nconst eventInvokeConfigOptions: lambda.EventInvokeConfigOptions = {\n  maxEventAge: cdk.Duration.minutes(30),\n  onFailure: destination,\n  onSuccess: destination,\n  retryAttempts: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-invoke-config.ts",
        "line": 10
      },
      "name": "EventInvokeConfigOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.hours(6)",
            "remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
            "stability": "stable",
            "summary": "The maximum age of a request that Lambda sends to a function for processing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-invoke-config.ts",
            "line": 34
          },
          "name": "maxEventAge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no destination",
            "stability": "stable",
            "summary": "The destination for failed invocations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-invoke-config.ts",
            "line": 16
          },
          "name": "onFailure",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IDestination"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no destination",
            "stability": "stable",
            "summary": "The destination for successful invocations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-invoke-config.ts",
            "line": 23
          },
          "name": "onSuccess",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IDestination"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "remarks": "Minimum: 0\nMaximum: 2",
            "stability": "stable",
            "summary": "The maximum number of times to retry when the function returns an error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-invoke-config.ts",
            "line": 44
          },
          "name": "retryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/event-invoke-config:EventInvokeConfigOptions"
    },
    "@aws-cdk/aws-lambda.EventInvokeConfigProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for an EventInvokeConfig.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const destination: lambda.IDestination;\ndeclare const function_: lambda.Function;\nconst eventInvokeConfigProps: lambda.EventInvokeConfigProps = {\n  function: function_,\n\n  // the properties below are optional\n  maxEventAge: cdk.Duration.minutes(30),\n  onFailure: destination,\n  onSuccess: destination,\n  qualifier: 'qualifier',\n  retryAttempts: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-invoke-config.ts",
        "line": 50
      },
      "name": "EventInvokeConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-invoke-config.ts",
            "line": 54
          },
          "name": "function",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- latest version",
            "stability": "stable",
            "summary": "The qualifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-invoke-config.ts",
            "line": 61
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/event-invoke-config:EventInvokeConfigProps"
    },
    "@aws-cdk/aws-lambda.EventSourceMapping": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "Usually, you won't need to define the mapping yourself. This will usually be done by\nevent sources. For example, to add an SQS event source to a function:\n\n    import { SqsEventSource } from '@aws-cdk/aws-lambda-event-sources';\n    lambda.addEventSource(new SqsEventSource(sqs));\n\nThe `SqsEventSource` class will automatically create the mapping, and will also\nmodify the Lambda's execution role so it can consume messages from the queue.",
        "stability": "stable",
        "summary": "Defines a Lambda EventSourceMapping resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const eventSourceDlq: lambda.IEventSourceDlq;\ndeclare const function_: lambda.Function;\ndeclare const sourceAccessConfigurationType: lambda.SourceAccessConfigurationType;\nconst eventSourceMapping = new lambda.EventSourceMapping(this, 'MyEventSourceMapping', {\n  target: function_,\n\n  // the properties below are optional\n  batchSize: 123,\n  bisectBatchOnError: false,\n  enabled: false,\n  eventSourceArn: 'eventSourceArn',\n  kafkaBootstrapServers: ['kafkaBootstrapServers'],\n  kafkaTopic: 'kafkaTopic',\n  maxBatchingWindow: cdk.Duration.minutes(30),\n  maxRecordAge: cdk.Duration.minutes(30),\n  onFailure: eventSourceDlq,\n  parallelizationFactor: 123,\n  reportBatchItemFailures: false,\n  retryAttempts: 123,\n  sourceAccessConfigurations: [{\n    type: sourceAccessConfigurationType,\n    uri: 'uri',\n  }],\n  startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n  tumblingWindow: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EventSourceMapping",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/event-source-mapping.ts",
          "line": 263
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EventSourceMappingProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IEventSourceMapping"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 249
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an event source into this stack from its event source id."
          },
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 254
          },
          "name": "fromEventSourceMappingId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "eventSourceMappingId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IEventSourceMapping"
            }
          },
          "static": true
        }
      ],
      "name": "EventSourceMapping",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The identifier for this EventSourceMapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 261
          },
          "name": "eventSourceMappingId",
          "overrides": "@aws-cdk/aws-lambda.IEventSourceMapping",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/event-source-mapping:EventSourceMapping"
    },
    "@aws-cdk/aws-lambda.EventSourceMappingOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const eventSourceDlq: lambda.IEventSourceDlq;\ndeclare const sourceAccessConfigurationType: lambda.SourceAccessConfigurationType;\nconst eventSourceMappingOptions: lambda.EventSourceMappingOptions = {\n  batchSize: 123,\n  bisectBatchOnError: false,\n  enabled: false,\n  eventSourceArn: 'eventSourceArn',\n  kafkaBootstrapServers: ['kafkaBootstrapServers'],\n  kafkaTopic: 'kafkaTopic',\n  maxBatchingWindow: cdk.Duration.minutes(30),\n  maxRecordAge: cdk.Duration.minutes(30),\n  onFailure: eventSourceDlq,\n  parallelizationFactor: 123,\n  reportBatchItemFailures: false,\n  retryAttempts: 123,\n  sourceAccessConfigurations: [{\n    type: sourceAccessConfigurationType,\n    uri: 'uri',\n  }],\n  startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n  tumblingWindow: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EventSourceMappingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 77
      },
      "name": "EventSourceMappingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon Kinesis, Amazon DynamoDB, and Amazon MSK is 100 records.\nThe default for Amazon SQS is 10 messages. For standard SQS queues, the maximum is 10,000. For FIFO SQS queues, the maximum is 10.",
            "remarks": "Your function receives an\nevent with all the retrieved records.\n\nValid Range: Minimum value of 1. Maximum value of 10000.",
            "stability": "stable",
            "summary": "The largest number of records that AWS Lambda will retrieve from your event source at the time of invoking your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 96
          },
          "name": "batchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "If the function returns an error, split the batch in two and retry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 103
          },
          "name": "bisectBatchOnError",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Set to false to disable the event source upon creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 117
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not set if using a self managed Kafka cluster, throws an error otherwise",
            "remarks": "Any record added to\nthis stream can invoke the Lambda function.",
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 84
          },
          "name": "eventSourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "They are in the format `abc.example.com:9096`.",
            "stability": "stable",
            "summary": "A list of host and port pairs that are the addresses of the Kafka brokers in a self managed \"bootstrap\" Kafka cluster that a Kafka client connects to initially to bootstrap itself."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 204
          },
          "name": "kafkaBootstrapServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no topic",
            "stability": "stable",
            "summary": "The name of the Kafka topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 184
          },
          "name": "kafkaTopic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "remarks": "Maximum of Duration.minutes(5)",
            "stability": "stable",
            "summary": "The maximum amount of time to gather records before invoking the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 144
          },
          "name": "maxBatchingWindow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- infinite or until the record expires.",
            "remarks": "Valid Range:\n* Minimum value of 60 seconds\n* Maximum value of 7 days",
            "stability": "stable",
            "summary": "The maximum age of a record that Lambda sends to a function for processing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 154
          },
          "name": "maxRecordAge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "discarded records are ignored",
            "stability": "stable",
            "summary": "An Amazon SQS queue or Amazon SNS topic destination for discarded records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 110
          },
          "name": "onFailure",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IEventSourceDlq"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Valid Range:\n* Minimum value of 1\n* Maximum value of 10",
            "stability": "stable",
            "summary": "The number of batches to process from each shard concurrently."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 177
          },
          "name": "parallelizationFactor",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-batchfailurereporting",
            "stability": "stable",
            "summary": "Allow functions to return partially successful responses for a batch of records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 136
          },
          "name": "reportBatchItemFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- infinite or until the record expires.",
            "remarks": "Set to `undefined` if you want lambda to keep retrying infinitely or until\nthe record expires.\n\nValid Range:\n* Minimum value of 0\n* Maximum value of 10000",
            "stability": "stable",
            "summary": "The maximum number of times to retry when the function returns an error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 167
          },
          "name": "retryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-sourceaccessconfiguration.html",
            "stability": "stable",
            "summary": "Specific settings like the authentication protocol or the VPC components to secure access to your event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 212
          },
          "name": "sourceAccessConfigurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.SourceAccessConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources.",
            "see": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType",
            "stability": "stable",
            "summary": "The position in the DynamoDB, Kinesis or MSK stream where AWS Lambda should start reading."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 127
          },
          "name": "startingPosition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.StartingPosition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "see": "https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-windows\n\nValid Range: 0 - 15 minutes",
            "stability": "stable",
            "summary": "The size of the tumbling windows to group records sent to DynamoDB or Kinesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 195
          },
          "name": "tumblingWindow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/event-source-mapping:EventSourceMappingOptions"
    },
    "@aws-cdk/aws-lambda.EventSourceMappingProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for declaring a new event source mapping.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const eventSourceDlq: lambda.IEventSourceDlq;\ndeclare const function_: lambda.Function;\ndeclare const sourceAccessConfigurationType: lambda.SourceAccessConfigurationType;\nconst eventSourceMappingProps: lambda.EventSourceMappingProps = {\n  target: function_,\n\n  // the properties below are optional\n  batchSize: 123,\n  bisectBatchOnError: false,\n  enabled: false,\n  eventSourceArn: 'eventSourceArn',\n  kafkaBootstrapServers: ['kafkaBootstrapServers'],\n  kafkaTopic: 'kafkaTopic',\n  maxBatchingWindow: cdk.Duration.minutes(30),\n  maxRecordAge: cdk.Duration.minutes(30),\n  onFailure: eventSourceDlq,\n  parallelizationFactor: 123,\n  reportBatchItemFailures: false,\n  retryAttempts: 123,\n  sourceAccessConfigurations: [{\n    type: sourceAccessConfigurationType,\n    uri: 'uri',\n  }],\n  startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n  tumblingWindow: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.EventSourceMappingProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.EventSourceMappingOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 218
      },
      "name": "EventSourceMappingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 222
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ],
      "symbolId": "lib/event-source-mapping:EventSourceMappingProps"
    },
    "@aws-cdk/aws-lambda.FileSystem": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Represents the filesystem for the Lambda function.",
        "example": "import * as ec2 from '@aws-cdk/aws-ec2';\nimport * as efs from '@aws-cdk/aws-efs';\n\n// create a new VPC\nconst vpc = new ec2.Vpc(this, 'VPC');\n\n// create a new Amazon EFS filesystem\nconst fileSystem = new efs.FileSystem(this, 'Efs', { vpc });\n\n// create a new access point from the filesystem\nconst accessPoint = fileSystem.addAccessPoint('AccessPoint', {\n  // set /export/lambda as the root of the access point\n  path: '/export/lambda',\n  // as /export/lambda does not exist in a new efs filesystem, the efs will create the directory with the following createAcl\n  createAcl: {\n    ownerUid: '1001',\n    ownerGid: '1001',\n    permissions: '750',\n  },\n  // enforce the POSIX identity so lambda function will access with this identity\n  posixUser: {\n    uid: '1001',\n    gid: '1001',\n  },\n});\n\nconst fn = new lambda.Function(this, 'MyLambda', {\n  // mount the access point to /mnt/msg in the lambda runtime environment\n  filesystem: lambda.FileSystem.fromEfsAccessPoint(accessPoint, '/mnt/msg'),\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  vpc,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FileSystem",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/filesystem.ts",
          "line": 82
        },
        "parameters": [
          {
            "docs": {
              "summary": "the FileSystem configurations for the Lambda function."
            },
            "name": "config",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FileSystemConfig"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/filesystem.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "mount the filesystem from Amazon EFS."
          },
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 51
          },
          "name": "fromEfsAccessPoint",
          "parameters": [
            {
              "docs": {
                "summary": "the Amazon EFS access point."
              },
              "name": "ap",
              "type": {
                "fqn": "@aws-cdk/aws-efs.IAccessPoint"
              }
            },
            {
              "docs": {
                "summary": "the target path in the lambda runtime environment."
              },
              "name": "mountPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FileSystem"
            }
          },
          "static": true
        }
      ],
      "name": "FileSystem",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "the FileSystem configurations for the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 82
          },
          "name": "config",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FileSystemConfig"
          }
        }
      ],
      "symbolId": "lib/filesystem:FileSystem"
    },
    "@aws-cdk/aws-lambda.FileSystemConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "FileSystem configurations for the Lambda function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const connections: ec2.Connections;\ndeclare const dependable: cdk.IDependable;\ndeclare const policyStatement: iam.PolicyStatement;\nconst fileSystemConfig: lambda.FileSystemConfig = {\n  arn: 'arn',\n  localMountPath: 'localMountPath',\n\n  // the properties below are optional\n  connections: connections,\n  dependency: [dependable],\n  policies: [policyStatement],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FileSystemConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/filesystem.ts",
        "line": 9
      },
      "name": "FileSystemConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ARN of the access point."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 18
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "mount path in the lambda runtime environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 13
          },
          "name": "localMountPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no connections required to add extra ingress rules for Lambda function",
            "stability": "stable",
            "summary": "connections object used to allow ingress traffic from lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 32
          },
          "name": "connections",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no dependency",
            "stability": "stable",
            "summary": "array of IDependable that lambda function depends on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 25
          },
          "name": "dependency",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IDependable"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional policies required",
            "stability": "stable",
            "summary": "additional IAM policies required for the lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/filesystem.ts",
            "line": 39
          },
          "name": "policies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/filesystem:FileSystemConfig"
    },
    "@aws-cdk/aws-lambda.Function": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.FunctionBase",
      "docs": {
        "remarks": "The supplied file is subject to the 4096 bytes limit of being embedded in a\nCloudFormation template.\n\nThe construct includes an associated role with the lambda.\n\nThis construct does not yet reproduce all features from the underlying resource\nlibrary.",
        "stability": "stable",
        "summary": "Deploys a file from inside the construct library as a function.",
        "example": "import * as signer from '@aws-cdk/aws-signer';\n\nconst signingProfile = new signer.SigningProfile(this, 'SigningProfile', {\n  platform: signer.Platform.AWS_LAMBDA_SHA384_ECDSA,\n});\n\nconst codeSigningConfig = new lambda.CodeSigningConfig(this, 'CodeSigningConfig', {\n  signingProfiles: [signingProfile],\n});\n\nnew lambda.Function(this, 'Function', {\n  codeSigningConfig,\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Function",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/function.ts",
          "line": 658
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 397
      },
      "methods": [
        {
          "docs": {
            "remarks": "See 'currentVersion' section in the module README for more details.",
            "stability": "stable",
            "summary": "Record whether specific properties in the `AWS::Lambda::Function` resource should also be associated to the Version resource."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 452
          },
          "name": "classifyVersionProperty",
          "parameters": [
            {
              "docs": {
                "summary": "The property to classify."
              },
              "name": "propertyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "whether the property should be associated to the version or not."
              },
              "name": "locked",
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a lambda function into the CDK using its ARN."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 473
          },
          "name": "fromFunctionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "functionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a Lambda function object which represents a function not defined within this stack."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 485
          },
          "name": "fromFunctionAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "The parent construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The name of the lambda construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the attributes of the function to import."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.FunctionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a lambda function into the CDK using its name."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 459
          },
          "name": "fromFunctionName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "functionName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this Lambda."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 527
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "max over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of concurrent executions across all Lambdas."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 575
          },
          "name": "metricAllConcurrentExecutions",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the Duration executing all Lambdas."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 548
          },
          "name": "metricAllDuration",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of Errors executing all Lambdas."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 539
          },
          "name": "metricAllErrors",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of invocations of all Lambdas."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 557
          },
          "name": "metricAllInvocations",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of throttled invocations of all Lambdas."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 566
          },
          "name": "metricAllThrottles",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "max over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of unreserved concurrent executions across all Lambdas."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 590
          },
          "name": "metricAllUnreservedConcurrentExecutions",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The alias will automatically be updated to point to the latest version of\nthe function as it is being updated during a deployment.\n\n```ts\ndeclare const fn: lambda.Function;\n\nfn.addAlias('Live');\n\n// Is equivalent to\n\nnew lambda.Alias(this, 'AliasLive', {\n   aliasName: 'Live',\n   version: fn.currentVersion,\n});",
            "stability": "stable",
            "summary": "Defines an alias for this function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 991
          },
          "name": "addAlias",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the alias."
              },
              "name": "aliasName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Alias options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AliasOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Alias"
            }
          }
        },
        {
          "docs": {
            "remarks": "If this is a ref to a Lambda function, this operation results in a no-op.",
            "stability": "stable",
            "summary": "Adds an environment variable to this Lambda function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 899
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "docs": {
                "summary": "The environment variable key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The environment variable's value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Environment variable options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EnvironmentOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Function"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "if there are already 5 layers on this function, or the layer is incompatible with this function's runtime."
            },
            "stability": "stable",
            "summary": "Adds one or more Lambda Layers to this Lambda function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 911
          },
          "name": "addLayers",
          "parameters": [
            {
              "docs": {
                "summary": "the layers to be added."
              },
              "name": "layers",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.ILayerVersion"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "deprecated": "This method will create an AWS::Lambda::Version resource which\nsnapshots the AWS Lambda function *at the time of its creation* and it\nwon't get updated when the function changes. Instead, use\n`this.currentVersion` to obtain a reference to a version resource that gets\nautomatically recreated when the function configuration (or code) changes.",
            "remarks": "If you want to deploy through CloudFormation and use aliases, you need to\nadd a new version (with a new name) to your Lambda every time you want to\ndeploy an update. An alias can then refer to the newly created Version.\n\nAll versions should have distinct names, and you should not delete versions\nas long as your Alias needs to refer to them.",
            "returns": "A new Version object.",
            "stability": "deprecated",
            "summary": "Add a new version for this Lambda."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 954
          },
          "name": "addVersion",
          "parameters": [
            {
              "docs": {
                "summary": "A unique name for this version."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The SHA-256 hash of the most recently deployed Lambda source code, or omit to skip validation."
              },
              "name": "codeSha256",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "A description for this version."
              },
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "A provisioned concurrency configuration for a function's version."
              },
              "name": "provisionedExecutions",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "configuration for this version when it is invoked asynchronously."
              },
              "name": "asyncInvokeConfig",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Version"
            }
          }
        }
      ],
      "name": "Function",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 632
          },
          "name": "architecture",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "docs": {
            "remarks": "True for new Lambdas, false for version $LATEST and imported Lambdas\nfrom different accounts.",
            "stability": "stable",
            "summary": "Whether the addPermission() call adds any permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 641
          },
          "name": "canCreatePermissions",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.",
            "stability": "stable",
            "summary": "Returns a `lambda.Version` which represents the current version of this Lambda function. A new version will be created every time the function's configuration changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 407
          },
          "name": "currentVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Version"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 602
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 597
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal this Lambda Function is running as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 617
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "remarks": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.",
            "stability": "stable",
            "summary": "The LogGroup where the Lambda function's logs are made available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 1005
          },
          "name": "logGroup",
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 639
          },
          "name": "permissionsNode",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke()."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 438
          },
          "name": "resourceArnsForGrantInvoke",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The runtime configured for this lambda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 612
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 622
          },
          "name": "deadLetterQueue",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sqs.IQueue"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 627
          },
          "name": "deadLetterTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Execution role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 607
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The timeout configured for this lambda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 637
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/function:Function"
    },
    "@aws-cdk/aws-lambda.FunctionAttributes": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a Lambda function defined outside of this stack.",
        "example": "const fn = lambda.Function.fromFunctionAttributes(this, 'Function', {\n  functionArn: 'arn:aws:lambda:us-east-1:123456789012:function:MyFn',\n  // The following are optional properties for specific use cases and should be used with caution:\n\n  // Use Case: imported function is in the same account as the stack. This tells the CDK that it\n  // can modify the function's permissions.\n  sameEnvironment: true,\n\n  // Use Case: imported function is in a different account and user commits to ensuring that the\n  // imported function has the correct permissions outside the CDK.\n  skipPermissions: true,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function-base.ts",
        "line": 161
      },
      "name": "FunctionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Format: arn:<partition>:lambda:<region>:<account-id>:function:<function-name>",
            "stability": "stable",
            "summary": "The ARN of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 167
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Architecture.X86_64",
            "stability": "stable",
            "summary": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 225
          },
          "name": "architecture",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If the role is not specified, any role-related operations will no-op.",
            "stability": "stable",
            "summary": "The IAM execution role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 174
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- depends: true, if the Stack is configured with an explicit `env` (account and region) and the account is the same as this function.\nFor environment-agnostic stacks this will default to `false`.",
            "remarks": "This affects certain behaviours such as, whether this function's permission can be modified.\nWhen not configured, the CDK attempts to auto-determine this. For environment agnostic stacks, i.e., stacks\nwhere the account is not specified with the `env` property, this is determined to be false.\n\nSet this to property *ONLY IF* the imported function is in the same account as the stack\nit's imported in.",
            "stability": "stable",
            "summary": "Setting this property informs the CDK that the imported function is in the same environment as the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 205
          },
          "name": "sameEnvironment",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This needs to be given in order to support allowing connections\nto this Lambda.",
            "stability": "stable",
            "summary": "The security group of this Lambda, if in a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 192
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `securityGroup` instead",
            "remarks": "This needs to be given in order to support allowing connections\nto this Lambda.",
            "stability": "deprecated",
            "summary": "Id of the security group of this Lambda, if in a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 184
          },
          "name": "securityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When not configured, the CDK attempts to auto-determine whether or not\nadditional permissions are necessary on the function when grant APIs are used. If the CDK tried to add\npermissions on an imported lambda, it will fail.\n\nSet this property *ONLY IF* you are committing to manage the imported function's permissions outside of\nCDK. You are acknowledging that your CDK code alone will have insufficient permissions to access the\nimported function.",
            "stability": "stable",
            "summary": "Setting this property informs the CDK that the imported function ALREADY HAS the necessary permissions for what you are trying to do."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 219
          },
          "name": "skipPermissions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/function-base:FunctionAttributes"
    },
    "@aws-cdk/aws-lambda.FunctionBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 150
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-ec2.IClientVpnConnectionHandler"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function-base.ts",
        "line": 228
      },
      "methods": [
        {
          "docs": {
            "remarks": "Event sources are implemented in the @aws-cdk/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from '@aws-cdk/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
            "stability": "stable",
            "summary": "Adds an event source to this function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 452
          },
          "name": "addEventSource",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "source",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IEventSource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an event source that maps to this AWS Lambda function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 407
          },
          "name": "addEventSourceMapping",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventSourceMappingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EventSourceMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a url to this lambda function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 467
          },
          "name": "addFunctionUrl",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.FunctionUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FunctionUrl"
            }
          }
        },
        {
          "docs": {
            "see": "Permission for details.",
            "stability": "stable",
            "summary": "Adds a permission to the Lambda resource policy."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 343
          },
          "name": "addPermission",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "docs": {
                "summary": "The id for the permission construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The permission to grant to this Lambda function."
              },
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Permission"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by the instance."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 370
          },
          "name": "addToRolePolicy",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures options for asynchronous invocation."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 456
          },
          "name": "configureAsyncInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
            "stability": "stable",
            "summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 319
          },
          "name": "considerWarningOnInvokeFunctionPermissions",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 417
          },
          "name": "grantInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda Function URL."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 438
          },
          "name": "grantInvokeUrl",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this Function."
          },
          "locationInModule": {
            "filename": "lib/lambda-augmentations.generated.ts",
            "line": 41
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "How long execution of this Lambda takes."
          },
          "locationInModule": {
            "filename": "lib/lambda-augmentations.generated.ts",
            "line": 65
          },
          "name": "metricDuration",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "How many invocations of this Lambda fail."
          },
          "locationInModule": {
            "filename": "lib/lambda-augmentations.generated.ts",
            "line": 59
          },
          "name": "metricErrors",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "How often this Lambda is invoked."
          },
          "locationInModule": {
            "filename": "lib/lambda-augmentations.generated.ts",
            "line": 53
          },
          "name": "metricInvocations",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "How often this Lambda is throttled."
          },
          "locationInModule": {
            "filename": "lib/lambda-augmentations.generated.ts",
            "line": 47
          },
          "name": "metricThrottles",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 330
          },
          "name": "warnInvokeFunctionPermissions",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "FunctionBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The architecture of this Lambda Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 259
          },
          "name": "architecture",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "True for new Lambdas, false for version $LATEST and imported Lambdas\nfrom different accounts.",
            "stability": "stable",
            "summary": "Whether the addPermission() call adds any permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 267
          },
          "name": "canCreatePermissions",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Will fail if not a VPC-enabled Lambda Function",
            "stability": "stable",
            "summary": "Access the Connections object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 383
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN fo the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 242
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 237
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The principal this Lambda Function is running as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 232
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "remarks": "If this is is `false`, trying to access the `connections` object will fail.",
            "stability": "stable",
            "summary": "Whether or not this Lambda function was bound to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 403
          },
          "name": "isBoundToVpc",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
            "stability": "stable",
            "summary": "The `$LATEST` version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 391
          },
          "name": "latestVersion",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 254
          },
          "name": "permissionsNode",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke()."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 272
          },
          "name": "resourceArnsForGrantInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Undefined if the function was imported without a role.",
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 249
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/function-base:FunctionBase"
    },
    "@aws-cdk/aws-lambda.FunctionOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Non runtime options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const architecture: lambda.Architecture;\ndeclare const codeSigningConfig: lambda.CodeSigningConfig;\ndeclare const destination: lambda.IDestination;\ndeclare const eventSource: lambda.IEventSource;\ndeclare const fileSystem: lambda.FileSystem;\ndeclare const key: kms.Key;\ndeclare const lambdaInsightsVersion: lambda.LambdaInsightsVersion;\ndeclare const layerVersion: lambda.LayerVersion;\ndeclare const policyStatement: iam.PolicyStatement;\ndeclare const profilingGroup: codeguruprofiler.ProfilingGroup;\ndeclare const queue: sqs.Queue;\ndeclare const role: iam.Role;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const size: cdk.Size;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const vpc: ec2.Vpc;\nconst functionOptions: lambda.FunctionOptions = {\n  allowAllOutbound: false,\n  allowPublicSubnet: false,\n  architecture: architecture,\n  architectures: [architecture],\n  codeSigningConfig: codeSigningConfig,\n  currentVersionOptions: {\n    codeSha256: 'codeSha256',\n    description: 'description',\n    maxEventAge: cdk.Duration.minutes(30),\n    onFailure: destination,\n    onSuccess: destination,\n    provisionedConcurrentExecutions: 123,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n    retryAttempts: 123,\n  },\n  deadLetterQueue: queue,\n  deadLetterQueueEnabled: false,\n  deadLetterTopic: topic,\n  description: 'description',\n  environment: {\n    environmentKey: 'environment',\n  },\n  environmentEncryption: key,\n  ephemeralStorageSize: size,\n  events: [eventSource],\n  filesystem: fileSystem,\n  functionName: 'functionName',\n  initialPolicy: [policyStatement],\n  insightsVersion: lambdaInsightsVersion,\n  layers: [layerVersion],\n  logRetention: logs.RetentionDays.ONE_DAY,\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  logRetentionRole: role,\n  maxEventAge: cdk.Duration.minutes(30),\n  memorySize: 123,\n  onFailure: destination,\n  onSuccess: destination,\n  profiling: false,\n  profilingGroup: profilingGroup,\n  reservedConcurrentExecutions: 123,\n  retryAttempts: 123,\n  role: role,\n  securityGroup: securityGroup,\n  securityGroups: [securityGroup],\n  timeout: cdk.Duration.minutes(30),\n  tracing: lambda.Tracing.ACTIVE,\n  vpc: vpc,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionOptions",
      "interfaces": [
        "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 56
      },
      "name": "FunctionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.",
            "stability": "stable",
            "summary": "Whether to allow the Lambda to send all network traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 190
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Use this property to acknowledge this limitation and still place the function in a public subnet.",
            "see": "https://stackoverflow.com/questions/52992085/why-cant-an-aws-lambda-function-inside-a-public-subnet-in-a-vpc-connect-to-the/52994841#52994841",
            "stability": "stable",
            "summary": "Lambda Functions in a public subnet can NOT access the internet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 324
          },
          "name": "allowPublicSubnet",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Architecture.X86_64",
            "stability": "stable",
            "summary": "The system architectures compatible with this lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 351
          },
          "name": "architecture",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[Architecture.X86_64]",
            "deprecated": "use `architecture`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 345
          },
          "name": "architectures",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Architecture"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not Sign the Code",
            "stability": "stable",
            "summary": "Code signing config associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 338
          },
          "name": "codeSigningConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.ICodeSigningConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options as described in `VersionOptions`",
            "stability": "stable",
            "summary": "Options for the `lambda.Version` resource automatically created by the `fn.currentVersion` method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 308
          },
          "name": "currentVersionOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.VersionOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SQS queue with 14 day retention period if `deadLetterQueueEnabled` is `true`",
            "remarks": "If SNS topic is desired, specify `deadLetterTopic` property instead.",
            "stability": "stable",
            "summary": "The SQS queue to use if DLQ is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 206
          },
          "name": "deadLetterQueue",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sqs.IQueue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false unless `deadLetterQueue` is set, which implies DLQ is enabled.",
            "remarks": "If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
            "stability": "stable",
            "summary": "Enabled DLQ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 198
          },
          "name": "deadLetterQueueEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no SNS topic",
            "remarks": "Note that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
            "stability": "stable",
            "summary": "The SNS topic to use as a DLQ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 215
          },
          "name": "deadLetterTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "A description of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 62
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "remarks": "Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
            "stability": "stable",
            "summary": "Key-value pairs that Lambda caches and makes available for your Lambda functions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 81
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS Lambda creates and uses an AWS managed customer master key (CMK).",
            "stability": "stable",
            "summary": "The AWS KMS key that's used to encrypt your function's environment variables."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 331
          },
          "name": "environmentEncryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512 MiB",
            "stability": "stable",
            "summary": "The size of the function’s /tmp directory in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 106
          },
          "name": "ephemeralStorageSize",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No event sources.",
            "remarks": "You can also add event sources using `addEventSource`.",
            "stability": "stable",
            "summary": "Event sources for this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 276
          },
          "name": "events",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.IEventSource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- will not mount any filesystem",
            "stability": "stable",
            "summary": "The filesystem configuration for the lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 315
          },
          "name": "filesystem",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FileSystem"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS CloudFormation generates a unique physical ID and uses that\nID for the function's name. For more information, see Name Type.",
            "stability": "stable",
            "summary": "A name for the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 89
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No policy statements are added to the created Lambda role.",
            "remarks": "You can call `addToRolePolicy` to the created lambda to add statements post creation.",
            "stability": "stable",
            "summary": "Initial policy statements to add to the created Lambda Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 115
          },
          "name": "initialPolicy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Lambda Insights",
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-Getting-Started-docker.html",
            "stability": "stable",
            "summary": "Specify the version of CloudWatch Lambda insights to use for monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 250
          },
          "name": "insightsVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No layers.",
            "remarks": "You can configure your Lambda function to pull in\nadditional code during initialization in the form of layers. Layers are packages of libraries or other dependencies\nthat can be used by multiple functions.",
            "stability": "stable",
            "summary": "A list of layers to add to the function's execution environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 259
          },
          "name": "layers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.ILayerVersion"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "logs.RetentionDays.INFINITE",
            "remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
            "stability": "stable",
            "summary": "The number of days log events are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 285
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default AWS SDK retry options.",
            "remarks": "These options control the retry policy when interacting with CloudWatch APIs.",
            "stability": "stable",
            "summary": "When log retention is specified, a custom resource attempts to create the CloudWatch log group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 301
          },
          "name": "logRetentionRetryOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LogRetentionRetryOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new role is created.",
            "stability": "stable",
            "summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 293
          },
          "name": "logRetentionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "128",
            "remarks": "Lambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide.",
            "stability": "stable",
            "summary": "The amount of memory, in MB, that is allocated to your Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 99
          },
          "name": "memorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No profiling.",
            "see": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html",
            "stability": "stable",
            "summary": "Enable profiling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 230
          },
          "name": "profiling",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new profiling group will be created if `profiling` is set.",
            "see": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html",
            "stability": "stable",
            "summary": "Profiling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 238
          },
          "name": "profilingGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codeguruprofiler.IProfilingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No specific limit - account limit.",
            "see": "https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html",
            "stability": "stable",
            "summary": "The maximum of concurrent executions you want to reserve for the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 267
          },
          "name": "reservedConcurrentExecutions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A unique role will be generated for this lambda function.\nBoth supplied and generated roles can always be changed by calling `addToRolePolicy`.",
            "remarks": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".",
            "stability": "stable",
            "summary": "Lambda execution role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 133
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If the function is placed within a VPC and a security group is\nnot specified, either by this or securityGroups prop, a dedicated security\ngroup will be created for this function.",
            "deprecated": "- This property is deprecated, use securityGroups instead",
            "remarks": "Only used if 'vpc' is supplied.\n\nUse securityGroups property instead.\nFunction constructor will throw an error if both are specified.",
            "stability": "deprecated",
            "summary": "What security group to associate with the Lambda's network interfaces. This property is being deprecated, consider using securityGroups instead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 169
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If the function is placed within a VPC and a security group is\nnot specified, either by this or securityGroup prop, a dedicated security\ngroup will be created for this function.",
            "remarks": "Only used if 'vpc' is supplied.",
            "stability": "stable",
            "summary": "The list of security groups to associate with the Lambda's network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 180
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(3)",
            "remarks": "Because the execution time affects cost, set this value\nbased on the function's expected execution time.",
            "stability": "stable",
            "summary": "The function execution time (in seconds) after which Lambda terminates the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 71
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Tracing.Disabled",
            "stability": "stable",
            "summary": "Enable AWS X-Ray Tracing for Lambda Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 222
          },
          "name": "tracing",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Tracing"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Function is not placed within a VPC.",
            "remarks": "Specify this if the Lambda function needs to access resources in a VPC.",
            "stability": "stable",
            "summary": "VPC network to place Lambda network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 142
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified",
            "remarks": "Only used if 'vpc' is supplied. Note: internet access for Lambdas\nrequires a NAT gateway, so picking Public subnets is not allowed.",
            "stability": "stable",
            "summary": "Where to place the network interfaces within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 152
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/function:FunctionOptions"
    },
    "@aws-cdk/aws-lambda.FunctionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\nconst fn = new lambda.Function(this, 'MyFunc', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = handler.toString()`),\n});\n\nconst rule = new events.Rule(this, 'rule', {\n  eventPattern: {\n    source: [\"aws.ec2\"],\n  },\n});\n\nconst queue = new sqs.Queue(this, 'Queue');\n\nrule.addTarget(new targets.LambdaFunction(fn, {\n  deadLetterQueue: queue, // Optional: add a dead letter queue\n  maxEventAge: cdk.Duration.hours(2), // Optional: set the maxEventAge retry policy\n  retryAttempts: 2, // Optional: set the max number of retry attempts\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.FunctionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 354
      },
      "name": "FunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text.",
            "stability": "stable",
            "summary": "The source code of your Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 369
          },
          "name": "code",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Code"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The format includes the file name. It can also include\nnamespaces and other qualifiers, depending on the runtime.\nFor more information, see https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-features.html#gettingstarted-features-programmingmodel.\n\nUse `Handler.FROM_IMAGE` when defining a function from a Docker image.\n\nNOTE: If you specify your source code as inline text by specifying the\nZipFile property within the Code property, specify index.function_name as\nthe handler.",
            "stability": "stable",
            "summary": "The name of the method within your code that Lambda calls to execute your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 383
          },
          "name": "handler",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For valid values, see the Runtime property in the AWS Lambda Developer\nGuide.\n\nUse `Runtime.FROM_IMAGE` when when defining a function from a Docker image.",
            "stability": "stable",
            "summary": "The runtime environment for the Lambda function that you are uploading."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 362
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        }
      ],
      "symbolId": "lib/function:FunctionProps"
    },
    "@aws-cdk/aws-lambda.FunctionUrl": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Lambda::Url",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "Defines a Lambda function url.",
        "example": "// Can be a Function or an Alias\ndeclare const fn: lambda.Function;\ndeclare const myRole: iam.Role;\n\nconst fnUrl = fn.addFunctionUrl();\nfnUrl.grantInvokeUrl(myRole);\n\nnew CfnOutput(this, 'TheUrl', {\n  // The .url attributes will return the unique Function URL\n  value: fnUrl.url,\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionUrl",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/function-url.ts",
          "line": 181
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FunctionUrlProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IFunctionUrl"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 168
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda Function URL."
          },
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 219
          },
          "name": "grantInvokeUrl",
          "overrides": "@aws-cdk/aws-lambda.IFunctionUrl",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "FunctionUrl",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function this URL refers to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 177
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.IFunctionUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The url of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 172
          },
          "name": "url",
          "overrides": "@aws-cdk/aws-lambda.IFunctionUrl",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function-url:FunctionUrl"
    },
    "@aws-cdk/aws-lambda.FunctionUrlAuthType": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "The auth types for a function url.",
        "example": "// Can be a Function or an Alias\ndeclare const fn: lambda.Function;\n\nconst fnUrl = fn.addFunctionUrl({\n  authType: lambda.FunctionUrlAuthType.NONE,\n});\n\nnew CfnOutput(this, 'TheUrl', {\n  value: fnUrl.url,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionUrlAuthType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 12
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Restrict access to authenticated IAM users only."
          },
          "name": "AWS_IAM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bypass IAM authentication to create a public endpoint."
          },
          "name": "NONE"
        }
      ],
      "name": "FunctionUrlAuthType",
      "symbolId": "lib/function-url:FunctionUrlAuthType"
    },
    "@aws-cdk/aws-lambda.FunctionUrlCorsOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies a cross-origin access property for a function URL.",
        "example": "declare const fn: lambda.Function;\n\nfn.addFunctionUrl({\n  authType: lambda.FunctionUrlAuthType.NONE,\n  cors: {\n    // Allow this to be called from websites on https://example.com.\n    // Can also be ['*'] to allow all domain.\n    allowedOrigins: ['https://example.com'],\n\n    // More options are possible here, see the documentation for FunctionUrlCorsOptions\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionUrlCorsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 65
      },
      "name": "FunctionUrlCorsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to allow cookies or other credentials in requests to your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 71
          },
          "name": "allowCredentials",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No headers allowed.",
            "stability": "stable",
            "summary": "Headers that are specified in the Access-Control-Request-Headers header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 78
          },
          "name": "allowedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- [HttpMethod.ALL]",
            "stability": "stable",
            "summary": "An HTTP method that you allow the origin to execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 85
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.HttpMethod"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No origins allowed.",
            "stability": "stable",
            "summary": "One or more origins you want customers to be able to access the bucket from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 92
          },
          "name": "allowedOrigins",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No headers exposed.",
            "stability": "stable",
            "summary": "One or more headers in the response that you want customers to be able to access from their applications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 99
          },
          "name": "exposedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Browser default of 5 seconds.",
            "stability": "stable",
            "summary": "The time in seconds that your browser is to cache the preflight response for the specified resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 106
          },
          "name": "maxAge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/function-url:FunctionUrlCorsOptions"
    },
    "@aws-cdk/aws-lambda.FunctionUrlOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to add a url to a Lambda function.",
        "example": "// Can be a Function or an Alias\ndeclare const fn: lambda.Function;\n\nconst fnUrl = fn.addFunctionUrl({\n  authType: lambda.FunctionUrlAuthType.NONE,\n});\n\nnew CfnOutput(this, 'TheUrl', {\n  value: fnUrl.url,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionUrlOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 136
      },
      "name": "FunctionUrlOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "FunctionUrlAuthType.AWS_IAM",
            "stability": "stable",
            "summary": "The type of authentication that your function URL uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 142
          },
          "name": "authType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionUrlAuthType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No CORS configuration.",
            "stability": "stable",
            "summary": "The cross-origin resource sharing (CORS) settings for your function URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 149
          },
          "name": "cors",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionUrlCorsOptions"
          }
        }
      ],
      "symbolId": "lib/function-url:FunctionUrlOptions"
    },
    "@aws-cdk/aws-lambda.FunctionUrlProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a FunctionUrl.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\nconst functionUrlProps: lambda.FunctionUrlProps = {\n  function: function_,\n\n  // the properties below are optional\n  authType: lambda.FunctionUrlAuthType.AWS_IAM,\n  cors: {\n    allowCredentials: false,\n    allowedHeaders: ['allowedHeaders'],\n    allowedMethods: [lambda.HttpMethod.GET],\n    allowedOrigins: ['allowedOrigins'],\n    exposedHeaders: ['exposedHeaders'],\n    maxAge: cdk.Duration.minutes(30),\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionUrlProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.FunctionUrlOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 155
      },
      "name": "FunctionUrlProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It can also be an `Alias` but not a `Version`.",
            "stability": "stable",
            "summary": "The function to which this url refers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 160
          },
          "name": "function",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ],
      "symbolId": "lib/function-url:FunctionUrlProps"
    },
    "@aws-cdk/aws-lambda.FunctionVersionUpgrade": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "remarks": "This can be necessary when the feature flag\nchanges the function hash, as such changes must be associated with a new\nversion. This aspect will change the function description in these cases,\nwhich \"validates\" the new function hash.",
        "stability": "stable",
        "summary": "Aspect for upgrading function versions when the feature flag provided feature flag present.",
        "example": "const stack = new Stack();\nAspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_VERSION_PROPS));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionVersionUpgrade",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/function.ts",
          "line": 1293
        },
        "parameters": [
          {
            "name": "featureFlag",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "enabled",
            "optional": true,
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 1292
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 1295
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "FunctionVersionUpgrade",
      "symbolId": "lib/function:FunctionVersionUpgrade"
    },
    "@aws-cdk/aws-lambda.Handler": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Lambda function handler."
      },
      "fqn": "@aws-cdk/aws-lambda.Handler",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/handler.ts",
        "line": 4
      },
      "name": "Handler",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "A special handler when the function handler is part of a Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/handler.ts",
            "line": 8
          },
          "name": "FROM_IMAGE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/handler:Handler"
    },
    "@aws-cdk/aws-lambda.HttpMethod": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "All http request methods."
      },
      "fqn": "@aws-cdk/aws-lambda.HttpMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 27
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The GET method requests a representation of the specified resource."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The PUT method replaces all current representations of the target resource with the request payload."
          },
          "name": "PUT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The HEAD method asks for a response identical to that of a GET request, but without the response body."
          },
          "name": "HEAD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The POST method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server."
          },
          "name": "POST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The DELETE method deletes the specified resource."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The PATCH method applies partial modifications to a resource."
          },
          "name": "PATCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The OPTIONS method describes the communication options for the target resource."
          },
          "name": "OPTIONS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The wildcard entry to allow all methods."
          },
          "name": "ALL"
        }
      ],
      "name": "HttpMethod",
      "symbolId": "lib/function-url:HttpMethod"
    },
    "@aws-cdk/aws-lambda.IAlias": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.IAlias",
      "interfaces": [
        "@aws-cdk/aws-lambda.IFunction"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias.ts",
        "line": 14
      },
      "name": "IAlias",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Name of this alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 20
          },
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The underlying Lambda function version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 25
          },
          "name": "version",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        }
      ],
      "symbolId": "lib/alias:IAlias"
    },
    "@aws-cdk/aws-lambda.ICodeSigningConfig": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "A Code Signing Config."
      },
      "fqn": "@aws-cdk/aws-lambda.ICodeSigningConfig",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code-signing-config.ts",
        "line": 25
      },
      "name": "ICodeSigningConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of Code Signing Config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 30
          },
          "name": "codeSigningConfigArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of Code Signing Config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code-signing-config.ts",
            "line": 36
          },
          "name": "codeSigningConfigId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code-signing-config:ICodeSigningConfig"
    },
    "@aws-cdk/aws-lambda.IDestination": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "A Lambda destination."
      },
      "fqn": "@aws-cdk/aws-lambda.IDestination",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 46
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Binds this destination to the Lambda function."
          },
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 50
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "fn",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.DestinationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.DestinationConfig"
            }
          }
        }
      ],
      "name": "IDestination",
      "symbolId": "lib/destination:IDestination"
    },
    "@aws-cdk/aws-lambda.IEventSource": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "An abstract class which represents an AWS Lambda event source."
      },
      "fqn": "@aws-cdk/aws-lambda.IEventSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-source.ts",
        "line": 6
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called by `lambda.addEventSource` to allow the event source to bind to this function."
          },
          "locationInModule": {
            "filename": "lib/event-source.ts",
            "line": 13
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "That lambda function to bind to."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ]
        }
      ],
      "name": "IEventSource",
      "symbolId": "lib/event-source:IEventSource"
    },
    "@aws-cdk/aws-lambda.IEventSourceDlq": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "A DLQ for an event source."
      },
      "fqn": "@aws-cdk/aws-lambda.IEventSourceDlq",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dlq.ts",
        "line": 17
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the DLQ destination config of the DLQ."
          },
          "locationInModule": {
            "filename": "lib/dlq.ts",
            "line": 21
          },
          "name": "bind",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IEventSourceMapping"
              }
            },
            {
              "name": "targetHandler",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.DlqDestinationConfig"
            }
          }
        }
      ],
      "name": "IEventSourceDlq",
      "symbolId": "lib/dlq:IEventSourceDlq"
    },
    "@aws-cdk/aws-lambda.IEventSourceMapping": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "see": "https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html",
        "stability": "stable",
        "summary": "Represents an event source mapping for a lambda function."
      },
      "fqn": "@aws-cdk/aws-lambda.IEventSourceMapping",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 229
      },
      "name": "IEventSourceMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The identifier for this EventSourceMapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 234
          },
          "name": "eventSourceMappingId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/event-source-mapping:IEventSourceMapping"
    },
    "@aws-cdk/aws-lambda.IFunction": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.IFunction",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function-base.ts",
        "line": 21
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Event sources are implemented in the @aws-cdk/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from '@aws-cdk/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
            "stability": "stable",
            "summary": "Adds an event source to this function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 145
          },
          "name": "addEventSource",
          "parameters": [
            {
              "name": "source",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IEventSource"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds an event source that maps to this AWS Lambda function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 84
          },
          "name": "addEventSourceMapping",
          "parameters": [
            {
              "docs": {
                "summary": "construct ID."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "mapping options."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventSourceMappingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EventSourceMapping"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a url to this lambda function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 155
          },
          "name": "addFunctionUrl",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.FunctionUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FunctionUrl"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "Permission for details.",
            "stability": "stable",
            "summary": "Adds a permission to the Lambda resource policy."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 91
          },
          "name": "addPermission",
          "parameters": [
            {
              "docs": {
                "summary": "The id for the permission construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The permission to grant to this Lambda function."
              },
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Permission"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by the instance."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 96
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configures options for asynchronous invocation."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 150
          },
          "name": "configureAsyncInvoke",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 101
          },
          "name": "grantInvoke",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda Function URL."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 106
          },
          "name": "grantInvokeUrl",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this Lambda Return the given named metric for this Function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 111
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "average over 5 minutes",
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the Duration of this Lambda How long execution of this Lambda takes."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 118
          },
          "name": "metricDuration",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "How many invocations of this Lambda fail."
          },
          "locationInModule": {
            "filename": "lib/lambda-augmentations.generated.ts",
            "line": 29
          },
          "name": "metricErrors",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of invocations of this Lambda How often this Lambda is invoked."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 125
          },
          "name": "metricInvocations",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of throttled invocations of this Lambda How often this Lambda is throttled."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 132
          },
          "name": "metricThrottles",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The system architectures compatible with this lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 69
          },
          "name": "architecture",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 35
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 28
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is is `false`, trying to access the `connections` object will fail.",
            "stability": "stable",
            "summary": "Whether or not this Lambda function was bound to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 47
          },
          "name": "isBoundToVpc",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
            "stability": "stable",
            "summary": "The `$LATEST` version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 59
          },
          "name": "latestVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 64
          },
          "name": "permissionsNode",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This property is for cdk modules to consume only. You should not need to use this property.\nInstead, use grantInvoke() directly.",
            "stability": "stable",
            "summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke()."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 77
          },
          "name": "resourceArnsForGrantInvoke",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 40
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/function-base:IFunction"
    },
    "@aws-cdk/aws-lambda.IFunctionUrl": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "A Lambda function Url."
      },
      "fqn": "@aws-cdk/aws-lambda.IFunctionUrl",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function-url.ts",
        "line": 112
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda Function URL."
          },
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 130
          },
          "name": "grantInvokeUrl",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "IFunctionUrl",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "FunctionArn"
            },
            "stability": "stable",
            "summary": "The ARN of the function this URL refers to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 125
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "FunctionUrl"
            },
            "stability": "stable",
            "summary": "The url of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-url.ts",
            "line": 118
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function-url:IFunctionUrl"
    },
    "@aws-cdk/aws-lambda.ILayerVersion": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.ILayerVersion",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layers.ts",
        "line": 64
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Usage within\nthe same account where the layer is defined is always allowed and does not\nrequire calling this method. Note that the principal that creates the\nLambda function using the layer (for example, a CloudFormation changeset\nexecution role) also needs to have the ``lambda:GetLayerVersion``\npermission on the layer version.",
            "stability": "stable",
            "summary": "Add permission for this layer version to specific entities."
          },
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 89
          },
          "name": "addPermission",
          "parameters": [
            {
              "docs": {
                "summary": "the ID of the grant in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the identification of the grantee."
              },
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LayerVersionPermission"
              }
            }
          ]
        }
      ],
      "name": "ILayerVersion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the Lambda Layer version that this Layer defines."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 69
          },
          "name": "layerVersionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Runtime.All",
            "stability": "stable",
            "summary": "The runtimes compatible with this Layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 76
          },
          "name": "compatibleRuntimes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Runtime"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/layers:ILayerVersion"
    },
    "@aws-cdk/aws-lambda.IScalableFunctionAttribute": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Interface for scalable attributes."
      },
      "fqn": "@aws-cdk/aws-lambda.IScalableFunctionAttribute",
      "interfaces": [
        "@aws-cdk/core.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-attribute-api.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on schedule."
          },
          "locationInModule": {
            "filename": "lib/scalable-attribute-api.ts",
            "line": 18
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The utilization is tracked by the\nLambdaProvisionedConcurrencyUtilization metric, emitted by lambda. See:\nhttps://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics.html#monitoring-metrics-concurrency",
            "stability": "stable",
            "summary": "Scale out or in to keep utilization at a given level."
          },
          "locationInModule": {
            "filename": "lib/scalable-attribute-api.ts",
            "line": 14
          },
          "name": "scaleOnUtilization",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.UtilizationScalingOptions"
              }
            }
          ]
        }
      ],
      "name": "IScalableFunctionAttribute",
      "symbolId": "lib/scalable-attribute-api:IScalableFunctionAttribute"
    },
    "@aws-cdk/aws-lambda.IVersion": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.IVersion",
      "interfaces": [
        "@aws-cdk/aws-lambda.IFunction"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda-version.ts",
        "line": 12
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "deprecated": "Calling `addAlias` on a `Version` object will cause the Alias to be replaced on every function update. Call `function.addAlias()` or `new Alias()` instead.",
            "stability": "deprecated",
            "summary": "Defines an alias for this version."
          },
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 36
          },
          "name": "addAlias",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the alias."
              },
              "name": "aliasName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Alias options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AliasOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Alias"
            }
          }
        }
      ],
      "name": "IVersion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the version for Lambda@Edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 27
          },
          "name": "edgeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The underlying AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 22
          },
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The most recently deployed version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 17
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda-version:IVersion"
    },
    "@aws-cdk/aws-lambda.InlineCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Code",
      "docs": {
        "stability": "stable",
        "summary": "Lambda code from an inline string (limited to 4KiB).",
        "example": "const layer = new lambda.LayerVersion(stack, 'MyLayer', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'layer-code')),\n  compatibleRuntimes: [lambda.Runtime.NODEJS_14_X],\n  license: 'Apache-2.0',\n  description: 'A layer to test the L2 construct',\n});\n\n// To grant usage by other AWS accounts\nlayer.addPermission('remote-account-grant', { accountId: awsAccountId });\n\n// To grant usage to all accounts in some AWS Ogranization\n// layer.grantUsage({ accountId: '*', organizationId });\n\nnew lambda.Function(stack, 'MyLayeredLambda', {\n  code: new lambda.InlineCode('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  layers: [layer],\n});",
        "custom": {
          "exampleMetadata": "lit=test/integ.layer-version.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.InlineCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 249
        },
        "parameters": [
          {
            "name": "code",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 246
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 261
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        }
      ],
      "name": "InlineCode",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 247
          },
          "name": "isInline",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/code:InlineCode"
    },
    "@aws-cdk/aws-lambda.LambdaInsightsVersion": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Version of CloudWatch Lambda Insights.",
        "example": "const layerArn = 'arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:14';\nnew lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  insightsVersion: lambda.LambdaInsightsVersion.fromInsightVersionArn(layerArn),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda-insights.ts",
        "line": 23
      },
      "methods": [
        {
          "docs": {
            "remarks": "Make sure the ARN is associated\nwith same region as your function",
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-extension-versions.html",
            "stability": "stable",
            "summary": "Use the insights extension associated with the provided ARN."
          },
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 61
          },
          "name": "fromInsightVersionArn",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
            }
          },
          "static": true
        }
      ],
      "name": "LambdaInsightsVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Version 1.0.119.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 48
          },
          "name": "VERSION_1_0_119_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Version 1.0.135.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 53
          },
          "name": "VERSION_1_0_135_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Version 1.0.54.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 28
          },
          "name": "VERSION_1_0_54_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Version 1.0.86.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 33
          },
          "name": "VERSION_1_0_86_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Version 1.0.89.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 38
          },
          "name": "VERSION_1_0_89_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Version 1.0.98.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 43
          },
          "name": "VERSION_1_0_98_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInsightsVersion"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The arn of the Lambda Insights extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-insights.ts",
            "line": 98
          },
          "name": "layerVersionArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda-insights:LambdaInsightsVersion"
    },
    "@aws-cdk/aws-lambda.LambdaRuntimeProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst lambdaRuntimeProps: lambda.LambdaRuntimeProps = {\n  bundlingDockerImage: 'bundlingDockerImage',\n  supportsCodeGuruProfiling: false,\n  supportsInlineCode: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaRuntimeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/runtime.ts",
        "line": 3
      },
      "name": "LambdaRuntimeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the latest docker image \"amazon/public.ecr.aws/sam/build-<runtime>\" from https://gallery.ecr.aws",
            "stability": "stable",
            "summary": "The Docker image name to be used for bundling in this runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 14
          },
          "name": "bundlingDockerImage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether this runtime is integrated with and supported for profiling using Amazon CodeGuru Profiler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 20
          },
          "name": "supportsCodeGuruProfiling",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the ``ZipFile`` (aka inline code) property can be used with this runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 8
          },
          "name": "supportsInlineCode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/runtime:LambdaRuntimeProps"
    },
    "@aws-cdk/aws-lambda.LayerVersion": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Defines a new Lambda Layer version.",
        "example": "new lambda.LayerVersion(this, 'MyLayer', {\n  removalPolicy: RemovalPolicy.RETAIN,\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  compatibleArchitectures: [lambda.Architecture.X86_64, lambda.Architecture.ARM_64],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LayerVersion",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/layers.ts",
          "line": 184
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LayerVersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.ILayerVersion"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layers.ts",
        "line": 149
      },
      "methods": [
        {
          "docs": {
            "remarks": "Assumes it is compatible with all Lambda runtimes.",
            "stability": "stable",
            "summary": "Imports a layer version by ARN."
          },
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 154
          },
          "name": "fromLayerVersionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "layerVersionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.ILayerVersion"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Layer that has been defined externally."
          },
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 168
          },
          "name": "fromLayerVersionAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct that will use the imported layer."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the id of the imported layer in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties of the imported layer."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LayerVersionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.ILayerVersion"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Usage within\nthe same account where the layer is defined is always allowed and does not\nrequire calling this method. Note that the principal that creates the\nLambda function using the layer (for example, a CloudFormation changeset\nexecution role) also needs to have the ``lambda:GetLayerVersion``\npermission on the layer version.",
            "stability": "stable",
            "summary": "Add permission for this layer version to specific entities."
          },
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 99
          },
          "name": "addPermission",
          "overrides": "@aws-cdk/aws-lambda.ILayerVersion",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LayerVersionPermission"
              }
            }
          ]
        }
      ],
      "name": "LayerVersion",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the Lambda Layer version that this Layer defines."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 181
          },
          "name": "layerVersionArn",
          "overrides": "@aws-cdk/aws-lambda.ILayerVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The runtimes compatible with this Layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 182
          },
          "name": "compatibleRuntimes",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.ILayerVersion",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Runtime"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/layers:LayerVersion"
    },
    "@aws-cdk/aws-lambda.LayerVersionAttributes": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties necessary to import a LayerVersion.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const runtime: lambda.Runtime;\nconst layerVersionAttributes: lambda.LayerVersionAttributes = {\n  layerVersionArn: 'layerVersionArn',\n\n  // the properties below are optional\n  compatibleRuntimes: [runtime],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LayerVersionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layers.ts",
        "line": 134
      },
      "name": "LayerVersionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the LayerVersion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 138
          },
          "name": "layerVersionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The list of compatible runtimes with this Layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 143
          },
          "name": "compatibleRuntimes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Runtime"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/layers:LayerVersionAttributes"
    },
    "@aws-cdk/aws-lambda.LayerVersionOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Non runtime options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\nconst layerVersionOptions: lambda.LayerVersionOptions = {\n  description: 'description',\n  layerVersionName: 'layerVersionName',\n  license: 'license',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LayerVersionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layers.ts",
        "line": 11
      },
      "name": "LayerVersionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "The description the this Lambda Layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 17
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name will be generated.",
            "stability": "stable",
            "summary": "The name of the layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 31
          },
          "name": "layerVersionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No license information will be recorded.",
            "stability": "stable",
            "summary": "The SPDX licence identifier or URL to the license file for this layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 24
          },
          "name": "license",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.DESTROY",
            "stability": "stable",
            "summary": "Whether to retain this version of the layer when a new version is added or when the stack is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 39
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ],
      "symbolId": "lib/layers:LayerVersionOptions"
    },
    "@aws-cdk/aws-lambda.LayerVersionPermission": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Identification of an account (or organization) that is allowed to access a Lambda Layer Version.",
        "example": "const layer = new lambda.LayerVersion(stack, 'MyLayer', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'layer-code')),\n  compatibleRuntimes: [lambda.Runtime.NODEJS_14_X],\n  license: 'Apache-2.0',\n  description: 'A layer to test the L2 construct',\n});\n\n// To grant usage by other AWS accounts\nlayer.addPermission('remote-account-grant', { accountId: awsAccountId });\n\n// To grant usage to all accounts in some AWS Ogranization\n// layer.grantUsage({ accountId: '*', organizationId });\n\nnew lambda.Function(stack, 'MyLayeredLambda', {\n  code: new lambda.InlineCode('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  layers: [layer],\n});",
        "custom": {
          "exampleMetadata": "lit=test/integ.layer-version.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LayerVersionPermission",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layers.ts",
        "line": 116
      },
      "name": "LayerVersionPermission",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The wild-card ``'*'`` can be\nused to grant access to \"any\" account (or any account in an organization when ``organizationId`` is specified).",
            "stability": "stable",
            "summary": "The AWS Account id of the account that is authorized to use a Lambda Layer Version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 121
          },
          "name": "accountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can only be specified if ``accountId`` is ``'*'``",
            "stability": "stable",
            "summary": "The ID of the AWS Organization to which the grant is restricted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 128
          },
          "name": "organizationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/layers:LayerVersionPermission"
    },
    "@aws-cdk/aws-lambda.LayerVersionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "new lambda.LayerVersion(this, 'MyLayer', {\n  removalPolicy: RemovalPolicy.RETAIN,\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n  compatibleArchitectures: [lambda.Architecture.X86_64, lambda.Architecture.ARM_64],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LayerVersionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.LayerVersionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layers.ts",
        "line": 42
      },
      "name": "LayerVersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Using `Code.fromInline` is not supported.",
            "stability": "stable",
            "summary": "The content of this Layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 61
          },
          "name": "code",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Code"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[Architecture.X86_64]",
            "stability": "stable",
            "summary": "The system architectures compatible with this layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 54
          },
          "name": "compatibleArchitectures",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Architecture"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All runtimes are supported.",
            "stability": "stable",
            "summary": "The runtimes compatible with this Layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layers.ts",
            "line": 48
          },
          "name": "compatibleRuntimes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Runtime"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/layers:LayerVersionProps"
    },
    "@aws-cdk/aws-lambda.LogRetention": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-logs.LogRetention",
      "docs": {
        "custom": {
          "aws-cdk": "/aws-logs' instead",
          "exampleMetadata": "fixture=_generated"
        },
        "deprecated": "use `LogRetention` from '",
        "remarks": "The log group is created if it doesn't already exist. The policy\nis removed when `retentionDays` is `undefined` or equal to `Infinity`.",
        "stability": "deprecated",
        "summary": "Creates a custom resource to control the retention policy of a CloudWatch Logs log group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const role: iam.Role;\nconst logRetention = new lambda.LogRetention(this, 'MyLogRetention', {\n  logGroupName: 'logGroupName',\n  retention: logs.RetentionDays.ONE_DAY,\n\n  // the properties below are optional\n  logGroupRegion: 'logGroupRegion',\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  role: role,\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.LogRetention",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/log-retention.ts",
          "line": 26
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LogRetentionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-retention.ts",
        "line": 25
      },
      "name": "LogRetention",
      "symbolId": "lib/log-retention:LogRetention"
    },
    "@aws-cdk/aws-lambda.LogRetentionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "custom": {
          "aws-cdk": "/aws-logs' instead",
          "exampleMetadata": "fixture=_generated"
        },
        "deprecated": "use `LogRetentionProps` from '",
        "stability": "deprecated",
        "summary": "Construction properties for a LogRetention.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const role: iam.Role;\nconst logRetentionProps: lambda.LogRetentionProps = {\n  logGroupName: 'logGroupName',\n  retention: logs.RetentionDays.ONE_DAY,\n\n  // the properties below are optional\n  logGroupRegion: 'logGroupRegion',\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  role: role,\n};"
      },
      "fqn": "@aws-cdk/aws-lambda.LogRetentionProps",
      "interfaces": [
        "@aws-cdk/aws-logs.LogRetentionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-retention.ts",
        "line": 15
      },
      "name": "LogRetentionProps",
      "symbolId": "lib/log-retention:LogRetentionProps"
    },
    "@aws-cdk/aws-lambda.LogRetentionRetryOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Retry options for all AWS API calls.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\nconst logRetentionRetryOptions: lambda.LogRetentionRetryOptions = {\n  base: cdk.Duration.minutes(30),\n  maxRetries: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.LogRetentionRetryOptions",
      "interfaces": [
        "@aws-cdk/aws-logs.LogRetentionRetryOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-retention.ts",
        "line": 7
      },
      "name": "LogRetentionRetryOptions",
      "symbolId": "lib/log-retention:LogRetentionRetryOptions"
    },
    "@aws-cdk/aws-lambda.Permission": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a permission statement that can be added to a Lambda function's resource policy via the `addPermission()` method.",
        "example": "declare const fn: lambda.Function;\nconst principal = new iam.ServicePrincipal('my-service');\n\nfn.grantInvoke(principal);\n\n// Equivalent to:\nfn.addPermission('my-service Invocation', {\n  principal: principal,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Permission",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/permission.ts",
        "line": 13
      },
      "name": "Permission",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This entity can be any valid AWS service principal, such as\ns3.amazonaws.com or sns.amazonaws.com, or, if you are granting\ncross-account permission, an AWS account ID. For example, you might want\nto allow a custom application in another AWS account to push events to\nLambda by invoking your function.\n\nThe principal can be either an AccountPrincipal or a ServicePrincipal.",
            "stability": "stable",
            "summary": "The entity for which you are granting permission to invoke the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 43
          },
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'lambda:InvokeFunction'",
            "remarks": "For example,\nyou can specify lambda:CreateFunction to specify a certain action, or use\na wildcard (``lambda:*``) to grant permission to all Lambda actions. For a\nlist of actions, see Actions and Condition Context Keys for AWS Lambda in\nthe IAM User Guide.",
            "stability": "stable",
            "summary": "The Lambda actions that you want to allow in this statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 23
          },
          "name": "action",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The caller would not need to present a token.",
            "stability": "stable",
            "summary": "A unique token that must be supplied by the principal invoking the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 31
          },
          "name": "eventSourceToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No functionUrlAuthType",
            "stability": "stable",
            "summary": "The authType for the function URL that you are granting permissions for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 78
          },
          "name": "functionUrlAuthType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionUrlAuthType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The instance of lambda.IFunction",
            "remarks": "The default is\nthe Lambda function construct itself, but this would need to be different\nin cases such as cross-stack references where the Permissions would need\nto sit closer to the consumer of this permission (i.e., the caller).",
            "stability": "stable",
            "summary": "The scope to which the permission constructs be attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 53
          },
          "name": "scope",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Construct"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, if\nyou specify an S3 bucket in the SourceArn property, this value is the\nbucket owner's account ID. You can use this property to ensure that all\nsource principals are owned by a specific account.",
            "stability": "stable",
            "summary": "The AWS account ID (without hyphens) of the source owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 61
          },
          "name": "sourceAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When granting\nAmazon Simple Storage Service (Amazon S3) permission to invoke your\nfunction, specify this property with the bucket ARN as its value. This\nensures that events generated only from the specified bucket, not just\nany bucket from any AWS account that creates a mapping to your function,\ncan invoke the function.",
            "stability": "stable",
            "summary": "The ARN of a resource that is invoking your function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/permission.ts",
            "line": 71
          },
          "name": "sourceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/permission:Permission"
    },
    "@aws-cdk/aws-lambda.QualifiedFunctionBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.FunctionBase",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 150
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function-base.ts",
        "line": 627
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures options for asynchronous invocation."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 647
          },
          "name": "configureAsyncInvoke",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
            "stability": "stable",
            "summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function."
          },
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 659
          },
          "name": "considerWarningOnInvokeFunctionPermissions",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_action",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "QualifiedFunctionBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 628
          },
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "docs": {
            "remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
            "stability": "stable",
            "summary": "The `$LATEST` version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 639
          },
          "name": "latestVersion",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 630
          },
          "name": "permissionsNode",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "A qualifier is the identifier that's appended to a version or alias ARN.",
            "see": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConfiguration.html#API_GetFunctionConfiguration_RequestParameters",
            "stability": "stable",
            "summary": "The qualifier of the version or alias of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 637
          },
          "name": "qualifier",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke()."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function-base.ts",
            "line": 643
          },
          "name": "resourceArnsForGrantInvoke",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/function-base:QualifiedFunctionBase"
    },
    "@aws-cdk/aws-lambda.ResourceBindOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst resourceBindOptions: lambda.ResourceBindOptions = {\n  resourceProperty: 'resourceProperty',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.ResourceBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 318
      },
      "name": "ResourceBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Code",
            "see": "https://github.com/aws/aws-cdk/issues/1432",
            "stability": "stable",
            "summary": "The name of the CloudFormation property to annotate with asset metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 324
          },
          "name": "resourceProperty",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/code:ResourceBindOptions"
    },
    "@aws-cdk/aws-lambda.Runtime": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "remarks": "If you need to use a runtime name that doesn't exist as a static member, you\ncan instantiate a `Runtime` object, e.g: `new Runtime('nodejs99.99')`.",
        "stability": "stable",
        "summary": "Lambda function runtime environment.",
        "example": "import * as signer from '@aws-cdk/aws-signer';\n\nconst signingProfile = new signer.SigningProfile(this, 'SigningProfile', {\n  platform: signer.Platform.AWS_LAMBDA_SHA384_ECDSA,\n});\n\nconst codeSigningConfig = new lambda.CodeSigningConfig(this, 'CodeSigningConfig', {\n  signingProfiles: [signingProfile],\n});\n\nnew lambda.Function(this, 'Function', {\n  codeSigningConfig,\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Runtime",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/runtime.ts",
          "line": 242
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "family",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-lambda.RuntimeFamily"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LambdaRuntimeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/runtime.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 259
          },
          "name": "runtimeEquals",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Runtime"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 255
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Runtime",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of all known `Runtime`'s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 41
          },
          "name": "ALL",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.Runtime"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The .NET 6 runtime (dotnet6)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 154
          },
          "name": "DOTNET_6",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The .NET Core 1.0 runtime (dotnetcore1.0) Legacy runtime no longer supported by AWS Lambda. Migrate to the latest .NET Core runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 160
          },
          "name": "DOTNET_CORE_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The .NET Core 2.0 runtime (dotnetcore2.0) Legacy runtime no longer supported by AWS Lambda. Migrate to the latest .NET Core runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 166
          },
          "name": "DOTNET_CORE_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The .NET Core 2.1 runtime (dotnetcore2.1) Legacy runtime no longer supported by AWS Lambda. Migrate to the latest .NET Core runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 172
          },
          "name": "DOTNET_CORE_2_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The .NET Core 3.1 runtime (dotnetcore3.1)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 177
          },
          "name": "DOTNET_CORE_3_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "A special runtime entry to be used when function is using a docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 208
          },
          "name": "FROM_IMAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Go 1.x runtime (go1.x)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 182
          },
          "name": "GO_1_X",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Java 11 runtime (java11)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 147
          },
          "name": "JAVA_11",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Java 8 runtime (java8)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 133
          },
          "name": "JAVA_8",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Java 8 Corretto runtime (java8.al2)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 140
          },
          "name": "JAVA_8_CORRETTO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest NodeJS runtime.",
            "stability": "deprecated",
            "summary": "The NodeJS runtime (nodejs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 47
          },
          "name": "NODEJS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest NodeJS runtime.",
            "stability": "deprecated",
            "summary": "The NodeJS 10.x runtime (nodejs10.x)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 71
          },
          "name": "NODEJS_10_X",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The NodeJS 12.x runtime (nodejs12.x)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 76
          },
          "name": "NODEJS_12_X",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The NodeJS 14.x runtime (nodejs14.x)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 81
          },
          "name": "NODEJS_14_X",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The NodeJS 16.x runtime (nodejs16.x)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 86
          },
          "name": "NODEJS_16_X",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest NodeJS runtime.",
            "stability": "deprecated",
            "summary": "The NodeJS 4.3 runtime (nodejs4.3)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 53
          },
          "name": "NODEJS_4_3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest NodeJS runtime.",
            "stability": "deprecated",
            "summary": "The NodeJS 6.10 runtime (nodejs6.10)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 59
          },
          "name": "NODEJS_6_10",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest NodeJS runtime.",
            "stability": "deprecated",
            "summary": "The NodeJS 8.10 runtime (nodejs8.10)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 65
          },
          "name": "NODEJS_8_10",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The custom provided runtime (provided)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 198
          },
          "name": "PROVIDED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The custom provided runtime (provided)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 203
          },
          "name": "PROVIDED_AL2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest Python runtime.",
            "stability": "deprecated",
            "summary": "The Python 2.7 runtime (python2.7)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 92
          },
          "name": "PYTHON_2_7",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Legacy runtime no longer supported by AWS Lambda. Migrate to the latest Python runtime.",
            "remarks": "The Python 3.6 runtime is deprecated as of July 2022.",
            "stability": "deprecated",
            "summary": "The Python 3.6 runtime (python3.6) (not recommended)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 101
          },
          "name": "PYTHON_3_6",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Python 3.7 runtime (python3.7)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 109
          },
          "name": "PYTHON_3_7",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Python 3.8 runtime (python3.8)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 117
          },
          "name": "PYTHON_3_8",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Python 3.9 runtime (python3.9)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 125
          },
          "name": "PYTHON_3_9",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Ruby 2.5 runtime (ruby2.5) Legacy runtime no longer supported by AWS Lambda. Migrate to the latest Ruby runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 188
          },
          "name": "RUBY_2_5",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Ruby 2.7 runtime (ruby2.7)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 193
          },
          "name": "RUBY_2_7",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "docs": {
            "deprecated": "use `bundlingImage`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 235
          },
          "name": "bundlingDockerImage",
          "type": {
            "fqn": "@aws-cdk/core.BundlingDockerImage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The bundling Docker image for this runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 240
          },
          "name": "bundlingImage",
          "type": {
            "fqn": "@aws-cdk/core.DockerImage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of this runtime, as expected by the Lambda resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 213
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether this runtime is integrated with and supported for profiling using Amazon CodeGuru Profiler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 224
          },
          "name": "supportsCodeGuruProfiling",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the ``ZipFile`` (aka inline code) property can be used with this runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 219
          },
          "name": "supportsInlineCode",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The runtime family."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/runtime.ts",
            "line": 229
          },
          "name": "family",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.RuntimeFamily"
          }
        }
      ],
      "symbolId": "lib/runtime:Runtime"
    },
    "@aws-cdk/aws-lambda.RuntimeFamily": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-lambda.RuntimeFamily",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/runtime.ts",
        "line": 23
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODEJS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JAVA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PYTHON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DOTNET_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RUBY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OTHER"
        }
      ],
      "name": "RuntimeFamily",
      "symbolId": "lib/runtime:RuntimeFamily"
    },
    "@aws-cdk/aws-lambda.S3Code": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.Code",
      "docs": {
        "stability": "stable",
        "summary": "Lambda code from an S3 archive.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst s3Code = new lambda.S3Code(bucket, 'key', /* all optional props */ 'objectVersion');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.S3Code",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 222
        },
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "@aws-cdk/aws-s3.IBucket"
            }
          },
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "objectVersion",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 218
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 232
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.CodeConfig"
            }
          }
        }
      ],
      "name": "S3Code",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines whether this Code is inline code or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 219
          },
          "name": "isInline",
          "overrides": "@aws-cdk/aws-lambda.Code",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/code:S3Code"
    },
    "@aws-cdk/aws-lambda.SingletonFunction": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.FunctionBase",
      "docs": {
        "custom": {
          "resource": "AWS::Lambda::Function",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This construct is a way to guarantee that the lambda function will be guaranteed to be part of the stack,\nonce and only once, irrespective of how many times the construct is declared to be part of the stack.\nThis is guaranteed as long as the `uuid` property and the optional `lambdaPurpose` property stay the same\nwhenever they're declared into the stack.",
        "stability": "stable",
        "summary": "A Lambda that will only ever be added to a stack once.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const architecture: lambda.Architecture;\ndeclare const code: lambda.Code;\ndeclare const codeSigningConfig: lambda.CodeSigningConfig;\ndeclare const destination: lambda.IDestination;\ndeclare const eventSource: lambda.IEventSource;\ndeclare const fileSystem: lambda.FileSystem;\ndeclare const key: kms.Key;\ndeclare const lambdaInsightsVersion: lambda.LambdaInsightsVersion;\ndeclare const layerVersion: lambda.LayerVersion;\ndeclare const policyStatement: iam.PolicyStatement;\ndeclare const profilingGroup: codeguruprofiler.ProfilingGroup;\ndeclare const queue: sqs.Queue;\ndeclare const role: iam.Role;\ndeclare const runtime: lambda.Runtime;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const size: cdk.Size;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const vpc: ec2.Vpc;\nconst singletonFunction = new lambda.SingletonFunction(this, 'MySingletonFunction', {\n  code: code,\n  handler: 'handler',\n  runtime: runtime,\n  uuid: 'uuid',\n\n  // the properties below are optional\n  allowAllOutbound: false,\n  allowPublicSubnet: false,\n  architecture: architecture,\n  architectures: [architecture],\n  codeSigningConfig: codeSigningConfig,\n  currentVersionOptions: {\n    codeSha256: 'codeSha256',\n    description: 'description',\n    maxEventAge: cdk.Duration.minutes(30),\n    onFailure: destination,\n    onSuccess: destination,\n    provisionedConcurrentExecutions: 123,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n    retryAttempts: 123,\n  },\n  deadLetterQueue: queue,\n  deadLetterQueueEnabled: false,\n  deadLetterTopic: topic,\n  description: 'description',\n  environment: {\n    environmentKey: 'environment',\n  },\n  environmentEncryption: key,\n  ephemeralStorageSize: size,\n  events: [eventSource],\n  filesystem: fileSystem,\n  functionName: 'functionName',\n  initialPolicy: [policyStatement],\n  insightsVersion: lambdaInsightsVersion,\n  lambdaPurpose: 'lambdaPurpose',\n  layers: [layerVersion],\n  logRetention: logs.RetentionDays.ONE_DAY,\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  logRetentionRole: role,\n  maxEventAge: cdk.Duration.minutes(30),\n  memorySize: 123,\n  onFailure: destination,\n  onSuccess: destination,\n  profiling: false,\n  profilingGroup: profilingGroup,\n  reservedConcurrentExecutions: 123,\n  retryAttempts: 123,\n  role: role,\n  securityGroup: securityGroup,\n  securityGroups: [securityGroup],\n  timeout: cdk.Duration.minutes(30),\n  tracing: lambda.Tracing.ACTIVE,\n  vpc: vpc,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-lambda.SingletonFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/singleton-lambda.ts",
          "line": 64
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.SingletonFunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/singleton-lambda.ts",
        "line": 48
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Using node.addDependency() does not work on this method as the underlying lambda function is modeled as a singleton across the stack. Use this method instead to declare dependencies."
          },
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 154
          },
          "name": "addDependency",
          "parameters": [
            {
              "name": "up",
              "type": {
                "fqn": "@aws-cdk/core.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "If this is a ref to a Lambda function, this operation results in a no-op.",
            "stability": "stable",
            "summary": "Adds an environment variable to this Lambda function."
          },
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 131
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "docs": {
                "summary": "The environment variable key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The environment variable's value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Environment variable options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EnvironmentOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Function"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "if there are already 5 layers on this function, or the layer is incompatible with this function's runtime."
            },
            "stability": "stable",
            "summary": "Adds one or more Lambda Layers to this Lambda function."
          },
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 142
          },
          "name": "addLayers",
          "parameters": [
            {
              "docs": {
                "summary": "the layers to be added."
              },
              "name": "layers",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.ILayerVersion"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a permission to the Lambda resource policy."
          },
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 146
          },
          "name": "addPermission",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Permission"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The SingletonFunction construct cannot be added as a dependency of another construct using node.addDependency(). Use this method instead to declare this as a dependency of another construct."
          },
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 162
          },
          "name": "dependOn",
          "parameters": [
            {
              "name": "down",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        }
      ],
      "name": "SingletonFunction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The architecture of this Lambda Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 54
          },
          "name": "architecture",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "docs": {
            "remarks": "True for new Lambdas, false for version $LATEST and imported Lambdas\nfrom different accounts.",
            "stability": "stable",
            "summary": "Whether the addPermission() call adds any permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 61
          },
          "name": "canCreatePermissions",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "Will fail if not a VPC-enabled Lambda Function",
            "stability": "stable",
            "summary": "Access the Connections object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 90
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "remarks": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.SingletonFunction`.",
            "stability": "stable",
            "summary": "Returns a `lambda.Version` which represents the current version of this singleton Lambda function. A new version will be created every time the function's configuration changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 116
          },
          "name": "currentVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Version"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN fo the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 51
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 50
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal this Lambda Function is running as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 49
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "remarks": "If this is is `false`, trying to access the `connections` object will fail.",
            "stability": "stable",
            "summary": "Whether or not this Lambda function was bound to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 83
          },
          "name": "isBoundToVpc",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.",
            "stability": "stable",
            "summary": "The LogGroup where the Lambda function's logs are made available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 104
          },
          "name": "logGroup",
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 53
          },
          "name": "permissionsNode",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke()."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 120
          },
          "name": "resourceArnsForGrantInvoke",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The runtime environment for the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 59
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        },
        {
          "docs": {
            "remarks": "Undefined if the function was imported without a role.",
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 52
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/singleton-lambda:SingletonFunction"
    },
    "@aws-cdk/aws-lambda.SingletonFunctionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a newly created singleton Lambda.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codeguruprofiler from '@aws-cdk/aws-codeguruprofiler';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const architecture: lambda.Architecture;\ndeclare const code: lambda.Code;\ndeclare const codeSigningConfig: lambda.CodeSigningConfig;\ndeclare const destination: lambda.IDestination;\ndeclare const eventSource: lambda.IEventSource;\ndeclare const fileSystem: lambda.FileSystem;\ndeclare const key: kms.Key;\ndeclare const lambdaInsightsVersion: lambda.LambdaInsightsVersion;\ndeclare const layerVersion: lambda.LayerVersion;\ndeclare const policyStatement: iam.PolicyStatement;\ndeclare const profilingGroup: codeguruprofiler.ProfilingGroup;\ndeclare const queue: sqs.Queue;\ndeclare const role: iam.Role;\ndeclare const runtime: lambda.Runtime;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const size: cdk.Size;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const vpc: ec2.Vpc;\nconst singletonFunctionProps: lambda.SingletonFunctionProps = {\n  code: code,\n  handler: 'handler',\n  runtime: runtime,\n  uuid: 'uuid',\n\n  // the properties below are optional\n  allowAllOutbound: false,\n  allowPublicSubnet: false,\n  architecture: architecture,\n  architectures: [architecture],\n  codeSigningConfig: codeSigningConfig,\n  currentVersionOptions: {\n    codeSha256: 'codeSha256',\n    description: 'description',\n    maxEventAge: cdk.Duration.minutes(30),\n    onFailure: destination,\n    onSuccess: destination,\n    provisionedConcurrentExecutions: 123,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n    retryAttempts: 123,\n  },\n  deadLetterQueue: queue,\n  deadLetterQueueEnabled: false,\n  deadLetterTopic: topic,\n  description: 'description',\n  environment: {\n    environmentKey: 'environment',\n  },\n  environmentEncryption: key,\n  ephemeralStorageSize: size,\n  events: [eventSource],\n  filesystem: fileSystem,\n  functionName: 'functionName',\n  initialPolicy: [policyStatement],\n  insightsVersion: lambdaInsightsVersion,\n  lambdaPurpose: 'lambdaPurpose',\n  layers: [layerVersion],\n  logRetention: logs.RetentionDays.ONE_DAY,\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  logRetentionRole: role,\n  maxEventAge: cdk.Duration.minutes(30),\n  memorySize: 123,\n  onFailure: destination,\n  onSuccess: destination,\n  profiling: false,\n  profilingGroup: profilingGroup,\n  reservedConcurrentExecutions: 123,\n  retryAttempts: 123,\n  role: role,\n  securityGroup: securityGroup,\n  securityGroups: [securityGroup],\n  timeout: cdk.Duration.minutes(30),\n  tracing: lambda.Tracing.ACTIVE,\n  vpc: vpc,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.SingletonFunctionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.FunctionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/singleton-lambda.ts",
        "line": 17
      },
      "name": "SingletonFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The identifier should be unique across all custom resource providers.\nWe recommend generating a UUID per provider.",
            "stability": "stable",
            "summary": "A unique identifier to identify this lambda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 24
          },
          "name": "uuid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SingletonLambda",
            "remarks": "If the Lambda does not have a physical name, this string will be\nreflected its generated name. The combination of lambdaPurpose\nand uuid must be unique.",
            "stability": "stable",
            "summary": "A descriptive name for the purpose of this Lambda."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/singleton-lambda.ts",
            "line": 35
          },
          "name": "lambdaPurpose",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/singleton-lambda:SingletonFunctionProps"
    },
    "@aws-cdk/aws-lambda.SourceAccessConfiguration": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specific settings like the authentication protocol or the VPC components to secure access to your event source.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const sourceAccessConfigurationType: lambda.SourceAccessConfigurationType;\nconst sourceAccessConfiguration: lambda.SourceAccessConfiguration = {\n  type: sourceAccessConfigurationType,\n  uri: 'uri',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.SourceAccessConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 63
      },
      "name": "SourceAccessConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example: \"SASL_SCRAM_512_AUTH\".",
            "stability": "stable",
            "summary": "The type of authentication protocol or the VPC components for your event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 67
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\".\nThe exact string depends on the type.",
            "see": "SourceAccessConfigurationType",
            "stability": "stable",
            "summary": "The value for your chosen configuration in type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 74
          },
          "name": "uri",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/event-source-mapping:SourceAccessConfiguration"
    },
    "@aws-cdk/aws-lambda.SourceAccessConfigurationType": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "see": "https://docs.aws.amazon.com/lambda/latest/dg/API_SourceAccessConfiguration.html#SSS-Type-SourceAccessConfiguration-Type",
        "stability": "stable",
        "summary": "The type of authentication protocol or the VPC components for your event source's SourceAccessConfiguration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nconst sourceAccessConfigurationType = lambda.SourceAccessConfigurationType.BASIC_AUTH;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A custom source access configuration property."
          },
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 45
          },
          "name": "of",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
            }
          },
          "static": true
        }
      ],
      "name": "SourceAccessConfigurationType",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "(MQ) The Secrets Manager secret that stores your broker credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 16
          },
          "name": "BASIC_AUTH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Secrets Manager ARN of your secret key containing the certificate chain (X.509 PEM), private key (PKCS#8 PEM), and private key password (optional) used for mutual TLS authentication of your MSK/Apache Kafka brokers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 42
          },
          "name": "CLIENT_CERTIFICATE_TLS_AUTH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your Self-Managed Apache Kafka brokers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 31
          },
          "name": "SASL_SCRAM_256_AUTH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your Self-Managed Apache Kafka brokers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 36
          },
          "name": "SASL_SCRAM_512_AUTH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC security group used to manage access to your Self-Managed Apache Kafka brokers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 26
          },
          "name": "VPC_SECURITY_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Lambda connects to these subnets to fetch data from your Self-Managed Apache Kafka cluster.",
            "stability": "stable",
            "summary": "The subnets associated with your VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 21
          },
          "name": "VPC_SUBNET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.SourceAccessConfigurationType"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-eventsourcemapping-sourceaccessconfiguration.html#cfn-lambda-eventsourcemapping-sourceaccessconfiguration-type",
            "stability": "stable",
            "summary": "The key to use in `SourceAccessConfigurationProperty.Type` property in CloudFormation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/event-source-mapping.ts",
            "line": 53
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/event-source-mapping:SourceAccessConfigurationType"
    },
    "@aws-cdk/aws-lambda.StartingPosition": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "The position in the DynamoDB, Kinesis or MSK stream where AWS Lambda should start reading.",
        "example": "import { Secret } from '@aws-cdk/aws-secretsmanager';\nimport { SelfManagedKafkaEventSource } from '@aws-cdk/aws-lambda-event-sources';\n\n// The list of Kafka brokers\nconst bootstrapServers = ['kafka-broker:9092'];\n\n// The Kafka topic you want to subscribe to\nconst topic = 'some-cool-topic';\n\n// The secret that allows access to your self hosted Kafka cluster\ndeclare const secret: Secret;\n\ndeclare const myFunction: lambda.Function;\nmyFunction.addEventSource(new SelfManagedKafkaEventSource({\n  bootstrapServers: bootstrapServers,\n  topic: topic,\n  secret: secret,\n  batchSize: 100, // default\n  startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.StartingPosition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/event-source-mapping.ts",
        "line": 342
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard."
          },
          "name": "TRIM_HORIZON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard."
          },
          "name": "LATEST"
        }
      ],
      "name": "StartingPosition",
      "symbolId": "lib/event-source-mapping:StartingPosition"
    },
    "@aws-cdk/aws-lambda.Tracing": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "X-Ray Tracing Modes (https://docs.aws.amazon.com/lambda/latest/dg/API_TracingConfig.html).",
        "example": "const fn = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { return cb(null, \"hi\"); }'),\n  tracing: lambda.Tracing.ACTIVE,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Tracing",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 36
      },
      "members": [
        {
          "docs": {
            "remarks": "If no tracing header is received, Lambda will call X-Ray for a tracing decision.",
            "stability": "stable",
            "summary": "Lambda will respect any tracing header it receives from an upstream service."
          },
          "name": "ACTIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Lambda will only trace the request from an upstream service if it contains a tracing header with \"sampled=1\"."
          },
          "name": "PASS_THROUGH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Lambda will not trace any request."
          },
          "name": "DISABLED"
        }
      ],
      "name": "Tracing",
      "symbolId": "lib/function:Tracing"
    },
    "@aws-cdk/aws-lambda.UntrustedArtifactOnDeployment": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "stability": "stable",
        "summary": "Code signing configuration policy for deployment validation failure."
      },
      "fqn": "@aws-cdk/aws-lambda.UntrustedArtifactOnDeployment",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/code-signing-config.ts",
        "line": 9
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Lambda blocks the deployment request if signature validation checks fail."
          },
          "name": "ENFORCE"
        },
        {
          "docs": {
            "remarks": "Lambda issues a new Amazon CloudWatch metric, called a signature validation error and also stores the warning in CloudTrail.",
            "stability": "stable",
            "summary": "Lambda allows the deployment of the code package, but issues a warning."
          },
          "name": "WARN"
        }
      ],
      "name": "UntrustedArtifactOnDeployment",
      "symbolId": "lib/code-signing-config:UntrustedArtifactOnDeployment"
    },
    "@aws-cdk/aws-lambda.UtilizationScalingOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for enabling Lambda utilization tracking.",
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.UtilizationScalingOptions",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-attribute-api.ts",
        "line": 24
      },
      "name": "UtilizationScalingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, .5 indicates that 50 percent of allocated provisioned concurrency is in use.",
            "stability": "stable",
            "summary": "Utilization target for the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-attribute-api.ts",
            "line": 28
          },
          "name": "utilizationTarget",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/scalable-attribute-api:UtilizationScalingOptions"
    },
    "@aws-cdk/aws-lambda.Version": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
      "docs": {
        "remarks": "Avoid using this resource directly. If you need a Version object, use\n`function.currentVersion` instead. That will add a Version object to your\ntemplate, and make sure the Version is invalidated whenever the Function\nobject changes. If you use the `Version` resource directly, you are\nresponsible for making sure it is invalidated (by changing its\nlogical ID) whenever necessary.\n\nVersion resources can then be used in `Alias` resources to refer to a\nparticular deployment of a Lambda.\n\nIf you want to ensure that you're associating the right version with\nthe right deployment, specify the `codeSha256` property while\ncreating the `Version.",
        "stability": "stable",
        "summary": "Tag the current state of a Function with a Version number.",
        "example": "const lambdaCode = lambda.Code.fromCfnParameters();\nconst func = new lambda.Function(this, 'Lambda', {\n  code: lambdaCode,\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n// used to make sure each CDK synthesis produces a different Version\nconst version = func.currentVersion;\nconst alias = new lambda.Alias(this, 'LambdaAlias', {\n  aliasName: 'Prod',\n  version,\n});\n\nnew codedeploy.LambdaDeploymentGroup(this, 'DeploymentGroup', {\n  alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.Version",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lambda-version.ts",
          "line": 189
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.VersionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IVersion"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda-version.ts",
        "line": 114
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct a Version object from a Version ARN."
          },
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 123
          },
          "name": "fromVersionArn",
          "parameters": [
            {
              "docs": {
                "summary": "The cdk scope creating this resource."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The cdk id of this resource."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The version ARN to create this version from."
              },
              "name": "versionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IVersion"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 153
          },
          "name": "fromVersionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.VersionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IVersion"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Calling `addAlias` on a `Version` object will cause the Alias to be replaced on every function update. Call `function.addAlias()` or `new Alias()` instead.",
            "stability": "deprecated",
            "summary": "Defines an alias for this version."
          },
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 251
          },
          "name": "addAlias",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the alias (e.g. \"live\")."
              },
              "name": "aliasName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Alias options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AliasOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Alias"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this Function."
          },
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 231
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Version",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The architecture of this Lambda Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 184
          },
          "name": "architecture",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "docs": {
            "remarks": "True for new Lambdas, false for version $LATEST and imported Lambdas\nfrom different accounts.",
            "stability": "stable",
            "summary": "Whether the addPermission() call adds any permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 187
          },
          "name": "canCreatePermissions",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the version for Lambda@Edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 255
          },
          "name": "edgeArn",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN fo the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 182
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 183
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal this Lambda Function is running as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 223
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The underlying AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 181
          },
          "name": "lambda",
          "overrides": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "docs": {
            "remarks": "A qualifier is the identifier that's appended to a version or alias ARN.",
            "stability": "stable",
            "summary": "The qualifier of the version or alias of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 186
          },
          "name": "qualifier",
          "overrides": "@aws-cdk/aws-lambda.QualifiedFunctionBase",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The most recently deployed version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 180
          },
          "name": "version",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Undefined if the function was imported without a role.",
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 227
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.FunctionBase",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lambda-version:Version"
    },
    "@aws-cdk/aws-lambda.VersionAttributes": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const function_: lambda.Function;\nconst versionAttributes: lambda.VersionAttributes = {\n  lambda: function_,\n  version: 'version',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.VersionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda-version.ts",
        "line": 85
      },
      "name": "VersionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 94
          },
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 89
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda-version:VersionAttributes"
    },
    "@aws-cdk/aws-lambda.VersionOptions": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `lambda.Version`.",
        "example": "const fn = new lambda.Function(this, 'MyFunction', {\n  currentVersionOptions: {\n    removalPolicy: RemovalPolicy.RETAIN, // retain old versions\n    retryAttempts: 1,                   // async retry attempts\n  },\n  runtime: lambda.Runtime.NODEJS_16_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\nfn.addAlias('live');",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.VersionOptions",
      "interfaces": [
        "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda-version.ts",
        "line": 42
      },
      "name": "VersionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No validation is performed",
            "remarks": "Specify to validate that you're deploying the right version.",
            "stability": "stable",
            "summary": "SHA256 of the version of the Lambda source code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 50
          },
          "name": "codeSha256",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Description of the Lambda",
            "stability": "stable",
            "summary": "Description of the version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 57
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No provisioned concurrency",
            "stability": "stable",
            "summary": "Specifies a provisioned concurrency configuration for a function's version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 64
          },
          "name": "provisionedConcurrentExecutions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.DESTROY",
            "stability": "stable",
            "summary": "Whether to retain old versions of this function when a new version is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 72
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ],
      "symbolId": "lib/lambda-version:VersionOptions"
    },
    "@aws-cdk/aws-lambda.VersionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a new Lambda version.",
        "example": "declare const fn: lambda.Function;\nconst version = new lambda.Version(this, 'MyVersion', {\n  lambda: fn,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.VersionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.VersionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda-version.ts",
        "line": 78
      },
      "name": "VersionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Function to get the value of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda-version.ts",
            "line": 82
          },
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ],
      "symbolId": "lib/lambda-version:VersionProps"
    },
    "@aws-cdk/aws-lambda.VersionWeight": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A version/weight pair for routing traffic to Lambda functions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const version: lambda.Version;\nconst versionWeight: lambda.VersionWeight = {\n  version: version,\n  weight: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-lambda.VersionWeight",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias.ts",
        "line": 295
      },
      "name": "VersionWeight",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The version to route traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 299
          },
          "name": "version",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "How much weight to assign to this version (0..1)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias.ts",
            "line": 304
          },
          "name": "weight",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/alias:VersionWeight"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}