{"version":"2","toolVersion":"1.80.0","snippets":{"b93dcd77e3f4a567a4aacac01b43f145bbdd5efb5e751a87133c8e8293b715b8":{"translations":{"python":{"source":"# Configure log group for short retention\nlog_group = LogGroup(stack, \"LogGroup\",\n    retention=RetentionDays.ONE_WEEK\n)# Configure log group for infinite retention\nlog_group = LogGroup(stack, \"LogGroup\",\n    retention=Infinity\n)","version":"2"},"csharp":{"source":"// Configure log group for short retention\nvar logGroup = new LogGroup(stack, \"LogGroup\", new LogGroupProps {\n    Retention = RetentionDays.ONE_WEEK\n});// Configure log group for infinite retention\nvar logGroup = new LogGroup(stack, \"LogGroup\", new LogGroupProps {\n    Retention = Infinity\n});","version":"1"},"java":{"source":"// Configure log group for short retention\nLogGroup logGroup = LogGroup.Builder.create(stack, \"LogGroup\")\n        .retention(RetentionDays.ONE_WEEK)\n        .build();// Configure log group for infinite retention\nLogGroup logGroup = LogGroup.Builder.create(stack, \"LogGroup\")\n        .retention(Infinity)\n        .build();","version":"1"},"go":{"source":"// Configure log group for short retention\nlogGroup := lib.NewLogGroup(stack, jsii.String(\"LogGroup\"), &LogGroupProps{\n\tRetention: *lib.RetentionDays_ONE_WEEK,\n})// Configure log group for infinite retention\nlogGroup := lib.NewLogGroup(stack, jsii.String(\"LogGroup\"), &LogGroupProps{\n\tRetention: infinity,\n})","version":"1"},"$":{"source":"// Configure log group for short retention\nconst logGroup = new LogGroup(stack, 'LogGroup', {\n  retention: RetentionDays.ONE_WEEK,\n});\n// Configure log group for infinite retention\nconst logGroup = new LogGroup(stack, 'LogGroup', {\n  retention: Infinity,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":35}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.LogGroup","@aws-cdk/aws-logs.LogGroupProps","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#ONE_WEEK","constructs.Construct"],"fullSource":"import { Stack } from '@aws-cdk/core';\nimport { LogGroup, RetentionDays } from '../lib';\n\nconst stack = new Stack();\n\nfunction shortLogGroup() {\n  /// !show\n  // Configure log group for short retention\n  const logGroup = new LogGroup(stack, 'LogGroup', {\n    retention: RetentionDays.ONE_WEEK,\n  });\n  /// !hide\n  return logGroup;\n}\n\nfunction infiniteLogGroup() {\n  /// !show\n  // Configure log group for infinite retention\n  const logGroup = new LogGroup(stack, 'LogGroup', {\n    retention: Infinity,\n  });\n  /// !hide\n  return logGroup;\n}\n\n//\n\nArray.isArray(shortLogGroup);\nArray.isArray(infiniteLogGroup);\n","syntaxKindCounter":{"10":2,"75":11,"193":2,"194":1,"197":2,"225":2,"242":2,"243":2,"281":2},"fqnsFingerprint":"9317f82b3764813bd2755775b28e33e4c0b660d095ddc60f58de06beaf3005bd"},"985b5df53091f5f49370710f19c29eb310deb4093e54070a97f1e242623ad2ee":{"translations":{"python":{"source":"log_group = logs.LogGroup(self, \"LogGroup\")\nlog_group.add_to_resource_policy(iam.PolicyStatement(\n    actions=[\"logs:CreateLogStream\", \"logs:PutLogEvents\"],\n    principals=[iam.ServicePrincipal(\"es.amazonaws.com\")],\n    resources=[log_group.log_group_arn]\n))","version":"2"},"csharp":{"source":"var logGroup = new LogGroup(this, \"LogGroup\");\nlogGroup.AddToResourcePolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"logs:CreateLogStream\", \"logs:PutLogEvents\" },\n    Principals = new [] { new ServicePrincipal(\"es.amazonaws.com\") },\n    Resources = new [] { logGroup.LogGroupArn }\n}));","version":"1"},"java":{"source":"LogGroup logGroup = new LogGroup(this, \"LogGroup\");\nlogGroup.addToResourcePolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"logs:CreateLogStream\", \"logs:PutLogEvents\"))\n        .principals(List.of(new ServicePrincipal(\"es.amazonaws.com\")))\n        .resources(List.of(logGroup.getLogGroupArn()))\n        .build());","version":"1"},"go":{"source":"logGroup := logs.NewLogGroup(this, jsii.String(\"LogGroup\"))\nlogGroup.addToResourcePolicy(iam.NewPolicyStatement(&PolicyStatementProps{\n\tActions: []*string{\n\t\tjsii.String(\"logs:CreateLogStream\"),\n\t\tjsii.String(\"logs:PutLogEvents\"),\n\t},\n\tPrincipals: []iPrincipal{\n\t\tiam.NewServicePrincipal(jsii.String(\"es.amazonaws.com\")),\n\t},\n\tResources: []*string{\n\t\tlogGroup.LogGroupArn,\n\t},\n}))","version":"1"},"$":{"source":"const logGroup = new logs.LogGroup(this, 'LogGroup');\nlogGroup.addToResourcePolicy(new iam.PolicyStatement({\n    actions: ['logs:CreateLogStream', 'logs:PutLogEvents'],\n    principals: [new iam.ServicePrincipal('es.amazonaws.com')],\n    resources: [logGroup.logGroupArn],\n}));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":65}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-logs.LogGroup","@aws-cdk/aws-logs.LogGroup#logGroupArn","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst logGroup = new logs.LogGroup(this, 'LogGroup');\nlogGroup.addToResourcePolicy(new iam.PolicyStatement({\n    actions: ['logs:CreateLogStream', 'logs:PutLogEvents'],\n    principals: [new iam.ServicePrincipal('es.amazonaws.com')],\n    resources: [logGroup.logGroupArn],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":4,"75":14,"104":1,"192":3,"193":1,"194":5,"196":1,"197":3,"225":1,"226":1,"242":1,"243":1,"281":3},"fqnsFingerprint":"3308da1affe035270c3ed7b6448fd091ef4a0678032c766b9eaf3a471cecbe0a"},"3a8fcdb50dbc930d42a30acced3c4886f44813645c1eeaaa3ac4ad6674a201bf":{"translations":{"python":{"source":"log_group = logs.LogGroup(self, \"LogGroup\")\nlog_group.grant_write(iam.ServicePrincipal(\"es.amazonaws.com\"))","version":"2"},"csharp":{"source":"var logGroup = new LogGroup(this, \"LogGroup\");\nlogGroup.GrantWrite(new ServicePrincipal(\"es.amazonaws.com\"));","version":"1"},"java":{"source":"LogGroup logGroup = new LogGroup(this, \"LogGroup\");\nlogGroup.grantWrite(new ServicePrincipal(\"es.amazonaws.com\"));","version":"1"},"go":{"source":"logGroup := logs.NewLogGroup(this, jsii.String(\"LogGroup\"))\nlogGroup.grantWrite(iam.NewServicePrincipal(jsii.String(\"es.amazonaws.com\")))","version":"1"},"$":{"source":"const logGroup = new logs.LogGroup(this, 'LogGroup');\nlogGroup.grantWrite(new iam.ServicePrincipal('es.amazonaws.com'));","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":76}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.ServicePrincipal","@aws-cdk/aws-logs.LogGroup","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst logGroup = new logs.LogGroup(this, 'LogGroup');\nlogGroup.grantWrite(new iam.ServicePrincipal('es.amazonaws.com'));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":2,"75":7,"104":1,"194":3,"196":1,"197":2,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"48e7f4e9810861fa2a1a9f8b3d9398ffb212ce4ef066c971a87a54ad573df845"},"9c70243a96fbdfb055298a91d88726d122e04fb5da04e12e8b74d35bf4d683e6":{"translations":{"python":{"source":"import aws_cdk.aws_kms as kms\n\n\nlogs.LogGroup(self, \"LogGroup\",\n    encryption_key=kms.Key(self, \"Key\")\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.KMS;\n\n\nnew LogGroup(this, \"LogGroup\", new LogGroupProps {\n    EncryptionKey = new Key(this, \"Key\")\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.kms.*;\n\n\nLogGroup.Builder.create(this, \"LogGroup\")\n        .encryptionKey(new Key(this, \"Key\"))\n        .build();","version":"1"},"go":{"source":"import kms \"github.com/aws-samples/dummy/awscdkawskms\"\n\n\nlogs.NewLogGroup(this, jsii.String(\"LogGroup\"), &LogGroupProps{\n\tEncryptionKey: kms.NewKey(this, jsii.String(\"Key\")),\n})","version":"1"},"$":{"source":"import * as kms from '@aws-cdk/aws-kms';\n\nnew logs.LogGroup(this, 'LogGroup', {\n  encryptionKey: new kms.Key(this, 'Key'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":95}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","@aws-cdk/aws-logs.LogGroup","@aws-cdk/aws-logs.LogGroupProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as kms from '@aws-cdk/aws-kms';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew logs.LogGroup(this, 'LogGroup', {\n  encryptionKey: new kms.Key(this, 'Key'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":3,"75":6,"104":2,"193":1,"194":2,"197":2,"226":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"db1a8c1343118255c87c43d79b62950a6de077325d5638b130c60ec06da62adf"},"cb2571c517166398accdd86db72c8d603ddfb40d3a126c7614414fbf43206a77":{"translations":{"python":{"source":"import aws_cdk.aws_logs_destinations as destinations\n# fn: lambda.Function\n# log_group: logs.LogGroup\n\n\nlogs.SubscriptionFilter(self, \"Subscription\",\n    log_group=log_group,\n    destination=destinations.LambdaDestination(fn),\n    filter_pattern=logs.FilterPattern.all_terms(\"ERROR\", \"MainThread\")\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Logs.Destinations;\nFunction fn;\nLogGroup logGroup;\n\n\nnew SubscriptionFilter(this, \"Subscription\", new SubscriptionFilterProps {\n    LogGroup = logGroup,\n    Destination = new LambdaDestination(fn),\n    FilterPattern = FilterPattern.AllTerms(\"ERROR\", \"MainThread\")\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.logs.destinations.*;\nFunction fn;\nLogGroup logGroup;\n\n\nSubscriptionFilter.Builder.create(this, \"Subscription\")\n        .logGroup(logGroup)\n        .destination(new LambdaDestination(fn))\n        .filterPattern(FilterPattern.allTerms(\"ERROR\", \"MainThread\"))\n        .build();","version":"1"},"go":{"source":"import destinations \"github.com/aws-samples/dummy/awscdkawslogsdestinations\"\nvar fn function\nvar logGroup logGroup\n\n\nlogs.NewSubscriptionFilter(this, jsii.String(\"Subscription\"), &SubscriptionFilterProps{\n\tLogGroup: LogGroup,\n\tDestination: destinations.NewLambdaDestination(fn),\n\tFilterPattern: logs.FilterPattern_AllTerms(jsii.String(\"ERROR\"), jsii.String(\"MainThread\")),\n})","version":"1"},"$":{"source":"import * as destinations from '@aws-cdk/aws-logs-destinations';\ndeclare const fn: lambda.Function;\ndeclare const logGroup: logs.LogGroup;\n\nnew logs.SubscriptionFilter(this, 'Subscription', {\n  logGroup,\n  destination: new destinations.LambdaDestination(fn),\n  filterPattern: logs.FilterPattern.allTerms(\"ERROR\", \"MainThread\"),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":119}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-logs-destinations.LambdaDestination","@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#allTerms","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.ILogSubscriptionDestination","@aws-cdk/aws-logs.SubscriptionFilter","@aws-cdk/aws-logs.SubscriptionFilterProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as destinations from '@aws-cdk/aws-logs-destinations';\ndeclare const fn: lambda.Function;\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew logs.SubscriptionFilter(this, 'Subscription', {\n  logGroup,\n  destination: new destinations.LambdaDestination(fn),\n  filterPattern: logs.FilterPattern.allTerms(\"ERROR\", \"MainThread\"),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":4,"75":18,"104":1,"130":2,"153":2,"169":2,"193":1,"194":4,"196":1,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"282":1,"290":1},"fqnsFingerprint":"c4976cece6cd33aa4c017d9630d31206fe2b4af8c139af7663f6f9b4d5f47ddb"},"3e4f9df91c64586fbd3c7276422a7f18175545ca8825131b1a272f7de1dd4abd":{"translations":{"python":{"source":"MetricFilter(self, \"MetricFilter\",\n    log_group=log_group,\n    metric_namespace=\"MyApp\",\n    metric_name=\"Latency\",\n    filter_pattern=FilterPattern.exists(\"$.latency\"),\n    metric_value=\"$.latency\"\n)","version":"2"},"csharp":{"source":"new MetricFilter(this, \"MetricFilter\", new MetricFilterProps {\n    LogGroup = logGroup,\n    MetricNamespace = \"MyApp\",\n    MetricName = \"Latency\",\n    FilterPattern = FilterPattern.Exists(\"$.latency\"),\n    MetricValue = \"$.latency\"\n});","version":"1"},"java":{"source":"MetricFilter.Builder.create(this, \"MetricFilter\")\n        .logGroup(logGroup)\n        .metricNamespace(\"MyApp\")\n        .metricName(\"Latency\")\n        .filterPattern(FilterPattern.exists(\"$.latency\"))\n        .metricValue(\"$.latency\")\n        .build();","version":"1"},"go":{"source":"lib.NewMetricFilter(this, jsii.String(\"MetricFilter\"), &MetricFilterProps{\n\tLogGroup: LogGroup,\n\tMetricNamespace: jsii.String(\"MyApp\"),\n\tMetricName: jsii.String(\"Latency\"),\n\tFilterPattern: *lib.FilterPattern_Exists(jsii.String(\"$.latency\")),\n\tMetricValue: jsii.String(\"$.latency\"),\n})","version":"1"},"$":{"source":"new MetricFilter(this, 'MetricFilter', {\n  logGroup,\n  metricNamespace: 'MyApp',\n  metricName: 'Latency',\n  filterPattern: FilterPattern.exists('$.latency'),\n  metricValue: '$.latency',\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":143}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern#exists","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.MetricFilter","@aws-cdk/aws-logs.MetricFilterProps","@aws-cdk/core.RemovalPolicy","constructs.Construct"],"fullSource":"import { App, RemovalPolicy, Stack, StackProps } from '@aws-cdk/core';\nimport { FilterPattern, LogGroup, MetricFilter } from '../lib';\n\nclass MetricFilterIntegStack extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const logGroup = new LogGroup(this, 'LogGroup', {\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    /// !show\n    new MetricFilter(this, 'MetricFilter', {\n      logGroup,\n      metricNamespace: 'MyApp',\n      metricName: 'Latency',\n      filterPattern: FilterPattern.exists('$.latency'),\n      metricValue: '$.latency',\n    });\n    /// !hide\n  }\n}\n\nconst app = new App();\nnew MetricFilterIntegStack(app, 'aws-cdk-metricfilter-integ');\napp.synth();\n","syntaxKindCounter":{"10":5,"75":8,"104":1,"193":1,"194":1,"196":1,"197":1,"226":1,"281":4,"282":1},"fqnsFingerprint":"807e3d39d26baa68827a53009916a79dec3f6b9f4702e11808620a18b25dfd53"},"1055fce4065d6d23483cf42bc5062f7f6ec193d23f877f2a10dfede07e71b759":{"translations":{"python":{"source":"# log_group: logs.LogGroup\n\nlog_group.extract_metric(\"$.jsonField\", \"Namespace\", \"MetricName\")","version":"2"},"csharp":{"source":"LogGroup logGroup;\n\nlogGroup.ExtractMetric(\"$.jsonField\", \"Namespace\", \"MetricName\");","version":"1"},"java":{"source":"LogGroup logGroup;\n\nlogGroup.extractMetric(\"$.jsonField\", \"Namespace\", \"MetricName\");","version":"1"},"go":{"source":"var logGroup logGroup\n\nlogGroup.extractMetric(jsii.String(\"$.jsonField\"), jsii.String(\"Namespace\"), jsii.String(\"MetricName\"))","version":"1"},"$":{"source":"declare const logGroup: logs.LogGroup;\nlogGroup.extractMetric('$.jsonField', 'Namespace', 'MetricName');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":159}},"didCompile":true,"fqnsReferenced":[],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nlogGroup.extractMetric('$.jsonField', 'Namespace', 'MetricName');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":3,"75":5,"130":1,"153":1,"169":1,"194":1,"196":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"286b56ff6fb84fcebe253f25a5a40c01e231a07aa6faf248597c5ab7243f1f6a":{"translations":{"python":{"source":"# log_group: logs.LogGroup\n\nmf = logs.MetricFilter(self, \"MetricFilter\",\n    log_group=log_group,\n    metric_namespace=\"MyApp\",\n    metric_name=\"Latency\",\n    filter_pattern=logs.FilterPattern.exists(\"$.latency\"),\n    metric_value=\"$.latency\"\n)\n\n# expose a metric from the metric filter\nmetric = mf.metric()\n\n# you can use the metric to create a new alarm\ncloudwatch.Alarm(self, \"alarm from metric filter\",\n    metric=metric,\n    threshold=100,\n    evaluation_periods=2\n)","version":"2"},"csharp":{"source":"LogGroup logGroup;\n\nvar mf = new MetricFilter(this, \"MetricFilter\", new MetricFilterProps {\n    LogGroup = logGroup,\n    MetricNamespace = \"MyApp\",\n    MetricName = \"Latency\",\n    FilterPattern = FilterPattern.Exists(\"$.latency\"),\n    MetricValue = \"$.latency\"\n});\n\n//expose a metric from the metric filter\nvar metric = mf.Metric();\n\n//you can use the metric to create a new alarm\n//you can use the metric to create a new alarm\nnew Alarm(this, \"alarm from metric filter\", new AlarmProps {\n    Metric = metric,\n    Threshold = 100,\n    EvaluationPeriods = 2\n});","version":"1"},"java":{"source":"LogGroup logGroup;\n\nMetricFilter mf = MetricFilter.Builder.create(this, \"MetricFilter\")\n        .logGroup(logGroup)\n        .metricNamespace(\"MyApp\")\n        .metricName(\"Latency\")\n        .filterPattern(FilterPattern.exists(\"$.latency\"))\n        .metricValue(\"$.latency\")\n        .build();\n\n//expose a metric from the metric filter\nMetric metric = mf.metric();\n\n//you can use the metric to create a new alarm\n//you can use the metric to create a new alarm\nAlarm.Builder.create(this, \"alarm from metric filter\")\n        .metric(metric)\n        .threshold(100)\n        .evaluationPeriods(2)\n        .build();","version":"1"},"go":{"source":"var logGroup logGroup\n\nmf := logs.NewMetricFilter(this, jsii.String(\"MetricFilter\"), &MetricFilterProps{\n\tLogGroup: LogGroup,\n\tMetricNamespace: jsii.String(\"MyApp\"),\n\tMetricName: jsii.String(\"Latency\"),\n\tFilterPattern: logs.FilterPattern_Exists(jsii.String(\"$.latency\")),\n\tMetricValue: jsii.String(\"$.latency\"),\n})\n\n//expose a metric from the metric filter\nmetric := mf.Metric()\n\n//you can use the metric to create a new alarm\n//you can use the metric to create a new alarm\ncloudwatch.NewAlarm(this, jsii.String(\"alarm from metric filter\"), &AlarmProps{\n\tMetric: Metric,\n\tThreshold: jsii.Number(100),\n\tEvaluationPeriods: jsii.Number(2),\n})","version":"1"},"$":{"source":"declare const logGroup: logs.LogGroup;\nconst mf = new logs.MetricFilter(this, 'MetricFilter', {\n  logGroup,\n  metricNamespace: 'MyApp',\n  metricName: 'Latency',\n  filterPattern: logs.FilterPattern.exists('$.latency'),\n  metricValue: '$.latency',\n});\n\n//expose a metric from the metric filter\nconst metric = mf.metric();\n\n//you can use the metric to create a new alarm\nnew cloudwatch.Alarm(this, 'alarm from metric filter', {\n  metric,\n  threshold: 100,\n  evaluationPeriods: 2,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":173}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch.Alarm","@aws-cdk/aws-cloudwatch.AlarmProps","@aws-cdk/aws-cloudwatch.IMetric","@aws-cdk/aws-cloudwatch.Metric","@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#exists","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.MetricFilter","@aws-cdk/aws-logs.MetricFilter#metric","@aws-cdk/aws-logs.MetricFilterProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst mf = new logs.MetricFilter(this, 'MetricFilter', {\n  logGroup,\n  metricNamespace: 'MyApp',\n  metricName: 'Latency',\n  filterPattern: logs.FilterPattern.exists('$.latency'),\n  metricValue: '$.latency',\n});\n\n//expose a metric from the metric filter\nconst metric = mf.metric();\n\n//you can use the metric to create a new alarm\nnew cloudwatch.Alarm(this, 'alarm from metric filter', {\n  metric,\n  threshold: 100,\n  evaluationPeriods: 2,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":2,"10":6,"75":22,"104":2,"130":1,"153":1,"169":1,"193":2,"194":5,"196":2,"197":2,"225":3,"226":1,"242":3,"243":3,"281":6,"282":2,"290":1},"fqnsFingerprint":"c805c89afc1528b053ce31578f556bff9dd03bddcca45e561d1d5326a11e286c"},"64e5b1c64c310e339119a8a76813d51249bad4471d11ec5074de3eb68096986b":{"translations":{"python":{"source":"# Search for lines that contain both \"ERROR\" and \"MainThread\"\npattern1 = logs.FilterPattern.all_terms(\"ERROR\", \"MainThread\")\n\n# Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n# both \"WARN\" and \"Deadlock\".\npattern2 = logs.FilterPattern.any_term_group([\"ERROR\", \"MainThread\"], [\"WARN\", \"Deadlock\"])","version":"2"},"csharp":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\nvar pattern1 = FilterPattern.AllTerms(\"ERROR\", \"MainThread\");\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nvar pattern2 = FilterPattern.AnyTermGroup(new [] { \"ERROR\", \"MainThread\" }, new [] { \"WARN\", \"Deadlock\" });","version":"1"},"java":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\nIFilterPattern pattern1 = FilterPattern.allTerms(\"ERROR\", \"MainThread\");\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nIFilterPattern pattern2 = FilterPattern.anyTermGroup(List.of(\"ERROR\", \"MainThread\"), List.of(\"WARN\", \"Deadlock\"));","version":"1"},"go":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\npattern1 := logs.FilterPattern_AllTerms(jsii.String(\"ERROR\"), jsii.String(\"MainThread\"))\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\npattern2 := logs.FilterPattern_AnyTermGroup([]*string{\n\tjsii.String(\"ERROR\"),\n\tjsii.String(\"MainThread\"),\n}, []*string{\n\tjsii.String(\"WARN\"),\n\tjsii.String(\"Deadlock\"),\n})","version":"1"},"$":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\nconst pattern1 = logs.FilterPattern.allTerms('ERROR', 'MainThread');\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nconst pattern2 = logs.FilterPattern.anyTermGroup(\n  ['ERROR', 'MainThread'],\n  ['WARN', 'Deadlock'],\n);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":229}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#allTerms","@aws-cdk/aws-logs.FilterPattern#anyTermGroup","@aws-cdk/aws-logs.IFilterPattern"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Search for lines that contain both \"ERROR\" and \"MainThread\"\nconst pattern1 = logs.FilterPattern.allTerms('ERROR', 'MainThread');\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nconst pattern2 = logs.FilterPattern.anyTermGroup(\n  ['ERROR', 'MainThread'],\n  ['WARN', 'Deadlock'],\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":6,"75":8,"192":2,"194":4,"196":2,"225":2,"242":2,"243":2},"fqnsFingerprint":"5ddcc4251313dda0663580d6112e97f9bddb899c9a72ed783f1c1793d4cb1345"},"5addc27a506797aac2c8825b92273f2c3a8c4e6a249763f9550a313229f0f2b5":{"translations":{"python":{"source":"# Search for all events where the component field is equal to\n# \"HttpServer\" and either error is true or the latency is higher\n# than 1000.\npattern = logs.FilterPattern.all(\n    logs.FilterPattern.string_value(\"$.component\", \"=\", \"HttpServer\"),\n    logs.FilterPattern.any(\n        logs.FilterPattern.boolean_value(\"$.error\", True),\n        logs.FilterPattern.number_value(\"$.latency\", \">\", 1000)))","version":"2"},"csharp":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nvar pattern = FilterPattern.All(FilterPattern.StringValue(\"$.component\", \"=\", \"HttpServer\"), FilterPattern.Any(FilterPattern.BooleanValue(\"$.error\", true), FilterPattern.NumberValue(\"$.latency\", \">\", 1000)));","version":"1"},"java":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nJsonPattern pattern = FilterPattern.all(FilterPattern.stringValue(\"$.component\", \"=\", \"HttpServer\"), FilterPattern.any(FilterPattern.booleanValue(\"$.error\", true), FilterPattern.numberValue(\"$.latency\", \">\", 1000)));","version":"1"},"go":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\npattern := logs.FilterPattern_All(logs.FilterPattern_StringValue(jsii.String(\"$.component\"), jsii.String(\"=\"), jsii.String(\"HttpServer\")), logs.FilterPattern_Any(logs.FilterPattern_BooleanValue(jsii.String(\"$.error\"), jsii.Boolean(true)), logs.FilterPattern_NumberValue(jsii.String(\"$.latency\"), jsii.String(\">\"), jsii.Number(1000))))","version":"1"},"$":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nconst pattern = logs.FilterPattern.all(\n  logs.FilterPattern.stringValue('$.component', '=', 'HttpServer'),\n  logs.FilterPattern.any(\n    logs.FilterPattern.booleanValue('$.error', true),\n    logs.FilterPattern.numberValue('$.latency', '>', 1000),\n  ),\n);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":277}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#all","@aws-cdk/aws-logs.FilterPattern#any","@aws-cdk/aws-logs.FilterPattern#booleanValue","@aws-cdk/aws-logs.FilterPattern#numberValue","@aws-cdk/aws-logs.FilterPattern#stringValue","@aws-cdk/aws-logs.JsonPattern"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nconst pattern = logs.FilterPattern.all(\n  logs.FilterPattern.stringValue('$.component', '=', 'HttpServer'),\n  logs.FilterPattern.any(\n    logs.FilterPattern.booleanValue('$.error', true),\n    logs.FilterPattern.numberValue('$.latency', '>', 1000),\n  ),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":6,"75":16,"106":1,"194":10,"196":5,"225":1,"242":1,"243":1},"fqnsFingerprint":"376fef3a73421cf7caf246b30cb963333eece753706ca50895d7c6c968c15d82"},"1f4ef47e33b7a9dce036335150bdbab991d9e3002577933b44ebe9bc66776980":{"translations":{"python":{"source":"# Search for all events where the component is \"HttpServer\" and the\n# result code is not equal to 200.\npattern = logs.FilterPattern.space_delimited(\"time\", \"component\", \"...\", \"result_code\", \"latency\").where_string(\"component\", \"=\", \"HttpServer\").where_number(\"result_code\", \"!=\", 200)","version":"2"},"csharp":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nvar pattern = FilterPattern.SpaceDelimited(\"time\", \"component\", \"...\", \"result_code\", \"latency\").WhereString(\"component\", \"=\", \"HttpServer\").WhereNumber(\"result_code\", \"!=\", 200);","version":"1"},"java":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nSpaceDelimitedTextPattern pattern = FilterPattern.spaceDelimited(\"time\", \"component\", \"...\", \"result_code\", \"latency\").whereString(\"component\", \"=\", \"HttpServer\").whereNumber(\"result_code\", \"!=\", 200);","version":"1"},"go":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\npattern := logs.FilterPattern_SpaceDelimited(jsii.String(\"time\"), jsii.String(\"component\"), jsii.String(\"...\"), jsii.String(\"result_code\"), jsii.String(\"latency\")).WhereString(jsii.String(\"component\"), jsii.String(\"=\"), jsii.String(\"HttpServer\")).WhereNumber(jsii.String(\"result_code\"), jsii.String(\"!=\"), jsii.Number(200))","version":"1"},"$":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nconst pattern = logs.FilterPattern.spaceDelimited('time', 'component', '...', 'result_code', 'latency')\n  .whereString('component', '=', 'HttpServer')\n  .whereNumber('result_code', '!=', 200);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":318}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#spaceDelimited","@aws-cdk/aws-logs.SpaceDelimitedTextPattern","@aws-cdk/aws-logs.SpaceDelimitedTextPattern#whereNumber","@aws-cdk/aws-logs.SpaceDelimitedTextPattern#whereString"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nconst pattern = logs.FilterPattern.spaceDelimited('time', 'component', '...', 'result_code', 'latency')\n  .whereString('component', '=', 'HttpServer')\n  .whereNumber('result_code', '!=', 200);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":10,"75":6,"194":4,"196":3,"225":1,"242":1,"243":1},"fqnsFingerprint":"21704a18ecdb7086d532c7467ee18fdfac540eb28f25941afb0687fc7d123836"},"ecef777a1e830ec741ffce6a33b9e4d4efde7978c586e58bf7f3b34e1ae837db":{"translations":{"python":{"source":"logs.QueryDefinition(self, \"QueryDefinition\",\n    query_definition_name=\"MyQuery\",\n    query_string=logs.QueryString(\n        fields=[\"@timestamp\", \"@message\"],\n        sort=\"@timestamp desc\",\n        limit=20\n    )\n)","version":"2"},"csharp":{"source":"new QueryDefinition(this, \"QueryDefinition\", new QueryDefinitionProps {\n    QueryDefinitionName = \"MyQuery\",\n    QueryString = new QueryString(new QueryStringProps {\n        Fields = new [] { \"@timestamp\", \"@message\" },\n        Sort = \"@timestamp desc\",\n        Limit = 20\n    })\n});","version":"1"},"java":{"source":"QueryDefinition.Builder.create(this, \"QueryDefinition\")\n        .queryDefinitionName(\"MyQuery\")\n        .queryString(QueryString.Builder.create()\n                .fields(List.of(\"@timestamp\", \"@message\"))\n                .sort(\"@timestamp desc\")\n                .limit(20)\n                .build())\n        .build();","version":"1"},"go":{"source":"logs.NewQueryDefinition(this, jsii.String(\"QueryDefinition\"), &QueryDefinitionProps{\n\tQueryDefinitionName: jsii.String(\"MyQuery\"),\n\tQueryString: logs.NewQueryString(&QueryStringProps{\n\t\tFields: []*string{\n\t\t\tjsii.String(\"@timestamp\"),\n\t\t\tjsii.String(\"@message\"),\n\t\t},\n\t\tSort: jsii.String(\"@timestamp desc\"),\n\t\tLimit: jsii.Number(20),\n\t}),\n})","version":"1"},"$":{"source":"new logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-logs"},"field":{"field":"markdown","line":332}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.QueryDefinition","@aws-cdk/aws-logs.QueryDefinitionProps","@aws-cdk/aws-logs.QueryString","@aws-cdk/aws-logs.QueryStringProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":5,"75":9,"104":1,"192":1,"193":2,"194":2,"197":2,"226":1,"281":5},"fqnsFingerprint":"2c1b03f5f85c5b5c727b8181577e1b6a7ab45b415fa54ee095df217b061916c6"},"11c811ece799c9992e86a9bc11df5c857b8c54bf8dfb303f71f43232d3d60a3c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_destination = logs.CfnDestination(self, \"MyCfnDestination\",\n    destination_name=\"destinationName\",\n    role_arn=\"roleArn\",\n    target_arn=\"targetArn\",\n\n    # the properties below are optional\n    destination_policy=\"destinationPolicy\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnDestination = new CfnDestination(this, \"MyCfnDestination\", new CfnDestinationProps {\n    DestinationName = \"destinationName\",\n    RoleArn = \"roleArn\",\n    TargetArn = \"targetArn\",\n\n    // the properties below are optional\n    DestinationPolicy = \"destinationPolicy\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnDestination cfnDestination = CfnDestination.Builder.create(this, \"MyCfnDestination\")\n        .destinationName(\"destinationName\")\n        .roleArn(\"roleArn\")\n        .targetArn(\"targetArn\")\n\n        // the properties below are optional\n        .destinationPolicy(\"destinationPolicy\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnDestination := logs.NewCfnDestination(this, jsii.String(\"MyCfnDestination\"), &CfnDestinationProps{\n\tDestinationName: jsii.String(\"destinationName\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n\tTargetArn: jsii.String(\"targetArn\"),\n\n\t// the properties below are optional\n\tDestinationPolicy: jsii.String(\"destinationPolicy\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnDestination = new logs.CfnDestination(this, 'MyCfnDestination', {\n  destinationName: 'destinationName',\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationPolicy: 'destinationPolicy',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnDestination"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnDestination","@aws-cdk/aws-logs.CfnDestinationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDestination = new logs.CfnDestination(this, 'MyCfnDestination', {\n  destinationName: 'destinationName',\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationPolicy: 'destinationPolicy',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":8,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"b83f98dea5b44ad81e1fa79f5b7e8a82007c6db6750076da6b5da25eee5b2de1"},"d124bed7f6a93ffe2ceb3c54f1d9860525a0c6b04f4a5d8ef98b144ddede6686":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_destination_props = logs.CfnDestinationProps(\n    destination_name=\"destinationName\",\n    role_arn=\"roleArn\",\n    target_arn=\"targetArn\",\n\n    # the properties below are optional\n    destination_policy=\"destinationPolicy\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnDestinationProps = new CfnDestinationProps {\n    DestinationName = \"destinationName\",\n    RoleArn = \"roleArn\",\n    TargetArn = \"targetArn\",\n\n    // the properties below are optional\n    DestinationPolicy = \"destinationPolicy\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnDestinationProps cfnDestinationProps = CfnDestinationProps.builder()\n        .destinationName(\"destinationName\")\n        .roleArn(\"roleArn\")\n        .targetArn(\"targetArn\")\n\n        // the properties below are optional\n        .destinationPolicy(\"destinationPolicy\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnDestinationProps := &CfnDestinationProps{\n\tDestinationName: jsii.String(\"destinationName\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n\tTargetArn: jsii.String(\"targetArn\"),\n\n\t// the properties below are optional\n\tDestinationPolicy: jsii.String(\"destinationPolicy\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnDestinationProps: logs.CfnDestinationProps = {\n  destinationName: 'destinationName',\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationPolicy: 'destinationPolicy',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnDestinationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnDestinationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDestinationProps: logs.CfnDestinationProps = {\n  destinationName: 'destinationName',\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationPolicy: 'destinationPolicy',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":8,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"be82d884e3c21d5fdd1aa48cc92dae5e92f9ecd10b35dad2815274bdca6886ae"},"8b8cc239fbe45793d4f0907e065a6fe785ba8a180abdfb6c286208525f62d095":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\n# data_protection_policy: Any\n\ncfn_log_group = logs.CfnLogGroup(self, \"MyCfnLogGroup\",\n    data_protection_policy=data_protection_policy,\n    kms_key_id=\"kmsKeyId\",\n    log_group_name=\"logGroupName\",\n    retention_in_days=123,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar dataProtectionPolicy;\n\nvar cfnLogGroup = new CfnLogGroup(this, \"MyCfnLogGroup\", new CfnLogGroupProps {\n    DataProtectionPolicy = dataProtectionPolicy,\n    KmsKeyId = \"kmsKeyId\",\n    LogGroupName = \"logGroupName\",\n    RetentionInDays = 123,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nObject dataProtectionPolicy;\n\nCfnLogGroup cfnLogGroup = CfnLogGroup.Builder.create(this, \"MyCfnLogGroup\")\n        .dataProtectionPolicy(dataProtectionPolicy)\n        .kmsKeyId(\"kmsKeyId\")\n        .logGroupName(\"logGroupName\")\n        .retentionInDays(123)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar dataProtectionPolicy interface{}\n\ncfnLogGroup := logs.NewCfnLogGroup(this, jsii.String(\"MyCfnLogGroup\"), &CfnLogGroupProps{\n\tDataProtectionPolicy: dataProtectionPolicy,\n\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\tRetentionInDays: jsii.Number(123),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const dataProtectionPolicy: any;\nconst cfnLogGroup = new logs.CfnLogGroup(this, 'MyCfnLogGroup', /* all optional props */ {\n  dataProtectionPolicy: dataProtectionPolicy,\n  kmsKeyId: 'kmsKeyId',\n  logGroupName: 'logGroupName',\n  retentionInDays: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnLogGroup"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnLogGroup","@aws-cdk/aws-logs.CfnLogGroupProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const dataProtectionPolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLogGroup = new logs.CfnLogGroup(this, 'MyCfnLogGroup', /* all optional props */ {\n  dataProtectionPolicy: dataProtectionPolicy,\n  kmsKeyId: 'kmsKeyId',\n  logGroupName: 'logGroupName',\n  retentionInDays: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":6,"75":13,"104":1,"125":1,"130":1,"192":1,"193":2,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"af91f8140a623129c30527ab9331053cefad71deb92d5371a04ffa6795ff1bd9"},"1d1fbc604bceccaa2cc8d741f088a8758f9995c4666b476ce6fc06a0c006a8a5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\n# data_protection_policy: Any\n\ncfn_log_group_props = logs.CfnLogGroupProps(\n    data_protection_policy=data_protection_policy,\n    kms_key_id=\"kmsKeyId\",\n    log_group_name=\"logGroupName\",\n    retention_in_days=123,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar dataProtectionPolicy;\n\nvar cfnLogGroupProps = new CfnLogGroupProps {\n    DataProtectionPolicy = dataProtectionPolicy,\n    KmsKeyId = \"kmsKeyId\",\n    LogGroupName = \"logGroupName\",\n    RetentionInDays = 123,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nObject dataProtectionPolicy;\n\nCfnLogGroupProps cfnLogGroupProps = CfnLogGroupProps.builder()\n        .dataProtectionPolicy(dataProtectionPolicy)\n        .kmsKeyId(\"kmsKeyId\")\n        .logGroupName(\"logGroupName\")\n        .retentionInDays(123)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar dataProtectionPolicy interface{}\n\ncfnLogGroupProps := &CfnLogGroupProps{\n\tDataProtectionPolicy: dataProtectionPolicy,\n\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\tRetentionInDays: jsii.Number(123),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const dataProtectionPolicy: any;\nconst cfnLogGroupProps: logs.CfnLogGroupProps = {\n  dataProtectionPolicy: dataProtectionPolicy,\n  kmsKeyId: 'kmsKeyId',\n  logGroupName: 'logGroupName',\n  retentionInDays: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnLogGroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnLogGroupProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const dataProtectionPolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLogGroupProps: logs.CfnLogGroupProps = {\n  dataProtectionPolicy: dataProtectionPolicy,\n  kmsKeyId: 'kmsKeyId',\n  logGroupName: 'logGroupName',\n  retentionInDays: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":5,"75":13,"125":1,"130":1,"153":1,"169":1,"192":1,"193":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"86763237c6d2506d17f90a48b7b94c2e2077e6374e537cd4559ac8f3a7adcfbe"},"066471f5d06c18d7560c9edd286bc1197c9891e21a23266bbfdcb3ade7bec15d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_log_stream = logs.CfnLogStream(self, \"MyCfnLogStream\",\n    log_group_name=\"logGroupName\",\n\n    # the properties below are optional\n    log_stream_name=\"logStreamName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnLogStream = new CfnLogStream(this, \"MyCfnLogStream\", new CfnLogStreamProps {\n    LogGroupName = \"logGroupName\",\n\n    // the properties below are optional\n    LogStreamName = \"logStreamName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnLogStream cfnLogStream = CfnLogStream.Builder.create(this, \"MyCfnLogStream\")\n        .logGroupName(\"logGroupName\")\n\n        // the properties below are optional\n        .logStreamName(\"logStreamName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnLogStream := logs.NewCfnLogStream(this, jsii.String(\"MyCfnLogStream\"), &CfnLogStreamProps{\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\n\t// the properties below are optional\n\tLogStreamName: jsii.String(\"logStreamName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnLogStream = new logs.CfnLogStream(this, 'MyCfnLogStream', {\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnLogStream"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnLogStream","@aws-cdk/aws-logs.CfnLogStreamProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLogStream = new logs.CfnLogStream(this, 'MyCfnLogStream', {\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"2cda57da84742343352b2cfea212edaa134044d1b5dc9c041b66d93e033439bc"},"34dd1e7dbac8157d1d0507c045a6e051737257cc8cc1da35ff8179924a747248":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_log_stream_props = logs.CfnLogStreamProps(\n    log_group_name=\"logGroupName\",\n\n    # the properties below are optional\n    log_stream_name=\"logStreamName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnLogStreamProps = new CfnLogStreamProps {\n    LogGroupName = \"logGroupName\",\n\n    // the properties below are optional\n    LogStreamName = \"logStreamName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnLogStreamProps cfnLogStreamProps = CfnLogStreamProps.builder()\n        .logGroupName(\"logGroupName\")\n\n        // the properties below are optional\n        .logStreamName(\"logStreamName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnLogStreamProps := &CfnLogStreamProps{\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\n\t// the properties below are optional\n\tLogStreamName: jsii.String(\"logStreamName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnLogStreamProps: logs.CfnLogStreamProps = {\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnLogStreamProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnLogStreamProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLogStreamProps: logs.CfnLogStreamProps = {\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"7981a5e4869913d0fd603a16cfc6b2712fd71bfb3d9536f0a4e08fc044578018"},"a535bb6c8c69986ec89b74321c1a0c5d46266d09308e220e2152fd4438b68902":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_metric_filter = logs.CfnMetricFilter(self, \"MyCfnMetricFilter\",\n    filter_pattern=\"filterPattern\",\n    log_group_name=\"logGroupName\",\n    metric_transformations=[logs.CfnMetricFilter.MetricTransformationProperty(\n        metric_name=\"metricName\",\n        metric_namespace=\"metricNamespace\",\n        metric_value=\"metricValue\",\n\n        # the properties below are optional\n        default_value=123,\n        dimensions=[logs.CfnMetricFilter.DimensionProperty(\n            key=\"key\",\n            value=\"value\"\n        )],\n        unit=\"unit\"\n    )],\n\n    # the properties below are optional\n    filter_name=\"filterName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnMetricFilter = new CfnMetricFilter(this, \"MyCfnMetricFilter\", new CfnMetricFilterProps {\n    FilterPattern = \"filterPattern\",\n    LogGroupName = \"logGroupName\",\n    MetricTransformations = new [] { new MetricTransformationProperty {\n        MetricName = \"metricName\",\n        MetricNamespace = \"metricNamespace\",\n        MetricValue = \"metricValue\",\n\n        // the properties below are optional\n        DefaultValue = 123,\n        Dimensions = new [] { new DimensionProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } },\n        Unit = \"unit\"\n    } },\n\n    // the properties below are optional\n    FilterName = \"filterName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnMetricFilter cfnMetricFilter = CfnMetricFilter.Builder.create(this, \"MyCfnMetricFilter\")\n        .filterPattern(\"filterPattern\")\n        .logGroupName(\"logGroupName\")\n        .metricTransformations(List.of(MetricTransformationProperty.builder()\n                .metricName(\"metricName\")\n                .metricNamespace(\"metricNamespace\")\n                .metricValue(\"metricValue\")\n\n                // the properties below are optional\n                .defaultValue(123)\n                .dimensions(List.of(DimensionProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .unit(\"unit\")\n                .build()))\n\n        // the properties below are optional\n        .filterName(\"filterName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnMetricFilter := logs.NewCfnMetricFilter(this, jsii.String(\"MyCfnMetricFilter\"), &CfnMetricFilterProps{\n\tFilterPattern: jsii.String(\"filterPattern\"),\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\tMetricTransformations: []interface{}{\n\t\t&MetricTransformationProperty{\n\t\t\tMetricName: jsii.String(\"metricName\"),\n\t\t\tMetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\tMetricValue: jsii.String(\"metricValue\"),\n\n\t\t\t// the properties below are optional\n\t\t\tDefaultValue: jsii.Number(123),\n\t\t\tDimensions: []interface{}{\n\t\t\t\t&DimensionProperty{\n\t\t\t\t\tKey: jsii.String(\"key\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUnit: jsii.String(\"unit\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tFilterName: jsii.String(\"filterName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnMetricFilter = new logs.CfnMetricFilter(this, 'MyCfnMetricFilter', {\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n  metricTransformations: [{\n    metricName: 'metricName',\n    metricNamespace: 'metricNamespace',\n    metricValue: 'metricValue',\n\n    // the properties below are optional\n    defaultValue: 123,\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    unit: 'unit',\n  }],\n\n  // the properties below are optional\n  filterName: 'filterName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnMetricFilter"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnMetricFilter","@aws-cdk/aws-logs.CfnMetricFilterProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMetricFilter = new logs.CfnMetricFilter(this, 'MyCfnMetricFilter', {\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n  metricTransformations: [{\n    metricName: 'metricName',\n    metricNamespace: 'metricNamespace',\n    metricValue: 'metricValue',\n\n    // the properties below are optional\n    defaultValue: 123,\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    unit: 'unit',\n  }],\n\n  // the properties below are optional\n  filterName: 'filterName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":11,"75":16,"104":1,"192":2,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"a8de1a79e560e3e5a17a821a5f4dd6dc25124dcf33493cefe08b256ba1836799"},"4b482beef098f99439a54016bcebc27515296fe8c43f55bcb24a424ad0fdd3d9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ndimension_property = logs.CfnMetricFilter.DimensionProperty(\n    key=\"key\",\n    value=\"value\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar dimensionProperty = new DimensionProperty {\n    Key = \"key\",\n    Value = \"value\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nDimensionProperty dimensionProperty = DimensionProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ndimensionProperty := &DimensionProperty{\n\tKey: jsii.String(\"key\"),\n\tValue: jsii.String(\"value\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst dimensionProperty: logs.CfnMetricFilter.DimensionProperty = {\n  key: 'key',\n  value: 'value',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnMetricFilter.DimensionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnMetricFilter.DimensionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dimensionProperty: logs.CfnMetricFilter.DimensionProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"6043174488c184152ed9f46d9ded72f626e077cd307200a3100009460019b9a0"},"c689cdc201ea7ea2e01d4c570ec362b84433b6b9403ef8a18f0592fac00b83e7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\nmetric_transformation_property = logs.CfnMetricFilter.MetricTransformationProperty(\n    metric_name=\"metricName\",\n    metric_namespace=\"metricNamespace\",\n    metric_value=\"metricValue\",\n\n    # the properties below are optional\n    default_value=123,\n    dimensions=[logs.CfnMetricFilter.DimensionProperty(\n        key=\"key\",\n        value=\"value\"\n    )],\n    unit=\"unit\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar metricTransformationProperty = new MetricTransformationProperty {\n    MetricName = \"metricName\",\n    MetricNamespace = \"metricNamespace\",\n    MetricValue = \"metricValue\",\n\n    // the properties below are optional\n    DefaultValue = 123,\n    Dimensions = new [] { new DimensionProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Unit = \"unit\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nMetricTransformationProperty metricTransformationProperty = MetricTransformationProperty.builder()\n        .metricName(\"metricName\")\n        .metricNamespace(\"metricNamespace\")\n        .metricValue(\"metricValue\")\n\n        // the properties below are optional\n        .defaultValue(123)\n        .dimensions(List.of(DimensionProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .unit(\"unit\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nmetricTransformationProperty := &MetricTransformationProperty{\n\tMetricName: jsii.String(\"metricName\"),\n\tMetricNamespace: jsii.String(\"metricNamespace\"),\n\tMetricValue: jsii.String(\"metricValue\"),\n\n\t// the properties below are optional\n\tDefaultValue: jsii.Number(123),\n\tDimensions: []interface{}{\n\t\t&DimensionProperty{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tUnit: jsii.String(\"unit\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst metricTransformationProperty: logs.CfnMetricFilter.MetricTransformationProperty = {\n  metricName: 'metricName',\n  metricNamespace: 'metricNamespace',\n  metricValue: 'metricValue',\n\n  // the properties below are optional\n  defaultValue: 123,\n  dimensions: [{\n    key: 'key',\n    value: 'value',\n  }],\n  unit: 'unit',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnMetricFilter.MetricTransformationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnMetricFilter.MetricTransformationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricTransformationProperty: logs.CfnMetricFilter.MetricTransformationProperty = {\n  metricName: 'metricName',\n  metricNamespace: 'metricNamespace',\n  metricValue: 'metricValue',\n\n  // the properties below are optional\n  defaultValue: 123,\n  dimensions: [{\n    key: 'key',\n    value: 'value',\n  }],\n  unit: 'unit',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":7,"75":13,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"720bcc7125b919ed1f68b8d6d726c44ccae10edc968c87624831f74657b90f69"},"a8164b27c37b5f686b3aa0c3cc04383f461980b226bb8a5b4979c6ca236d6942":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_metric_filter_props = logs.CfnMetricFilterProps(\n    filter_pattern=\"filterPattern\",\n    log_group_name=\"logGroupName\",\n    metric_transformations=[logs.CfnMetricFilter.MetricTransformationProperty(\n        metric_name=\"metricName\",\n        metric_namespace=\"metricNamespace\",\n        metric_value=\"metricValue\",\n\n        # the properties below are optional\n        default_value=123,\n        dimensions=[logs.CfnMetricFilter.DimensionProperty(\n            key=\"key\",\n            value=\"value\"\n        )],\n        unit=\"unit\"\n    )],\n\n    # the properties below are optional\n    filter_name=\"filterName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnMetricFilterProps = new CfnMetricFilterProps {\n    FilterPattern = \"filterPattern\",\n    LogGroupName = \"logGroupName\",\n    MetricTransformations = new [] { new MetricTransformationProperty {\n        MetricName = \"metricName\",\n        MetricNamespace = \"metricNamespace\",\n        MetricValue = \"metricValue\",\n\n        // the properties below are optional\n        DefaultValue = 123,\n        Dimensions = new [] { new DimensionProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } },\n        Unit = \"unit\"\n    } },\n\n    // the properties below are optional\n    FilterName = \"filterName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnMetricFilterProps cfnMetricFilterProps = CfnMetricFilterProps.builder()\n        .filterPattern(\"filterPattern\")\n        .logGroupName(\"logGroupName\")\n        .metricTransformations(List.of(MetricTransformationProperty.builder()\n                .metricName(\"metricName\")\n                .metricNamespace(\"metricNamespace\")\n                .metricValue(\"metricValue\")\n\n                // the properties below are optional\n                .defaultValue(123)\n                .dimensions(List.of(DimensionProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .unit(\"unit\")\n                .build()))\n\n        // the properties below are optional\n        .filterName(\"filterName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnMetricFilterProps := &CfnMetricFilterProps{\n\tFilterPattern: jsii.String(\"filterPattern\"),\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\tMetricTransformations: []interface{}{\n\t\t&MetricTransformationProperty{\n\t\t\tMetricName: jsii.String(\"metricName\"),\n\t\t\tMetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\tMetricValue: jsii.String(\"metricValue\"),\n\n\t\t\t// the properties below are optional\n\t\t\tDefaultValue: jsii.Number(123),\n\t\t\tDimensions: []interface{}{\n\t\t\t\t&DimensionProperty{\n\t\t\t\t\tKey: jsii.String(\"key\"),\n\t\t\t\t\tValue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUnit: jsii.String(\"unit\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tFilterName: jsii.String(\"filterName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnMetricFilterProps: logs.CfnMetricFilterProps = {\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n  metricTransformations: [{\n    metricName: 'metricName',\n    metricNamespace: 'metricNamespace',\n    metricValue: 'metricValue',\n\n    // the properties below are optional\n    defaultValue: 123,\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    unit: 'unit',\n  }],\n\n  // the properties below are optional\n  filterName: 'filterName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnMetricFilterProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnMetricFilterProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMetricFilterProps: logs.CfnMetricFilterProps = {\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n  metricTransformations: [{\n    metricName: 'metricName',\n    metricNamespace: 'metricNamespace',\n    metricValue: 'metricValue',\n\n    // the properties below are optional\n    defaultValue: 123,\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    unit: 'unit',\n  }],\n\n  // the properties below are optional\n  filterName: 'filterName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":10,"75":16,"153":1,"169":1,"192":2,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"771ad98cafaf1a761fd6998288404ab9173a44c30f32f13f316efeb371297b78"},"b6dbfbff08c2a95a2537c9e718a42f297d95c59ceba6577b9bd35c467e9d612a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_query_definition = logs.CfnQueryDefinition(self, \"MyCfnQueryDefinition\",\n    name=\"name\",\n    query_string=\"queryString\",\n\n    # the properties below are optional\n    log_group_names=[\"logGroupNames\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnQueryDefinition = new CfnQueryDefinition(this, \"MyCfnQueryDefinition\", new CfnQueryDefinitionProps {\n    Name = \"name\",\n    QueryString = \"queryString\",\n\n    // the properties below are optional\n    LogGroupNames = new [] { \"logGroupNames\" }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnQueryDefinition cfnQueryDefinition = CfnQueryDefinition.Builder.create(this, \"MyCfnQueryDefinition\")\n        .name(\"name\")\n        .queryString(\"queryString\")\n\n        // the properties below are optional\n        .logGroupNames(List.of(\"logGroupNames\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnQueryDefinition := logs.NewCfnQueryDefinition(this, jsii.String(\"MyCfnQueryDefinition\"), &CfnQueryDefinitionProps{\n\tName: jsii.String(\"name\"),\n\tQueryString: jsii.String(\"queryString\"),\n\n\t// the properties below are optional\n\tLogGroupNames: []*string{\n\t\tjsii.String(\"logGroupNames\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnQueryDefinition = new logs.CfnQueryDefinition(this, 'MyCfnQueryDefinition', {\n  name: 'name',\n  queryString: 'queryString',\n\n  // the properties below are optional\n  logGroupNames: ['logGroupNames'],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnQueryDefinition"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnQueryDefinition","@aws-cdk/aws-logs.CfnQueryDefinitionProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnQueryDefinition = new logs.CfnQueryDefinition(this, 'MyCfnQueryDefinition', {\n  name: 'name',\n  queryString: 'queryString',\n\n  // the properties below are optional\n  logGroupNames: ['logGroupNames'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"192":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"1362ccfe6b6e579b21f9816fd278102c964928ed052844c6ae107d81c13bbb3f"},"e571b380f77e25ee2ec2572f029f4a9b56704f23baed0cca1fe43e6ef0ab5a66":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_query_definition_props = logs.CfnQueryDefinitionProps(\n    name=\"name\",\n    query_string=\"queryString\",\n\n    # the properties below are optional\n    log_group_names=[\"logGroupNames\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnQueryDefinitionProps = new CfnQueryDefinitionProps {\n    Name = \"name\",\n    QueryString = \"queryString\",\n\n    // the properties below are optional\n    LogGroupNames = new [] { \"logGroupNames\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnQueryDefinitionProps cfnQueryDefinitionProps = CfnQueryDefinitionProps.builder()\n        .name(\"name\")\n        .queryString(\"queryString\")\n\n        // the properties below are optional\n        .logGroupNames(List.of(\"logGroupNames\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnQueryDefinitionProps := &CfnQueryDefinitionProps{\n\tName: jsii.String(\"name\"),\n\tQueryString: jsii.String(\"queryString\"),\n\n\t// the properties below are optional\n\tLogGroupNames: []*string{\n\t\tjsii.String(\"logGroupNames\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnQueryDefinitionProps: logs.CfnQueryDefinitionProps = {\n  name: 'name',\n  queryString: 'queryString',\n\n  // the properties below are optional\n  logGroupNames: ['logGroupNames'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnQueryDefinitionProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnQueryDefinitionProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnQueryDefinitionProps: logs.CfnQueryDefinitionProps = {\n  name: 'name',\n  queryString: 'queryString',\n\n  // the properties below are optional\n  logGroupNames: ['logGroupNames'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"a9f5f029d469671fb5266aa38f5ea4b2040bb78c09ff6e1df9d07c9653875439"},"d50fab984ea3720e65d8ae3982d007ce31443e38a4d677f08facedd89dd0d45f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_resource_policy = logs.CfnResourcePolicy(self, \"MyCfnResourcePolicy\",\n    policy_document=\"policyDocument\",\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnResourcePolicy = new CfnResourcePolicy(this, \"MyCfnResourcePolicy\", new CfnResourcePolicyProps {\n    PolicyDocument = \"policyDocument\",\n    PolicyName = \"policyName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnResourcePolicy cfnResourcePolicy = CfnResourcePolicy.Builder.create(this, \"MyCfnResourcePolicy\")\n        .policyDocument(\"policyDocument\")\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnResourcePolicy := logs.NewCfnResourcePolicy(this, jsii.String(\"MyCfnResourcePolicy\"), &CfnResourcePolicyProps{\n\tPolicyDocument: jsii.String(\"policyDocument\"),\n\tPolicyName: jsii.String(\"policyName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnResourcePolicy = new logs.CfnResourcePolicy(this, 'MyCfnResourcePolicy', {\n  policyDocument: 'policyDocument',\n  policyName: 'policyName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnResourcePolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnResourcePolicy","@aws-cdk/aws-logs.CfnResourcePolicyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourcePolicy = new logs.CfnResourcePolicy(this, 'MyCfnResourcePolicy', {\n  policyDocument: 'policyDocument',\n  policyName: 'policyName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"9b0d70d250027a8a10227af5b3c83cf94fb12aba8d99fa634a00d201760ecc1e"},"f0e8ea018beac657cff716c41d5c126008b158f85745f70c62b88d290778b3f4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_resource_policy_props = logs.CfnResourcePolicyProps(\n    policy_document=\"policyDocument\",\n    policy_name=\"policyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnResourcePolicyProps = new CfnResourcePolicyProps {\n    PolicyDocument = \"policyDocument\",\n    PolicyName = \"policyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnResourcePolicyProps cfnResourcePolicyProps = CfnResourcePolicyProps.builder()\n        .policyDocument(\"policyDocument\")\n        .policyName(\"policyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnResourcePolicyProps := &CfnResourcePolicyProps{\n\tPolicyDocument: jsii.String(\"policyDocument\"),\n\tPolicyName: jsii.String(\"policyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnResourcePolicyProps: logs.CfnResourcePolicyProps = {\n  policyDocument: 'policyDocument',\n  policyName: 'policyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnResourcePolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnResourcePolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourcePolicyProps: logs.CfnResourcePolicyProps = {\n  policyDocument: 'policyDocument',\n  policyName: 'policyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"a781bc3b3a282b85206cefeb359b04219b7988178d9ac4083c6fe3633f658a38"},"824b5611feec722de00f583e5597be49288fee6d5a643e5af815627b931625dc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_subscription_filter = logs.CfnSubscriptionFilter(self, \"MyCfnSubscriptionFilter\",\n    destination_arn=\"destinationArn\",\n    filter_pattern=\"filterPattern\",\n    log_group_name=\"logGroupName\",\n\n    # the properties below are optional\n    distribution=\"distribution\",\n    filter_name=\"filterName\",\n    role_arn=\"roleArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnSubscriptionFilter = new CfnSubscriptionFilter(this, \"MyCfnSubscriptionFilter\", new CfnSubscriptionFilterProps {\n    DestinationArn = \"destinationArn\",\n    FilterPattern = \"filterPattern\",\n    LogGroupName = \"logGroupName\",\n\n    // the properties below are optional\n    Distribution = \"distribution\",\n    FilterName = \"filterName\",\n    RoleArn = \"roleArn\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnSubscriptionFilter cfnSubscriptionFilter = CfnSubscriptionFilter.Builder.create(this, \"MyCfnSubscriptionFilter\")\n        .destinationArn(\"destinationArn\")\n        .filterPattern(\"filterPattern\")\n        .logGroupName(\"logGroupName\")\n\n        // the properties below are optional\n        .distribution(\"distribution\")\n        .filterName(\"filterName\")\n        .roleArn(\"roleArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnSubscriptionFilter := logs.NewCfnSubscriptionFilter(this, jsii.String(\"MyCfnSubscriptionFilter\"), &CfnSubscriptionFilterProps{\n\tDestinationArn: jsii.String(\"destinationArn\"),\n\tFilterPattern: jsii.String(\"filterPattern\"),\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\n\t// the properties below are optional\n\tDistribution: jsii.String(\"distribution\"),\n\tFilterName: jsii.String(\"filterName\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnSubscriptionFilter = new logs.CfnSubscriptionFilter(this, 'MyCfnSubscriptionFilter', {\n  destinationArn: 'destinationArn',\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  distribution: 'distribution',\n  filterName: 'filterName',\n  roleArn: 'roleArn',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnSubscriptionFilter"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnSubscriptionFilter","@aws-cdk/aws-logs.CfnSubscriptionFilterProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSubscriptionFilter = new logs.CfnSubscriptionFilter(this, 'MyCfnSubscriptionFilter', {\n  destinationArn: 'destinationArn',\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  distribution: 'distribution',\n  filterName: 'filterName',\n  roleArn: 'roleArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":8,"75":10,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"afa7f0ca6d05ae29858904eb9618025302c1609bcc1a973803df8ed1f8bf28e4"},"d49f02f1bb1bdd1fe767baa40b1a33e674da412509f3ed858a260d0387b8dbe4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncfn_subscription_filter_props = logs.CfnSubscriptionFilterProps(\n    destination_arn=\"destinationArn\",\n    filter_pattern=\"filterPattern\",\n    log_group_name=\"logGroupName\",\n\n    # the properties below are optional\n    distribution=\"distribution\",\n    filter_name=\"filterName\",\n    role_arn=\"roleArn\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar cfnSubscriptionFilterProps = new CfnSubscriptionFilterProps {\n    DestinationArn = \"destinationArn\",\n    FilterPattern = \"filterPattern\",\n    LogGroupName = \"logGroupName\",\n\n    // the properties below are optional\n    Distribution = \"distribution\",\n    FilterName = \"filterName\",\n    RoleArn = \"roleArn\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nCfnSubscriptionFilterProps cfnSubscriptionFilterProps = CfnSubscriptionFilterProps.builder()\n        .destinationArn(\"destinationArn\")\n        .filterPattern(\"filterPattern\")\n        .logGroupName(\"logGroupName\")\n\n        // the properties below are optional\n        .distribution(\"distribution\")\n        .filterName(\"filterName\")\n        .roleArn(\"roleArn\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncfnSubscriptionFilterProps := &CfnSubscriptionFilterProps{\n\tDestinationArn: jsii.String(\"destinationArn\"),\n\tFilterPattern: jsii.String(\"filterPattern\"),\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\n\t// the properties below are optional\n\tDistribution: jsii.String(\"distribution\"),\n\tFilterName: jsii.String(\"filterName\"),\n\tRoleArn: jsii.String(\"roleArn\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst cfnSubscriptionFilterProps: logs.CfnSubscriptionFilterProps = {\n  destinationArn: 'destinationArn',\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  distribution: 'distribution',\n  filterName: 'filterName',\n  roleArn: 'roleArn',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CfnSubscriptionFilterProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.CfnSubscriptionFilterProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSubscriptionFilterProps: logs.CfnSubscriptionFilterProps = {\n  destinationArn: 'destinationArn',\n  filterPattern: 'filterPattern',\n  logGroupName: 'logGroupName',\n\n  // the properties below are optional\n  distribution: 'distribution',\n  filterName: 'filterName',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":10,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"f3cc01023f26a4a1e4cf9beee50e74a3f8e27ecaf6fb3edfdac3161768341915"},"aad7de37bc2333e148b7086bf41db92ca345420641bababbe69aef768e27cb24":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\ncolumn_restriction = logs.ColumnRestriction(\n    comparison=\"comparison\",\n\n    # the properties below are optional\n    number_value=123,\n    string_value=\"stringValue\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar columnRestriction = new ColumnRestriction {\n    Comparison = \"comparison\",\n\n    // the properties below are optional\n    NumberValue = 123,\n    StringValue = \"stringValue\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nColumnRestriction columnRestriction = ColumnRestriction.builder()\n        .comparison(\"comparison\")\n\n        // the properties below are optional\n        .numberValue(123)\n        .stringValue(\"stringValue\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\ncolumnRestriction := &ColumnRestriction{\n\tComparison: jsii.String(\"comparison\"),\n\n\t// the properties below are optional\n\tNumberValue: jsii.Number(123),\n\tStringValue: jsii.String(\"stringValue\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst columnRestriction: logs.ColumnRestriction = {\n  comparison: 'comparison',\n\n  // the properties below are optional\n  numberValue: 123,\n  stringValue: 'stringValue',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.ColumnRestriction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.ColumnRestriction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst columnRestriction: logs.ColumnRestriction = {\n  comparison: 'comparison',\n\n  // the properties below are optional\n  numberValue: 123,\n  stringValue: 'stringValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":3,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"4a34de5b363944524afdb8677b15b347d57667de80cb0e800f6c7f7e374aad33"},"a8833edcdf34b81c9429c4148d6f7087b791f84d20d84796ecc2bc0cd64b3ea0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\n\n# role: iam.Role\n\ncross_account_destination = logs.CrossAccountDestination(self, \"MyCrossAccountDestination\",\n    role=role,\n    target_arn=\"targetArn\",\n\n    # the properties below are optional\n    destination_name=\"destinationName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\n\nRole role;\n\nvar crossAccountDestination = new CrossAccountDestination(this, \"MyCrossAccountDestination\", new CrossAccountDestinationProps {\n    Role = role,\n    TargetArn = \"targetArn\",\n\n    // the properties below are optional\n    DestinationName = \"destinationName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\n\nRole role;\n\nCrossAccountDestination crossAccountDestination = CrossAccountDestination.Builder.create(this, \"MyCrossAccountDestination\")\n        .role(role)\n        .targetArn(\"targetArn\")\n\n        // the properties below are optional\n        .destinationName(\"destinationName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar role role\n\ncrossAccountDestination := logs.NewCrossAccountDestination(this, jsii.String(\"MyCrossAccountDestination\"), &CrossAccountDestinationProps{\n\tRole: role,\n\tTargetArn: jsii.String(\"targetArn\"),\n\n\t// the properties below are optional\n\tDestinationName: jsii.String(\"destinationName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const role: iam.Role;\nconst crossAccountDestination = new logs.CrossAccountDestination(this, 'MyCrossAccountDestination', {\n  role: role,\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationName: 'destinationName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CrossAccountDestination"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.CrossAccountDestination","@aws-cdk/aws-logs.CrossAccountDestinationProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst crossAccountDestination = new logs.CrossAccountDestination(this, 'MyCrossAccountDestination', {\n  role: role,\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationName: 'destinationName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":12,"104":1,"130":1,"153":1,"169":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":3,"290":1},"fqnsFingerprint":"cd06e0afa81b2c7973a51b39ac7c828312cc9790e33839958ffc79fa0f2c489c"},"753d80e6cafdb777df1aee5b449ed929dbe0aaf3a0ba1a508e0efbe5170f629f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\n\n# role: iam.Role\n\ncross_account_destination_props = logs.CrossAccountDestinationProps(\n    role=role,\n    target_arn=\"targetArn\",\n\n    # the properties below are optional\n    destination_name=\"destinationName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\n\nRole role;\n\nvar crossAccountDestinationProps = new CrossAccountDestinationProps {\n    Role = role,\n    TargetArn = \"targetArn\",\n\n    // the properties below are optional\n    DestinationName = \"destinationName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\n\nRole role;\n\nCrossAccountDestinationProps crossAccountDestinationProps = CrossAccountDestinationProps.builder()\n        .role(role)\n        .targetArn(\"targetArn\")\n\n        // the properties below are optional\n        .destinationName(\"destinationName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar role role\n\ncrossAccountDestinationProps := &CrossAccountDestinationProps{\n\tRole: role,\n\tTargetArn: jsii.String(\"targetArn\"),\n\n\t// the properties below are optional\n\tDestinationName: jsii.String(\"destinationName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const role: iam.Role;\nconst crossAccountDestinationProps: logs.CrossAccountDestinationProps = {\n  role: role,\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationName: 'destinationName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.CrossAccountDestinationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.CrossAccountDestinationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst crossAccountDestinationProps: logs.CrossAccountDestinationProps = {\n  role: role,\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  destinationName: 'destinationName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":12,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":3,"290":1},"fqnsFingerprint":"4390822bb8ecd328671fb4d89849276ef7d1fee7e1a459b42acb17d15c476890"},"bfad21d47988f4e3b5e9456c95d86fe7a5c8588743e4cab7dbbc6b154f23ca7d":{"translations":{"python":{"source":"# Search for lines that contain both \"ERROR\" and \"MainThread\"\npattern1 = logs.FilterPattern.all_terms(\"ERROR\", \"MainThread\")\n\n# Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n# both \"WARN\" and \"Deadlock\".\npattern2 = logs.FilterPattern.any_term_group([\"ERROR\", \"MainThread\"], [\"WARN\", \"Deadlock\"])","version":"2"},"csharp":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\nvar pattern1 = FilterPattern.AllTerms(\"ERROR\", \"MainThread\");\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nvar pattern2 = FilterPattern.AnyTermGroup(new [] { \"ERROR\", \"MainThread\" }, new [] { \"WARN\", \"Deadlock\" });","version":"1"},"java":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\nIFilterPattern pattern1 = FilterPattern.allTerms(\"ERROR\", \"MainThread\");\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nIFilterPattern pattern2 = FilterPattern.anyTermGroup(List.of(\"ERROR\", \"MainThread\"), List.of(\"WARN\", \"Deadlock\"));","version":"1"},"go":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\npattern1 := logs.FilterPattern_AllTerms(jsii.String(\"ERROR\"), jsii.String(\"MainThread\"))\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\npattern2 := logs.FilterPattern_AnyTermGroup([]*string{\n\tjsii.String(\"ERROR\"),\n\tjsii.String(\"MainThread\"),\n}, []*string{\n\tjsii.String(\"WARN\"),\n\tjsii.String(\"Deadlock\"),\n})","version":"1"},"$":{"source":"// Search for lines that contain both \"ERROR\" and \"MainThread\"\nconst pattern1 = logs.FilterPattern.allTerms('ERROR', 'MainThread');\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nconst pattern2 = logs.FilterPattern.anyTermGroup(\n  ['ERROR', 'MainThread'],\n  ['WARN', 'Deadlock'],\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.FilterPattern"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#allTerms","@aws-cdk/aws-logs.FilterPattern#anyTermGroup","@aws-cdk/aws-logs.IFilterPattern"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Search for lines that contain both \"ERROR\" and \"MainThread\"\nconst pattern1 = logs.FilterPattern.allTerms('ERROR', 'MainThread');\n\n// Search for lines that either contain both \"ERROR\" and \"MainThread\", or\n// both \"WARN\" and \"Deadlock\".\nconst pattern2 = logs.FilterPattern.anyTermGroup(\n  ['ERROR', 'MainThread'],\n  ['WARN', 'Deadlock'],\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":6,"75":8,"192":2,"194":4,"196":2,"225":2,"242":2,"243":2},"fqnsFingerprint":"5ddcc4251313dda0663580d6112e97f9bddb899c9a72ed783f1c1793d4cb1345"},"3109921ac331d04e9934bcbafb0a134eba409bb56047de196c29f44d084e63c2":{"translations":{"python":{"source":"# Search for all events where the component field is equal to\n# \"HttpServer\" and either error is true or the latency is higher\n# than 1000.\npattern = logs.FilterPattern.all(\n    logs.FilterPattern.string_value(\"$.component\", \"=\", \"HttpServer\"),\n    logs.FilterPattern.any(\n        logs.FilterPattern.boolean_value(\"$.error\", True),\n        logs.FilterPattern.number_value(\"$.latency\", \">\", 1000)))","version":"2"},"csharp":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nvar pattern = FilterPattern.All(FilterPattern.StringValue(\"$.component\", \"=\", \"HttpServer\"), FilterPattern.Any(FilterPattern.BooleanValue(\"$.error\", true), FilterPattern.NumberValue(\"$.latency\", \">\", 1000)));","version":"1"},"java":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nJsonPattern pattern = FilterPattern.all(FilterPattern.stringValue(\"$.component\", \"=\", \"HttpServer\"), FilterPattern.any(FilterPattern.booleanValue(\"$.error\", true), FilterPattern.numberValue(\"$.latency\", \">\", 1000)));","version":"1"},"go":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\npattern := logs.FilterPattern_All(logs.FilterPattern_StringValue(jsii.String(\"$.component\"), jsii.String(\"=\"), jsii.String(\"HttpServer\")), logs.FilterPattern_Any(logs.FilterPattern_BooleanValue(jsii.String(\"$.error\"), jsii.Boolean(true)), logs.FilterPattern_NumberValue(jsii.String(\"$.latency\"), jsii.String(\">\"), jsii.Number(1000))))","version":"1"},"$":{"source":"// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nconst pattern = logs.FilterPattern.all(\n  logs.FilterPattern.stringValue('$.component', '=', 'HttpServer'),\n  logs.FilterPattern.any(\n    logs.FilterPattern.booleanValue('$.error', true),\n    logs.FilterPattern.numberValue('$.latency', '>', 1000),\n  ),\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.JsonPattern"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#all","@aws-cdk/aws-logs.FilterPattern#any","@aws-cdk/aws-logs.FilterPattern#booleanValue","@aws-cdk/aws-logs.FilterPattern#numberValue","@aws-cdk/aws-logs.FilterPattern#stringValue","@aws-cdk/aws-logs.JsonPattern"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Search for all events where the component field is equal to\n// \"HttpServer\" and either error is true or the latency is higher\n// than 1000.\nconst pattern = logs.FilterPattern.all(\n  logs.FilterPattern.stringValue('$.component', '=', 'HttpServer'),\n  logs.FilterPattern.any(\n    logs.FilterPattern.booleanValue('$.error', true),\n    logs.FilterPattern.numberValue('$.latency', '>', 1000),\n  ),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":6,"75":16,"106":1,"194":10,"196":5,"225":1,"242":1,"243":1},"fqnsFingerprint":"376fef3a73421cf7caf246b30cb963333eece753706ca50895d7c6c968c15d82"},"2e4d864fe45cc9533baf3455e79f1a141ff59f5a55a6f08ea67d948781b7927a":{"translations":{"python":{"source":"import aws_cdk.aws_logs as logs\n\n\nlog_group = logs.LogGroup(self, \"Log Group\")\nlog_bucket = s3.Bucket(self, \"S3 Bucket\")\n\ntasks.EmrContainersStartJobRun(self, \"EMR Containers Start Job Run\",\n    virtual_cluster=tasks.VirtualClusterInput.from_virtual_cluster_id(\"de92jdei2910fwedz\"),\n    release_label=tasks.ReleaseLabel.EMR_6_2_0,\n    job_driver=tasks.JobDriver(\n        spark_submit_job_driver=tasks.SparkSubmitJobDriver(\n            entry_point=sfn.TaskInput.from_text(\"local:///usr/lib/spark/examples/src/main/python/pi.py\"),\n            spark_submit_parameters=\"--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1\"\n        )\n    ),\n    monitoring=tasks.Monitoring(\n        log_group=log_group,\n        log_bucket=log_bucket\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Logs;\n\n\nvar logGroup = new LogGroup(this, \"Log Group\");\nvar logBucket = new Bucket(this, \"S3 Bucket\");\n\nnew EmrContainersStartJobRun(this, \"EMR Containers Start Job Run\", new EmrContainersStartJobRunProps {\n    VirtualCluster = VirtualClusterInput.FromVirtualClusterId(\"de92jdei2910fwedz\"),\n    ReleaseLabel = ReleaseLabel.EMR_6_2_0,\n    JobDriver = new JobDriver {\n        SparkSubmitJobDriver = new SparkSubmitJobDriver {\n            EntryPoint = TaskInput.FromText(\"local:///usr/lib/spark/examples/src/main/python/pi.py\"),\n            SparkSubmitParameters = \"--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1\"\n        }\n    },\n    Monitoring = new Monitoring {\n        LogGroup = logGroup,\n        LogBucket = logBucket\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.logs.*;\n\n\nLogGroup logGroup = new LogGroup(this, \"Log Group\");\nBucket logBucket = new Bucket(this, \"S3 Bucket\");\n\nEmrContainersStartJobRun.Builder.create(this, \"EMR Containers Start Job Run\")\n        .virtualCluster(VirtualClusterInput.fromVirtualClusterId(\"de92jdei2910fwedz\"))\n        .releaseLabel(ReleaseLabel.EMR_6_2_0)\n        .jobDriver(JobDriver.builder()\n                .sparkSubmitJobDriver(SparkSubmitJobDriver.builder()\n                        .entryPoint(TaskInput.fromText(\"local:///usr/lib/spark/examples/src/main/python/pi.py\"))\n                        .sparkSubmitParameters(\"--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1\")\n                        .build())\n                .build())\n        .monitoring(Monitoring.builder()\n                .logGroup(logGroup)\n                .logBucket(logBucket)\n                .build())\n        .build();","version":"1"},"go":{"source":"import logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\n\nlogGroup := logs.NewLogGroup(this, jsii.String(\"Log Group\"))\nlogBucket := s3.NewBucket(this, jsii.String(\"S3 Bucket\"))\n\ntasks.NewEmrContainersStartJobRun(this, jsii.String(\"EMR Containers Start Job Run\"), &EmrContainersStartJobRunProps{\n\tVirtualCluster: tasks.VirtualClusterInput_FromVirtualClusterId(jsii.String(\"de92jdei2910fwedz\")),\n\tReleaseLabel: tasks.ReleaseLabel_EMR_6_2_0(),\n\tJobDriver: &JobDriver{\n\t\tSparkSubmitJobDriver: &SparkSubmitJobDriver{\n\t\t\tEntryPoint: sfn.TaskInput_FromText(jsii.String(\"local:///usr/lib/spark/examples/src/main/python/pi.py\")),\n\t\t\tSparkSubmitParameters: jsii.String(\"--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1\"),\n\t\t},\n\t},\n\tMonitoring: &Monitoring{\n\t\tLogGroup: logGroup,\n\t\tLogBucket: logBucket,\n\t},\n})","version":"1"},"$":{"source":"import * as logs from '@aws-cdk/aws-logs';\n\nconst logGroup = new logs.LogGroup(this, 'Log Group');\nconst logBucket = new s3.Bucket(this, 'S3 Bucket')\n\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n  monitoring: {\n    logGroup: logGroup,\n    logBucket: logBucket,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogGroup"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.LogGroup","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.IBucket","@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRun","@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRunProps","@aws-cdk/aws-stepfunctions-tasks.JobDriver","@aws-cdk/aws-stepfunctions-tasks.Monitoring","@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel","@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel#EMR_6_2_0","@aws-cdk/aws-stepfunctions-tasks.SparkSubmitJobDriver","@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput","@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput#fromVirtualClusterId","@aws-cdk/aws-stepfunctions.TaskInput","@aws-cdk/aws-stepfunctions.TaskInput#fromText","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Size, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as sfn from '@aws-cdk/aws-stepfunctions';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst logGroup = new logs.LogGroup(this, 'Log Group');\nconst logBucket = new s3.Bucket(this, 'S3 Bucket')\n\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n  monitoring: {\n    logGroup: logGroup,\n    logBucket: logBucket,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":29,"104":3,"193":4,"194":9,"196":2,"197":3,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":9,"290":1},"fqnsFingerprint":"69be2a9c6a861514328c29860072d2723ad0ab1a71089fb49bd69c6f8c43586d"},"ee9f1229de2f756f18135cc1ef31d8546321dd0899e71c7662f6ab417797fa8e":{"translations":{"python":{"source":"# vpc: ec2.Vpc\n\nkms_key = kms.Key(self, \"KmsKey\")\n\n# Pass the KMS key in the `encryptionKey` field to associate the key to the log group\nlog_group = logs.LogGroup(self, \"LogGroup\",\n    encryption_key=kms_key\n)\n\n# Pass the KMS key in the `encryptionKey` field to associate the key to the S3 bucket\nexec_bucket = s3.Bucket(self, \"EcsExecBucket\",\n    encryption_key=kms_key\n)\n\ncluster = ecs.Cluster(self, \"Cluster\",\n    vpc=vpc,\n    execute_command_configuration=ecs.ExecuteCommandConfiguration(\n        kms_key=kms_key,\n        log_configuration=ecs.ExecuteCommandLogConfiguration(\n            cloud_watch_log_group=log_group,\n            cloud_watch_encryption_enabled=True,\n            s3_bucket=exec_bucket,\n            s3_encryption_enabled=True,\n            s3_key_prefix=\"exec-command-output\"\n        ),\n        logging=ecs.ExecuteCommandLogging.OVERRIDE\n    )\n)","version":"2"},"csharp":{"source":"Vpc vpc;\n\nvar kmsKey = new Key(this, \"KmsKey\");\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the log group\nvar logGroup = new LogGroup(this, \"LogGroup\", new LogGroupProps {\n    EncryptionKey = kmsKey\n});\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the S3 bucket\nvar execBucket = new Bucket(this, \"EcsExecBucket\", new BucketProps {\n    EncryptionKey = kmsKey\n});\n\nvar cluster = new Cluster(this, \"Cluster\", new ClusterProps {\n    Vpc = vpc,\n    ExecuteCommandConfiguration = new ExecuteCommandConfiguration {\n        KmsKey = kmsKey,\n        LogConfiguration = new ExecuteCommandLogConfiguration {\n            CloudWatchLogGroup = logGroup,\n            CloudWatchEncryptionEnabled = true,\n            S3Bucket = execBucket,\n            S3EncryptionEnabled = true,\n            S3KeyPrefix = \"exec-command-output\"\n        },\n        Logging = ExecuteCommandLogging.OVERRIDE\n    }\n});","version":"1"},"java":{"source":"Vpc vpc;\n\nKey kmsKey = new Key(this, \"KmsKey\");\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the log group\nLogGroup logGroup = LogGroup.Builder.create(this, \"LogGroup\")\n        .encryptionKey(kmsKey)\n        .build();\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the S3 bucket\nBucket execBucket = Bucket.Builder.create(this, \"EcsExecBucket\")\n        .encryptionKey(kmsKey)\n        .build();\n\nCluster cluster = Cluster.Builder.create(this, \"Cluster\")\n        .vpc(vpc)\n        .executeCommandConfiguration(ExecuteCommandConfiguration.builder()\n                .kmsKey(kmsKey)\n                .logConfiguration(ExecuteCommandLogConfiguration.builder()\n                        .cloudWatchLogGroup(logGroup)\n                        .cloudWatchEncryptionEnabled(true)\n                        .s3Bucket(execBucket)\n                        .s3EncryptionEnabled(true)\n                        .s3KeyPrefix(\"exec-command-output\")\n                        .build())\n                .logging(ExecuteCommandLogging.OVERRIDE)\n                .build())\n        .build();","version":"1"},"go":{"source":"var vpc vpc\n\nkmsKey := kms.NewKey(this, jsii.String(\"KmsKey\"))\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the log group\nlogGroup := logs.NewLogGroup(this, jsii.String(\"LogGroup\"), &LogGroupProps{\n\tEncryptionKey: kmsKey,\n})\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the S3 bucket\nexecBucket := s3.NewBucket(this, jsii.String(\"EcsExecBucket\"), &BucketProps{\n\tEncryptionKey: kmsKey,\n})\n\ncluster := ecs.NewCluster(this, jsii.String(\"Cluster\"), &ClusterProps{\n\tVpc: Vpc,\n\tExecuteCommandConfiguration: &ExecuteCommandConfiguration{\n\t\tKmsKey: *KmsKey,\n\t\tLogConfiguration: &ExecuteCommandLogConfiguration{\n\t\t\tCloudWatchLogGroup: logGroup,\n\t\t\tCloudWatchEncryptionEnabled: jsii.Boolean(true),\n\t\t\tS3Bucket: execBucket,\n\t\t\tS3EncryptionEnabled: jsii.Boolean(true),\n\t\t\tS3KeyPrefix: jsii.String(\"exec-command-output\"),\n\t\t},\n\t\tLogging: ecs.ExecuteCommandLogging_OVERRIDE,\n\t},\n})","version":"1"},"$":{"source":"declare const vpc: ec2.Vpc;\nconst kmsKey = new kms.Key(this, 'KmsKey');\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the log group\nconst logGroup = new logs.LogGroup(this, 'LogGroup', {\n  encryptionKey: kmsKey,\n});\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the S3 bucket\nconst execBucket = new s3.Bucket(this, 'EcsExecBucket', {\n  encryptionKey: kmsKey,\n});\n\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc,\n  executeCommandConfiguration: {\n    kmsKey,\n    logConfiguration: {\n      cloudWatchLogGroup: logGroup,\n      cloudWatchEncryptionEnabled: true,\n      s3Bucket: execBucket,\n      s3EncryptionEnabled: true,\n      s3KeyPrefix: 'exec-command-output',\n    },\n    logging: ecs.ExecuteCommandLogging.OVERRIDE,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogGroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-ecs.Cluster","@aws-cdk/aws-ecs.ClusterProps","@aws-cdk/aws-ecs.ExecuteCommandConfiguration","@aws-cdk/aws-ecs.ExecuteCommandLogConfiguration","@aws-cdk/aws-ecs.ExecuteCommandLogging","@aws-cdk/aws-ecs.ExecuteCommandLogging#OVERRIDE","@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.LogGroup","@aws-cdk/aws-logs.LogGroupProps","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketProps","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { SecretValue, Stack } from '@aws-cdk/core';\nimport autoscaling = require('@aws-cdk/aws-autoscaling');\nimport cloudmap = require('@aws-cdk/aws-servicediscovery');\nimport ecs = require('@aws-cdk/aws-ecs');\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport elb = require('@aws-cdk/aws-elasticloadbalancing');\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\nimport events = require('@aws-cdk/aws-events');\nimport kms = require('@aws-cdk/aws-kms');\nimport logs = require('@aws-cdk/aws-logs');\nimport s3 = require('@aws-cdk/aws-s3');\nimport secretsmanager = require('@aws-cdk/aws-secretsmanager');\nimport ssm = require('@aws-cdk/aws-ssm');\nimport targets = require('@aws-cdk/aws-events-targets');\nimport path = require('path');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst kmsKey = new kms.Key(this, 'KmsKey');\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the log group\nconst logGroup = new logs.LogGroup(this, 'LogGroup', {\n  encryptionKey: kmsKey,\n});\n\n// Pass the KMS key in the `encryptionKey` field to associate the key to the S3 bucket\nconst execBucket = new s3.Bucket(this, 'EcsExecBucket', {\n  encryptionKey: kmsKey,\n});\n\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc,\n  executeCommandConfiguration: {\n    kmsKey,\n    logConfiguration: {\n      cloudWatchLogGroup: logGroup,\n      cloudWatchEncryptionEnabled: true,\n      s3Bucket: execBucket,\n      s3EncryptionEnabled: true,\n      s3KeyPrefix: 'exec-command-output',\n    },\n    logging: ecs.ExecuteCommandLogging.OVERRIDE,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":34,"104":4,"106":2,"130":1,"153":1,"169":1,"193":5,"194":6,"197":4,"225":5,"242":5,"243":5,"281":10,"282":2,"290":1},"fqnsFingerprint":"98cbf1fccdd417748f81c0bf4d1ea43df16dfe3255ff126c4d40cf44588910b3"},"744b42da691e7496f9f049411fbc4d0bb7aa712e708891c9275ecdcd8a059276":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.core as cdk\n\n# role: iam.Role\n\nlog_retention = logs.LogRetention(self, \"MyLogRetention\",\n    log_group_name=\"logGroupName\",\n    retention=logs.RetentionDays.ONE_DAY,\n\n    # the properties below are optional\n    log_group_region=\"logGroupRegion\",\n    log_retention_retry_options=logs.LogRetentionRetryOptions(\n        base=cdk.Duration.minutes(30),\n        max_retries=123\n    ),\n    role=role\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK;\n\nRole role;\nvar logRetention = new LogRetention(this, \"MyLogRetention\", new LogRetentionProps {\n    LogGroupName = \"logGroupName\",\n    Retention = RetentionDays.ONE_DAY,\n\n    // the properties below are optional\n    LogGroupRegion = \"logGroupRegion\",\n    LogRetentionRetryOptions = new LogRetentionRetryOptions {\n        Base = Duration.Minutes(30),\n        MaxRetries = 123\n    },\n    Role = role\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.core.*;\n\nRole role;\n\nLogRetention logRetention = LogRetention.Builder.create(this, \"MyLogRetention\")\n        .logGroupName(\"logGroupName\")\n        .retention(RetentionDays.ONE_DAY)\n\n        // the properties below are optional\n        .logGroupRegion(\"logGroupRegion\")\n        .logRetentionRetryOptions(LogRetentionRetryOptions.builder()\n                .base(Duration.minutes(30))\n                .maxRetries(123)\n                .build())\n        .role(role)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar role role\n\nlogRetention := logs.NewLogRetention(this, jsii.String(\"MyLogRetention\"), &LogRetentionProps{\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\tRetention: logs.RetentionDays_ONE_DAY,\n\n\t// the properties below are optional\n\tLogGroupRegion: jsii.String(\"logGroupRegion\"),\n\tLogRetentionRetryOptions: &LogRetentionRetryOptions{\n\t\tBase: cdk.Duration_Minutes(jsii.Number(30)),\n\t\tMaxRetries: jsii.Number(123),\n\t},\n\tRole: role,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const role: iam.Role;\nconst logRetention = new logs.LogRetention(this, 'MyLogRetention', {\n  logGroupName: 'logGroupName',\n  retention: logs.RetentionDays.ONE_DAY,\n\n  // the properties below are optional\n  logGroupRegion: 'logGroupRegion',\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  role: role,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogRetention"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.LogRetention","@aws-cdk/aws-logs.LogRetentionProps","@aws-cdk/aws-logs.LogRetentionRetryOptions","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#ONE_DAY","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logRetention = new logs.LogRetention(this, 'MyLogRetention', {\n  logGroupName: 'logGroupName',\n  retention: logs.RetentionDays.ONE_DAY,\n\n  // the properties below are optional\n  logGroupRegion: 'logGroupRegion',\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  role: role,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":6,"75":23,"104":1,"130":1,"153":1,"169":1,"193":2,"194":5,"196":1,"197":1,"225":2,"242":2,"243":2,"254":3,"255":3,"256":3,"281":7,"290":1},"fqnsFingerprint":"f88fde3c59ceb9ce0176f52d96eaa77f9b1831e4290d0cdf6179fed5ebca7fc4"},"99444d9a631a2fc0c878f99f5914bf2768d085455d0e9b504205e5a65595d52c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.core as cdk\n\n# role: iam.Role\n\nlog_retention_props = logs.LogRetentionProps(\n    log_group_name=\"logGroupName\",\n    retention=logs.RetentionDays.ONE_DAY,\n\n    # the properties below are optional\n    log_group_region=\"logGroupRegion\",\n    log_retention_retry_options=logs.LogRetentionRetryOptions(\n        base=cdk.Duration.minutes(30),\n        max_retries=123\n    ),\n    role=role\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK;\n\nRole role;\nvar logRetentionProps = new LogRetentionProps {\n    LogGroupName = \"logGroupName\",\n    Retention = RetentionDays.ONE_DAY,\n\n    // the properties below are optional\n    LogGroupRegion = \"logGroupRegion\",\n    LogRetentionRetryOptions = new LogRetentionRetryOptions {\n        Base = Duration.Minutes(30),\n        MaxRetries = 123\n    },\n    Role = role\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.core.*;\n\nRole role;\n\nLogRetentionProps logRetentionProps = LogRetentionProps.builder()\n        .logGroupName(\"logGroupName\")\n        .retention(RetentionDays.ONE_DAY)\n\n        // the properties below are optional\n        .logGroupRegion(\"logGroupRegion\")\n        .logRetentionRetryOptions(LogRetentionRetryOptions.builder()\n                .base(Duration.minutes(30))\n                .maxRetries(123)\n                .build())\n        .role(role)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar role role\n\nlogRetentionProps := &LogRetentionProps{\n\tLogGroupName: jsii.String(\"logGroupName\"),\n\tRetention: logs.RetentionDays_ONE_DAY,\n\n\t// the properties below are optional\n\tLogGroupRegion: jsii.String(\"logGroupRegion\"),\n\tLogRetentionRetryOptions: &LogRetentionRetryOptions{\n\t\tBase: cdk.Duration_Minutes(jsii.Number(30)),\n\t\tMaxRetries: jsii.Number(123),\n\t},\n\tRole: role,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const role: iam.Role;\nconst logRetentionProps: logs.LogRetentionProps = {\n  logGroupName: 'logGroupName',\n  retention: logs.RetentionDays.ONE_DAY,\n\n  // the properties below are optional\n  logGroupRegion: 'logGroupRegion',\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  role: role,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogRetentionProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.LogRetentionProps","@aws-cdk/aws-logs.LogRetentionRetryOptions","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#ONE_DAY","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logRetentionProps: logs.LogRetentionProps = {\n  logGroupName: 'logGroupName',\n  retention: logs.RetentionDays.ONE_DAY,\n\n  // the properties below are optional\n  logGroupRegion: 'logGroupRegion',\n  logRetentionRetryOptions: {\n    base: cdk.Duration.minutes(30),\n    maxRetries: 123,\n  },\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":5,"75":23,"130":1,"153":2,"169":2,"193":2,"194":4,"196":1,"225":2,"242":2,"243":2,"254":3,"255":3,"256":3,"281":7,"290":1},"fqnsFingerprint":"0f66767e4091a7bb991068f48377afe01615c811be0004e5c232395bef559ead"},"5d52598c629b87233c5dd357836d377ec022a8e5fc3c9a8df26d9d801a4ba7ed":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.core as cdk\n\nlog_retention_retry_options = logs.LogRetentionRetryOptions(\n    base=cdk.Duration.minutes(30),\n    max_retries=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK;\nvar logRetentionRetryOptions = new LogRetentionRetryOptions {\n    Base = Duration.Minutes(30),\n    MaxRetries = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.core.*;\n\nLogRetentionRetryOptions logRetentionRetryOptions = LogRetentionRetryOptions.builder()\n        .base(Duration.minutes(30))\n        .maxRetries(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nlogRetentionRetryOptions := &LogRetentionRetryOptions{\n\tBase: cdk.Duration_Minutes(jsii.Number(30)),\n\tMaxRetries: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\nconst logRetentionRetryOptions: logs.LogRetentionRetryOptions = {\n  base: cdk.Duration.minutes(30),\n  maxRetries: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogRetentionRetryOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.LogRetentionRetryOptions","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logRetentionRetryOptions: logs.LogRetentionRetryOptions = {\n  base: cdk.Duration.minutes(30),\n  maxRetries: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":2,"75":10,"153":1,"169":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"9f0b4d88fbe71613ad6ff9adea5ccbd2e77fcde6dea671cc25d04a5aaf6b2405"},"a9111fce51bb5fd7b644086df8558f5d2029b93371e8fada95249399901f580f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.core as cdk\n\n# log_group: logs.LogGroup\n\nlog_stream = logs.LogStream(self, \"MyLogStream\",\n    log_group=log_group,\n\n    # the properties below are optional\n    log_stream_name=\"logStreamName\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK;\n\nLogGroup logGroup;\nvar logStream = new LogStream(this, \"MyLogStream\", new LogStreamProps {\n    LogGroup = logGroup,\n\n    // the properties below are optional\n    LogStreamName = \"logStreamName\",\n    RemovalPolicy = RemovalPolicy.DESTROY\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.core.*;\n\nLogGroup logGroup;\n\nLogStream logStream = LogStream.Builder.create(this, \"MyLogStream\")\n        .logGroup(logGroup)\n\n        // the properties below are optional\n        .logStreamName(\"logStreamName\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar logGroup logGroup\n\nlogStream := logs.NewLogStream(this, jsii.String(\"MyLogStream\"), &LogStreamProps{\n\tLogGroup: logGroup,\n\n\t// the properties below are optional\n\tLogStreamName: jsii.String(\"logStreamName\"),\n\tRemovalPolicy: cdk.RemovalPolicy_DESTROY,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const logGroup: logs.LogGroup;\nconst logStream = new logs.LogStream(this, 'MyLogStream', {\n  logGroup: logGroup,\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogStream"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.LogStream","@aws-cdk/aws-logs.LogStreamProps","@aws-cdk/core.RemovalPolicy","@aws-cdk/core.RemovalPolicy#DESTROY","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logStream = new logs.LogStream(this, 'MyLogStream', {\n  logGroup: logGroup,\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":15,"104":1,"130":1,"153":1,"169":1,"193":1,"194":3,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":3,"290":1},"fqnsFingerprint":"bda88f02f41b80e908af4673a58116b9afc4fd2932b2e1f32ce519b05d1f425f"},"ca3a957ca68bf411b8ce6c1dad39d65774dde1ab9e57585dd0c9e58122dc1496":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.core as cdk\n\n# log_group: logs.LogGroup\n\nlog_stream_props = logs.LogStreamProps(\n    log_group=log_group,\n\n    # the properties below are optional\n    log_stream_name=\"logStreamName\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK;\n\nLogGroup logGroup;\nvar logStreamProps = new LogStreamProps {\n    LogGroup = logGroup,\n\n    // the properties below are optional\n    LogStreamName = \"logStreamName\",\n    RemovalPolicy = RemovalPolicy.DESTROY\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.core.*;\n\nLogGroup logGroup;\n\nLogStreamProps logStreamProps = LogStreamProps.builder()\n        .logGroup(logGroup)\n\n        // the properties below are optional\n        .logStreamName(\"logStreamName\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar logGroup logGroup\n\nlogStreamProps := &LogStreamProps{\n\tLogGroup: logGroup,\n\n\t// the properties below are optional\n\tLogStreamName: jsii.String(\"logStreamName\"),\n\tRemovalPolicy: cdk.RemovalPolicy_DESTROY,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const logGroup: logs.LogGroup;\nconst logStreamProps: logs.LogStreamProps = {\n  logGroup: logGroup,\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogStreamProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.LogStreamProps","@aws-cdk/core.RemovalPolicy","@aws-cdk/core.RemovalPolicy#DESTROY"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logStreamProps: logs.LogStreamProps = {\n  logGroup: logGroup,\n\n  // the properties below are optional\n  logStreamName: 'logStreamName',\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":15,"130":1,"153":2,"169":2,"193":1,"194":2,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":3,"290":1},"fqnsFingerprint":"ca175bab9f70c0f7cd57a5a513e62e6f72eca00eb955714572dfa802c4cfe4a1"},"b3a871c0e79df32728377d86472667e17d0de9f58b4fbf1e1e5d2724eacde276":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\n\n# role: iam.Role\n\nlog_subscription_destination_config = logs.LogSubscriptionDestinationConfig(\n    arn=\"arn\",\n\n    # the properties below are optional\n    role=role\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\n\nRole role;\n\nvar logSubscriptionDestinationConfig = new LogSubscriptionDestinationConfig {\n    Arn = \"arn\",\n\n    // the properties below are optional\n    Role = role\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\n\nRole role;\n\nLogSubscriptionDestinationConfig logSubscriptionDestinationConfig = LogSubscriptionDestinationConfig.builder()\n        .arn(\"arn\")\n\n        // the properties below are optional\n        .role(role)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar role role\n\nlogSubscriptionDestinationConfig := &LogSubscriptionDestinationConfig{\n\tArn: jsii.String(\"arn\"),\n\n\t// the properties below are optional\n\tRole: role,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const role: iam.Role;\nconst logSubscriptionDestinationConfig: logs.LogSubscriptionDestinationConfig = {\n  arn: 'arn',\n\n  // the properties below are optional\n  role: role,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.LogSubscriptionDestinationConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.LogSubscriptionDestinationConfig"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst logSubscriptionDestinationConfig: logs.LogSubscriptionDestinationConfig = {\n  arn: 'arn',\n\n  // the properties below are optional\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":11,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"c7bcbee4bf67341b385ba0da3b65e9263a11ba277ef397b211b508291e642e82"},"6bca5d2cf393278ce8fd8b084186acfd088f4f9e2a2e5d93b87c0ed8962d82ec":{"translations":{"python":{"source":"MetricFilter(self, \"MetricFilter\",\n    log_group=log_group,\n    metric_namespace=\"MyApp\",\n    metric_name=\"Latency\",\n    filter_pattern=FilterPattern.exists(\"$.latency\"),\n    metric_value=\"$.latency\"\n)","version":"2"},"csharp":{"source":"new MetricFilter(this, \"MetricFilter\", new MetricFilterProps {\n    LogGroup = logGroup,\n    MetricNamespace = \"MyApp\",\n    MetricName = \"Latency\",\n    FilterPattern = FilterPattern.Exists(\"$.latency\"),\n    MetricValue = \"$.latency\"\n});","version":"1"},"java":{"source":"MetricFilter.Builder.create(this, \"MetricFilter\")\n        .logGroup(logGroup)\n        .metricNamespace(\"MyApp\")\n        .metricName(\"Latency\")\n        .filterPattern(FilterPattern.exists(\"$.latency\"))\n        .metricValue(\"$.latency\")\n        .build();","version":"1"},"go":{"source":"lib.NewMetricFilter(this, jsii.String(\"MetricFilter\"), &MetricFilterProps{\n\tLogGroup: LogGroup,\n\tMetricNamespace: jsii.String(\"MyApp\"),\n\tMetricName: jsii.String(\"Latency\"),\n\tFilterPattern: *lib.FilterPattern_Exists(jsii.String(\"$.latency\")),\n\tMetricValue: jsii.String(\"$.latency\"),\n})","version":"1"},"$":{"source":"new MetricFilter(this, 'MetricFilter', {\n  logGroup,\n  metricNamespace: 'MyApp',\n  metricName: 'Latency',\n  filterPattern: FilterPattern.exists('$.latency'),\n  metricValue: '$.latency',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.MetricFilter"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern#exists","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.MetricFilter","@aws-cdk/aws-logs.MetricFilterProps","@aws-cdk/core.RemovalPolicy","constructs.Construct"],"fullSource":"import { App, RemovalPolicy, Stack, StackProps } from '@aws-cdk/core';\nimport { FilterPattern, LogGroup, MetricFilter } from '../lib';\n\nclass MetricFilterIntegStack extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const logGroup = new LogGroup(this, 'LogGroup', {\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    /// !show\n    new MetricFilter(this, 'MetricFilter', {\n      logGroup,\n      metricNamespace: 'MyApp',\n      metricName: 'Latency',\n      filterPattern: FilterPattern.exists('$.latency'),\n      metricValue: '$.latency',\n    });\n    /// !hide\n  }\n}\n\nconst app = new App();\nnew MetricFilterIntegStack(app, 'aws-cdk-metricfilter-integ');\napp.synth();\n","syntaxKindCounter":{"10":5,"75":8,"104":1,"193":1,"194":1,"196":1,"197":1,"226":1,"281":4,"282":1},"fqnsFingerprint":"807e3d39d26baa68827a53009916a79dec3f6b9f4702e11808620a18b25dfd53"},"95f638fa989c6d97e12d281a9972ceec962f4b793f9d84680cf45dd537439956":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\n# filter_pattern: logs.IFilterPattern\n\nmetric_filter_options = logs.MetricFilterOptions(\n    filter_pattern=filter_pattern,\n    metric_name=\"metricName\",\n    metric_namespace=\"metricNamespace\",\n\n    # the properties below are optional\n    default_value=123,\n    metric_value=\"metricValue\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nIFilterPattern filterPattern;\n\nvar metricFilterOptions = new MetricFilterOptions {\n    FilterPattern = filterPattern,\n    MetricName = \"metricName\",\n    MetricNamespace = \"metricNamespace\",\n\n    // the properties below are optional\n    DefaultValue = 123,\n    MetricValue = \"metricValue\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nIFilterPattern filterPattern;\n\nMetricFilterOptions metricFilterOptions = MetricFilterOptions.builder()\n        .filterPattern(filterPattern)\n        .metricName(\"metricName\")\n        .metricNamespace(\"metricNamespace\")\n\n        // the properties below are optional\n        .defaultValue(123)\n        .metricValue(\"metricValue\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar filterPattern iFilterPattern\n\nmetricFilterOptions := &MetricFilterOptions{\n\tFilterPattern: filterPattern,\n\tMetricName: jsii.String(\"metricName\"),\n\tMetricNamespace: jsii.String(\"metricNamespace\"),\n\n\t// the properties below are optional\n\tDefaultValue: jsii.Number(123),\n\tMetricValue: jsii.String(\"metricValue\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const filterPattern: logs.IFilterPattern;\nconst metricFilterOptions: logs.MetricFilterOptions = {\n  filterPattern: filterPattern,\n  metricName: 'metricName',\n  metricNamespace: 'metricNamespace',\n\n  // the properties below are optional\n  defaultValue: 123,\n  metricValue: 'metricValue',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.MetricFilterOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.MetricFilterOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const filterPattern: logs.IFilterPattern;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricFilterOptions: logs.MetricFilterOptions = {\n  filterPattern: filterPattern,\n  metricName: 'metricName',\n  metricNamespace: 'metricNamespace',\n\n  // the properties below are optional\n  defaultValue: 123,\n  metricValue: 'metricValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":13,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"f88998d76e6b074c143b369016ab0859da5a1a7751763431da56be448d21d67d"},"49a7b1c30c296767dec741736c7217978e0125e6e3a30094175387766a5ac969":{"translations":{"python":{"source":"MetricFilter(self, \"MetricFilter\",\n    log_group=log_group,\n    metric_namespace=\"MyApp\",\n    metric_name=\"Latency\",\n    filter_pattern=FilterPattern.exists(\"$.latency\"),\n    metric_value=\"$.latency\"\n)","version":"2"},"csharp":{"source":"new MetricFilter(this, \"MetricFilter\", new MetricFilterProps {\n    LogGroup = logGroup,\n    MetricNamespace = \"MyApp\",\n    MetricName = \"Latency\",\n    FilterPattern = FilterPattern.Exists(\"$.latency\"),\n    MetricValue = \"$.latency\"\n});","version":"1"},"java":{"source":"MetricFilter.Builder.create(this, \"MetricFilter\")\n        .logGroup(logGroup)\n        .metricNamespace(\"MyApp\")\n        .metricName(\"Latency\")\n        .filterPattern(FilterPattern.exists(\"$.latency\"))\n        .metricValue(\"$.latency\")\n        .build();","version":"1"},"go":{"source":"lib.NewMetricFilter(this, jsii.String(\"MetricFilter\"), &MetricFilterProps{\n\tLogGroup: LogGroup,\n\tMetricNamespace: jsii.String(\"MyApp\"),\n\tMetricName: jsii.String(\"Latency\"),\n\tFilterPattern: *lib.FilterPattern_Exists(jsii.String(\"$.latency\")),\n\tMetricValue: jsii.String(\"$.latency\"),\n})","version":"1"},"$":{"source":"new MetricFilter(this, 'MetricFilter', {\n  logGroup,\n  metricNamespace: 'MyApp',\n  metricName: 'Latency',\n  filterPattern: FilterPattern.exists('$.latency'),\n  metricValue: '$.latency',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.MetricFilterProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern#exists","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.MetricFilter","@aws-cdk/aws-logs.MetricFilterProps","@aws-cdk/core.RemovalPolicy","constructs.Construct"],"fullSource":"import { App, RemovalPolicy, Stack, StackProps } from '@aws-cdk/core';\nimport { FilterPattern, LogGroup, MetricFilter } from '../lib';\n\nclass MetricFilterIntegStack extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const logGroup = new LogGroup(this, 'LogGroup', {\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    /// !show\n    new MetricFilter(this, 'MetricFilter', {\n      logGroup,\n      metricNamespace: 'MyApp',\n      metricName: 'Latency',\n      filterPattern: FilterPattern.exists('$.latency'),\n      metricValue: '$.latency',\n    });\n    /// !hide\n  }\n}\n\nconst app = new App();\nnew MetricFilterIntegStack(app, 'aws-cdk-metricfilter-integ');\napp.synth();\n","syntaxKindCounter":{"10":5,"75":8,"104":1,"193":1,"194":1,"196":1,"197":1,"226":1,"281":4,"282":1},"fqnsFingerprint":"807e3d39d26baa68827a53009916a79dec3f6b9f4702e11808620a18b25dfd53"},"14f162da907c73a9f9dc1fa616b7641b291e7ee32f04423a6548778decb9dcfb":{"translations":{"python":{"source":"logs.QueryDefinition(self, \"QueryDefinition\",\n    query_definition_name=\"MyQuery\",\n    query_string=logs.QueryString(\n        fields=[\"@timestamp\", \"@message\"],\n        sort=\"@timestamp desc\",\n        limit=20\n    )\n)","version":"2"},"csharp":{"source":"new QueryDefinition(this, \"QueryDefinition\", new QueryDefinitionProps {\n    QueryDefinitionName = \"MyQuery\",\n    QueryString = new QueryString(new QueryStringProps {\n        Fields = new [] { \"@timestamp\", \"@message\" },\n        Sort = \"@timestamp desc\",\n        Limit = 20\n    })\n});","version":"1"},"java":{"source":"QueryDefinition.Builder.create(this, \"QueryDefinition\")\n        .queryDefinitionName(\"MyQuery\")\n        .queryString(QueryString.Builder.create()\n                .fields(List.of(\"@timestamp\", \"@message\"))\n                .sort(\"@timestamp desc\")\n                .limit(20)\n                .build())\n        .build();","version":"1"},"go":{"source":"logs.NewQueryDefinition(this, jsii.String(\"QueryDefinition\"), &QueryDefinitionProps{\n\tQueryDefinitionName: jsii.String(\"MyQuery\"),\n\tQueryString: logs.NewQueryString(&QueryStringProps{\n\t\tFields: []*string{\n\t\t\tjsii.String(\"@timestamp\"),\n\t\t\tjsii.String(\"@message\"),\n\t\t},\n\t\tSort: jsii.String(\"@timestamp desc\"),\n\t\tLimit: jsii.Number(20),\n\t}),\n})","version":"1"},"$":{"source":"new logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.QueryDefinition"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.QueryDefinition","@aws-cdk/aws-logs.QueryDefinitionProps","@aws-cdk/aws-logs.QueryString","@aws-cdk/aws-logs.QueryStringProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":5,"75":9,"104":1,"192":1,"193":2,"194":2,"197":2,"226":1,"281":5},"fqnsFingerprint":"2c1b03f5f85c5b5c727b8181577e1b6a7ab45b415fa54ee095df217b061916c6"},"0dcaea37385bb20b52d7041c4fd1356e3c9b0b2077d1f82461456f768ba8c9b7":{"translations":{"python":{"source":"logs.QueryDefinition(self, \"QueryDefinition\",\n    query_definition_name=\"MyQuery\",\n    query_string=logs.QueryString(\n        fields=[\"@timestamp\", \"@message\"],\n        sort=\"@timestamp desc\",\n        limit=20\n    )\n)","version":"2"},"csharp":{"source":"new QueryDefinition(this, \"QueryDefinition\", new QueryDefinitionProps {\n    QueryDefinitionName = \"MyQuery\",\n    QueryString = new QueryString(new QueryStringProps {\n        Fields = new [] { \"@timestamp\", \"@message\" },\n        Sort = \"@timestamp desc\",\n        Limit = 20\n    })\n});","version":"1"},"java":{"source":"QueryDefinition.Builder.create(this, \"QueryDefinition\")\n        .queryDefinitionName(\"MyQuery\")\n        .queryString(QueryString.Builder.create()\n                .fields(List.of(\"@timestamp\", \"@message\"))\n                .sort(\"@timestamp desc\")\n                .limit(20)\n                .build())\n        .build();","version":"1"},"go":{"source":"logs.NewQueryDefinition(this, jsii.String(\"QueryDefinition\"), &QueryDefinitionProps{\n\tQueryDefinitionName: jsii.String(\"MyQuery\"),\n\tQueryString: logs.NewQueryString(&QueryStringProps{\n\t\tFields: []*string{\n\t\t\tjsii.String(\"@timestamp\"),\n\t\t\tjsii.String(\"@message\"),\n\t\t},\n\t\tSort: jsii.String(\"@timestamp desc\"),\n\t\tLimit: jsii.Number(20),\n\t}),\n})","version":"1"},"$":{"source":"new logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.QueryDefinitionProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.QueryDefinition","@aws-cdk/aws-logs.QueryDefinitionProps","@aws-cdk/aws-logs.QueryString","@aws-cdk/aws-logs.QueryStringProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":5,"75":9,"104":1,"192":1,"193":2,"194":2,"197":2,"226":1,"281":5},"fqnsFingerprint":"2c1b03f5f85c5b5c727b8181577e1b6a7ab45b415fa54ee095df217b061916c6"},"8a6f9c2d6a8f67213ca0f8c05d57f6036147f54741dba8fe6f6c15baa5ed47d9":{"translations":{"python":{"source":"logs.QueryDefinition(self, \"QueryDefinition\",\n    query_definition_name=\"MyQuery\",\n    query_string=logs.QueryString(\n        fields=[\"@timestamp\", \"@message\"],\n        sort=\"@timestamp desc\",\n        limit=20\n    )\n)","version":"2"},"csharp":{"source":"new QueryDefinition(this, \"QueryDefinition\", new QueryDefinitionProps {\n    QueryDefinitionName = \"MyQuery\",\n    QueryString = new QueryString(new QueryStringProps {\n        Fields = new [] { \"@timestamp\", \"@message\" },\n        Sort = \"@timestamp desc\",\n        Limit = 20\n    })\n});","version":"1"},"java":{"source":"QueryDefinition.Builder.create(this, \"QueryDefinition\")\n        .queryDefinitionName(\"MyQuery\")\n        .queryString(QueryString.Builder.create()\n                .fields(List.of(\"@timestamp\", \"@message\"))\n                .sort(\"@timestamp desc\")\n                .limit(20)\n                .build())\n        .build();","version":"1"},"go":{"source":"logs.NewQueryDefinition(this, jsii.String(\"QueryDefinition\"), &QueryDefinitionProps{\n\tQueryDefinitionName: jsii.String(\"MyQuery\"),\n\tQueryString: logs.NewQueryString(&QueryStringProps{\n\t\tFields: []*string{\n\t\t\tjsii.String(\"@timestamp\"),\n\t\t\tjsii.String(\"@message\"),\n\t\t},\n\t\tSort: jsii.String(\"@timestamp desc\"),\n\t\tLimit: jsii.Number(20),\n\t}),\n})","version":"1"},"$":{"source":"new logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.QueryString"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.QueryDefinition","@aws-cdk/aws-logs.QueryDefinitionProps","@aws-cdk/aws-logs.QueryString","@aws-cdk/aws-logs.QueryStringProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":5,"75":9,"104":1,"192":1,"193":2,"194":2,"197":2,"226":1,"281":5},"fqnsFingerprint":"2c1b03f5f85c5b5c727b8181577e1b6a7ab45b415fa54ee095df217b061916c6"},"47319323c3001be5f139387d95ccbff0410d82fad35158314cc12e9318c4275d":{"translations":{"python":{"source":"logs.QueryDefinition(self, \"QueryDefinition\",\n    query_definition_name=\"MyQuery\",\n    query_string=logs.QueryString(\n        fields=[\"@timestamp\", \"@message\"],\n        sort=\"@timestamp desc\",\n        limit=20\n    )\n)","version":"2"},"csharp":{"source":"new QueryDefinition(this, \"QueryDefinition\", new QueryDefinitionProps {\n    QueryDefinitionName = \"MyQuery\",\n    QueryString = new QueryString(new QueryStringProps {\n        Fields = new [] { \"@timestamp\", \"@message\" },\n        Sort = \"@timestamp desc\",\n        Limit = 20\n    })\n});","version":"1"},"java":{"source":"QueryDefinition.Builder.create(this, \"QueryDefinition\")\n        .queryDefinitionName(\"MyQuery\")\n        .queryString(QueryString.Builder.create()\n                .fields(List.of(\"@timestamp\", \"@message\"))\n                .sort(\"@timestamp desc\")\n                .limit(20)\n                .build())\n        .build();","version":"1"},"go":{"source":"logs.NewQueryDefinition(this, jsii.String(\"QueryDefinition\"), &QueryDefinitionProps{\n\tQueryDefinitionName: jsii.String(\"MyQuery\"),\n\tQueryString: logs.NewQueryString(&QueryStringProps{\n\t\tFields: []*string{\n\t\t\tjsii.String(\"@timestamp\"),\n\t\t\tjsii.String(\"@message\"),\n\t\t},\n\t\tSort: jsii.String(\"@timestamp desc\"),\n\t\tLimit: jsii.Number(20),\n\t}),\n})","version":"1"},"$":{"source":"new logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.QueryStringProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.QueryDefinition","@aws-cdk/aws-logs.QueryDefinitionProps","@aws-cdk/aws-logs.QueryString","@aws-cdk/aws-logs.QueryStringProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew logs.QueryDefinition(this, 'QueryDefinition', {\n  queryDefinitionName: 'MyQuery',\n  queryString: new logs.QueryString({\n    fields: ['@timestamp', '@message'],\n    sort: '@timestamp desc',\n    limit: 20,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":5,"75":9,"104":1,"192":1,"193":2,"194":2,"197":2,"226":1,"281":5},"fqnsFingerprint":"2c1b03f5f85c5b5c727b8181577e1b6a7ab45b415fa54ee095df217b061916c6"},"35ee08cd58ded9f7dbb793bdb5bd6fe52c49a5e5943c066132f3e49e0345d267":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\n\n# policy_statement: iam.PolicyStatement\n\nresource_policy = logs.ResourcePolicy(self, \"MyResourcePolicy\",\n    policy_statements=[policy_statement],\n    resource_policy_name=\"resourcePolicyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\n\nPolicyStatement policyStatement;\n\nvar resourcePolicy = new ResourcePolicy(this, \"MyResourcePolicy\", new ResourcePolicyProps {\n    PolicyStatements = new [] { policyStatement },\n    ResourcePolicyName = \"resourcePolicyName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\n\nPolicyStatement policyStatement;\n\nResourcePolicy resourcePolicy = ResourcePolicy.Builder.create(this, \"MyResourcePolicy\")\n        .policyStatements(List.of(policyStatement))\n        .resourcePolicyName(\"resourcePolicyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar policyStatement policyStatement\n\nresourcePolicy := logs.NewResourcePolicy(this, jsii.String(\"MyResourcePolicy\"), &ResourcePolicyProps{\n\tPolicyStatements: []*policyStatement{\n\t\tpolicyStatement,\n\t},\n\tResourcePolicyName: jsii.String(\"resourcePolicyName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const policyStatement: iam.PolicyStatement;\nconst resourcePolicy = new logs.ResourcePolicy(this, 'MyResourcePolicy', /* all optional props */ {\n  policyStatements: [policyStatement],\n  resourcePolicyName: 'resourcePolicyName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.ResourcePolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.ResourcePolicy","@aws-cdk/aws-logs.ResourcePolicyProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const policyStatement: iam.PolicyStatement;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourcePolicy = new logs.ResourcePolicy(this, 'MyResourcePolicy', /* all optional props */ {\n  policyStatements: [policyStatement],\n  resourcePolicyName: 'resourcePolicyName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":11,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"4c8c5969a017246399792d93431d6f0b27ccef0654d9d7ca21b61b7a7c23568d"},"59c34506d3e53af459b9f23fdf160b0f98b6457acc490d4368e7491c827be207":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_logs as logs\n\n# policy_statement: iam.PolicyStatement\n\nresource_policy_props = logs.ResourcePolicyProps(\n    policy_statements=[policy_statement],\n    resource_policy_name=\"resourcePolicyName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.Logs;\n\nPolicyStatement policyStatement;\n\nvar resourcePolicyProps = new ResourcePolicyProps {\n    PolicyStatements = new [] { policyStatement },\n    ResourcePolicyName = \"resourcePolicyName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.logs.*;\n\nPolicyStatement policyStatement;\n\nResourcePolicyProps resourcePolicyProps = ResourcePolicyProps.builder()\n        .policyStatements(List.of(policyStatement))\n        .resourcePolicyName(\"resourcePolicyName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar policyStatement policyStatement\n\nresourcePolicyProps := &ResourcePolicyProps{\n\tPolicyStatements: []*policyStatement{\n\t\tpolicyStatement,\n\t},\n\tResourcePolicyName: jsii.String(\"resourcePolicyName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const policyStatement: iam.PolicyStatement;\nconst resourcePolicyProps: logs.ResourcePolicyProps = {\n  policyStatements: [policyStatement],\n  resourcePolicyName: 'resourcePolicyName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.ResourcePolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.ResourcePolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const policyStatement: iam.PolicyStatement;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourcePolicyProps: logs.ResourcePolicyProps = {\n  policyStatements: [policyStatement],\n  resourcePolicyName: 'resourcePolicyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":11,"130":1,"153":2,"169":2,"192":1,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"299108dcde444bdb9cfeacf516d8bd4245a0e4954aad4fc176b83f719b63b547"},"8fb110add046eb766530d0d6d8253fc55534ec3c2697b56e998fc0b777ced6a9":{"translations":{"python":{"source":"import aws_cdk.aws_logs as logs\n# my_logs_publishing_role: iam.Role\n# vpc: ec2.Vpc\n\n\n# Exporting logs from a cluster\ncluster = rds.DatabaseCluster(self, \"Database\",\n    engine=rds.DatabaseClusterEngine.aurora(\n        version=rds.AuroraEngineVersion.VER_1_17_9\n    ),\n    instance_props=rds.InstanceProps(\n        vpc=vpc\n    ),\n    cloudwatch_logs_exports=[\"error\", \"general\", \"slowquery\", \"audit\"],  # Export all available MySQL-based logs\n    cloudwatch_logs_retention=logs.RetentionDays.THREE_MONTHS,  # Optional - default is to never expire logs\n    cloudwatch_logs_retention_role=my_logs_publishing_role\n)\n\n# Exporting logs from an instance\ninstance = rds.DatabaseInstance(self, \"Instance\",\n    engine=rds.DatabaseInstanceEngine.postgres(\n        version=rds.PostgresEngineVersion.VER_12_3\n    ),\n    vpc=vpc,\n    cloudwatch_logs_exports=[\"postgresql\"]\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Logs;\nRole myLogsPublishingRole;\nVpc vpc;\n\n\n// Exporting logs from a cluster\nvar cluster = new DatabaseCluster(this, \"Database\", new DatabaseClusterProps {\n    Engine = DatabaseClusterEngine.Aurora(new AuroraClusterEngineProps {\n        Version = AuroraEngineVersion.VER_1_17_9\n    }),\n    InstanceProps = new InstanceProps {\n        Vpc = vpc\n    },\n    CloudwatchLogsExports = new [] { \"error\", \"general\", \"slowquery\", \"audit\" },  // Export all available MySQL-based logs\n    CloudwatchLogsRetention = RetentionDays.THREE_MONTHS,  // Optional - default is to never expire logs\n    CloudwatchLogsRetentionRole = myLogsPublishingRole\n});\n\n// Exporting logs from an instance\nvar instance = new DatabaseInstance(this, \"Instance\", new DatabaseInstanceProps {\n    Engine = DatabaseInstanceEngine.Postgres(new PostgresInstanceEngineProps {\n        Version = PostgresEngineVersion.VER_12_3\n    }),\n    Vpc = vpc,\n    CloudwatchLogsExports = new [] { \"postgresql\" }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.logs.*;\nRole myLogsPublishingRole;\nVpc vpc;\n\n\n// Exporting logs from a cluster\nDatabaseCluster cluster = DatabaseCluster.Builder.create(this, \"Database\")\n        .engine(DatabaseClusterEngine.aurora(AuroraClusterEngineProps.builder()\n                .version(AuroraEngineVersion.VER_1_17_9)\n                .build()))\n        .instanceProps(InstanceProps.builder()\n                .vpc(vpc)\n                .build())\n        .cloudwatchLogsExports(List.of(\"error\", \"general\", \"slowquery\", \"audit\")) // Export all available MySQL-based logs\n        .cloudwatchLogsRetention(RetentionDays.THREE_MONTHS) // Optional - default is to never expire logs\n        .cloudwatchLogsRetentionRole(myLogsPublishingRole)\n        .build();\n\n// Exporting logs from an instance\nDatabaseInstance instance = DatabaseInstance.Builder.create(this, \"Instance\")\n        .engine(DatabaseInstanceEngine.postgres(PostgresInstanceEngineProps.builder()\n                .version(PostgresEngineVersion.VER_12_3)\n                .build()))\n        .vpc(vpc)\n        .cloudwatchLogsExports(List.of(\"postgresql\"))\n        .build();","version":"1"},"go":{"source":"import logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nvar myLogsPublishingRole role\nvar vpc vpc\n\n\n// Exporting logs from a cluster\ncluster := rds.NewDatabaseCluster(this, jsii.String(\"Database\"), &DatabaseClusterProps{\n\tEngine: rds.DatabaseClusterEngine_Aurora(&AuroraClusterEngineProps{\n\t\tVersion: rds.AuroraEngineVersion_VER_1_17_9(),\n\t}),\n\tInstanceProps: &InstanceProps{\n\t\tVpc: *Vpc,\n\t},\n\tCloudwatchLogsExports: []*string{\n\t\tjsii.String(\"error\"),\n\t\tjsii.String(\"general\"),\n\t\tjsii.String(\"slowquery\"),\n\t\tjsii.String(\"audit\"),\n\t},\n\t // Export all available MySQL-based logs\n\tCloudwatchLogsRetention: logs.RetentionDays_THREE_MONTHS,\n\t // Optional - default is to never expire logs\n\tCloudwatchLogsRetentionRole: myLogsPublishingRole,\n})\n\n// Exporting logs from an instance\ninstance := rds.NewDatabaseInstance(this, jsii.String(\"Instance\"), &DatabaseInstanceProps{\n\tEngine: rds.DatabaseInstanceEngine_Postgres(&PostgresInstanceEngineProps{\n\t\tVersion: rds.PostgresEngineVersion_VER_12_3(),\n\t}),\n\tVpc: Vpc,\n\tCloudwatchLogsExports: []*string{\n\t\tjsii.String(\"postgresql\"),\n\t},\n})","version":"1"},"$":{"source":"import * as logs from '@aws-cdk/aws-logs';\ndeclare const myLogsPublishingRole: iam.Role;\ndeclare const vpc: ec2.Vpc;\n\n// Exporting logs from a cluster\nconst cluster = new rds.DatabaseCluster(this, 'Database', {\n  engine: rds.DatabaseClusterEngine.aurora({\n    version: rds.AuroraEngineVersion.VER_1_17_9, // different version class for each engine type\n  }),\n  instanceProps: {\n    vpc,\n  },\n  cloudwatchLogsExports: ['error', 'general', 'slowquery', 'audit'], // Export all available MySQL-based logs\n  cloudwatchLogsRetention: logs.RetentionDays.THREE_MONTHS, // Optional - default is to never expire logs\n  cloudwatchLogsRetentionRole: myLogsPublishingRole, // Optional - a role will be created if not provided\n  // ...\n});\n\n// Exporting logs from an instance\nconst instance = new rds.DatabaseInstance(this, 'Instance', {\n  engine: rds.DatabaseInstanceEngine.postgres({\n    version: rds.PostgresEngineVersion.VER_12_3,\n  }),\n  vpc,\n  cloudwatchLogsExports: ['postgresql'], // Export the PostgreSQL logs\n  // ...\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.RetentionDays"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#THREE_MONTHS","@aws-cdk/aws-rds.AuroraClusterEngineProps","@aws-cdk/aws-rds.AuroraEngineVersion","@aws-cdk/aws-rds.AuroraEngineVersion#VER_1_17_9","@aws-cdk/aws-rds.DatabaseCluster","@aws-cdk/aws-rds.DatabaseClusterEngine","@aws-cdk/aws-rds.DatabaseClusterEngine#aurora","@aws-cdk/aws-rds.DatabaseClusterProps","@aws-cdk/aws-rds.DatabaseInstance","@aws-cdk/aws-rds.DatabaseInstanceEngine","@aws-cdk/aws-rds.DatabaseInstanceEngine#postgres","@aws-cdk/aws-rds.DatabaseInstanceProps","@aws-cdk/aws-rds.IClusterEngine","@aws-cdk/aws-rds.IInstanceEngine","@aws-cdk/aws-rds.InstanceProps","@aws-cdk/aws-rds.PostgresEngineVersion","@aws-cdk/aws-rds.PostgresEngineVersion#VER_12_3","@aws-cdk/aws-rds.PostgresInstanceEngineProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as logs from '@aws-cdk/aws-logs';\ndeclare const myLogsPublishingRole: iam.Role;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, SecretValue, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport rds = require('@aws-cdk/aws-rds');\nimport targets = require('@aws-cdk/aws-events-targets');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport secretsmanager = require('@aws-cdk/aws-secretsmanager');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Exporting logs from a cluster\nconst cluster = new rds.DatabaseCluster(this, 'Database', {\n  engine: rds.DatabaseClusterEngine.aurora({\n    version: rds.AuroraEngineVersion.VER_1_17_9, // different version class for each engine type\n  }),\n  instanceProps: {\n    vpc,\n  },\n  cloudwatchLogsExports: ['error', 'general', 'slowquery', 'audit'], // Export all available MySQL-based logs\n  cloudwatchLogsRetention: logs.RetentionDays.THREE_MONTHS, // Optional - default is to never expire logs\n  cloudwatchLogsRetentionRole: myLogsPublishingRole, // Optional - a role will be created if not provided\n  // ...\n});\n\n// Exporting logs from an instance\nconst instance = new rds.DatabaseInstance(this, 'Instance', {\n  engine: rds.DatabaseInstanceEngine.postgres({\n    version: rds.PostgresEngineVersion.VER_12_3,\n  }),\n  vpc,\n  cloudwatchLogsExports: ['postgresql'], // Export the PostgreSQL logs\n  // ...\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":40,"104":2,"130":2,"153":2,"169":2,"192":2,"193":5,"194":12,"196":2,"197":2,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":9,"282":2,"290":1},"fqnsFingerprint":"08fddfe5f1cd7a3d905e6058ca5b5fee72e3e91cd37e98bea8002b5221640679"},"e3100cecd66104e8c90f3c8abe1721f33d9cb3982c7ecf3f2d5cdcf1e70fe36f":{"translations":{"python":{"source":"# Search for all events where the component is \"HttpServer\" and the\n# result code is not equal to 200.\npattern = logs.FilterPattern.space_delimited(\"time\", \"component\", \"...\", \"result_code\", \"latency\").where_string(\"component\", \"=\", \"HttpServer\").where_number(\"result_code\", \"!=\", 200)","version":"2"},"csharp":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nvar pattern = FilterPattern.SpaceDelimited(\"time\", \"component\", \"...\", \"result_code\", \"latency\").WhereString(\"component\", \"=\", \"HttpServer\").WhereNumber(\"result_code\", \"!=\", 200);","version":"1"},"java":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nSpaceDelimitedTextPattern pattern = FilterPattern.spaceDelimited(\"time\", \"component\", \"...\", \"result_code\", \"latency\").whereString(\"component\", \"=\", \"HttpServer\").whereNumber(\"result_code\", \"!=\", 200);","version":"1"},"go":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\npattern := logs.FilterPattern_SpaceDelimited(jsii.String(\"time\"), jsii.String(\"component\"), jsii.String(\"...\"), jsii.String(\"result_code\"), jsii.String(\"latency\")).WhereString(jsii.String(\"component\"), jsii.String(\"=\"), jsii.String(\"HttpServer\")).WhereNumber(jsii.String(\"result_code\"), jsii.String(\"!=\"), jsii.Number(200))","version":"1"},"$":{"source":"// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nconst pattern = logs.FilterPattern.spaceDelimited('time', 'component', '...', 'result_code', 'latency')\n  .whereString('component', '=', 'HttpServer')\n  .whereNumber('result_code', '!=', 200);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.SpaceDelimitedTextPattern"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#spaceDelimited","@aws-cdk/aws-logs.SpaceDelimitedTextPattern","@aws-cdk/aws-logs.SpaceDelimitedTextPattern#whereNumber","@aws-cdk/aws-logs.SpaceDelimitedTextPattern#whereString"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Search for all events where the component is \"HttpServer\" and the\n// result code is not equal to 200.\nconst pattern = logs.FilterPattern.spaceDelimited('time', 'component', '...', 'result_code', 'latency')\n  .whereString('component', '=', 'HttpServer')\n  .whereNumber('result_code', '!=', 200);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"8":1,"10":10,"75":6,"194":4,"196":3,"225":1,"242":1,"243":1},"fqnsFingerprint":"21704a18ecdb7086d532c7467ee18fdfac540eb28f25941afb0687fc7d123836"},"ee943f4e4e3db0453a0e654dca6994e636c77a0c6b5b35179f7495ed90b83132":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\nstream_options = logs.StreamOptions(\n    log_stream_name=\"logStreamName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nvar streamOptions = new StreamOptions {\n    LogStreamName = \"logStreamName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nStreamOptions streamOptions = StreamOptions.builder()\n        .logStreamName(\"logStreamName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nstreamOptions := &StreamOptions{\n\tLogStreamName: jsii.String(\"logStreamName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\nconst streamOptions: logs.StreamOptions = {\n  logStreamName: 'logStreamName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.StreamOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.StreamOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst streamOptions: logs.StreamOptions = {\n  logStreamName: 'logStreamName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":5,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"c0e316814f6383942f2c446db6e8a7a2f2c1639986fb0ab06c1fc7e37f7de93a"},"380b31ec0a233180313e60f5d51f507fd42710460fa2993ce5008cec7ac1be7d":{"translations":{"python":{"source":"import aws_cdk.aws_logs_destinations as destinations\n# fn: lambda.Function\n# log_group: logs.LogGroup\n\n\nlogs.SubscriptionFilter(self, \"Subscription\",\n    log_group=log_group,\n    destination=destinations.LambdaDestination(fn),\n    filter_pattern=logs.FilterPattern.all_terms(\"ERROR\", \"MainThread\")\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Logs.Destinations;\nFunction fn;\nLogGroup logGroup;\n\n\nnew SubscriptionFilter(this, \"Subscription\", new SubscriptionFilterProps {\n    LogGroup = logGroup,\n    Destination = new LambdaDestination(fn),\n    FilterPattern = FilterPattern.AllTerms(\"ERROR\", \"MainThread\")\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.logs.destinations.*;\nFunction fn;\nLogGroup logGroup;\n\n\nSubscriptionFilter.Builder.create(this, \"Subscription\")\n        .logGroup(logGroup)\n        .destination(new LambdaDestination(fn))\n        .filterPattern(FilterPattern.allTerms(\"ERROR\", \"MainThread\"))\n        .build();","version":"1"},"go":{"source":"import destinations \"github.com/aws-samples/dummy/awscdkawslogsdestinations\"\nvar fn function\nvar logGroup logGroup\n\n\nlogs.NewSubscriptionFilter(this, jsii.String(\"Subscription\"), &SubscriptionFilterProps{\n\tLogGroup: LogGroup,\n\tDestination: destinations.NewLambdaDestination(fn),\n\tFilterPattern: logs.FilterPattern_AllTerms(jsii.String(\"ERROR\"), jsii.String(\"MainThread\")),\n})","version":"1"},"$":{"source":"import * as destinations from '@aws-cdk/aws-logs-destinations';\ndeclare const fn: lambda.Function;\ndeclare const logGroup: logs.LogGroup;\n\nnew logs.SubscriptionFilter(this, 'Subscription', {\n  logGroup,\n  destination: new destinations.LambdaDestination(fn),\n  filterPattern: logs.FilterPattern.allTerms(\"ERROR\", \"MainThread\"),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.SubscriptionFilter"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-logs-destinations.LambdaDestination","@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#allTerms","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.ILogSubscriptionDestination","@aws-cdk/aws-logs.SubscriptionFilter","@aws-cdk/aws-logs.SubscriptionFilterProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as destinations from '@aws-cdk/aws-logs-destinations';\ndeclare const fn: lambda.Function;\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew logs.SubscriptionFilter(this, 'Subscription', {\n  logGroup,\n  destination: new destinations.LambdaDestination(fn),\n  filterPattern: logs.FilterPattern.allTerms(\"ERROR\", \"MainThread\"),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":4,"75":18,"104":1,"130":2,"153":2,"169":2,"193":1,"194":4,"196":1,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"282":1,"290":1},"fqnsFingerprint":"c4976cece6cd33aa4c017d9630d31206fe2b4af8c139af7663f6f9b4d5f47ddb"},"89efa5c3e2860fccf6358a195a8a5f06ecdee34c9e15eaabf09072f130ac68fa":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_logs as logs\n\n# filter_pattern: logs.IFilterPattern\n# log_subscription_destination: logs.ILogSubscriptionDestination\n\nsubscription_filter_options = logs.SubscriptionFilterOptions(\n    destination=log_subscription_destination,\n    filter_pattern=filter_pattern\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Logs;\n\nIFilterPattern filterPattern;\nILogSubscriptionDestination logSubscriptionDestination;\n\nvar subscriptionFilterOptions = new SubscriptionFilterOptions {\n    Destination = logSubscriptionDestination,\n    FilterPattern = filterPattern\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.logs.*;\n\nIFilterPattern filterPattern;\nILogSubscriptionDestination logSubscriptionDestination;\n\nSubscriptionFilterOptions subscriptionFilterOptions = SubscriptionFilterOptions.builder()\n        .destination(logSubscriptionDestination)\n        .filterPattern(filterPattern)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar filterPattern iFilterPattern\nvar logSubscriptionDestination iLogSubscriptionDestination\n\nsubscriptionFilterOptions := &SubscriptionFilterOptions{\n\tDestination: logSubscriptionDestination,\n\tFilterPattern: filterPattern,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const filterPattern: logs.IFilterPattern;\ndeclare const logSubscriptionDestination: logs.ILogSubscriptionDestination;\nconst subscriptionFilterOptions: logs.SubscriptionFilterOptions = {\n  destination: logSubscriptionDestination,\n  filterPattern: filterPattern,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.SubscriptionFilterOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogSubscriptionDestination","@aws-cdk/aws-logs.SubscriptionFilterOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const filterPattern: logs.IFilterPattern;\ndeclare const logSubscriptionDestination: logs.ILogSubscriptionDestination;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst subscriptionFilterOptions: logs.SubscriptionFilterOptions = {\n  destination: logSubscriptionDestination,\n  filterPattern: filterPattern,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":14,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"d011b0dea735cd1443164333201700d93cb9aef80c768df50fa6e493b930e7a7"},"04aa8e9c2b277707d61a1ea8be222cf8e5631335b5135e9219c9d3fe23ad886a":{"translations":{"python":{"source":"import aws_cdk.aws_logs_destinations as destinations\n# fn: lambda.Function\n# log_group: logs.LogGroup\n\n\nlogs.SubscriptionFilter(self, \"Subscription\",\n    log_group=log_group,\n    destination=destinations.LambdaDestination(fn),\n    filter_pattern=logs.FilterPattern.all_terms(\"ERROR\", \"MainThread\")\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Logs.Destinations;\nFunction fn;\nLogGroup logGroup;\n\n\nnew SubscriptionFilter(this, \"Subscription\", new SubscriptionFilterProps {\n    LogGroup = logGroup,\n    Destination = new LambdaDestination(fn),\n    FilterPattern = FilterPattern.AllTerms(\"ERROR\", \"MainThread\")\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.logs.destinations.*;\nFunction fn;\nLogGroup logGroup;\n\n\nSubscriptionFilter.Builder.create(this, \"Subscription\")\n        .logGroup(logGroup)\n        .destination(new LambdaDestination(fn))\n        .filterPattern(FilterPattern.allTerms(\"ERROR\", \"MainThread\"))\n        .build();","version":"1"},"go":{"source":"import destinations \"github.com/aws-samples/dummy/awscdkawslogsdestinations\"\nvar fn function\nvar logGroup logGroup\n\n\nlogs.NewSubscriptionFilter(this, jsii.String(\"Subscription\"), &SubscriptionFilterProps{\n\tLogGroup: LogGroup,\n\tDestination: destinations.NewLambdaDestination(fn),\n\tFilterPattern: logs.FilterPattern_AllTerms(jsii.String(\"ERROR\"), jsii.String(\"MainThread\")),\n})","version":"1"},"$":{"source":"import * as destinations from '@aws-cdk/aws-logs-destinations';\ndeclare const fn: lambda.Function;\ndeclare const logGroup: logs.LogGroup;\n\nnew logs.SubscriptionFilter(this, 'Subscription', {\n  logGroup,\n  destination: new destinations.LambdaDestination(fn),\n  filterPattern: logs.FilterPattern.allTerms(\"ERROR\", \"MainThread\"),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-logs.SubscriptionFilterProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-logs-destinations.LambdaDestination","@aws-cdk/aws-logs.FilterPattern","@aws-cdk/aws-logs.FilterPattern#allTerms","@aws-cdk/aws-logs.IFilterPattern","@aws-cdk/aws-logs.ILogGroup","@aws-cdk/aws-logs.ILogSubscriptionDestination","@aws-cdk/aws-logs.SubscriptionFilter","@aws-cdk/aws-logs.SubscriptionFilterProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as destinations from '@aws-cdk/aws-logs-destinations';\ndeclare const fn: lambda.Function;\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew logs.SubscriptionFilter(this, 'Subscription', {\n  logGroup,\n  destination: new destinations.LambdaDestination(fn),\n  filterPattern: logs.FilterPattern.allTerms(\"ERROR\", \"MainThread\"),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n","syntaxKindCounter":{"10":4,"75":18,"104":1,"130":2,"153":2,"169":2,"193":1,"194":4,"196":1,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"282":1,"290":1},"fqnsFingerprint":"c4976cece6cd33aa4c017d9630d31206fe2b4af8c139af7663f6f9b4d5f47ddb"}}}