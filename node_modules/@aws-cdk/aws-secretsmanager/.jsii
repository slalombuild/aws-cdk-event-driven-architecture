{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.199.0",
    "@aws-cdk/aws-iam": "1.199.0",
    "@aws-cdk/aws-kms": "1.199.0",
    "@aws-cdk/aws-lambda": "1.199.0",
    "@aws-cdk/aws-sam": "1.199.0",
    "@aws-cdk/core": "1.199.0",
    "@aws-cdk/cx-api": "1.199.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::SecretsManager",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "aws-secretsmanager"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-secretsmanager",
  "readme": {
    "markdown": "# AWS Secrets Manager Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\n```ts nofixture\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n```\n\n## Create a new Secret in a Stack\n\nIn order to have SecretsManager generate a new secret value automatically,\nyou can get started with the following:\n\n```ts\n// Default secret\nconst secret = new secretsmanager.Secret(this, 'Secret');\n// Using the default secret\nnew iam.User(this, 'User', {\n  password: secret.secretValue,\n});\n// Templated secret\nconst templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n  generateSecretString: {\n    secretStringTemplate: JSON.stringify({ username: 'user' }),\n    generateStringKey: 'password',\n  },\n});\n// Using the templated secret\nnew iam.User(this, 'OtherUser', {\n  userName: templatedSecret.secretValueFromJson('username').toString(),\n  password: templatedSecret.secretValueFromJson('password'),\n});\n```\n\nIf you need to use a pre-existing secret, the recommended way is to manually\nprovision the secret in *AWS SecretsManager* and use the `Secret.fromSecretArn`\nor `Secret.fromSecretAttributes` method to make it available in your CDK Application:\n\n```ts\ndeclare const encryptionKey: kms.Key;\nconst secret = secretsmanager.Secret.fromSecretAttributes(this, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});\n```\n\nSecretsManager secret values can only be used in select set of properties. For the\nlist of properties, see [the CloudFormation Dynamic References documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html).\n\nA secret can set `RemovalPolicy`. If it set to `RETAIN`, that removing a secret will fail.\n\n## Grant permission to use the secret to a role\n\nYou must grant permission to a resource for that resource to be allowed to\nuse a secret. This can be achieved with the `Secret.grantRead` and/or `Secret.grantWrite`\n method, depending on your need:\n\n```ts\nconst role = new iam.Role(this, 'SomeRole', { assumedBy: new iam.AccountRootPrincipal() });\nconst secret = new secretsmanager.Secret(this, 'Secret');\nsecret.grantRead(role);\nsecret.grantWrite(role);\n```\n\nIf, as in the following example, your secret was created with a KMS key:\n\n```ts\ndeclare const role: iam.Role;\nconst key = new kms.Key(this, 'KMS');\nconst secret = new secretsmanager.Secret(this, 'Secret', { encryptionKey: key });\nsecret.grantRead(role);\nsecret.grantWrite(role);\n```\n\nthen `Secret.grantRead` and `Secret.grantWrite` will also grant the role the\nrelevant encrypt and decrypt permissions to the KMS key through the\nSecretsManager service principal.\n\nThe principal is automatically added to Secret resource policy and KMS Key policy for cross account access:\n\n```ts\nconst otherAccount = new iam.AccountPrincipal('1234');\nconst key = new kms.Key(this, 'KMS');\nconst secret = new secretsmanager.Secret(this, 'Secret', { encryptionKey: key });\nsecret.grantRead(otherAccount);\n```\n\n## Rotating a Secret\n\n### Using a Custom Lambda Function\n\nA rotation schedule can be added to a Secret using a custom Lambda function:\n\n```ts\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const fn: lambda.Function;\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15),\n});\n```\n\nNote: The required permissions for Lambda to call SecretsManager and the other way round are automatically granted based on [AWS Documentation](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions.html) as long as the Lambda is not imported.\n\nSee [Overview of the Lambda Rotation Function](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-lambda-function-overview.html) on how to implement a Lambda Rotation Function.\n\n### Using a Hosted Lambda Function\n\nUse the `hostedRotation` prop to rotate a secret with a hosted Lambda function:\n\n```ts\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n});\n```\n\nHosted rotation is available for secrets representing credentials for MySQL, PostgreSQL, Oracle,\nMariaDB, SQLServer, Redshift and MongoDB (both for the single and multi user schemes).\n\nWhen deployed in a VPC, the hosted rotation implements `ec2.IConnectable`:\n\n```ts\ndeclare const myVpc: ec2.Vpc;\ndeclare const dbConnections: ec2.Connections;\ndeclare const secret: secretsmanager.Secret;\n\nconst myHostedRotation = secretsmanager.HostedRotation.mysqlSingleUser({ vpc: myVpc });\nsecret.addRotationSchedule('RotationSchedule', { hostedRotation: myHostedRotation });\ndbConnections.allowDefaultPortFrom(myHostedRotation);\n```\n\nSee also [Automating secret creation in AWS CloudFormation](https://docs.aws.amazon.com/secretsmanager/latest/userguide/integrating_cloudformation.html).\n\n## Rotating database credentials\n\nDefine a `SecretRotation` to rotate database credentials:\n\n```ts\ndeclare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});\n```\n\nThe secret must be a JSON string with the following format:\n\n```json\n{\n  \"engine\": \"<required: database engine>\",\n  \"host\": \"<required: instance host name>\",\n  \"username\": \"<required: username>\",\n  \"password\": \"<required: password>\",\n  \"dbname\": \"<optional: database name>\",\n  \"port\": \"<optional: if not specified, default port will be used>\",\n  \"masterarn\": \"<required for multi user rotation: the arn of the master secret which will be used to create users/change passwords>\"\n}\n```\n\nFor the multi user scheme, a `masterSecret` must be specified:\n\n```ts\ndeclare const myUserSecret: secretsmanager.Secret;\ndeclare const myMasterSecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n  secret: myUserSecret, // The secret that will be rotated\n  masterSecret: myMasterSecret, // The secret used for the rotation\n  target: myDatabase,\n  vpc: myVpc,\n});\n```\n\nSee also [aws-rds](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-rds/README.md) where\ncredentials generation and rotation is integrated.\n\n## Importing Secrets\n\nExisting secrets can be imported by ARN, name, and other attributes (including the KMS key used to encrypt the secret).\nSecrets imported by name should use the short-form of the name (without the SecretsManager-provided suffx);\nthe secret name must exist in the same account and region as the stack.\nImporting by name makes it easier to reference secrets created in different regions, each with their own suffix and ARN.\n\n```ts\nconst secretCompleteArn = 'arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9';\nconst secretPartialArn = 'arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret'; // No Secrets Manager suffix\nconst encryptionKey = kms.Key.fromKeyArn(this, 'MyEncKey', 'arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030');\nconst mySecretFromCompleteArn = secretsmanager.Secret.fromSecretCompleteArn(this, 'SecretFromCompleteArn', secretCompleteArn);\nconst mySecretFromPartialArn = secretsmanager.Secret.fromSecretPartialArn(this, 'SecretFromPartialArn', secretPartialArn);\nconst mySecretFromName = secretsmanager.Secret.fromSecretNameV2(this, 'SecretFromName', 'MySecret')\nconst mySecretFromAttrs = secretsmanager.Secret.fromSecretAttributes(this, 'SecretFromAttributes', {\n  secretCompleteArn,\n  encryptionKey,\n});\n```\n\n## Replicating secrets\n\nSecrets can be replicated to multiple regions by specifying `replicaRegions`:\n\n```ts\ndeclare const myKey: kms.Key;\nnew secretsmanager.Secret(this, 'Secret', {\n  replicaRegions: [\n    {\n      region: 'eu-west-1',\n    },\n    {\n      region: 'eu-central-1',\n      encryptionKey: myKey,\n    }\n  ]\n});\n```\n\nAlternatively, use `addReplicaRegion()`:\n\n```ts\nconst secret = new secretsmanager.Secret(this, 'Secret');\nsecret.addReplicaRegion('eu-west-1');\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-secretsmanager",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.SecretsManager",
      "packageId": "Amazon.CDK.AWS.SecretsManager"
    },
    "java": {
      "maven": {
        "artifactId": "secretsmanager",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.secretsmanager"
    },
    "js": {
      "npm": "@aws-cdk/aws-secretsmanager"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-secretsmanager",
      "module": "aws_cdk.aws_secretsmanager"
    }
  },
  "types": {
    "@aws-cdk/aws-secretsmanager.AttachedSecretOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to add a secret attachment to a secret.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\nconst attachedSecretOptions: secretsmanager.AttachedSecretOptions = {\n  target: secretAttachmentTarget,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.AttachedSecretOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 725
      },
      "name": "AttachedSecretOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target to attach the secret to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 729
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
          }
        }
      ],
      "symbolId": "lib/secret:AttachedSecretOptions"
    },
    "@aws-cdk/aws-secretsmanager.AttachmentTargetType": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "The type of service or database that's being associated with the secret."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.AttachmentTargetType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 661
      },
      "members": [
        {
          "docs": {
            "deprecated": "use RDS_DB_INSTANCE instead",
            "stability": "deprecated",
            "summary": "A database instance."
          },
          "name": "INSTANCE"
        },
        {
          "docs": {
            "deprecated": "use RDS_DB_CLUSTER instead",
            "stability": "deprecated",
            "summary": "A database cluster."
          },
          "name": "CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::RDS::DBInstance."
          },
          "name": "RDS_DB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::RDS::DBCluster."
          },
          "name": "RDS_DB_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::RDS::DBProxy."
          },
          "name": "RDS_DB_PROXY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::Redshift::Cluster."
          },
          "name": "REDSHIFT_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::DocDB::DBInstance."
          },
          "name": "DOCDB_DB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::DocDB::DBCluster."
          },
          "name": "DOCDB_DB_CLUSTER"
        }
      ],
      "name": "AttachmentTargetType",
      "symbolId": "lib/secret:AttachmentTargetType"
    },
    "@aws-cdk/aws-secretsmanager.CfnResourcePolicy": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::ResourcePolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attaches a resource-based permission policy to a secret. A resource-based policy is optional. For more information, see [Authentication and access control for Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html)\n\nFor information about attaching a policy in the console, see [Attach a permissions policy to a secret](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html) .\n\n*Required permissions:* `secretsmanager:PutResourcePolicy` . For more information, see [IAM policy actions for Secrets Manager](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssecretsmanager.html#awssecretsmanager-actions-as-permissions) and [Authentication and access control in Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::ResourcePolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const resourcePolicy: any;\nconst cfnResourcePolicy = new secretsmanager.CfnResourcePolicy(this, 'MyCfnResourcePolicy', {\n  resourcePolicy: resourcePolicy,\n  secretId: 'secretId',\n\n  // the properties below are optional\n  blockPublicPolicy: false,\n});"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnResourcePolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::ResourcePolicy`."
        },
        "locationInModule": {
          "filename": "lib/secretsmanager.generated.ts",
          "line": 167
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 112
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 183
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 196
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResourcePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 116
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 188
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-resourcepolicy"
            },
            "remarks": "For example policies, see [Permissions policy examples](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html) .",
            "stability": "external",
            "summary": "A JSON-formatted string for an AWS resource-based policy."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 142
          },
          "name": "resourcePolicy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-secretid"
            },
            "remarks": "For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.",
            "stability": "external",
            "summary": "The ARN or name of the secret to attach the resource-based policy."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 151
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-blockpublicpolicy"
            },
            "remarks": "By default, Secrets Manager blocks policies that allow broad access, for example those that use a wildcard for the principal.",
            "stability": "external",
            "summary": "Specifies whether to block resource-based policies that allow broad access to the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 158
          },
          "name": "blockPublicPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnResourcePolicy"
    },
    "@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResourcePolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const resourcePolicy: any;\nconst cfnResourcePolicyProps: secretsmanager.CfnResourcePolicyProps = {\n  resourcePolicy: resourcePolicy,\n  secretId: 'secretId',\n\n  // the properties below are optional\n  blockPublicPolicy: false,\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 19
      },
      "name": "CfnResourcePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-resourcepolicy"
            },
            "remarks": "For example policies, see [Permissions policy examples](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html) .",
            "stability": "external",
            "summary": "A JSON-formatted string for an AWS resource-based policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 26
          },
          "name": "resourcePolicy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-secretid"
            },
            "remarks": "For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.",
            "stability": "external",
            "summary": "The ARN or name of the secret to attach the resource-based policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 35
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-blockpublicpolicy"
            },
            "remarks": "By default, Secrets Manager blocks policies that allow broad access, for example those that use a wildcard for the principal.",
            "stability": "external",
            "summary": "Specifies whether to block resource-based policies that allow broad access to the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 42
          },
          "name": "blockPublicPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnResourcePolicyProps"
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationSchedule": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::RotationSchedule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Sets the rotation schedule and Lambda rotation function for a secret. For more information, see [How rotation works](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) .\n\nFor Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .\n\nFor the rotation function, you have two options:\n\n- You can create a new rotation function based on one of the [Secrets Manager rotation function templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html) by using `HostedRotationLambda` .\n- You can choose an existing rotation function by using `RotationLambdaARN` .\n\nFor database secrets, if you define both the secret and the database or service in the AWS CloudFormation template, then you need to define the [AWS::SecretsManager::SecretTargetAttachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html) resource to populate the secret with the connection details of the database or service before you attempt to configure rotation.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::RotationSchedule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnRotationSchedule = new secretsmanager.CfnRotationSchedule(this, 'MyCfnRotationSchedule', {\n  secretId: 'secretId',\n\n  // the properties below are optional\n  hostedRotationLambda: {\n    rotationType: 'rotationType',\n\n    // the properties below are optional\n    excludeCharacters: 'excludeCharacters',\n    kmsKeyArn: 'kmsKeyArn',\n    masterSecretArn: 'masterSecretArn',\n    masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n    rotationLambdaName: 'rotationLambdaName',\n    runtime: 'runtime',\n    superuserSecretArn: 'superuserSecretArn',\n    superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n    vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n    vpcSubnetIds: 'vpcSubnetIds',\n  },\n  rotateImmediatelyOnUpdate: false,\n  rotationLambdaArn: 'rotationLambdaArn',\n  rotationRules: {\n    automaticallyAfterDays: 123,\n    duration: 'duration',\n    scheduleExpression: 'scheduleExpression',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::RotationSchedule`."
        },
        "locationInModule": {
          "filename": "lib/secretsmanager.generated.ts",
          "line": 419
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 338
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 436
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 451
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRotationSchedule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 342
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 441
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-secretid"
            },
            "remarks": "To reference a secret also created in this template, use the [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID.",
            "stability": "external",
            "summary": "The ARN or name of the secret to rotate."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 370
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda"
            },
            "remarks": "For Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .",
            "stability": "external",
            "summary": "Creates a new Lambda rotation function based on one of the [Secrets Manager rotation function templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html) . To use a rotation function that already exists, specify `RotationLambdaARN` instead."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 379
          },
          "name": "hostedRotationLambda",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotateimmediatelyonupdate"
            },
            "remarks": "The rotation schedule is defined in `RotationRules` .\n\nIf you don't immediately rotate the secret, Secrets Manager tests the rotation configuration by running the [`testSecret` step](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) of the Lambda rotation function. The test creates an `AWSPENDING` version of the secret and then removes it.\n\nIf you don't specify this value, then by default, Secrets Manager rotates the secret immediately.\n\nRotation is an asynchronous process. For more information, see [How rotation works](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) .",
            "stability": "external",
            "summary": "Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 392
          },
          "name": "rotateImmediatelyOnUpdate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationlambdaarn"
            },
            "remarks": "To specify a rotation function that is also defined in this template, use the [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function.\n\nFor Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .\n\nTo create a new rotation function based on one of the [Secrets Manager rotation function templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html) , specify `HostedRotationLambda` instead.",
            "stability": "external",
            "summary": "The ARN of an existing Lambda rotation function."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 403
          },
          "name": "rotationLambdaArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationrules"
            },
            "stability": "external",
            "summary": "A structure that defines the rotation configuration for this secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 410
          },
          "name": "rotationRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnRotationSchedule"
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify `Transform: AWS::SecretsManager-2020-07-23` at the beginning of the CloudFormation template.\n\nFor Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .",
        "stability": "external",
        "summary": "Creates a new Lambda rotation function based on one of the [Secrets Manager rotation function templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst hostedRotationLambdaProperty: secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty = {\n  rotationType: 'rotationType',\n\n  // the properties below are optional\n  excludeCharacters: 'excludeCharacters',\n  kmsKeyArn: 'kmsKeyArn',\n  masterSecretArn: 'masterSecretArn',\n  masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n  rotationLambdaName: 'rotationLambdaName',\n  runtime: 'runtime',\n  superuserSecretArn: 'superuserSecretArn',\n  superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n  vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n  vpcSubnetIds: 'vpcSubnetIds',\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 469
      },
      "name": "HostedRotationLambdaProperty",
      "namespace": "CfnRotationSchedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-rotationtype"
            },
            "remarks": "- `MySQLSingleUser` to use the template [SecretsManagerRDSMySQLRotationSingleUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-mysql-singleuser) .\n- `MySQLMultiUser` to use the template [SecretsManagerRDSMySQLRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-mysql-multiuser) .\n- `PostgreSQLSingleUser` to use the template [SecretsManagerRDSPostgreSQLRotationSingleUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-postgre-singleuser)\n- `PostgreSQLMultiUser` to use the template [SecretsManagerRDSPostgreSQLRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-postgre-multiuser) .\n- `OracleSingleUser` to use the template [SecretsManagerRDSOracleRotationSingleUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-oracle-singleuser) .\n- `OracleMultiUser` to use the template [SecretsManagerRDSOracleRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-oracle-multiuser) .\n- `MariaDBSingleUser` to use the template [SecretsManagerRDSMariaDBRotationSingleUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-mariadb-singleuser) .\n- `MariaDBMultiUser` to use the template [SecretsManagerRDSMariaDBRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-mariadb-multiuser) .\n- `SQLServerSingleUser` to use the template [SecretsManagerRDSSQLServerRotationSingleUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-sqlserver-singleuser) .\n- `SQLServerMultiUser` to use the template [SecretsManagerRDSSQLServerRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-sqlserver-multiuser) .\n- `RedshiftSingleUser` to use the template [SecretsManagerRedshiftRotationSingleUsr](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-redshift-singleuser) .\n- `RedshiftMultiUser` to use the template [SecretsManagerRedshiftRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-redshift-multiuser) .\n- `MongoDBSingleUser` to use the template [SecretsManagerMongoDBRotationSingleUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-mongodb-singleuser) .\n- `MongoDBMultiUser` to use the template [SecretsManagerMongoDBRotationMultiUser](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html#sar-template-mongodb-multiuser) .",
            "stability": "external",
            "summary": "The rotation template to base the rotation function on, one of the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 528
          },
          "name": "rotationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-excludecharacters"
            },
            "stability": "external",
            "summary": "A string of the characters that you don't want in the password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 475
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-kmskeyarn"
            },
            "remarks": "If you don't specify this value, then Secrets Manager uses the key `aws/secretsmanager` . If `aws/secretsmanager` doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.",
            "stability": "external",
            "summary": "The ARN of the KMS key that Secrets Manager uses to encrypt the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 481
          },
          "name": "kmsKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-mastersecretarn"
            },
            "remarks": "You must create the superuser secret before you can set this property.\n\nYou must also include the superuser secret ARN as a key in the JSON of the rotating secret so that the Lambda rotation function can find it. CloudFormation does not hardcode secret ARNs in the Lambda rotation function, so you can use the function to rotate multiple secrets. For more information, see [JSON structure of Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html) .\n\nYou can specify `MasterSecretArn` or `SuperuserSecretArn` but not both. They represent the same superuser secret.",
            "stability": "external",
            "summary": "The ARN of the secret that contains superuser credentials, if you use the [Alternating users rotation strategy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets_strategies.html#rotating-secrets-two-users) . CloudFormation grants the execution role for the Lambda rotation function `GetSecretValue` permission to the secret in this property. For more information, see [Lambda rotation function execution role permissions for Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 493
          },
          "name": "masterSecretArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-mastersecretkmskeyarn"
            },
            "remarks": "You can specify `MasterSecretKmsKeyArn` or `SuperuserSecretKmsKeyArn` but not both. They represent the same superuser secret KMS key .",
            "stability": "external",
            "summary": "The ARN of the KMS key that Secrets Manager used to encrypt the superuser secret, if you use the [alternating users strategy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets_strategies.html#rotating-secrets-two-users) and the superuser secret is encrypted with a customer managed key. You don't need to specify this property if the superuser secret is encrypted using the key `aws/secretsmanager` . CloudFormation grants the execution role for the Lambda rotation function `Decrypt` , `DescribeKey` , and `GenerateDataKey` permission to the key in this property. For more information, see [Lambda rotation function execution role permissions for Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 501
          },
          "name": "masterSecretKmsKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-rotationlambdaname"
            },
            "stability": "external",
            "summary": "The name of the Lambda rotation function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 507
          },
          "name": "rotationLambdaName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-runtime"
            },
            "stability": "external",
            "summary": "The Python runtime version associated with the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 534
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-superusersecretarn"
            },
            "remarks": "You must create the superuser secret before you can set this property.\n\nYou must also include the superuser secret ARN as a key in the JSON of the rotating secret so that the Lambda rotation function can find it. CloudFormation does not hardcode secret ARNs in the Lambda rotation function, so you can use the function to rotate multiple secrets. For more information, see [JSON structure of Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html) .\n\nYou can specify `MasterSecretArn` or `SuperuserSecretArn` but not both. They represent the same superuser secret.",
            "stability": "external",
            "summary": "The ARN of the secret that contains superuser credentials, if you use the [Alternating users rotation strategy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets_strategies.html#rotating-secrets-two-users) . CloudFormation grants the execution role for the Lambda rotation function `GetSecretValue` permission to the secret in this property. For more information, see [Lambda rotation function execution role permissions for Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 546
          },
          "name": "superuserSecretArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-superusersecretkmskeyarn"
            },
            "remarks": "You can specify `MasterSecretKmsKeyArn` or `SuperuserSecretKmsKeyArn` but not both. They represent the same superuser secret KMS key .",
            "stability": "external",
            "summary": "The ARN of the KMS key that Secrets Manager used to encrypt the superuser secret, if you use the [alternating users strategy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets_strategies.html#rotating-secrets-two-users) and the superuser secret is encrypted with a customer managed key. You don't need to specify this property if the superuser secret is encrypted using the key `aws/secretsmanager` . CloudFormation grants the execution role for the Lambda rotation function `Decrypt` , `DescribeKey` , and `GenerateDataKey` permission to the key in this property. For more information, see [Lambda rotation function execution role permissions for Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 554
          },
          "name": "superuserSecretKmsKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-vpcsecuritygroupids"
            },
            "remarks": "The templates applies the same security groups as on the Lambda rotation function that is created as part of this stack.",
            "stability": "external",
            "summary": "A comma-separated list of security group IDs applied to the target database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 562
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-vpcsubnetids"
            },
            "remarks": "The Lambda rotation function is in the same subnet group.",
            "stability": "external",
            "summary": "A comma separated list of VPC subnet IDs of the target database network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 568
          },
          "name": "vpcSubnetIds",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnRotationSchedule.HostedRotationLambdaProperty"
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "We recommend you use `ScheduleExpression` to set a cron or rate expression for the schedule and `Duration` to set the length of the rotation window.",
        "stability": "external",
        "summary": "The rotation schedule and window.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst rotationRulesProperty: secretsmanager.CfnRotationSchedule.RotationRulesProperty = {\n  automaticallyAfterDays: 123,\n  duration: 'duration',\n  scheduleExpression: 'scheduleExpression',\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 660
      },
      "name": "RotationRulesProperty",
      "namespace": "CfnRotationSchedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html#cfn-secretsmanager-rotationschedule-rotationrules-automaticallyafterdays"
            },
            "remarks": "You can use this value to check that your secret meets your compliance guidelines for how often secrets must be rotated.\n\nIn `DescribeSecret` and `ListSecrets` , this value is calculated from the rotation schedule after every successful rotation. In `RotateSecret` , you can set the rotation schedule in `RotationRules` with `AutomaticallyAfterDays` or `ScheduleExpression` , but not both.",
            "stability": "external",
            "summary": "The number of days between automatic scheduled rotations of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 668
          },
          "name": "automaticallyAfterDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html#cfn-secretsmanager-rotationschedule-rotationrules-duration"
            },
            "remarks": "Secrets Manager rotates your secret at any time during this window. The window must not extend into the next rotation window or the next UTC day. The window starts according to the `ScheduleExpression` . If you don't specify a `Duration` , for a `ScheduleExpression` in hours, the window automatically closes after one hour. For a `ScheduleExpression` in days, the window automatically closes at the end of the UTC day. For more information, including examples, see [Schedule expressions in Secrets Manager rotation](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_schedule.html) in the *Secrets Manager Users Guide* .",
            "stability": "external",
            "summary": "The length of the rotation window in hours, for example `3h` for a three hour window."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 674
          },
          "name": "duration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html#cfn-secretsmanager-rotationschedule-rotationrules-scheduleexpression"
            },
            "remarks": "Secrets Manager rotation schedules use UTC time zone. Secrets Manager rotates your secret any time during a rotation window.\n\nSecrets Manager `rate()` expressions represent the interval in hours or days that you want to rotate your secret, for example `rate(12 hours)` or `rate(10 days)` . You can rotate a secret as often as every four hours. If you use a `rate()` expression, the rotation window starts at midnight. For a rate in hours, the default rotation window closes after one hour. For a rate in days, the default rotation window closes at the end of the day. You can set the `Duration` to change the rotation window. The rotation window must not extend into the next UTC day or into the next rotation window.\n\nYou can use a `cron()` expression to create a rotation schedule that is more detailed than a rotation interval. For more information, including examples, see [Schedule expressions in Secrets Manager rotation](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_schedule.html) in the *Secrets Manager Users Guide* . For a cron expression that represents a schedule in hours, the default rotation window closes after one hour. For a cron expression that represents a schedule in days, the default rotation window closes at the end of the day. You can set the `Duration` to change the rotation window. The rotation window must not extend into the next UTC day or into the next rotation window.",
            "stability": "external",
            "summary": "A `cron()` or `rate()` expression that defines the schedule for rotating your secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 684
          },
          "name": "scheduleExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnRotationSchedule.RotationRulesProperty"
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnRotationSchedule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnRotationScheduleProps: secretsmanager.CfnRotationScheduleProps = {\n  secretId: 'secretId',\n\n  // the properties below are optional\n  hostedRotationLambda: {\n    rotationType: 'rotationType',\n\n    // the properties below are optional\n    excludeCharacters: 'excludeCharacters',\n    kmsKeyArn: 'kmsKeyArn',\n    masterSecretArn: 'masterSecretArn',\n    masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n    rotationLambdaName: 'rotationLambdaName',\n    runtime: 'runtime',\n    superuserSecretArn: 'superuserSecretArn',\n    superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n    vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n    vpcSubnetIds: 'vpcSubnetIds',\n  },\n  rotateImmediatelyOnUpdate: false,\n  rotationLambdaArn: 'rotationLambdaArn',\n  rotationRules: {\n    automaticallyAfterDays: 123,\n    duration: 'duration',\n    scheduleExpression: 'scheduleExpression',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 209
      },
      "name": "CfnRotationScheduleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-secretid"
            },
            "remarks": "To reference a secret also created in this template, use the [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID.",
            "stability": "external",
            "summary": "The ARN or name of the secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 218
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda"
            },
            "remarks": "For Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .",
            "stability": "external",
            "summary": "Creates a new Lambda rotation function based on one of the [Secrets Manager rotation function templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html) . To use a rotation function that already exists, specify `RotationLambdaARN` instead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 227
          },
          "name": "hostedRotationLambda",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotateimmediatelyonupdate"
            },
            "remarks": "The rotation schedule is defined in `RotationRules` .\n\nIf you don't immediately rotate the secret, Secrets Manager tests the rotation configuration by running the [`testSecret` step](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) of the Lambda rotation function. The test creates an `AWSPENDING` version of the secret and then removes it.\n\nIf you don't specify this value, then by default, Secrets Manager rotates the secret immediately.\n\nRotation is an asynchronous process. For more information, see [How rotation works](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) .",
            "stability": "external",
            "summary": "Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 240
          },
          "name": "rotateImmediatelyOnUpdate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationlambdaarn"
            },
            "remarks": "To specify a rotation function that is also defined in this template, use the [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function.\n\nFor Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .\n\nTo create a new rotation function based on one of the [Secrets Manager rotation function templates](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html) , specify `HostedRotationLambda` instead.",
            "stability": "external",
            "summary": "The ARN of an existing Lambda rotation function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 251
          },
          "name": "rotationLambdaArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationrules"
            },
            "stability": "external",
            "summary": "A structure that defines the rotation configuration for this secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 258
          },
          "name": "rotationRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnRotationScheduleProps"
    },
    "@aws-cdk/aws-secretsmanager.CfnSecret": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::Secret",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a new secret. A *secret* can be a password, a set of credentials such as a user name and password, an OAuth token, or other secret information that you store in an encrypted form in Secrets Manager.\n\nFor Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .\n\nTo retrieve a secret in a CloudFormation template, use a *dynamic reference* . For more information, see [Retrieve a secret in an AWS CloudFormation resource](https://docs.aws.amazon.com/secretsmanager/latest/userguide/cfn-example_reference-secret.html) .\n\nA common scenario is to first create a secret with `GenerateSecretString` , which generates a password, and then use a dynamic reference to retrieve the username and password from the secret to use as credentials for a new database. Follow these steps, as shown in the examples below:\n\n- Define the secret without referencing the service or database. You can't reference the service or database because it doesn't exist yet. The secret must contain a username and password.\n- Next, define the service or database. Include the reference to the secret to use stored credentials to define the database admin user and password.\n- Finally, define a `SecretTargetAttachment` resource type to finish configuring the secret with the required database engine type and the connection details of the service or database. The rotation function requires the details, if you attach one later by defining a [AWS::SecretsManager::RotationSchedule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html) resource type.\n\nFor information about creating a secret in the console, see [Create a secret](https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html) . For information about creating a secret using the CLI or SDK, see [CreateSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html) .\n\nFor information about retrieving a secret in code, see [Retrieve secrets from Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html) .\n\n> Do not create a dynamic reference using a backslash `(\\)` as the final value. AWS CloudFormation cannot resolve those references, which causes a resource failure.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::Secret`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecret = new secretsmanager.CfnSecret(this, 'MyCfnSecret', /* all optional props */ {\n  description: 'description',\n  generateSecretString: {\n    excludeCharacters: 'excludeCharacters',\n    excludeLowercase: false,\n    excludeNumbers: false,\n    excludePunctuation: false,\n    excludeUppercase: false,\n    generateStringKey: 'generateStringKey',\n    includeSpace: false,\n    passwordLength: 123,\n    requireEachIncludedType: false,\n    secretStringTemplate: 'secretStringTemplate',\n  },\n  kmsKeyId: 'kmsKeyId',\n  name: 'name',\n  replicaRegions: [{\n    region: 'region',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  }],\n  secretString: 'secretString',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::Secret`."
        },
        "locationInModule": {
          "filename": "lib/secretsmanager.generated.ts",
          "line": 1030
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 920
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1053
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1070
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 924
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1058
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-tags"
            },
            "remarks": "Each tag is a key and value pair of strings in a JSON text string, for example:\n\n`[{\"Key\":\"CostCenter\",\"Value\":\"12345\"},{\"Key\":\"environment\",\"Value\":\"production\"}]`\n\nSecrets Manager tag key names are case sensitive. A tag with the key \"ABC\" is a different tag from one with key \"abc\".\n\nIf you check tags in permissions policies as part of your security strategy, then adding or removing a tag can change permissions. If the completion of this operation would result in you losing your permissions for this secret, then Secrets Manager blocks the operation and returns an `Access Denied` error. For more information, see [Control access to secrets using tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac) and [Limit access to identities with tags that match secrets' tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2) .\n\nFor information about how to format a JSON parameter for the various command line tool environments, see [Using JSON for Parameters](https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json) . If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text.\n\nThe following restrictions apply to tags:\n\n- Maximum number of tags per secret: 50\n- Maximum key length: 127 Unicode characters in UTF-8\n- Maximum value length: 255 Unicode characters in UTF-8\n- Tag keys and values are case sensitive.\n- Do not use the `aws:` prefix in your tag names or values because AWS reserves it for AWS use. You can't edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit.\n- If you use your tagging schema across multiple services and resources, other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.",
            "stability": "external",
            "summary": "A list of tags to attach to the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1021
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-description"
            },
            "stability": "external",
            "summary": "The description of the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 950
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-generatesecretstring"
            },
            "remarks": "To include a specific string in the secret, use `SecretString` instead. If you omit both `GenerateSecretString` and `SecretString` , you create an empty secret. When you make a change to this property, a new secret version is created.\n\nWe recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.",
            "stability": "external",
            "summary": "A structure that specifies how to generate a password to encrypt and store in the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 959
          },
          "name": "generateSecretString",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-kmskeyid"
            },
            "remarks": "An alias is always prefixed by `alias/` , for example `alias/aws/secretsmanager` . For more information, see [About aliases](https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html) .\n\nTo use a AWS KMS key in a different account, use the key ARN or the alias ARN.\n\nIf you don't specify this value, then Secrets Manager uses the key `aws/secretsmanager` . If that key doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.\n\nIf the secret is in a different AWS account from the credentials calling the API, then you can't use `aws/secretsmanager` to encrypt the secret, and you must create and use a customer managed AWS KMS key.",
            "stability": "external",
            "summary": "The ARN, key ID, or alias of the AWS KMS key that Secrets Manager uses to encrypt the secret value in the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 972
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-name"
            },
            "remarks": "The secret name can contain ASCII letters, numbers, and the following characters: /_+=.@-\n\nDo not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters after the secret name at the end of the ARN.",
            "stability": "external",
            "summary": "The name of the new secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 983
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-replicaregions"
            },
            "stability": "external",
            "summary": "A custom type that specifies a `Region` and the `KmsKeyId` for a replica secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 990
          },
          "name": "replicaRegions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.ReplicaRegionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-secretstring"
            },
            "remarks": "We recommend you use a JSON structure of key/value pairs for your secret value. To generate a random password, use `GenerateSecretString` instead. If you omit both `GenerateSecretString` and `SecretString` , you create an empty secret. When you make a change to this property, a new secret version is created.",
            "stability": "external",
            "summary": "The text to encrypt and store in the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 997
          },
          "name": "secretString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnSecret"
    },
    "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "We recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.\n\n*Required permissions:* `secretsmanager:GetRandomPassword` . For more information, see [IAM policy actions for Secrets Manager](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssecretsmanager.html#awssecretsmanager-actions-as-permissions) and [Authentication and access control in Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html) .",
        "stability": "external",
        "summary": "Generates a random password.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst generateSecretStringProperty: secretsmanager.CfnSecret.GenerateSecretStringProperty = {\n  excludeCharacters: 'excludeCharacters',\n  excludeLowercase: false,\n  excludeNumbers: false,\n  excludePunctuation: false,\n  excludeUppercase: false,\n  generateStringKey: 'generateStringKey',\n  includeSpace: false,\n  passwordLength: 123,\n  requireEachIncludedType: false,\n  secretStringTemplate: 'secretStringTemplate',\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 1086
      },
      "name": "GenerateSecretStringProperty",
      "namespace": "CfnSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludecharacters"
            },
            "stability": "external",
            "summary": "A string of the characters that you don't want in the password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1092
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludelowercase"
            },
            "remarks": "If you don't include this switch, the password can contain lowercase letters.",
            "stability": "external",
            "summary": "Specifies whether to exclude lowercase letters from the password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1098
          },
          "name": "excludeLowercase",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludenumbers"
            },
            "remarks": "If you don't include this switch, the password can contain numbers.",
            "stability": "external",
            "summary": "Specifies whether to exclude numbers from the password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1104
          },
          "name": "excludeNumbers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludepunctuation"
            },
            "remarks": "\" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~` . If you don't include this switch, the password can contain punctuation.",
            "stability": "external",
            "summary": "Specifies whether to exclude the following punctuation characters from the password: `!"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1110
          },
          "name": "excludePunctuation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludeuppercase"
            },
            "remarks": "If you don't include this switch, the password can contain uppercase letters.",
            "stability": "external",
            "summary": "Specifies whether to exclude uppercase letters from the password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1116
          },
          "name": "excludeUppercase",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-generatestringkey"
            },
            "remarks": "This pair is added to the JSON structure specified by the `SecretStringTemplate` parameter. If you specify this parameter, then you must also specify `SecretStringTemplate` .",
            "stability": "external",
            "summary": "The JSON key name for the key/value pair, where the value is the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1122
          },
          "name": "generateStringKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-includespace"
            },
            "remarks": "If you include this switch, the password can contain space characters.",
            "stability": "external",
            "summary": "Specifies whether to include the space character."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1128
          },
          "name": "includeSpace",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-passwordlength"
            },
            "remarks": "If you don't include this parameter, the default length is 32 characters.",
            "stability": "external",
            "summary": "The length of the password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1134
          },
          "name": "passwordLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-requireeachincludedtype"
            },
            "remarks": "If you don't include this switch, the password contains at least one of every character type.",
            "stability": "external",
            "summary": "Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1140
          },
          "name": "requireEachIncludedType",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-secretstringtemplate"
            },
            "remarks": "When you make a change to this property, a new secret version is created.",
            "stability": "external",
            "summary": "A template that the generated string must match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1146
          },
          "name": "secretStringTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnSecret.GenerateSecretStringProperty"
    },
    "@aws-cdk/aws-secretsmanager.CfnSecret.ReplicaRegionProperty": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-replicaregion.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a `Region` and the `KmsKeyId` for a replica secret.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst replicaRegionProperty: secretsmanager.CfnSecret.ReplicaRegionProperty = {\n  region: 'region',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.ReplicaRegionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 1234
      },
      "name": "ReplicaRegionProperty",
      "namespace": "CfnSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-replicaregion.html#cfn-secretsmanager-secret-replicaregion-region"
            },
            "stability": "external",
            "summary": "(Optional) A string that represents a `Region` , for example \"us-east-1\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1246
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-replicaregion.html#cfn-secretsmanager-secret-replicaregion-kmskeyid"
            },
            "remarks": "If you don't include this field, Secrets Manager uses `aws/secretsmanager` .",
            "stability": "external",
            "summary": "The ARN, key ID, or alias of the KMS key to encrypt the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1240
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnSecret.ReplicaRegionProperty"
    },
    "@aws-cdk/aws-secretsmanager.CfnSecretProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSecret`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecretProps: secretsmanager.CfnSecretProps = {\n  description: 'description',\n  generateSecretString: {\n    excludeCharacters: 'excludeCharacters',\n    excludeLowercase: false,\n    excludeNumbers: false,\n    excludePunctuation: false,\n    excludeUppercase: false,\n    generateStringKey: 'generateStringKey',\n    includeSpace: false,\n    passwordLength: 123,\n    requireEachIncludedType: false,\n    secretStringTemplate: 'secretStringTemplate',\n  },\n  kmsKeyId: 'kmsKeyId',\n  name: 'name',\n  replicaRegions: [{\n    region: 'region',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  }],\n  secretString: 'secretString',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 750
      },
      "name": "CfnSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-description"
            },
            "stability": "external",
            "summary": "The description of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 757
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-generatesecretstring"
            },
            "remarks": "To include a specific string in the secret, use `SecretString` instead. If you omit both `GenerateSecretString` and `SecretString` , you create an empty secret. When you make a change to this property, a new secret version is created.\n\nWe recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.",
            "stability": "external",
            "summary": "A structure that specifies how to generate a password to encrypt and store in the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 766
          },
          "name": "generateSecretString",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-kmskeyid"
            },
            "remarks": "An alias is always prefixed by `alias/` , for example `alias/aws/secretsmanager` . For more information, see [About aliases](https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html) .\n\nTo use a AWS KMS key in a different account, use the key ARN or the alias ARN.\n\nIf you don't specify this value, then Secrets Manager uses the key `aws/secretsmanager` . If that key doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.\n\nIf the secret is in a different AWS account from the credentials calling the API, then you can't use `aws/secretsmanager` to encrypt the secret, and you must create and use a customer managed AWS KMS key.",
            "stability": "external",
            "summary": "The ARN, key ID, or alias of the AWS KMS key that Secrets Manager uses to encrypt the secret value in the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 779
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-name"
            },
            "remarks": "The secret name can contain ASCII letters, numbers, and the following characters: /_+=.@-\n\nDo not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters after the secret name at the end of the ARN.",
            "stability": "external",
            "summary": "The name of the new secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 790
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-replicaregions"
            },
            "stability": "external",
            "summary": "A custom type that specifies a `Region` and the `KmsKeyId` for a replica secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 797
          },
          "name": "replicaRegions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.ReplicaRegionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-secretstring"
            },
            "remarks": "We recommend you use a JSON structure of key/value pairs for your secret value. To generate a random password, use `GenerateSecretString` instead. If you omit both `GenerateSecretString` and `SecretString` , you create an empty secret. When you make a change to this property, a new secret version is created.",
            "stability": "external",
            "summary": "The text to encrypt and store in the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 804
          },
          "name": "secretString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-tags"
            },
            "remarks": "Each tag is a key and value pair of strings in a JSON text string, for example:\n\n`[{\"Key\":\"CostCenter\",\"Value\":\"12345\"},{\"Key\":\"environment\",\"Value\":\"production\"}]`\n\nSecrets Manager tag key names are case sensitive. A tag with the key \"ABC\" is a different tag from one with key \"abc\".\n\nIf you check tags in permissions policies as part of your security strategy, then adding or removing a tag can change permissions. If the completion of this operation would result in you losing your permissions for this secret, then Secrets Manager blocks the operation and returns an `Access Denied` error. For more information, see [Control access to secrets using tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac) and [Limit access to identities with tags that match secrets' tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2) .\n\nFor information about how to format a JSON parameter for the various command line tool environments, see [Using JSON for Parameters](https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json) . If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text.\n\nThe following restrictions apply to tags:\n\n- Maximum number of tags per secret: 50\n- Maximum key length: 127 Unicode characters in UTF-8\n- Maximum value length: 255 Unicode characters in UTF-8\n- Tag keys and values are case sensitive.\n- Do not use the `aws:` prefix in your tag names or values because AWS reserves it for AWS use. You can't edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit.\n- If you use your tagging schema across multiple services and resources, other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.",
            "stability": "external",
            "summary": "A list of tags to attach to the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 828
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnSecretProps"
    },
    "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachment": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::SecretTargetAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::SecretsManager::SecretTargetAttachment` resource completes the final link between a Secrets Manager secret and the associated database by adding the database connection information to the secret JSON. If you want to turn on automatic rotation for a database credential secret, the secret must contain the database connection information. For more information, see [JSON structure of Secrets Manager database credential secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html) .\n\nFor Amazon RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::SecretTargetAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecretTargetAttachment = new secretsmanager.CfnSecretTargetAttachment(this, 'MyCfnSecretTargetAttachment', {\n  secretId: 'secretId',\n  targetId: 'targetId',\n  targetType: 'targetType',\n});"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::SecretTargetAttachment`."
        },
        "locationInModule": {
          "filename": "lib/secretsmanager.generated.ts",
          "line": 1465
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 1406
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1482
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1495
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecretTargetAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1410
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1487
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-secretid"
            },
            "remarks": "To reference a secret also created in this template, use the see [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID.",
            "stability": "external",
            "summary": "The ARN or name of the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1436
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targetid"
            },
            "stability": "external",
            "summary": "The ID of the database or cluster."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1443
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targettype"
            },
            "remarks": "This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:\n\n- AWS::RDS::DBInstance\n- AWS::RDS::DBCluster\n- AWS::Redshift::Cluster\n- AWS::DocDB::DBInstance\n- AWS::DocDB::DBCluster",
            "stability": "external",
            "summary": "A string that defines the type of service or database associated with the secret."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1456
          },
          "name": "targetType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnSecretTargetAttachment"
    },
    "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSecretTargetAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecretTargetAttachmentProps: secretsmanager.CfnSecretTargetAttachmentProps = {\n  secretId: 'secretId',\n  targetId: 'targetId',\n  targetType: 'targetType',\n};"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 1310
      },
      "name": "CfnSecretTargetAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-secretid"
            },
            "remarks": "To reference a secret also created in this template, use the see [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID.",
            "stability": "external",
            "summary": "The ARN or name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1317
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targetid"
            },
            "stability": "external",
            "summary": "The ID of the database or cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1324
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targettype"
            },
            "remarks": "This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:\n\n- AWS::RDS::DBInstance\n- AWS::RDS::DBCluster\n- AWS::Redshift::Cluster\n- AWS::DocDB::DBInstance\n- AWS::DocDB::DBCluster",
            "stability": "external",
            "summary": "A string that defines the type of service or database associated with the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 1337
          },
          "name": "targetType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secretsmanager.generated:CfnSecretTargetAttachmentProps"
    },
    "@aws-cdk/aws-secretsmanager.HostedRotation": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A hosted rotation.",
        "example": "const secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation",
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 180
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "MariaDB Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 217
          },
          "name": "mariaDbMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MariaDB Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 212
          },
          "name": "mariaDbSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MongoDB Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 247
          },
          "name": "mongoDbMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MongoDB Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 242
          },
          "name": "mongoDbSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MySQL Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 187
          },
          "name": "mysqlMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MySQL Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 182
          },
          "name": "mysqlSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Oracle Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 207
          },
          "name": "oracleMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Oracle Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 202
          },
          "name": "oracleSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PostgreSQL Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 197
          },
          "name": "postgreSqlMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PostgreSQL Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 192
          },
          "name": "postgreSqlSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Redshift Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 237
          },
          "name": "redshiftMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Redshift Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 232
          },
          "name": "redshiftSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SQL Server Multi User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 227
          },
          "name": "sqlServerMultiUser",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SQL Server Single User."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 222
          },
          "name": "sqlServerSingleUser",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Binds this hosted rotation to a secret."
          },
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 266
          },
          "name": "bind",
          "parameters": [
            {
              "name": "secret",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
              }
            },
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty"
            }
          }
        }
      ],
      "name": "HostedRotation",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Security group connections for this hosted rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 301
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        }
      ],
      "symbolId": "lib/rotation-schedule:HostedRotation"
    },
    "@aws-cdk/aws-secretsmanager.HostedRotationType": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "Hosted rotation type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst hostedRotationType = secretsmanager.HostedRotationType.MARIADB_MULTI_USER;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 318
      },
      "name": "HostedRotationType",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MariaDB Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 341
          },
          "name": "MARIADB_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MariaDB Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 338
          },
          "name": "MARIADB_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MongoDB Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 359
          },
          "name": "MONGODB_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MongoDB Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 356
          },
          "name": "MONGODB_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MySQL Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 323
          },
          "name": "MYSQL_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MySQL Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 320
          },
          "name": "MYSQL_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Oracle Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 335
          },
          "name": "ORACLE_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Oracle Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 332
          },
          "name": "ORACLE_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PostgreSQL Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 329
          },
          "name": "POSTGRESQL_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PostgreSQL Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 326
          },
          "name": "POSTGRESQL_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Redshift Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 353
          },
          "name": "REDSHIFT_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Redshift Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 350
          },
          "name": "REDSHIFT_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "SQL Server Multi User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 347
          },
          "name": "SQLSERVER_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "SQL Server Single User."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 344
          },
          "name": "SQLSERVER_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotationType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 365
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rotation uses the mutli user scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 365
          },
          "name": "isMultiUser",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/rotation-schedule:HostedRotationType"
    },
    "@aws-cdk/aws-secretsmanager.ISecret": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A secret in AWS Secrets Manager."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ISecret",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a rotation schedule to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 71
          },
          "name": "addRotationSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this secret was created in this stack, a resource policy will be\nautomatically created upon the first call to `addToResourcePolicy`. If\nthe secret is imported, then this is a no-op.",
            "stability": "stable",
            "summary": "Adds a statement to the IAM resource policy associated with this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 80
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.AddToResourcePolicyResult"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "returns": "An attached secret",
            "stability": "stable",
            "summary": "Attach a target to this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 94
          },
          "name": "attach",
          "parameters": [
            {
              "docs": {
                "summary": "The target to attach."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Denies the `DeleteSecret` action to all principals within the current account."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 86
          },
          "name": "denyAccountRootDelete"
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 59
          },
          "name": "grantRead",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "remarks": "If not specified, no restriction on the version\nstages is applied.",
                "summary": "the version stages the grant is limited to."
              },
              "name": "versionStages",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants writing and updating the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 66
          },
          "name": "grantWrite",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 50
          },
          "name": "secretValueFromJson",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          }
        }
      ],
      "name": "ISecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Will return the full ARN if available, otherwise a partial arn.\nFor secrets imported by the deprecated `fromSecretName`, it will return the `secretName`.",
            "stability": "stable",
            "summary": "The ARN of the secret in AWS Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 25
          },
          "name": "secretArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For \"owned\" secrets, this will be the full resource name (secret name + suffix), unless the\n'@aws-cdk/aws-secretsmanager:parseOwnedSecretName' feature flag is set.",
            "stability": "stable",
            "summary": "The name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 39
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Retrieve the value of the stored secret as a `SecretValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 45
          },
          "name": "secretValue",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When not specified, the default\nKMS key for the account and region is being used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt this secret, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 18
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is equal to `secretArn` in most cases, but is undefined when a full ARN is not available (e.g., secrets imported by name).",
            "stability": "stable",
            "summary": "The full ARN of the secret in AWS Secrets Manager, which is the ARN including the Secrets Manager-supplied 6-character suffix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 31
          },
          "name": "secretFullArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret:ISecret"
    },
    "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A secret attachment target."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 651
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Renders the target specifications."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 655
          },
          "name": "asSecretAttachmentTarget",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"
            }
          }
        }
      ],
      "name": "ISecretAttachmentTarget",
      "symbolId": "lib/secret:ISecretAttachmentTarget"
    },
    "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.ISecret"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 742
      },
      "name": "ISecretTargetAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Same as `secretArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 748
          },
          "name": "secretTargetAttachmentSecretArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret:ISecretTargetAttachment"
    },
    "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Multi user hosted rotation options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst multiUserHostedRotationOptions: secretsmanager.MultiUserHostedRotationOptions = {\n  masterSecret: secret,\n\n  // the properties below are optional\n  functionName: 'functionName',\n  securityGroups: [securityGroup],\n  vpc: vpc,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 170
      },
      "name": "MultiUserHostedRotationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The master secret for a multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 174
          },
          "name": "masterSecret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/rotation-schedule:MultiUserHostedRotationOptions"
    },
    "@aws-cdk/aws-secretsmanager.ReplicaRegion": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Secret replica region.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const key: kms.Key;\nconst replicaRegion: secretsmanager.ReplicaRegion = {\n  region: 'region',\n\n  // the properties below are optional\n  encryptionKey: key,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ReplicaRegion",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 188
      },
      "name": "ReplicaRegion",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 192
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default KMS key for the account and region is used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key to use for encrypting the secret value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 199
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/secret:ReplicaRegion"
    },
    "@aws-cdk/aws-secretsmanager.ResourcePolicy": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "Policies define the operations that are allowed on this resource.\n\nYou almost never need to define this construct directly.\n\nAll AWS resources that support resource policies have a method called\n`addToResourcePolicy()`, which will automatically create a new resource\npolicy if one doesn't exist yet, otherwise it will add to the existing\npolicy.\n\nPrefer to use `addToResourcePolicy()` instead.",
        "stability": "stable",
        "summary": "Resource Policy for SecretsManager Secrets.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\nconst resourcePolicy = new secretsmanager.ResourcePolicy(this, 'MyResourcePolicy', {\n  secret: secret,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ResourcePolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/policy.ts",
          "line": 37
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ResourcePolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/policy.ts",
        "line": 31
      },
      "name": "ResourcePolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM policy document for this policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/policy.ts",
            "line": 35
          },
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ],
      "symbolId": "lib/policy:ResourcePolicy"
    },
    "@aws-cdk/aws-secretsmanager.ResourcePolicyProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a ResourcePolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\nconst resourcePolicyProps: secretsmanager.ResourcePolicyProps = {\n  secret: secret,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ResourcePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/policy.ts",
        "line": 10
      },
      "name": "ResourcePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret to attach a resource-based permissions policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/policy.ts",
            "line": 14
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/policy:ResourcePolicyProps"
    },
    "@aws-cdk/aws-secretsmanager.RotationSchedule": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A rotation schedule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\ndeclare const hostedRotation: secretsmanager.HostedRotation;\ndeclare const secret: secretsmanager.Secret;\nconst rotationSchedule = new secretsmanager.RotationSchedule(this, 'MyRotationSchedule', {\n  secret: secret,\n\n  // the properties below are optional\n  automaticallyAfter: cdk.Duration.minutes(30),\n  hostedRotation: hostedRotation,\n  rotationLambda: function_,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/rotation-schedule.ts",
          "line": 70
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 69
      },
      "name": "RotationSchedule",
      "symbolId": "lib/rotation-schedule:RotationSchedule"
    },
    "@aws-cdk/aws-secretsmanager.RotationScheduleOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to add a rotation schedule to a secret.",
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const fn: lambda.Function;\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 13
      },
      "name": "RotationScheduleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "remarks": "A value of zero will disable automatic rotation - `Duration.days(0)`.",
            "stability": "stable",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 36
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either `rotationLambda` or `hostedRotation` must be specified",
            "stability": "stable",
            "summary": "Hosted rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 26
          },
          "name": "hostedRotation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.HostedRotation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either `rotationLambda` or `hostedRotation` must be specified",
            "stability": "stable",
            "summary": "A Lambda function that can rotate the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 19
          },
          "name": "rotationLambda",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ],
      "symbolId": "lib/rotation-schedule:RotationScheduleOptions"
    },
    "@aws-cdk/aws-secretsmanager.RotationScheduleProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a RotationSchedule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\ndeclare const hostedRotation: secretsmanager.HostedRotation;\ndeclare const secret: secretsmanager.Secret;\nconst rotationScheduleProps: secretsmanager.RotationScheduleProps = {\n  secret: secret,\n\n  // the properties below are optional\n  automaticallyAfter: cdk.Duration.minutes(30),\n  hostedRotation: hostedRotation,\n  rotationLambda: function_,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleProps",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 42
      },
      "name": "RotationScheduleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If hosted rotation is used, this must be a JSON string with the following format:\n\n```\n{\n   \"engine\": <required: database engine>,\n   \"host\": <required: instance host name>,\n   \"username\": <required: username>,\n   \"password\": <required: password>,\n   \"dbname\": <optional: database name>,\n   \"port\": <optional: if not specified, default port will be used>,\n   \"masterarn\": <required for multi user rotation: the arn of the master secret which will be used to create users/change passwords>\n}\n```\n\nThis is typically the case for a secret referenced from an `AWS::SecretsManager::SecretTargetAttachment`\nor an `ISecret` returned by the `attach()` method of `Secret`.",
            "stability": "stable",
            "summary": "The secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 63
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/rotation-schedule:RotationScheduleProps"
    },
    "@aws-cdk/aws-secretsmanager.Secret": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Creates a new secret in AWS SecretsManager.",
        "example": "// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.Secret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/secret.ts",
          "line": 561
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.ISecret"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 449
      },
      "methods": [
        {
          "docs": {
            "deprecated": "use `fromSecretCompleteArn` or `fromSecretPartialArn`",
            "stability": "deprecated"
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 452
          },
          "name": "fromSecretArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing secret into the Stack."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 523
          },
          "name": "fromSecretAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the scope of the import."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the ID of the imported Secret in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the attributes of the imported secret."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SecretAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The complete ARN is the ARN with the Secrets Manager-supplied suffix.",
            "stability": "stable",
            "summary": "Imports a secret by complete ARN."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 458
          },
          "name": "fromSecretCompleteArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretCompleteArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "use `fromSecretNameV2`",
            "remarks": "the ARN of the Secret will be set to the secret name.\nA secret with this name must exist in the same account & region.",
            "stability": "deprecated",
            "summary": "Imports a secret by secret name;"
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 472
          },
          "name": "fromSecretName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "A secret with this name must exist in the same account & region.\nReplaces the deprecated `fromSecretName`.",
            "stability": "stable",
            "summary": "Imports a secret by secret name."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 497
          },
          "name": "fromSecretNameV2",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The partial ARN is the ARN without the Secrets Manager-supplied suffix.",
            "stability": "stable",
            "summary": "Imports a secret by partial ARN."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 463
          },
          "name": "fromSecretPartialArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretPartialArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a replica region for the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 635
          },
          "name": "addReplicaRegion",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the region."
              },
              "name": "region",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The customer-managed encryption key to use for encrypting the secret value."
              },
              "name": "encryptionKey",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-kms.IKey"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a rotation schedule to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 381
          },
          "name": "addRotationSchedule",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use `attach()` instead",
            "returns": "an AttachedSecret",
            "stability": "deprecated",
            "summary": "Adds a target attachment to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 622
          },
          "name": "addTargetAttachment",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.AttachedSecretOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachment"
            }
          }
        },
        {
          "docs": {
            "remarks": "If this secret was created in this stack, a resource policy will be\nautomatically created upon the first call to `addToResourcePolicy`. If\nthe secret is imported, then this is a no-op.",
            "stability": "stable",
            "summary": "Adds a statement to the IAM resource policy associated with this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 388
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.AddToResourcePolicyResult"
            }
          }
        },
        {
          "docs": {
            "returns": "An attached secret",
            "stability": "stable",
            "summary": "Attach a target to this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 431
          },
          "name": "attach",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "docs": {
                "summary": "The target to attach."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Denies the `DeleteSecret` action to all principals within the current account."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 406
          },
          "name": "denyAccountRootDelete",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 315
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "versionStages",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants writing and updating the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 349
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 377
          },
          "name": "secretValueFromJson",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "jsonField",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 400
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Secret",
      "properties": [
        {
          "docs": {
            "remarks": "If there is a full ARN, this is just the ARN;\nif we have a partial ARN -- due to either importing by secret name or partial ARN --\nthen we need to add a suffix to capture the full ARN's format.",
            "stability": "stable",
            "summary": "Provides an identifier for this secret for use in IAM policies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 421
          },
          "name": "arnForPolicies",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 559
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Will return the full ARN if available, otherwise a partial arn.\nFor secrets imported by the deprecated `fromSecretName`, it will return the `secretName`.",
            "stability": "stable",
            "summary": "The ARN of the secret in AWS Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 554
          },
          "name": "secretArn",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "For \"owned\" secrets, this will be the full resource name (secret name + suffix), unless the\n'@aws-cdk/aws-secretsmanager:parseOwnedSecretName' feature flag is set.",
            "stability": "stable",
            "summary": "The name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 555
          },
          "name": "secretName",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the value of the stored secret as a `SecretValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 373
          },
          "name": "secretValue",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "docs": {
            "remarks": "When not specified, the default\nKMS key for the account and region is being used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt this secret, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 553
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "docs": {
            "remarks": "This is equal to `secretArn` in most cases, but is undefined when a full ARN is not available (e.g., secrets imported by name).",
            "stability": "stable",
            "summary": "The full ARN of the secret in AWS Secrets Manager, which is the ARN including the Secrets Manager-supplied 6-character suffix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 313
          },
          "name": "secretFullArn",
          "optional": true,
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret:Secret"
    },
    "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attachment target specifications.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst secretAttachmentTargetProps: secretsmanager.SecretAttachmentTargetProps = {\n  targetId: 'targetId',\n  targetType: secretsmanager.AttachmentTargetType.INSTANCE,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 710
      },
      "name": "SecretAttachmentTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the target to attach the secret to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 714
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the target to attach the secret to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 719
          },
          "name": "targetType",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.AttachmentTargetType"
          }
        }
      ],
      "symbolId": "lib/secret:SecretAttachmentTargetProps"
    },
    "@aws-cdk/aws-secretsmanager.SecretAttributes": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "remarks": "One ARN format (`secretArn`, `secretCompleteArn`, `secretPartialArn`) must be provided.",
        "stability": "stable",
        "summary": "Attributes required to import an existing secret into the Stack.",
        "example": "declare const encryptionKey: kms.Key;\nconst secret = secretsmanager.Secret.fromSecretAttributes(this, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 275
      },
      "name": "SecretAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The encryption key that is used to encrypt the secret, unless the default SecretsManager key is used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 279
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `secretCompleteArn` or `secretPartialArn` instead.",
            "remarks": "Cannot be used with `secretCompleteArn` or `secretPartialArn`.",
            "stability": "deprecated",
            "summary": "The ARN of the secret in SecretsManager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 286
          },
          "name": "secretArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the ARN including the Secrets Manager 6-character suffix.\nCannot be used with `secretArn` or `secretPartialArn`.",
            "stability": "stable",
            "summary": "The complete ARN of the secret in SecretsManager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 292
          },
          "name": "secretCompleteArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the ARN without the Secrets Manager 6-character suffix.\nCannot be used with `secretArn` or `secretCompleteArn`.",
            "stability": "stable",
            "summary": "The partial ARN of the secret in SecretsManager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 298
          },
          "name": "secretPartialArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret:SecretAttributes"
    },
    "@aws-cdk/aws-secretsmanager.SecretProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties required to create a new secret in AWS Secrets Manager.",
        "example": "// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 100
      },
      "name": "SecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "An optional, human-friendly description of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 106
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default KMS key for the account and region is used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key to use for encrypting the secret value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 113
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 32 characters with upper-case letters, lower-case letters, punctuation and numbers (at least one from each\ncategory), per the default values of ``SecretStringGenerator``.",
            "remarks": "Only one of `secretString` and `generateSecretString` can be provided.",
            "stability": "stable",
            "summary": "Configuration for how to generate a secret value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 123
          },
          "name": "generateSecretString",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretStringGenerator"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "stability": "stable",
            "summary": "Policy to apply when the secret is removed from this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 175
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Secret is not replicated",
            "stability": "stable",
            "summary": "A list of regions where to replicate this secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 182
          },
          "name": "replicaRegions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-secretsmanager.ReplicaRegion"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name is generated by CloudFormation.",
            "remarks": "Note that deleting secrets from SecretsManager does not happen immediately, but after a 7 to\n30 days blackout period. During that period, it is not possible to create another secret that shares the same name.",
            "stability": "stable",
            "summary": "A name for the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 131
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SecretsManager generates a new secret value.",
            "deprecated": "Use `secretStringValue` instead.",
            "remarks": "**NOTE:** *It is **highly** encouraged to leave this field undefined and allow SecretsManager to create the secret value.\nThe secret string -- if provided -- will be included in the output of the cdk as part of synthesis,\nand will appear in the CloudFormation template in the console. This can be secure(-ish) if that value is merely reference to\nanother resource (or one of its attributes), but if the value is a plaintext string, it will be visible to anyone with access\nto the CloudFormation template (via the AWS Console, SDKs, or CLI).\n\nSpecifies text data that you want to encrypt and store in this new version of the secret.\nMay be a simple string value, or a string representation of a JSON structure.\n\nOnly one of `secretStringBeta1`, `secretStringValue`, and `generateSecretString` can be provided.",
            "stability": "deprecated",
            "summary": "Initial value for the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 150
          },
          "name": "secretStringBeta1",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretStringValueBeta1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SecretsManager generates a new secret value.",
            "remarks": "**NOTE:** *It is **highly** encouraged to leave this field undefined and allow SecretsManager to create the secret value.\nThe secret string -- if provided -- will be included in the output of the cdk as part of synthesis,\nand will appear in the CloudFormation template in the console. This can be secure(-ish) if that value is merely reference to\nanother resource (or one of its attributes), but if the value is a plaintext string, it will be visible to anyone with access\nto the CloudFormation template (via the AWS Console, SDKs, or CLI).\n\nSpecifies text data that you want to encrypt and store in this new version of the secret.\nMay be a simple string value, or a string representation of a JSON structure.\n\nOnly one of `secretStringBeta1`, `secretStringValue`, and `generateSecretString` can be provided.",
            "stability": "stable",
            "summary": "Initial value for the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 168
          },
          "name": "secretStringValue",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        }
      ],
      "symbolId": "lib/secret:SecretProps"
    },
    "@aws-cdk/aws-secretsmanager.SecretRotation": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Secret rotation for a service or database.",
        "example": "declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/secret-rotation.ts",
          "line": 270
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 269
      },
      "name": "SecretRotation",
      "symbolId": "lib/secret-rotation:SecretRotation"
    },
    "@aws-cdk/aws-secretsmanager.SecretRotationApplication": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A secret rotation serverless application.",
        "example": "declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/secret-rotation.ts",
          "line": 136
        },
        "parameters": [
          {
            "name": "applicationId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "semanticVersion",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "remarks": "Can be used in combination with a `CfnMapping` to automatically select the correct ARN based on the current partition.",
            "stability": "stable",
            "summary": "Returns the application ARN for the current partition."
          },
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 147
          },
          "name": "applicationArnForPartition",
          "parameters": [
            {
              "name": "partition",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Can be used in combination with a `CfnMapping` to automatically select the correct version based on the current partition.",
            "stability": "stable",
            "summary": "The semantic version of the app for the current partition."
          },
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 163
          },
          "name": "semanticVersionForPartition",
          "parameters": [
            {
              "name": "partition",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "SecretRotationApplication",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MariaDB using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 36
          },
          "name": "MARIADB_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MariaDB using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 31
          },
          "name": "MARIADB_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for MongoDB using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 108
          },
          "name": "MONGODB_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for MongoDB using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 103
          },
          "name": "MONGODB_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MySQL using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 48
          },
          "name": "MYSQL_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MySQL using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 43
          },
          "name": "MYSQL_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS Oracle using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 60
          },
          "name": "ORACLE_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS Oracle using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 55
          },
          "name": "ORACLE_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS PostgreSQL using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 72
          },
          "name": "POSTGRES_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS PostgreSQL using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 67
          },
          "name": "POSTGRES_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for Amazon Redshift using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 96
          },
          "name": "REDSHIFT_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for Amazon Redshift using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 91
          },
          "name": "REDSHIFT_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS SQL Server using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 84
          },
          "name": "SQLSERVER_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS SQL Server using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 79
          },
          "name": "SQLSERVER_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "docs": {
            "deprecated": "only valid when deploying to the 'aws' partition. Use `applicationArnForPartition` instead.",
            "stability": "deprecated",
            "summary": "The application identifier of the rotation application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 117
          },
          "name": "applicationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "only valid when deploying to the 'aws' partition. Use `semanticVersionForPartition` instead.",
            "stability": "deprecated",
            "summary": "The semantic version of the rotation application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 124
          },
          "name": "semanticVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rotation application uses the mutli user scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 129
          },
          "name": "isMultiUser",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/secret-rotation:SecretRotationApplication"
    },
    "@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a SecretRotationApplication.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst secretRotationApplicationOptions: secretsmanager.SecretRotationApplicationOptions = {\n  isMultiUser: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 15
      },
      "name": "SecretRotationApplicationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the rotation application uses the mutli user scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 21
          },
          "name": "isMultiUser",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/secret-rotation:SecretRotationApplicationOptions"
    },
    "@aws-cdk/aws-secretsmanager.SecretRotationProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a SecretRotation.",
        "example": "declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 179
      },
      "name": "SecretRotationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The serverless application for the rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 220
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "```\n{\n   \"engine\": <required: database engine>,\n   \"host\": <required: instance host name>,\n   \"username\": <required: username>,\n   \"password\": <required: password>,\n   \"dbname\": <optional: database name>,\n   \"port\": <optional: if not specified, default port will be used>,\n   \"masterarn\": <required for multi user rotation: the arn of the master secret which will be used to create users/change passwords>\n}\n```\n\nThis is typically the case for a secret referenced from an `AWS::SecretsManager::SecretTargetAttachment`\nor an `ISecret` returned by the `attach()` method of `Secret`.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
            "stability": "stable",
            "summary": "The secret to rotate. It must be a JSON string with the following format:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 200
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target service or database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 237
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC where the Lambda rotation function will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 225
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "stability": "stable",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 215
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "https://secretsmanager.<region>.amazonaws.com",
            "remarks": "If you enable private DNS hostnames for your VPC private endpoint (the default), you don't\nneed to specify an endpoint. The standard Secrets Manager DNS hostname the Secrets Manager\nCLI and SDKs use by default (https://secretsmanager.<region>.amazonaws.com) automatically\nresolves to your VPC endpoint.",
            "stability": "stable",
            "summary": "The VPC interface endpoint to use for the Secrets Manager API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 263
          },
          "name": "endpoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional characters are explicitly excluded",
            "stability": "stable",
            "summary": "Characters which should not appear in the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 251
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- single user rotation scheme",
            "stability": "stable",
            "summary": "The master secret for a multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 207
          },
          "name": "masterSecret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "The security group for the Lambda rotation function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 244
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified.",
            "stability": "stable",
            "summary": "The type of subnets in the VPC where the Lambda rotation function will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 232
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/secret-rotation:SecretRotationProps"
    },
    "@aws-cdk/aws-secretsmanager.SecretStringGenerator": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration to generate secrets such as passwords automatically.",
        "example": "// Default secret\nconst secret = new secretsmanager.Secret(this, 'Secret');\n// Using the default secret\nnew iam.User(this, 'User', {\n  password: secret.secretValue,\n});\n// Templated secret\nconst templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n  generateSecretString: {\n    secretStringTemplate: JSON.stringify({ username: 'user' }),\n    generateStringKey: 'password',\n  },\n});\n// Using the templated secret\nnew iam.User(this, 'OtherUser', {\n  userName: templatedSecret.secretValueFromJson('username').toString(),\n  password: templatedSecret.secretValueFromJson('password'),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretStringGenerator",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 800
      },
      "name": "SecretStringGenerator",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "no exclusions",
            "remarks": "The string can be a minimum\nof ``0`` and a maximum of ``4096`` characters long.",
            "stability": "stable",
            "summary": "A string that includes characters that shouldn't be included in the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 828
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include lowercase letters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 849
          },
          "name": "excludeLowercase",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include digits."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 856
          },
          "name": "excludeNumbers",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include punctuation characters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 842
          },
          "name": "excludePunctuation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include uppercase letters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 806
          },
          "name": "excludeUppercase",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you specify ``generateStringKey`` then ``secretStringTemplate``\nmust be also be specified.",
            "stability": "stable",
            "summary": "The JSON key name that's used to add the generated password to the JSON structure specified by the ``secretStringTemplate`` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 871
          },
          "name": "generateStringKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password can include the space character."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 820
          },
          "name": "includeSpace",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "32",
            "stability": "stable",
            "summary": "The desired length of the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 835
          },
          "name": "passwordLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Specifies whether the generated password must include at least one of every allowed character type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 813
          },
          "name": "requireEachIncludedType",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The ``generateStringKey`` is\ncombined with the generated random string and inserted into the JSON structure that's specified by this parameter.\nThe merged JSON string is returned as the completed SecretString of the secret. If you specify ``secretStringTemplate``\nthen ``generateStringKey`` must be also be specified.",
            "stability": "stable",
            "summary": "A properly structured JSON string that the generated password can be added to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 864
          },
          "name": "secretStringTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret:SecretStringGenerator"
    },
    "@aws-cdk/aws-secretsmanager.SecretStringValueBeta1": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "deprecated": "Use `cdk.SecretValue` instead.",
        "remarks": "The class wraps a simple string (or JSON representation) in order to provide some safety checks and warnings\nabout the dangers of using plaintext strings as initial secret seed values via CDK/CloudFormation.",
        "stability": "deprecated",
        "summary": "An experimental class used to specify an initial secret value for a Secret.",
        "example": "// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretStringValueBeta1",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 210
      },
      "methods": [
        {
          "docs": {
            "remarks": "The intent is to enable creating secrets from references (e.g., `Ref`, `Fn::GetAtt`) from other resources.\nThis might be the direct output of another Construct, or the output of a Custom Resource.\nThis method throws if it determines the input is an unsafe plaintext string.\n\nFor example:\n\n```ts\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n```\n\nThe secret may also be embedded in a string representation of a JSON structure:\n\n```ts\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(JSON.stringify({\n   username: user.userName,\n   database: 'foo',\n   password: accessKey.secretAccessKey.unsafeUnwrap(),\n}));\n```\n\nNote that the value being a Token does *not* guarantee safety. For example, a Lazy-evaluated string\n(e.g., `Lazy.string({ produce: () => 'myInsecurePassword' }))`) is a Token, but as the output is\nultimately a plaintext string, and so insecure.",
            "stability": "deprecated",
            "summary": "Creates a `SecretValueValueBeta1` from a string value coming from a Token."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 258
          },
          "name": "fromToken",
          "parameters": [
            {
              "docs": {
                "summary": "a secret value coming from a Construct attribute or Custom Resource output."
              },
              "name": "secretValueFromToken",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretStringValueBeta1"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This approach is inherently unsafe, as the secret value may be visible in your source control repository\nand will also appear in plaintext in the resulting CloudFormation template, including in the AWS Console or APIs.\nUsage of this method is discouraged, especially for production workloads.",
            "stability": "deprecated",
            "summary": "Creates a `SecretStringValueBeta1` from a plaintext value."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 219
          },
          "name": "fromUnsafePlaintext",
          "parameters": [
            {
              "name": "secretValue",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretStringValueBeta1"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Returns the secret value."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 268
          },
          "name": "secretValue",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "SecretStringValueBeta1",
      "symbolId": "lib/secret:SecretStringValueBeta1"
    },
    "@aws-cdk/aws-secretsmanager.SecretTargetAttachment": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "An attached secret.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\nconst secretTargetAttachment = new secretsmanager.SecretTargetAttachment(this, 'MySecretTargetAttachment', {\n  secret: secret,\n  target: secretAttachmentTarget,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachment",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/secret.ts",
          "line": 779
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment",
        "@aws-cdk/aws-secretsmanager.ISecret"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 754
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 756
          },
          "name": "fromSecretTargetAttachmentSecretArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretTargetAttachmentSecretArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a rotation schedule to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 381
          },
          "name": "addRotationSchedule",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule"
            }
          }
        },
        {
          "docs": {
            "remarks": "If this secret was created in this stack, a resource policy will be\nautomatically created upon the first call to `addToResourcePolicy`. If\nthe secret is imported, then this is a no-op.",
            "stability": "stable",
            "summary": "Adds a statement to the IAM resource policy associated with this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 388
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.AddToResourcePolicyResult"
            }
          }
        },
        {
          "docs": {
            "returns": "An attached secret",
            "stability": "stable",
            "summary": "Attach a target to this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 431
          },
          "name": "attach",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "docs": {
                "summary": "The target to attach."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Denies the `DeleteSecret` action to all principals within the current account."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 406
          },
          "name": "denyAccountRootDelete",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 315
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "versionStages",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants writing and updating the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 349
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 377
          },
          "name": "secretValueFromJson",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "jsonField",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 400
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "SecretTargetAttachment",
      "properties": [
        {
          "docs": {
            "remarks": "If there is a full ARN, this is just the ARN;\nif we have a partial ARN -- due to either importing by secret name or partial ARN --\nthen we need to add a suffix to capture the full ARN's format.",
            "stability": "stable",
            "summary": "Provides an identifier for this secret for use in IAM policies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 421
          },
          "name": "arnForPolicies",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 777
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Will return the full ARN if available, otherwise a partial arn.\nFor secrets imported by the deprecated `fromSecretName`, it will return the `secretName`.",
            "stability": "stable",
            "summary": "The ARN of the secret in AWS Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 769
          },
          "name": "secretArn",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "For \"owned\" secrets, this will be the full resource name (secret name + suffix), unless the\n'@aws-cdk/aws-secretsmanager:parseOwnedSecretName' feature flag is set.",
            "stability": "stable",
            "summary": "The name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 770
          },
          "name": "secretName",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Same as `secretArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 775
          },
          "name": "secretTargetAttachmentSecretArn",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the value of the stored secret as a `SecretValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 373
          },
          "name": "secretValue",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "docs": {
            "remarks": "When not specified, the default\nKMS key for the account and region is being used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt this secret, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 768
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "docs": {
            "remarks": "This is equal to `secretArn` in most cases, but is undefined when a full ARN is not available (e.g., secrets imported by name).",
            "stability": "stable",
            "summary": "The full ARN of the secret in AWS Secrets Manager, which is the ARN including the Secrets Manager-supplied 6-character suffix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 313
          },
          "name": "secretFullArn",
          "optional": true,
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/secret:SecretTargetAttachment"
    },
    "@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for an AttachedSecret.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\nconst secretTargetAttachmentProps: secretsmanager.SecretTargetAttachmentProps = {\n  secret: secret,\n  target: secretAttachmentTarget,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.AttachedSecretOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 735
      },
      "name": "SecretTargetAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret to attach to the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 739
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/secret:SecretTargetAttachmentProps"
    },
    "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Single user hosted rotation options.",
        "example": "declare const myVpc: ec2.Vpc;\ndeclare const dbConnections: ec2.Connections;\ndeclare const secret: secretsmanager.Secret;\n\nconst myHostedRotation = secretsmanager.HostedRotation.mysqlSingleUser({ vpc: myVpc });\nsecret.addRotationSchedule('RotationSchedule', { hostedRotation: myHostedRotation });\ndbConnections.allowDefaultPortFrom(myHostedRotation);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 137
      },
      "name": "SingleUserHostedRotationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- a CloudFormation generated name",
            "stability": "stable",
            "summary": "A name for the Lambda created to rotate the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 143
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "A list of security groups for the Lambda created to rotate the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 150
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Lambda is not deployed in a VPC",
            "stability": "stable",
            "summary": "The VPC where the Lambda rotation function will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 157
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified.",
            "stability": "stable",
            "summary": "The type of subnets in the VPC where the Lambda rotation function will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 164
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/rotation-schedule:SingleUserHostedRotationOptions"
    }
  },
  "version": "1.199.0",
  "fingerprint": "**********"
}