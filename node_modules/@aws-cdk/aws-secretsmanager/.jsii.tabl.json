{"version":"2","toolVersion":"1.80.0","snippets":{"031c8cc0747082ea814ba4cded1943ac086650d4d937ed10614c1d59f588bc80":{"translations":{"python":{"source":"import aws_cdk.aws_secretsmanager as secretsmanager","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.SecretsManager;","version":"1"},"java":{"source":"import software.amazon.awscdk.services.secretsmanager.*;","version":"1"},"go":{"source":"import secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"","version":"1"},"$":{"source":"import * as secretsmanager from '@aws-cdk/aws-secretsmanager';","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":15}},"didCompile":true,"fqnsReferenced":[],"fullSource":"import * as secretsmanager from '@aws-cdk/aws-secretsmanager';","syntaxKindCounter":{"10":1,"75":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"2614ae23a8116484b7ebdb6742ee3555e24ed45b12dc6f6f23c660cc574d656f":{"translations":{"python":{"source":"# Default secret\nsecret = secretsmanager.Secret(self, \"Secret\")\n# Using the default secret\niam.User(self, \"User\",\n    password=secret.secret_value\n)\n# Templated secret\ntemplated_secret = secretsmanager.Secret(self, \"TemplatedSecret\",\n    generate_secret_string=secretsmanager.SecretStringGenerator(\n        secret_string_template=JSON.stringify({\"username\": \"user\"}),\n        generate_string_key=\"password\"\n    )\n)\n# Using the templated secret\niam.User(self, \"OtherUser\",\n    user_name=templated_secret.secret_value_from_json(\"username\").to_string(),\n    password=templated_secret.secret_value_from_json(\"password\")\n)","version":"2"},"csharp":{"source":"// Default secret\nvar secret = new Secret(this, \"Secret\");\n// Using the default secret\n// Using the default secret\nnew User(this, \"User\", new UserProps {\n    Password = secret.SecretValue\n});\n// Templated secret\nvar templatedSecret = new Secret(this, \"TemplatedSecret\", new SecretProps {\n    GenerateSecretString = new SecretStringGenerator {\n        SecretStringTemplate = JSON.Stringify(new Dictionary<string, string> { { \"username\", \"user\" } }),\n        GenerateStringKey = \"password\"\n    }\n});\n// Using the templated secret\n// Using the templated secret\nnew User(this, \"OtherUser\", new UserProps {\n    UserName = templatedSecret.SecretValueFromJson(\"username\").ToString(),\n    Password = templatedSecret.SecretValueFromJson(\"password\")\n});","version":"1"},"java":{"source":"// Default secret\nSecret secret = new Secret(this, \"Secret\");\n// Using the default secret\n// Using the default secret\nUser.Builder.create(this, \"User\")\n        .password(secret.getSecretValue())\n        .build();\n// Templated secret\nSecret templatedSecret = Secret.Builder.create(this, \"TemplatedSecret\")\n        .generateSecretString(SecretStringGenerator.builder()\n                .secretStringTemplate(JSON.stringify(Map.of(\"username\", \"user\")))\n                .generateStringKey(\"password\")\n                .build())\n        .build();\n// Using the templated secret\n// Using the templated secret\nUser.Builder.create(this, \"OtherUser\")\n        .userName(templatedSecret.secretValueFromJson(\"username\").toString())\n        .password(templatedSecret.secretValueFromJson(\"password\"))\n        .build();","version":"1"},"go":{"source":"// Default secret\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\n// Using the default secret\n// Using the default secret\niam.NewUser(this, jsii.String(\"User\"), &UserProps{\n\tPassword: secret.secretValue,\n})\n// Templated secret\ntemplatedSecret := secretsmanager.NewSecret(this, jsii.String(\"TemplatedSecret\"), &SecretProps{\n\tGenerateSecretString: &SecretStringGenerator{\n\t\tSecretStringTemplate: jSON.stringify(map[string]*string{\n\t\t\t\"username\": jsii.String(\"user\"),\n\t\t}),\n\t\tGenerateStringKey: jsii.String(\"password\"),\n\t},\n})\n// Using the templated secret\n// Using the templated secret\niam.NewUser(this, jsii.String(\"OtherUser\"), &UserProps{\n\tUserName: templatedSecret.secretValueFromJson(jsii.String(\"username\")).ToString(),\n\tPassword: templatedSecret.secretValueFromJson(jsii.String(\"password\")),\n})","version":"1"},"$":{"source":"// Default secret\nconst secret = new secretsmanager.Secret(this, 'Secret');\n// Using the default secret\nnew iam.User(this, 'User', {\n  password: secret.secretValue,\n});\n// Templated secret\nconst templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n  generateSecretString: {\n    secretStringTemplate: JSON.stringify({ username: 'user' }),\n    generateStringKey: 'password',\n  },\n});\n// Using the templated secret\nnew iam.User(this, 'OtherUser', {\n  userName: templatedSecret.secretValueFromJson('username').toString(),\n  password: templatedSecret.secretValueFromJson('password'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":24}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.UserProps","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringGenerator","@aws-cdk/core.Intrinsic#toString","@aws-cdk/core.SecretValue","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Default secret\nconst secret = new secretsmanager.Secret(this, 'Secret');\n// Using the default secret\nnew iam.User(this, 'User', {\n  password: secret.secretValue,\n});\n// Templated secret\nconst templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n  generateSecretString: {\n    secretStringTemplate: JSON.stringify({ username: 'user' }),\n    generateStringKey: 'password',\n  },\n});\n// Using the templated secret\nnew iam.User(this, 'OtherUser', {\n  userName: templatedSecret.secretValueFromJson('username').toString(),\n  password: templatedSecret.secretValueFromJson('password'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":8,"75":26,"104":4,"193":5,"194":9,"196":4,"197":4,"225":2,"226":2,"242":2,"243":2,"281":7},"fqnsFingerprint":"21f998647d490a2f9d36c6661da07fd6767551697761137f413e8bd66b77ca90"},"79d9de47b79259a740cf656792cb5b26532465ae37bacc782a31bf113f94b570":{"translations":{"python":{"source":"# encryption_key: kms.Key\n\nsecret = secretsmanager.Secret.from_secret_attributes(self, \"ImportedSecret\",\n    secret_arn=\"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\",\n    # If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n    encryption_key=encryption_key\n)","version":"2"},"csharp":{"source":"Key encryptionKey;\n\nvar secret = Secret.FromSecretAttributes(this, \"ImportedSecret\", new SecretAttributes {\n    SecretArn = \"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\",\n    // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n    EncryptionKey = encryptionKey\n});","version":"1"},"java":{"source":"Key encryptionKey;\n\nISecret secret = Secret.fromSecretAttributes(this, \"ImportedSecret\", SecretAttributes.builder()\n        .secretArn(\"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\")\n        // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n        .encryptionKey(encryptionKey)\n        .build());","version":"1"},"go":{"source":"var encryptionKey key\n\nsecret := secretsmanager.Secret_FromSecretAttributes(this, jsii.String(\"ImportedSecret\"), &SecretAttributes{\n\tSecretArn: jsii.String(\"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\"),\n\t// If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n\tEncryptionKey: EncryptionKey,\n})","version":"1"},"$":{"source":"declare const encryptionKey: kms.Key;\nconst secret = secretsmanager.Secret.fromSecretAttributes(this, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":49}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-kms.IKey","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.Secret#fromSecretAttributes","@aws-cdk/aws-secretsmanager.SecretAttributes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const encryptionKey: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst secret = secretsmanager.Secret.fromSecretAttributes(this, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":9,"104":1,"130":1,"153":1,"169":1,"193":1,"194":2,"196":1,"225":2,"242":2,"243":2,"281":1,"282":1,"290":1},"fqnsFingerprint":"42c83a4a106f28a2e253913a45991862c329427092dcb2e2c0be620f3a6c884a"},"747604de2592cca82d9185dce3929793f9960ccf700222d70c5d3a1a3dc16d4e":{"translations":{"python":{"source":"role = iam.Role(self, \"SomeRole\", assumed_by=iam.AccountRootPrincipal())\nsecret = secretsmanager.Secret(self, \"Secret\")\nsecret.grant_read(role)\nsecret.grant_write(role)","version":"2"},"csharp":{"source":"var role = new Role(this, \"SomeRole\", new RoleProps { AssumedBy = new AccountRootPrincipal() });\nvar secret = new Secret(this, \"Secret\");\nsecret.GrantRead(role);\nsecret.GrantWrite(role);","version":"1"},"java":{"source":"Role role = Role.Builder.create(this, \"SomeRole\").assumedBy(new AccountRootPrincipal()).build();\nSecret secret = new Secret(this, \"Secret\");\nsecret.grantRead(role);\nsecret.grantWrite(role);","version":"1"},"go":{"source":"role := iam.NewRole(this, jsii.String(\"SomeRole\"), &RoleProps{\n\tAssumedBy: iam.NewAccountRootPrincipal(),\n})\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\nsecret.grantRead(role)\nsecret.grantWrite(role)","version":"1"},"$":{"source":"const role = new iam.Role(this, 'SomeRole', { assumedBy: new iam.AccountRootPrincipal() });\nconst secret = new secretsmanager.Secret(this, 'Secret');\nsecret.grantRead(role);\nsecret.grantWrite(role);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":69}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountRootPrincipal","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-iam.IPrincipal","@aws-cdk/aws-iam.Role","@aws-cdk/aws-iam.RoleProps","@aws-cdk/aws-secretsmanager.Secret","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst role = new iam.Role(this, 'SomeRole', { assumedBy: new iam.AccountRootPrincipal() });\nconst secret = new secretsmanager.Secret(this, 'Secret');\nsecret.grantRead(role);\nsecret.grantWrite(role);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":15,"104":2,"193":1,"194":5,"196":2,"197":3,"225":2,"226":2,"242":2,"243":2,"281":1},"fqnsFingerprint":"b3672f744e54568f9a42ab766bb9a7adef643c806f93e85d63ff425120a83fb2"},"cb5dcbf13a6be56d6f873f43450940ab360c4959b87b4d2a24a13c4748b4c144":{"translations":{"python":{"source":"# role: iam.Role\n\nkey = kms.Key(self, \"KMS\")\nsecret = secretsmanager.Secret(self, \"Secret\", encryption_key=key)\nsecret.grant_read(role)\nsecret.grant_write(role)","version":"2"},"csharp":{"source":"Role role;\n\nvar key = new Key(this, \"KMS\");\nvar secret = new Secret(this, \"Secret\", new SecretProps { EncryptionKey = key });\nsecret.GrantRead(role);\nsecret.GrantWrite(role);","version":"1"},"java":{"source":"Role role;\n\nKey key = new Key(this, \"KMS\");\nSecret secret = Secret.Builder.create(this, \"Secret\").encryptionKey(key).build();\nsecret.grantRead(role);\nsecret.grantWrite(role);","version":"1"},"go":{"source":"var role role\n\nkey := kms.NewKey(this, jsii.String(\"KMS\"))\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tEncryptionKey: key,\n})\nsecret.grantRead(role)\nsecret.grantWrite(role)","version":"1"},"$":{"source":"declare const role: iam.Role;\nconst key = new kms.Key(this, 'KMS');\nconst secret = new secretsmanager.Secret(this, 'Secret', { encryptionKey: key });\nsecret.grantRead(role);\nsecret.grantWrite(role);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":78}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst key = new kms.Key(this, 'KMS');\nconst secret = new secretsmanager.Secret(this, 'Secret', { encryptionKey: key });\nsecret.grantRead(role);\nsecret.grantWrite(role);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":17,"104":2,"130":1,"153":1,"169":1,"193":1,"194":4,"196":2,"197":2,"225":3,"226":2,"242":3,"243":3,"281":1,"290":1},"fqnsFingerprint":"5b2caaee8bbb4f1ca36add4eb110d149d2092cd52f1e8be152e41d6d6316416f"},"fd775c14a4b29ab69fb0f02ad201efe811b9ae71f432a56ba05ca1e9313bbdd4":{"translations":{"python":{"source":"other_account = iam.AccountPrincipal(\"1234\")\nkey = kms.Key(self, \"KMS\")\nsecret = secretsmanager.Secret(self, \"Secret\", encryption_key=key)\nsecret.grant_read(other_account)","version":"2"},"csharp":{"source":"var otherAccount = new AccountPrincipal(\"1234\");\nvar key = new Key(this, \"KMS\");\nvar secret = new Secret(this, \"Secret\", new SecretProps { EncryptionKey = key });\nsecret.GrantRead(otherAccount);","version":"1"},"java":{"source":"AccountPrincipal otherAccount = new AccountPrincipal(\"1234\");\nKey key = new Key(this, \"KMS\");\nSecret secret = Secret.Builder.create(this, \"Secret\").encryptionKey(key).build();\nsecret.grantRead(otherAccount);","version":"1"},"go":{"source":"otherAccount := iam.NewAccountPrincipal(jsii.String(\"1234\"))\nkey := kms.NewKey(this, jsii.String(\"KMS\"))\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tEncryptionKey: key,\n})\nsecret.grantRead(otherAccount)","version":"1"},"$":{"source":"const otherAccount = new iam.AccountPrincipal('1234');\nconst key = new kms.Key(this, 'KMS');\nconst secret = new secretsmanager.Secret(this, 'Secret', { encryptionKey: key });\nsecret.grantRead(otherAccount);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":92}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccountPrincipal","@aws-cdk/aws-iam.IGrantable","@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst otherAccount = new iam.AccountPrincipal('1234');\nconst key = new kms.Key(this, 'KMS');\nconst secret = new secretsmanager.Secret(this, 'Secret', { encryptionKey: key });\nsecret.grantRead(otherAccount);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":14,"104":2,"193":1,"194":4,"196":1,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1},"fqnsFingerprint":"b4829067dc3f2b099474e0687d7a375ed15e7445bfcdf606ee91eb05bd1ce21b"},"7a34e501b7bced623321fa6e0dbbe08fe3c5692d0ed77e689822d5f19caa966d":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# fn: lambda.Function\n\nsecret = secretsmanager.Secret(self, \"Secret\")\n\nsecret.add_rotation_schedule(\"RotationSchedule\",\n    rotation_lambda=fn,\n    automatically_after=Duration.days(15)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nFunction fn;\n\nvar secret = new Secret(this, \"Secret\");\n\nsecret.AddRotationSchedule(\"RotationSchedule\", new RotationScheduleOptions {\n    RotationLambda = fn,\n    AutomaticallyAfter = Duration.Days(15)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nFunction fn;\n\nSecret secret = new Secret(this, \"Secret\");\n\nsecret.addRotationSchedule(\"RotationSchedule\", RotationScheduleOptions.builder()\n        .rotationLambda(fn)\n        .automaticallyAfter(Duration.days(15))\n        .build());","version":"1"},"go":{"source":"import lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar fn function\n\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\n\nsecret.addRotationSchedule(jsii.String(\"RotationSchedule\"), &RotationScheduleOptions{\n\tRotationLambda: fn,\n\tAutomaticallyAfter: awscdkcore.Duration_Days(jsii.Number(15)),\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const fn: lambda.Function;\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":105}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-secretsmanager.RotationScheduleOptions","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const fn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":3,"75":14,"104":1,"130":1,"153":1,"169":1,"193":1,"194":3,"196":2,"197":1,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b57caccd8fe16f94174202d1da4e8ab65e8c4ddd817888343bab2a13bc0f4805"},"57422764874a62678c53066aa3881a804cfdf5cbcf968601e957ead74560dd23":{"translations":{"python":{"source":"secret = secretsmanager.Secret(self, \"Secret\")\n\nsecret.add_rotation_schedule(\"RotationSchedule\",\n    hosted_rotation=secretsmanager.HostedRotation.mysql_single_user()\n)","version":"2"},"csharp":{"source":"var secret = new Secret(this, \"Secret\");\n\nsecret.AddRotationSchedule(\"RotationSchedule\", new RotationScheduleOptions {\n    HostedRotation = HostedRotation.MysqlSingleUser()\n});","version":"1"},"java":{"source":"Secret secret = new Secret(this, \"Secret\");\n\nsecret.addRotationSchedule(\"RotationSchedule\", RotationScheduleOptions.builder()\n        .hostedRotation(HostedRotation.mysqlSingleUser())\n        .build());","version":"1"},"go":{"source":"secret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\n\nsecret.addRotationSchedule(jsii.String(\"RotationSchedule\"), &RotationScheduleOptions{\n\tHostedRotation: secretsmanager.HostedRotation_MysqlSingleUser(),\n})","version":"1"},"$":{"source":"const secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":125}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.HostedRotation","@aws-cdk/aws-secretsmanager.HostedRotation#mysqlSingleUser","@aws-cdk/aws-secretsmanager.RotationScheduleOptions","@aws-cdk/aws-secretsmanager.Secret","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":9,"104":1,"193":1,"194":4,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"902b1106b2db404db3893a5c5891f3451bc70ec63f978b641304de0ce9e0e091"},"f4e2969e29224df41fa635b212287bb414eed502de1817b68e6623888edc9002":{"translations":{"python":{"source":"# my_vpc: ec2.Vpc\n# db_connections: ec2.Connections\n# secret: secretsmanager.Secret\n\n\nmy_hosted_rotation = secretsmanager.HostedRotation.mysql_single_user(vpc=my_vpc)\nsecret.add_rotation_schedule(\"RotationSchedule\", hosted_rotation=my_hosted_rotation)\ndb_connections.allow_default_port_from(my_hosted_rotation)","version":"2"},"csharp":{"source":"Vpc myVpc;\nConnections dbConnections;\nSecret secret;\n\n\nvar myHostedRotation = HostedRotation.MysqlSingleUser(new SingleUserHostedRotationOptions { Vpc = myVpc });\nsecret.AddRotationSchedule(\"RotationSchedule\", new RotationScheduleOptions { HostedRotation = myHostedRotation });\ndbConnections.AllowDefaultPortFrom(myHostedRotation);","version":"1"},"java":{"source":"Vpc myVpc;\nConnections dbConnections;\nSecret secret;\n\n\nHostedRotation myHostedRotation = HostedRotation.mysqlSingleUser(SingleUserHostedRotationOptions.builder().vpc(myVpc).build());\nsecret.addRotationSchedule(\"RotationSchedule\", RotationScheduleOptions.builder().hostedRotation(myHostedRotation).build());\ndbConnections.allowDefaultPortFrom(myHostedRotation);","version":"1"},"go":{"source":"var myVpc vpc\nvar dbConnections connections\nvar secret secret\n\n\nmyHostedRotation := secretsmanager.HostedRotation_MysqlSingleUser(&SingleUserHostedRotationOptions{\n\tVpc: myVpc,\n})\nsecret.addRotationSchedule(jsii.String(\"RotationSchedule\"), &RotationScheduleOptions{\n\tHostedRotation: myHostedRotation,\n})\ndbConnections.AllowDefaultPortFrom(myHostedRotation)","version":"1"},"$":{"source":"declare const myVpc: ec2.Vpc;\ndeclare const dbConnections: ec2.Connections;\ndeclare const secret: secretsmanager.Secret;\n\nconst myHostedRotation = secretsmanager.HostedRotation.mysqlSingleUser({ vpc: myVpc });\nsecret.addRotationSchedule('RotationSchedule', { hostedRotation: myHostedRotation });\ndbConnections.allowDefaultPortFrom(myHostedRotation);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":138}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.Connections#allowDefaultPortFrom","@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.HostedRotation","@aws-cdk/aws-secretsmanager.HostedRotation#mysqlSingleUser","@aws-cdk/aws-secretsmanager.RotationScheduleOptions","@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myVpc: ec2.Vpc;\ndeclare const dbConnections: ec2.Connections;\ndeclare const secret: secretsmanager.Secret;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst myHostedRotation = secretsmanager.HostedRotation.mysqlSingleUser({ vpc: myVpc });\nsecret.addRotationSchedule('RotationSchedule', { hostedRotation: myHostedRotation });\ndbConnections.allowDefaultPortFrom(myHostedRotation);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":1,"75":22,"130":3,"153":3,"169":3,"193":2,"194":4,"196":3,"225":4,"226":2,"242":4,"243":4,"281":2,"290":1},"fqnsFingerprint":"46d33bb68a350d89702604b1eb9034190f63d16e20637a322f71255338e7d44d"},"0a7833d9a8a76660eef90ede3548776e91b5a4a12f69fe2b26e4eea664b82333":{"translations":{"python":{"source":"# my_secret: secretsmanager.Secret\n# my_database: ec2.IConnectable\n# my_vpc: ec2.Vpc\n\n\nsecretsmanager.SecretRotation(self, \"SecretRotation\",\n    application=secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  # MySQL single user scheme\n    secret=my_secret,\n    target=my_database,  # a Connectable\n    vpc=my_vpc,  # The VPC where the secret rotation application will be deployed\n    exclude_characters=\" %+:;{}\"\n)","version":"2"},"csharp":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nnew SecretRotation(this, \"SecretRotation\", new SecretRotationProps {\n    Application = SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  // MySQL single user scheme\n    Secret = mySecret,\n    Target = myDatabase,  // a Connectable\n    Vpc = myVpc,  // The VPC where the secret rotation application will be deployed\n    ExcludeCharacters = \" %+:;{}\"\n});","version":"1"},"java":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nSecretRotation.Builder.create(this, \"SecretRotation\")\n        .application(SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER) // MySQL single user scheme\n        .secret(mySecret)\n        .target(myDatabase) // a Connectable\n        .vpc(myVpc) // The VPC where the secret rotation application will be deployed\n        .excludeCharacters(\" %+:;{}\")\n        .build();","version":"1"},"go":{"source":"var mySecret secret\nvar myDatabase iConnectable\nvar myVpc vpc\n\n\nsecretsmanager.NewSecretRotation(this, jsii.String(\"SecretRotation\"), &SecretRotationProps{\n\tApplication: secretsmanager.SecretRotationApplication_MYSQL_ROTATION_SINGLE_USER(),\n\t // MySQL single user scheme\n\tSecret: mySecret,\n\tTarget: myDatabase,\n\t // a Connectable\n\tVpc: myVpc,\n\t // The VPC where the secret rotation application will be deployed\n\tExcludeCharacters: jsii.String(\" %+:;{}\"),\n})","version":"1"},"$":{"source":"declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":154}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.SecretRotation","@aws-cdk/aws-secretsmanager.SecretRotationApplication","@aws-cdk/aws-secretsmanager.SecretRotationApplication#MYSQL_ROTATION_SINGLE_USER","@aws-cdk/aws-secretsmanager.SecretRotationProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":22,"104":1,"130":3,"153":3,"169":3,"193":1,"194":3,"197":1,"225":3,"226":1,"242":3,"243":3,"281":5,"290":1},"fqnsFingerprint":"d251a12e6c3f80854b9fc42dc4fcfc628778e4a88a5783532669a1428e85db55"},"adea5ad83281fc54ed3c354bd3fe0bbb47fcce0b90010db8998de5082318d193":{"translations":{"python":{"source":"# my_user_secret: secretsmanager.Secret\n# my_master_secret: secretsmanager.Secret\n# my_database: ec2.IConnectable\n# my_vpc: ec2.Vpc\n\n\nsecretsmanager.SecretRotation(self, \"SecretRotation\",\n    application=secretsmanager.SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n    secret=my_user_secret,  # The secret that will be rotated\n    master_secret=my_master_secret,  # The secret used for the rotation\n    target=my_database,\n    vpc=my_vpc\n)","version":"2"},"csharp":{"source":"Secret myUserSecret;\nSecret myMasterSecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nnew SecretRotation(this, \"SecretRotation\", new SecretRotationProps {\n    Application = SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n    Secret = myUserSecret,  // The secret that will be rotated\n    MasterSecret = myMasterSecret,  // The secret used for the rotation\n    Target = myDatabase,\n    Vpc = myVpc\n});","version":"1"},"java":{"source":"Secret myUserSecret;\nSecret myMasterSecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nSecretRotation.Builder.create(this, \"SecretRotation\")\n        .application(SecretRotationApplication.MYSQL_ROTATION_MULTI_USER)\n        .secret(myUserSecret) // The secret that will be rotated\n        .masterSecret(myMasterSecret) // The secret used for the rotation\n        .target(myDatabase)\n        .vpc(myVpc)\n        .build();","version":"1"},"go":{"source":"var myUserSecret secret\nvar myMasterSecret secret\nvar myDatabase iConnectable\nvar myVpc vpc\n\n\nsecretsmanager.NewSecretRotation(this, jsii.String(\"SecretRotation\"), &SecretRotationProps{\n\tApplication: secretsmanager.SecretRotationApplication_MYSQL_ROTATION_MULTI_USER(),\n\tSecret: myUserSecret,\n\t // The secret that will be rotated\n\tMasterSecret: myMasterSecret,\n\t // The secret used for the rotation\n\tTarget: myDatabase,\n\tVpc: myVpc,\n})","version":"1"},"$":{"source":"declare const myUserSecret: secretsmanager.Secret;\ndeclare const myMasterSecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n  secret: myUserSecret, // The secret that will be rotated\n  masterSecret: myMasterSecret, // The secret used for the rotation\n  target: myDatabase,\n  vpc: myVpc,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":186}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.SecretRotation","@aws-cdk/aws-secretsmanager.SecretRotationApplication","@aws-cdk/aws-secretsmanager.SecretRotationApplication#MYSQL_ROTATION_MULTI_USER","@aws-cdk/aws-secretsmanager.SecretRotationProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myUserSecret: secretsmanager.Secret;\ndeclare const myMasterSecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n  secret: myUserSecret, // The secret that will be rotated\n  masterSecret: myMasterSecret, // The secret used for the rotation\n  target: myDatabase,\n  vpc: myVpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":1,"75":26,"104":1,"130":4,"153":4,"169":4,"193":1,"194":3,"197":1,"225":4,"226":1,"242":4,"243":4,"281":5,"290":1},"fqnsFingerprint":"56d08a4bc2bd896f5dc60ac63fae0afa8ee3106a92f289695f9cc34ea6d26f9c"},"251b6cf95e25a4518793f2baf34dc8a755c103a33c3a6c20454d9093769cd90e":{"translations":{"python":{"source":"secret_complete_arn = \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9\"\nsecret_partial_arn = \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret\" # No Secrets Manager suffix\nencryption_key = kms.Key.from_key_arn(self, \"MyEncKey\", \"arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030\")\nmy_secret_from_complete_arn = secretsmanager.Secret.from_secret_complete_arn(self, \"SecretFromCompleteArn\", secret_complete_arn)\nmy_secret_from_partial_arn = secretsmanager.Secret.from_secret_partial_arn(self, \"SecretFromPartialArn\", secret_partial_arn)\nmy_secret_from_name = secretsmanager.Secret.from_secret_name_v2(self, \"SecretFromName\", \"MySecret\")\nmy_secret_from_attrs = secretsmanager.Secret.from_secret_attributes(self, \"SecretFromAttributes\",\n    secret_complete_arn=secret_complete_arn,\n    encryption_key=encryption_key\n)","version":"2"},"csharp":{"source":"var secretCompleteArn = \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9\";\nvar secretPartialArn = \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret\"; // No Secrets Manager suffix\nvar encryptionKey = Key.FromKeyArn(this, \"MyEncKey\", \"arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030\");\nvar mySecretFromCompleteArn = Secret.FromSecretCompleteArn(this, \"SecretFromCompleteArn\", secretCompleteArn);\nvar mySecretFromPartialArn = Secret.FromSecretPartialArn(this, \"SecretFromPartialArn\", secretPartialArn);\nvar mySecretFromName = Secret.FromSecretNameV2(this, \"SecretFromName\", \"MySecret\");\nvar mySecretFromAttrs = Secret.FromSecretAttributes(this, \"SecretFromAttributes\", new SecretAttributes {\n    SecretCompleteArn = secretCompleteArn,\n    EncryptionKey = encryptionKey\n});","version":"1"},"java":{"source":"String secretCompleteArn = \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9\";\nString secretPartialArn = \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret\"; // No Secrets Manager suffix\nIKey encryptionKey = Key.fromKeyArn(this, \"MyEncKey\", \"arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030\");\nISecret mySecretFromCompleteArn = Secret.fromSecretCompleteArn(this, \"SecretFromCompleteArn\", secretCompleteArn);\nISecret mySecretFromPartialArn = Secret.fromSecretPartialArn(this, \"SecretFromPartialArn\", secretPartialArn);\nISecret mySecretFromName = Secret.fromSecretNameV2(this, \"SecretFromName\", \"MySecret\");\nISecret mySecretFromAttrs = Secret.fromSecretAttributes(this, \"SecretFromAttributes\", SecretAttributes.builder()\n        .secretCompleteArn(secretCompleteArn)\n        .encryptionKey(encryptionKey)\n        .build());","version":"1"},"go":{"source":"secretCompleteArn := \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9\"\nsecretPartialArn := \"arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret\" // No Secrets Manager suffix\nencryptionKey := kms.Key_FromKeyArn(this, jsii.String(\"MyEncKey\"), jsii.String(\"arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030\"))\nmySecretFromCompleteArn := secretsmanager.Secret_FromSecretCompleteArn(this, jsii.String(\"SecretFromCompleteArn\"), secretCompleteArn)\nmySecretFromPartialArn := secretsmanager.Secret_FromSecretPartialArn(this, jsii.String(\"SecretFromPartialArn\"), secretPartialArn)\nmySecretFromName := secretsmanager.Secret_FromSecretNameV2(this, jsii.String(\"SecretFromName\"), jsii.String(\"MySecret\"))\nmySecretFromAttrs := secretsmanager.Secret_FromSecretAttributes(this, jsii.String(\"SecretFromAttributes\"), &SecretAttributes{\n\tSecretCompleteArn: jsii.String(SecretCompleteArn),\n\tEncryptionKey: EncryptionKey,\n})","version":"1"},"$":{"source":"const secretCompleteArn = 'arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9';\nconst secretPartialArn = 'arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret'; // No Secrets Manager suffix\nconst encryptionKey = kms.Key.fromKeyArn(this, 'MyEncKey', 'arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030');\nconst mySecretFromCompleteArn = secretsmanager.Secret.fromSecretCompleteArn(this, 'SecretFromCompleteArn', secretCompleteArn);\nconst mySecretFromPartialArn = secretsmanager.Secret.fromSecretPartialArn(this, 'SecretFromPartialArn', secretPartialArn);\nconst mySecretFromName = secretsmanager.Secret.fromSecretNameV2(this, 'SecretFromName', 'MySecret')\nconst mySecretFromAttrs = secretsmanager.Secret.fromSecretAttributes(this, 'SecretFromAttributes', {\n  secretCompleteArn,\n  encryptionKey,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":211}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-kms.IKey","@aws-cdk/aws-kms.Key","@aws-cdk/aws-kms.Key#fromKeyArn","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.Secret#fromSecretAttributes","@aws-cdk/aws-secretsmanager.Secret#fromSecretCompleteArn","@aws-cdk/aws-secretsmanager.Secret#fromSecretNameV2","@aws-cdk/aws-secretsmanager.Secret#fromSecretPartialArn","@aws-cdk/aws-secretsmanager.SecretAttributes","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst secretCompleteArn = 'arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret-f3gDy9';\nconst secretPartialArn = 'arn:aws:secretsmanager:eu-west-1:111111111111:secret:MySecret'; // No Secrets Manager suffix\nconst encryptionKey = kms.Key.fromKeyArn(this, 'MyEncKey', 'arn:aws:kms:eu-west-1:111111111111:key/21c4b39b-fde2-4273-9ac0-d9bb5c0d0030');\nconst mySecretFromCompleteArn = secretsmanager.Secret.fromSecretCompleteArn(this, 'SecretFromCompleteArn', secretCompleteArn);\nconst mySecretFromPartialArn = secretsmanager.Secret.fromSecretPartialArn(this, 'SecretFromPartialArn', secretPartialArn);\nconst mySecretFromName = secretsmanager.Secret.fromSecretNameV2(this, 'SecretFromName', 'MySecret')\nconst mySecretFromAttrs = secretsmanager.Secret.fromSecretAttributes(this, 'SecretFromAttributes', {\n  secretCompleteArn,\n  encryptionKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":9,"75":26,"104":5,"193":1,"194":10,"196":5,"225":7,"242":7,"243":7,"282":2},"fqnsFingerprint":"1b2c4584f857a0035a4143dfe5d273c5e26d8ffd4084bff3de1b68cc108ea095"},"8e374f9a2bd9eaa11c077f8ce7bf2f676648dcb5ec6955c9101e087ad1e1a2f0":{"translations":{"python":{"source":"# my_key: kms.Key\n\nsecretsmanager.Secret(self, \"Secret\",\n    replica_regions=[secretsmanager.ReplicaRegion(\n        region=\"eu-west-1\"\n    ), secretsmanager.ReplicaRegion(\n        region=\"eu-central-1\",\n        encryption_key=my_key\n    )\n    ]\n)","version":"2"},"csharp":{"source":"Key myKey;\n\nnew Secret(this, \"Secret\", new SecretProps {\n    ReplicaRegions = new [] { new ReplicaRegion {\n        Region = \"eu-west-1\"\n    }, new ReplicaRegion {\n        Region = \"eu-central-1\",\n        EncryptionKey = myKey\n    } }\n});","version":"1"},"java":{"source":"Key myKey;\n\nSecret.Builder.create(this, \"Secret\")\n        .replicaRegions(List.of(ReplicaRegion.builder()\n                .region(\"eu-west-1\")\n                .build(), ReplicaRegion.builder()\n                .region(\"eu-central-1\")\n                .encryptionKey(myKey)\n                .build()))\n        .build();","version":"1"},"go":{"source":"var myKey key\n\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tReplicaRegions: []replicaRegion{\n\t\t&replicaRegion{\n\t\t\tRegion: jsii.String(\"eu-west-1\"),\n\t\t},\n\t\t&replicaRegion{\n\t\t\tRegion: jsii.String(\"eu-central-1\"),\n\t\t\tEncryptionKey: myKey,\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"declare const myKey: kms.Key;\nnew secretsmanager.Secret(this, 'Secret', {\n  replicaRegions: [\n    {\n      region: 'eu-west-1',\n    },\n    {\n      region: 'eu-central-1',\n      encryptionKey: myKey,\n    }\n  ]\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":228}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-kms.IKey","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myKey: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew secretsmanager.Secret(this, 'Secret', {\n  replicaRegions: [\n    {\n      region: 'eu-west-1',\n    },\n    {\n      region: 'eu-central-1',\n      encryptionKey: myKey,\n    }\n  ]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":10,"104":1,"130":1,"153":1,"169":1,"192":1,"193":3,"194":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":4,"290":1},"fqnsFingerprint":"6f056169b0719cef0368d8d4d2694cfe55b690361774633fa18eb194b4daa9e3"},"58c26f8f6caf728b76fcb55a064b2ae4849560e14bb89135d5155dd011967a37":{"translations":{"python":{"source":"secret = secretsmanager.Secret(self, \"Secret\")\nsecret.add_replica_region(\"eu-west-1\")","version":"2"},"csharp":{"source":"var secret = new Secret(this, \"Secret\");\nsecret.AddReplicaRegion(\"eu-west-1\");","version":"1"},"java":{"source":"Secret secret = new Secret(this, \"Secret\");\nsecret.addReplicaRegion(\"eu-west-1\");","version":"1"},"go":{"source":"secret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\nsecret.AddReplicaRegion(jsii.String(\"eu-west-1\"))","version":"1"},"$":{"source":"const secret = new secretsmanager.Secret(this, 'Secret');\nsecret.addReplicaRegion('eu-west-1');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-secretsmanager"},"field":{"field":"markdown","line":245}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.Secret#addReplicaRegion","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst secret = new secretsmanager.Secret(this, 'Secret');\nsecret.addReplicaRegion('eu-west-1');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":5,"104":1,"194":2,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1},"fqnsFingerprint":"4860d42ce1fa17d4f509ac72ce09f315736fc1419eebf1c2ce04f0f8c23e0cc5"},"8d0bd97f852c0ab32dc0d9a0409389275a65aee35394488d73addaaafee1f3fa":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# secret_attachment_target: secretsmanager.ISecretAttachmentTarget\n\nattached_secret_options = secretsmanager.AttachedSecretOptions(\n    target=secret_attachment_target\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nISecretAttachmentTarget secretAttachmentTarget;\n\nvar attachedSecretOptions = new AttachedSecretOptions {\n    Target = secretAttachmentTarget\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nISecretAttachmentTarget secretAttachmentTarget;\n\nAttachedSecretOptions attachedSecretOptions = AttachedSecretOptions.builder()\n        .target(secretAttachmentTarget)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar secretAttachmentTarget iSecretAttachmentTarget\n\nattachedSecretOptions := &AttachedSecretOptions{\n\tTarget: secretAttachmentTarget,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\nconst attachedSecretOptions: secretsmanager.AttachedSecretOptions = {\n  target: secretAttachmentTarget,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.AttachedSecretOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.AttachedSecretOptions","@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attachedSecretOptions: secretsmanager.AttachedSecretOptions = {\n  target: secretAttachmentTarget,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":9,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"487ef5d425468d1e17b46761c20f457ddb9a7f13b5870d9ff45c2e59318735ba"},"1003d6e83621e6c8d26742426bc65b99b481cee6e3bd5192c52840a3b65fa18a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# resource_policy: Any\n\ncfn_resource_policy = secretsmanager.CfnResourcePolicy(self, \"MyCfnResourcePolicy\",\n    resource_policy=resource_policy,\n    secret_id=\"secretId\",\n\n    # the properties below are optional\n    block_public_policy=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar resourcePolicy;\n\nvar cfnResourcePolicy = new CfnResourcePolicy(this, \"MyCfnResourcePolicy\", new CfnResourcePolicyProps {\n    ResourcePolicy = resourcePolicy,\n    SecretId = \"secretId\",\n\n    // the properties below are optional\n    BlockPublicPolicy = false\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nObject resourcePolicy;\n\nCfnResourcePolicy cfnResourcePolicy = CfnResourcePolicy.Builder.create(this, \"MyCfnResourcePolicy\")\n        .resourcePolicy(resourcePolicy)\n        .secretId(\"secretId\")\n\n        // the properties below are optional\n        .blockPublicPolicy(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar resourcePolicy interface{}\n\ncfnResourcePolicy := secretsmanager.NewCfnResourcePolicy(this, jsii.String(\"MyCfnResourcePolicy\"), &CfnResourcePolicyProps{\n\tResourcePolicy: resourcePolicy,\n\tSecretId: jsii.String(\"secretId\"),\n\n\t// the properties below are optional\n\tBlockPublicPolicy: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const resourcePolicy: any;\nconst cfnResourcePolicy = new secretsmanager.CfnResourcePolicy(this, 'MyCfnResourcePolicy', {\n  resourcePolicy: resourcePolicy,\n  secretId: 'secretId',\n\n  // the properties below are optional\n  blockPublicPolicy: false,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnResourcePolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnResourcePolicy","@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const resourcePolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourcePolicy = new secretsmanager.CfnResourcePolicy(this, 'MyCfnResourcePolicy', {\n  resourcePolicy: resourcePolicy,\n  secretId: 'secretId',\n\n  // the properties below are optional\n  blockPublicPolicy: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":9,"91":1,"104":1,"125":1,"130":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"19d4d5a659b131e956c74e585c69c69627dcbed362ac905b02bc1e98d13eb454"},"c7e2ede11892058b8e5fd6f4613e2933f9b6abd172e0afbd0ec4cb87c2d136b6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# resource_policy: Any\n\ncfn_resource_policy_props = secretsmanager.CfnResourcePolicyProps(\n    resource_policy=resource_policy,\n    secret_id=\"secretId\",\n\n    # the properties below are optional\n    block_public_policy=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar resourcePolicy;\n\nvar cfnResourcePolicyProps = new CfnResourcePolicyProps {\n    ResourcePolicy = resourcePolicy,\n    SecretId = \"secretId\",\n\n    // the properties below are optional\n    BlockPublicPolicy = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nObject resourcePolicy;\n\nCfnResourcePolicyProps cfnResourcePolicyProps = CfnResourcePolicyProps.builder()\n        .resourcePolicy(resourcePolicy)\n        .secretId(\"secretId\")\n\n        // the properties below are optional\n        .blockPublicPolicy(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar resourcePolicy interface{}\n\ncfnResourcePolicyProps := &CfnResourcePolicyProps{\n\tResourcePolicy: resourcePolicy,\n\tSecretId: jsii.String(\"secretId\"),\n\n\t// the properties below are optional\n\tBlockPublicPolicy: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const resourcePolicy: any;\nconst cfnResourcePolicyProps: secretsmanager.CfnResourcePolicyProps = {\n  resourcePolicy: resourcePolicy,\n  secretId: 'secretId',\n\n  // the properties below are optional\n  blockPublicPolicy: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const resourcePolicy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourcePolicyProps: secretsmanager.CfnResourcePolicyProps = {\n  resourcePolicy: resourcePolicy,\n  secretId: 'secretId',\n\n  // the properties below are optional\n  blockPublicPolicy: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"91":1,"125":1,"130":1,"153":1,"169":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"f9a381e22a74af99b3acd90f373c6f272ab53e341584298e24d67d904054d2ad"},"27b099d0b56ae81e88d3cadfa2f8947a427d3f2fd1bc5a842d78158655b9d0cd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ncfn_rotation_schedule = secretsmanager.CfnRotationSchedule(self, \"MyCfnRotationSchedule\",\n    secret_id=\"secretId\",\n\n    # the properties below are optional\n    hosted_rotation_lambda=secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty(\n        rotation_type=\"rotationType\",\n\n        # the properties below are optional\n        exclude_characters=\"excludeCharacters\",\n        kms_key_arn=\"kmsKeyArn\",\n        master_secret_arn=\"masterSecretArn\",\n        master_secret_kms_key_arn=\"masterSecretKmsKeyArn\",\n        rotation_lambda_name=\"rotationLambdaName\",\n        runtime=\"runtime\",\n        superuser_secret_arn=\"superuserSecretArn\",\n        superuser_secret_kms_key_arn=\"superuserSecretKmsKeyArn\",\n        vpc_security_group_ids=\"vpcSecurityGroupIds\",\n        vpc_subnet_ids=\"vpcSubnetIds\"\n    ),\n    rotate_immediately_on_update=False,\n    rotation_lambda_arn=\"rotationLambdaArn\",\n    rotation_rules=secretsmanager.CfnRotationSchedule.RotationRulesProperty(\n        automatically_after_days=123,\n        duration=\"duration\",\n        schedule_expression=\"scheduleExpression\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar cfnRotationSchedule = new CfnRotationSchedule(this, \"MyCfnRotationSchedule\", new CfnRotationScheduleProps {\n    SecretId = \"secretId\",\n\n    // the properties below are optional\n    HostedRotationLambda = new HostedRotationLambdaProperty {\n        RotationType = \"rotationType\",\n\n        // the properties below are optional\n        ExcludeCharacters = \"excludeCharacters\",\n        KmsKeyArn = \"kmsKeyArn\",\n        MasterSecretArn = \"masterSecretArn\",\n        MasterSecretKmsKeyArn = \"masterSecretKmsKeyArn\",\n        RotationLambdaName = \"rotationLambdaName\",\n        Runtime = \"runtime\",\n        SuperuserSecretArn = \"superuserSecretArn\",\n        SuperuserSecretKmsKeyArn = \"superuserSecretKmsKeyArn\",\n        VpcSecurityGroupIds = \"vpcSecurityGroupIds\",\n        VpcSubnetIds = \"vpcSubnetIds\"\n    },\n    RotateImmediatelyOnUpdate = false,\n    RotationLambdaArn = \"rotationLambdaArn\",\n    RotationRules = new RotationRulesProperty {\n        AutomaticallyAfterDays = 123,\n        Duration = \"duration\",\n        ScheduleExpression = \"scheduleExpression\"\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nCfnRotationSchedule cfnRotationSchedule = CfnRotationSchedule.Builder.create(this, \"MyCfnRotationSchedule\")\n        .secretId(\"secretId\")\n\n        // the properties below are optional\n        .hostedRotationLambda(HostedRotationLambdaProperty.builder()\n                .rotationType(\"rotationType\")\n\n                // the properties below are optional\n                .excludeCharacters(\"excludeCharacters\")\n                .kmsKeyArn(\"kmsKeyArn\")\n                .masterSecretArn(\"masterSecretArn\")\n                .masterSecretKmsKeyArn(\"masterSecretKmsKeyArn\")\n                .rotationLambdaName(\"rotationLambdaName\")\n                .runtime(\"runtime\")\n                .superuserSecretArn(\"superuserSecretArn\")\n                .superuserSecretKmsKeyArn(\"superuserSecretKmsKeyArn\")\n                .vpcSecurityGroupIds(\"vpcSecurityGroupIds\")\n                .vpcSubnetIds(\"vpcSubnetIds\")\n                .build())\n        .rotateImmediatelyOnUpdate(false)\n        .rotationLambdaArn(\"rotationLambdaArn\")\n        .rotationRules(RotationRulesProperty.builder()\n                .automaticallyAfterDays(123)\n                .duration(\"duration\")\n                .scheduleExpression(\"scheduleExpression\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ncfnRotationSchedule := secretsmanager.NewCfnRotationSchedule(this, jsii.String(\"MyCfnRotationSchedule\"), &CfnRotationScheduleProps{\n\tSecretId: jsii.String(\"secretId\"),\n\n\t// the properties below are optional\n\tHostedRotationLambda: &HostedRotationLambdaProperty{\n\t\tRotationType: jsii.String(\"rotationType\"),\n\n\t\t// the properties below are optional\n\t\tExcludeCharacters: jsii.String(\"excludeCharacters\"),\n\t\tKmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\tMasterSecretArn: jsii.String(\"masterSecretArn\"),\n\t\tMasterSecretKmsKeyArn: jsii.String(\"masterSecretKmsKeyArn\"),\n\t\tRotationLambdaName: jsii.String(\"rotationLambdaName\"),\n\t\tRuntime: jsii.String(\"runtime\"),\n\t\tSuperuserSecretArn: jsii.String(\"superuserSecretArn\"),\n\t\tSuperuserSecretKmsKeyArn: jsii.String(\"superuserSecretKmsKeyArn\"),\n\t\tVpcSecurityGroupIds: jsii.String(\"vpcSecurityGroupIds\"),\n\t\tVpcSubnetIds: jsii.String(\"vpcSubnetIds\"),\n\t},\n\tRotateImmediatelyOnUpdate: jsii.Boolean(false),\n\tRotationLambdaArn: jsii.String(\"rotationLambdaArn\"),\n\tRotationRules: &RotationRulesProperty{\n\t\tAutomaticallyAfterDays: jsii.Number(123),\n\t\tDuration: jsii.String(\"duration\"),\n\t\tScheduleExpression: jsii.String(\"scheduleExpression\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnRotationSchedule = new secretsmanager.CfnRotationSchedule(this, 'MyCfnRotationSchedule', {\n  secretId: 'secretId',\n\n  // the properties below are optional\n  hostedRotationLambda: {\n    rotationType: 'rotationType',\n\n    // the properties below are optional\n    excludeCharacters: 'excludeCharacters',\n    kmsKeyArn: 'kmsKeyArn',\n    masterSecretArn: 'masterSecretArn',\n    masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n    rotationLambdaName: 'rotationLambdaName',\n    runtime: 'runtime',\n    superuserSecretArn: 'superuserSecretArn',\n    superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n    vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n    vpcSubnetIds: 'vpcSubnetIds',\n  },\n  rotateImmediatelyOnUpdate: false,\n  rotationLambdaArn: 'rotationLambdaArn',\n  rotationRules: {\n    automaticallyAfterDays: 123,\n    duration: 'duration',\n    scheduleExpression: 'scheduleExpression',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnRotationSchedule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnRotationSchedule","@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRotationSchedule = new secretsmanager.CfnRotationSchedule(this, 'MyCfnRotationSchedule', {\n  secretId: 'secretId',\n\n  // the properties below are optional\n  hostedRotationLambda: {\n    rotationType: 'rotationType',\n\n    // the properties below are optional\n    excludeCharacters: 'excludeCharacters',\n    kmsKeyArn: 'kmsKeyArn',\n    masterSecretArn: 'masterSecretArn',\n    masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n    rotationLambdaName: 'rotationLambdaName',\n    runtime: 'runtime',\n    superuserSecretArn: 'superuserSecretArn',\n    superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n    vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n    vpcSubnetIds: 'vpcSubnetIds',\n  },\n  rotateImmediatelyOnUpdate: false,\n  rotationLambdaArn: 'rotationLambdaArn',\n  rotationRules: {\n    automaticallyAfterDays: 123,\n    duration: 'duration',\n    scheduleExpression: 'scheduleExpression',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":17,"75":23,"91":1,"104":1,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"6136b7251ed3039d954ea6d8ea4292639c16c4200e976ac70d6e795d2017f681"},"d446abd85e013c1c183450d338f7547916b23f52edb6335b5d0485ca57fd54fa":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\nhosted_rotation_lambda_property = secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty(\n    rotation_type=\"rotationType\",\n\n    # the properties below are optional\n    exclude_characters=\"excludeCharacters\",\n    kms_key_arn=\"kmsKeyArn\",\n    master_secret_arn=\"masterSecretArn\",\n    master_secret_kms_key_arn=\"masterSecretKmsKeyArn\",\n    rotation_lambda_name=\"rotationLambdaName\",\n    runtime=\"runtime\",\n    superuser_secret_arn=\"superuserSecretArn\",\n    superuser_secret_kms_key_arn=\"superuserSecretKmsKeyArn\",\n    vpc_security_group_ids=\"vpcSecurityGroupIds\",\n    vpc_subnet_ids=\"vpcSubnetIds\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar hostedRotationLambdaProperty = new HostedRotationLambdaProperty {\n    RotationType = \"rotationType\",\n\n    // the properties below are optional\n    ExcludeCharacters = \"excludeCharacters\",\n    KmsKeyArn = \"kmsKeyArn\",\n    MasterSecretArn = \"masterSecretArn\",\n    MasterSecretKmsKeyArn = \"masterSecretKmsKeyArn\",\n    RotationLambdaName = \"rotationLambdaName\",\n    Runtime = \"runtime\",\n    SuperuserSecretArn = \"superuserSecretArn\",\n    SuperuserSecretKmsKeyArn = \"superuserSecretKmsKeyArn\",\n    VpcSecurityGroupIds = \"vpcSecurityGroupIds\",\n    VpcSubnetIds = \"vpcSubnetIds\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nHostedRotationLambdaProperty hostedRotationLambdaProperty = HostedRotationLambdaProperty.builder()\n        .rotationType(\"rotationType\")\n\n        // the properties below are optional\n        .excludeCharacters(\"excludeCharacters\")\n        .kmsKeyArn(\"kmsKeyArn\")\n        .masterSecretArn(\"masterSecretArn\")\n        .masterSecretKmsKeyArn(\"masterSecretKmsKeyArn\")\n        .rotationLambdaName(\"rotationLambdaName\")\n        .runtime(\"runtime\")\n        .superuserSecretArn(\"superuserSecretArn\")\n        .superuserSecretKmsKeyArn(\"superuserSecretKmsKeyArn\")\n        .vpcSecurityGroupIds(\"vpcSecurityGroupIds\")\n        .vpcSubnetIds(\"vpcSubnetIds\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nhostedRotationLambdaProperty := &HostedRotationLambdaProperty{\n\tRotationType: jsii.String(\"rotationType\"),\n\n\t// the properties below are optional\n\tExcludeCharacters: jsii.String(\"excludeCharacters\"),\n\tKmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\tMasterSecretArn: jsii.String(\"masterSecretArn\"),\n\tMasterSecretKmsKeyArn: jsii.String(\"masterSecretKmsKeyArn\"),\n\tRotationLambdaName: jsii.String(\"rotationLambdaName\"),\n\tRuntime: jsii.String(\"runtime\"),\n\tSuperuserSecretArn: jsii.String(\"superuserSecretArn\"),\n\tSuperuserSecretKmsKeyArn: jsii.String(\"superuserSecretKmsKeyArn\"),\n\tVpcSecurityGroupIds: jsii.String(\"vpcSecurityGroupIds\"),\n\tVpcSubnetIds: jsii.String(\"vpcSubnetIds\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst hostedRotationLambdaProperty: secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty = {\n  rotationType: 'rotationType',\n\n  // the properties below are optional\n  excludeCharacters: 'excludeCharacters',\n  kmsKeyArn: 'kmsKeyArn',\n  masterSecretArn: 'masterSecretArn',\n  masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n  rotationLambdaName: 'rotationLambdaName',\n  runtime: 'runtime',\n  superuserSecretArn: 'superuserSecretArn',\n  superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n  vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n  vpcSubnetIds: 'vpcSubnetIds',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst hostedRotationLambdaProperty: secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty = {\n  rotationType: 'rotationType',\n\n  // the properties below are optional\n  excludeCharacters: 'excludeCharacters',\n  kmsKeyArn: 'kmsKeyArn',\n  masterSecretArn: 'masterSecretArn',\n  masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n  rotationLambdaName: 'rotationLambdaName',\n  runtime: 'runtime',\n  superuserSecretArn: 'superuserSecretArn',\n  superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n  vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n  vpcSubnetIds: 'vpcSubnetIds',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":12,"75":16,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"dded6ec92c66ee4aa3fc5f21fa787aada40d92e2e88af887b41b63622b7f7cec"},"cd04016eff02e526d3bb929f5d63bcc7f0cfe23667829b3a54b7afeae2dcd72d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\nrotation_rules_property = secretsmanager.CfnRotationSchedule.RotationRulesProperty(\n    automatically_after_days=123,\n    duration=\"duration\",\n    schedule_expression=\"scheduleExpression\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar rotationRulesProperty = new RotationRulesProperty {\n    AutomaticallyAfterDays = 123,\n    Duration = \"duration\",\n    ScheduleExpression = \"scheduleExpression\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nRotationRulesProperty rotationRulesProperty = RotationRulesProperty.builder()\n        .automaticallyAfterDays(123)\n        .duration(\"duration\")\n        .scheduleExpression(\"scheduleExpression\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nrotationRulesProperty := &RotationRulesProperty{\n\tAutomaticallyAfterDays: jsii.Number(123),\n\tDuration: jsii.String(\"duration\"),\n\tScheduleExpression: jsii.String(\"scheduleExpression\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst rotationRulesProperty: secretsmanager.CfnRotationSchedule.RotationRulesProperty = {\n  automaticallyAfterDays: 123,\n  duration: 'duration',\n  scheduleExpression: 'scheduleExpression',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rotationRulesProperty: secretsmanager.CfnRotationSchedule.RotationRulesProperty = {\n  automaticallyAfterDays: 123,\n  duration: 'duration',\n  scheduleExpression: 'scheduleExpression',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":3,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"f412d3eee522a71549fbd505b05e3ff9536c0f25c33bc1f35296f38a04bd64b5"},"00e7902283d3458c73cadb7ae124d048e531a8649b7a2d36b49b757d8dc65acd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ncfn_rotation_schedule_props = secretsmanager.CfnRotationScheduleProps(\n    secret_id=\"secretId\",\n\n    # the properties below are optional\n    hosted_rotation_lambda=secretsmanager.CfnRotationSchedule.HostedRotationLambdaProperty(\n        rotation_type=\"rotationType\",\n\n        # the properties below are optional\n        exclude_characters=\"excludeCharacters\",\n        kms_key_arn=\"kmsKeyArn\",\n        master_secret_arn=\"masterSecretArn\",\n        master_secret_kms_key_arn=\"masterSecretKmsKeyArn\",\n        rotation_lambda_name=\"rotationLambdaName\",\n        runtime=\"runtime\",\n        superuser_secret_arn=\"superuserSecretArn\",\n        superuser_secret_kms_key_arn=\"superuserSecretKmsKeyArn\",\n        vpc_security_group_ids=\"vpcSecurityGroupIds\",\n        vpc_subnet_ids=\"vpcSubnetIds\"\n    ),\n    rotate_immediately_on_update=False,\n    rotation_lambda_arn=\"rotationLambdaArn\",\n    rotation_rules=secretsmanager.CfnRotationSchedule.RotationRulesProperty(\n        automatically_after_days=123,\n        duration=\"duration\",\n        schedule_expression=\"scheduleExpression\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar cfnRotationScheduleProps = new CfnRotationScheduleProps {\n    SecretId = \"secretId\",\n\n    // the properties below are optional\n    HostedRotationLambda = new HostedRotationLambdaProperty {\n        RotationType = \"rotationType\",\n\n        // the properties below are optional\n        ExcludeCharacters = \"excludeCharacters\",\n        KmsKeyArn = \"kmsKeyArn\",\n        MasterSecretArn = \"masterSecretArn\",\n        MasterSecretKmsKeyArn = \"masterSecretKmsKeyArn\",\n        RotationLambdaName = \"rotationLambdaName\",\n        Runtime = \"runtime\",\n        SuperuserSecretArn = \"superuserSecretArn\",\n        SuperuserSecretKmsKeyArn = \"superuserSecretKmsKeyArn\",\n        VpcSecurityGroupIds = \"vpcSecurityGroupIds\",\n        VpcSubnetIds = \"vpcSubnetIds\"\n    },\n    RotateImmediatelyOnUpdate = false,\n    RotationLambdaArn = \"rotationLambdaArn\",\n    RotationRules = new RotationRulesProperty {\n        AutomaticallyAfterDays = 123,\n        Duration = \"duration\",\n        ScheduleExpression = \"scheduleExpression\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nCfnRotationScheduleProps cfnRotationScheduleProps = CfnRotationScheduleProps.builder()\n        .secretId(\"secretId\")\n\n        // the properties below are optional\n        .hostedRotationLambda(HostedRotationLambdaProperty.builder()\n                .rotationType(\"rotationType\")\n\n                // the properties below are optional\n                .excludeCharacters(\"excludeCharacters\")\n                .kmsKeyArn(\"kmsKeyArn\")\n                .masterSecretArn(\"masterSecretArn\")\n                .masterSecretKmsKeyArn(\"masterSecretKmsKeyArn\")\n                .rotationLambdaName(\"rotationLambdaName\")\n                .runtime(\"runtime\")\n                .superuserSecretArn(\"superuserSecretArn\")\n                .superuserSecretKmsKeyArn(\"superuserSecretKmsKeyArn\")\n                .vpcSecurityGroupIds(\"vpcSecurityGroupIds\")\n                .vpcSubnetIds(\"vpcSubnetIds\")\n                .build())\n        .rotateImmediatelyOnUpdate(false)\n        .rotationLambdaArn(\"rotationLambdaArn\")\n        .rotationRules(RotationRulesProperty.builder()\n                .automaticallyAfterDays(123)\n                .duration(\"duration\")\n                .scheduleExpression(\"scheduleExpression\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ncfnRotationScheduleProps := &CfnRotationScheduleProps{\n\tSecretId: jsii.String(\"secretId\"),\n\n\t// the properties below are optional\n\tHostedRotationLambda: &HostedRotationLambdaProperty{\n\t\tRotationType: jsii.String(\"rotationType\"),\n\n\t\t// the properties below are optional\n\t\tExcludeCharacters: jsii.String(\"excludeCharacters\"),\n\t\tKmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\tMasterSecretArn: jsii.String(\"masterSecretArn\"),\n\t\tMasterSecretKmsKeyArn: jsii.String(\"masterSecretKmsKeyArn\"),\n\t\tRotationLambdaName: jsii.String(\"rotationLambdaName\"),\n\t\tRuntime: jsii.String(\"runtime\"),\n\t\tSuperuserSecretArn: jsii.String(\"superuserSecretArn\"),\n\t\tSuperuserSecretKmsKeyArn: jsii.String(\"superuserSecretKmsKeyArn\"),\n\t\tVpcSecurityGroupIds: jsii.String(\"vpcSecurityGroupIds\"),\n\t\tVpcSubnetIds: jsii.String(\"vpcSubnetIds\"),\n\t},\n\tRotateImmediatelyOnUpdate: jsii.Boolean(false),\n\tRotationLambdaArn: jsii.String(\"rotationLambdaArn\"),\n\tRotationRules: &RotationRulesProperty{\n\t\tAutomaticallyAfterDays: jsii.Number(123),\n\t\tDuration: jsii.String(\"duration\"),\n\t\tScheduleExpression: jsii.String(\"scheduleExpression\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnRotationScheduleProps: secretsmanager.CfnRotationScheduleProps = {\n  secretId: 'secretId',\n\n  // the properties below are optional\n  hostedRotationLambda: {\n    rotationType: 'rotationType',\n\n    // the properties below are optional\n    excludeCharacters: 'excludeCharacters',\n    kmsKeyArn: 'kmsKeyArn',\n    masterSecretArn: 'masterSecretArn',\n    masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n    rotationLambdaName: 'rotationLambdaName',\n    runtime: 'runtime',\n    superuserSecretArn: 'superuserSecretArn',\n    superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n    vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n    vpcSubnetIds: 'vpcSubnetIds',\n  },\n  rotateImmediatelyOnUpdate: false,\n  rotationLambdaArn: 'rotationLambdaArn',\n  rotationRules: {\n    automaticallyAfterDays: 123,\n    duration: 'duration',\n    scheduleExpression: 'scheduleExpression',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRotationScheduleProps: secretsmanager.CfnRotationScheduleProps = {\n  secretId: 'secretId',\n\n  // the properties below are optional\n  hostedRotationLambda: {\n    rotationType: 'rotationType',\n\n    // the properties below are optional\n    excludeCharacters: 'excludeCharacters',\n    kmsKeyArn: 'kmsKeyArn',\n    masterSecretArn: 'masterSecretArn',\n    masterSecretKmsKeyArn: 'masterSecretKmsKeyArn',\n    rotationLambdaName: 'rotationLambdaName',\n    runtime: 'runtime',\n    superuserSecretArn: 'superuserSecretArn',\n    superuserSecretKmsKeyArn: 'superuserSecretKmsKeyArn',\n    vpcSecurityGroupIds: 'vpcSecurityGroupIds',\n    vpcSubnetIds: 'vpcSubnetIds',\n  },\n  rotateImmediatelyOnUpdate: false,\n  rotationLambdaArn: 'rotationLambdaArn',\n  rotationRules: {\n    automaticallyAfterDays: 123,\n    duration: 'duration',\n    scheduleExpression: 'scheduleExpression',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":16,"75":23,"91":1,"153":1,"169":1,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"075bfcae0a070eee2208cb1848fff368bfde4c5e7db69825cac089f95c2f79ad"},"6113fae55de309347d612a34232555c0f7075f47ac01d0a73df8522bf2aeda91":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ncfn_secret = secretsmanager.CfnSecret(self, \"MyCfnSecret\",\n    description=\"description\",\n    generate_secret_string=secretsmanager.CfnSecret.GenerateSecretStringProperty(\n        exclude_characters=\"excludeCharacters\",\n        exclude_lowercase=False,\n        exclude_numbers=False,\n        exclude_punctuation=False,\n        exclude_uppercase=False,\n        generate_string_key=\"generateStringKey\",\n        include_space=False,\n        password_length=123,\n        require_each_included_type=False,\n        secret_string_template=\"secretStringTemplate\"\n    ),\n    kms_key_id=\"kmsKeyId\",\n    name=\"name\",\n    replica_regions=[secretsmanager.CfnSecret.ReplicaRegionProperty(\n        region=\"region\",\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    )],\n    secret_string=\"secretString\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar cfnSecret = new CfnSecret(this, \"MyCfnSecret\", new CfnSecretProps {\n    Description = \"description\",\n    GenerateSecretString = new GenerateSecretStringProperty {\n        ExcludeCharacters = \"excludeCharacters\",\n        ExcludeLowercase = false,\n        ExcludeNumbers = false,\n        ExcludePunctuation = false,\n        ExcludeUppercase = false,\n        GenerateStringKey = \"generateStringKey\",\n        IncludeSpace = false,\n        PasswordLength = 123,\n        RequireEachIncludedType = false,\n        SecretStringTemplate = \"secretStringTemplate\"\n    },\n    KmsKeyId = \"kmsKeyId\",\n    Name = \"name\",\n    ReplicaRegions = new [] { new ReplicaRegionProperty {\n        Region = \"region\",\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    } },\n    SecretString = \"secretString\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nCfnSecret cfnSecret = CfnSecret.Builder.create(this, \"MyCfnSecret\")\n        .description(\"description\")\n        .generateSecretString(GenerateSecretStringProperty.builder()\n                .excludeCharacters(\"excludeCharacters\")\n                .excludeLowercase(false)\n                .excludeNumbers(false)\n                .excludePunctuation(false)\n                .excludeUppercase(false)\n                .generateStringKey(\"generateStringKey\")\n                .includeSpace(false)\n                .passwordLength(123)\n                .requireEachIncludedType(false)\n                .secretStringTemplate(\"secretStringTemplate\")\n                .build())\n        .kmsKeyId(\"kmsKeyId\")\n        .name(\"name\")\n        .replicaRegions(List.of(ReplicaRegionProperty.builder()\n                .region(\"region\")\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build()))\n        .secretString(\"secretString\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ncfnSecret := secretsmanager.NewCfnSecret(this, jsii.String(\"MyCfnSecret\"), &CfnSecretProps{\n\tDescription: jsii.String(\"description\"),\n\tGenerateSecretString: &GenerateSecretStringProperty{\n\t\tExcludeCharacters: jsii.String(\"excludeCharacters\"),\n\t\tExcludeLowercase: jsii.Boolean(false),\n\t\tExcludeNumbers: jsii.Boolean(false),\n\t\tExcludePunctuation: jsii.Boolean(false),\n\t\tExcludeUppercase: jsii.Boolean(false),\n\t\tGenerateStringKey: jsii.String(\"generateStringKey\"),\n\t\tIncludeSpace: jsii.Boolean(false),\n\t\tPasswordLength: jsii.Number(123),\n\t\tRequireEachIncludedType: jsii.Boolean(false),\n\t\tSecretStringTemplate: jsii.String(\"secretStringTemplate\"),\n\t},\n\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\tName: jsii.String(\"name\"),\n\tReplicaRegions: []interface{}{\n\t\t&ReplicaRegionProperty{\n\t\t\tRegion: jsii.String(\"region\"),\n\n\t\t\t// the properties below are optional\n\t\t\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t},\n\t},\n\tSecretString: jsii.String(\"secretString\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecret = new secretsmanager.CfnSecret(this, 'MyCfnSecret', /* all optional props */ {\n  description: 'description',\n  generateSecretString: {\n    excludeCharacters: 'excludeCharacters',\n    excludeLowercase: false,\n    excludeNumbers: false,\n    excludePunctuation: false,\n    excludeUppercase: false,\n    generateStringKey: 'generateStringKey',\n    includeSpace: false,\n    passwordLength: 123,\n    requireEachIncludedType: false,\n    secretStringTemplate: 'secretStringTemplate',\n  },\n  kmsKeyId: 'kmsKeyId',\n  name: 'name',\n  replicaRegions: [{\n    region: 'region',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  }],\n  secretString: 'secretString',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnSecret"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnSecret","@aws-cdk/aws-secretsmanager.CfnSecretProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecret = new secretsmanager.CfnSecret(this, 'MyCfnSecret', /* all optional props */ {\n  description: 'description',\n  generateSecretString: {\n    excludeCharacters: 'excludeCharacters',\n    excludeLowercase: false,\n    excludeNumbers: false,\n    excludePunctuation: false,\n    excludeUppercase: false,\n    generateStringKey: 'generateStringKey',\n    includeSpace: false,\n    passwordLength: 123,\n    requireEachIncludedType: false,\n    secretStringTemplate: 'secretStringTemplate',\n  },\n  kmsKeyId: 'kmsKeyId',\n  name: 'name',\n  replicaRegions: [{\n    region: 'region',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  }],\n  secretString: 'secretString',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":13,"75":25,"91":6,"104":1,"192":2,"193":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":21,"290":1},"fqnsFingerprint":"e79d676bae1567f156e4818356d3482231cb59745f8d6d981a1cdc8f99cb6122"},"514ee157c023058defb791c8464fea2f506dbf5fedd2dd276c16ba81fbe52470":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ngenerate_secret_string_property = secretsmanager.CfnSecret.GenerateSecretStringProperty(\n    exclude_characters=\"excludeCharacters\",\n    exclude_lowercase=False,\n    exclude_numbers=False,\n    exclude_punctuation=False,\n    exclude_uppercase=False,\n    generate_string_key=\"generateStringKey\",\n    include_space=False,\n    password_length=123,\n    require_each_included_type=False,\n    secret_string_template=\"secretStringTemplate\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar generateSecretStringProperty = new GenerateSecretStringProperty {\n    ExcludeCharacters = \"excludeCharacters\",\n    ExcludeLowercase = false,\n    ExcludeNumbers = false,\n    ExcludePunctuation = false,\n    ExcludeUppercase = false,\n    GenerateStringKey = \"generateStringKey\",\n    IncludeSpace = false,\n    PasswordLength = 123,\n    RequireEachIncludedType = false,\n    SecretStringTemplate = \"secretStringTemplate\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nGenerateSecretStringProperty generateSecretStringProperty = GenerateSecretStringProperty.builder()\n        .excludeCharacters(\"excludeCharacters\")\n        .excludeLowercase(false)\n        .excludeNumbers(false)\n        .excludePunctuation(false)\n        .excludeUppercase(false)\n        .generateStringKey(\"generateStringKey\")\n        .includeSpace(false)\n        .passwordLength(123)\n        .requireEachIncludedType(false)\n        .secretStringTemplate(\"secretStringTemplate\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ngenerateSecretStringProperty := &GenerateSecretStringProperty{\n\tExcludeCharacters: jsii.String(\"excludeCharacters\"),\n\tExcludeLowercase: jsii.Boolean(false),\n\tExcludeNumbers: jsii.Boolean(false),\n\tExcludePunctuation: jsii.Boolean(false),\n\tExcludeUppercase: jsii.Boolean(false),\n\tGenerateStringKey: jsii.String(\"generateStringKey\"),\n\tIncludeSpace: jsii.Boolean(false),\n\tPasswordLength: jsii.Number(123),\n\tRequireEachIncludedType: jsii.Boolean(false),\n\tSecretStringTemplate: jsii.String(\"secretStringTemplate\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst generateSecretStringProperty: secretsmanager.CfnSecret.GenerateSecretStringProperty = {\n  excludeCharacters: 'excludeCharacters',\n  excludeLowercase: false,\n  excludeNumbers: false,\n  excludePunctuation: false,\n  excludeUppercase: false,\n  generateStringKey: 'generateStringKey',\n  includeSpace: false,\n  passwordLength: 123,\n  requireEachIncludedType: false,\n  secretStringTemplate: 'secretStringTemplate',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst generateSecretStringProperty: secretsmanager.CfnSecret.GenerateSecretStringProperty = {\n  excludeCharacters: 'excludeCharacters',\n  excludeLowercase: false,\n  excludeNumbers: false,\n  excludePunctuation: false,\n  excludeUppercase: false,\n  generateStringKey: 'generateStringKey',\n  includeSpace: false,\n  passwordLength: 123,\n  requireEachIncludedType: false,\n  secretStringTemplate: 'secretStringTemplate',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":15,"91":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":10,"290":1},"fqnsFingerprint":"2514e23d8e48d4716a0492f2a57d5f8030fbc54cb377d751b8d4db26b8156c43"},"e73c5b00c70a9ed10211837da71f33ed5c29ce9193cba26994d650ddd216700a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\nreplica_region_property = secretsmanager.CfnSecret.ReplicaRegionProperty(\n    region=\"region\",\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar replicaRegionProperty = new ReplicaRegionProperty {\n    Region = \"region\",\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nReplicaRegionProperty replicaRegionProperty = ReplicaRegionProperty.builder()\n        .region(\"region\")\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nreplicaRegionProperty := &ReplicaRegionProperty{\n\tRegion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst replicaRegionProperty: secretsmanager.CfnSecret.ReplicaRegionProperty = {\n  region: 'region',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnSecret.ReplicaRegionProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnSecret.ReplicaRegionProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicaRegionProperty: secretsmanager.CfnSecret.ReplicaRegionProperty = {\n  region: 'region',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"8b793ee173ac7b569dcd82eb0709e2c69642e98fe33592d45f8166ecf5a5209f"},"2aff945b62fe805e7a5c667f8c9354adcafd1a9e51186c32ad2b60dc0f34d385":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ncfn_secret_props = secretsmanager.CfnSecretProps(\n    description=\"description\",\n    generate_secret_string=secretsmanager.CfnSecret.GenerateSecretStringProperty(\n        exclude_characters=\"excludeCharacters\",\n        exclude_lowercase=False,\n        exclude_numbers=False,\n        exclude_punctuation=False,\n        exclude_uppercase=False,\n        generate_string_key=\"generateStringKey\",\n        include_space=False,\n        password_length=123,\n        require_each_included_type=False,\n        secret_string_template=\"secretStringTemplate\"\n    ),\n    kms_key_id=\"kmsKeyId\",\n    name=\"name\",\n    replica_regions=[secretsmanager.CfnSecret.ReplicaRegionProperty(\n        region=\"region\",\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    )],\n    secret_string=\"secretString\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar cfnSecretProps = new CfnSecretProps {\n    Description = \"description\",\n    GenerateSecretString = new GenerateSecretStringProperty {\n        ExcludeCharacters = \"excludeCharacters\",\n        ExcludeLowercase = false,\n        ExcludeNumbers = false,\n        ExcludePunctuation = false,\n        ExcludeUppercase = false,\n        GenerateStringKey = \"generateStringKey\",\n        IncludeSpace = false,\n        PasswordLength = 123,\n        RequireEachIncludedType = false,\n        SecretStringTemplate = \"secretStringTemplate\"\n    },\n    KmsKeyId = \"kmsKeyId\",\n    Name = \"name\",\n    ReplicaRegions = new [] { new ReplicaRegionProperty {\n        Region = \"region\",\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    } },\n    SecretString = \"secretString\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nCfnSecretProps cfnSecretProps = CfnSecretProps.builder()\n        .description(\"description\")\n        .generateSecretString(GenerateSecretStringProperty.builder()\n                .excludeCharacters(\"excludeCharacters\")\n                .excludeLowercase(false)\n                .excludeNumbers(false)\n                .excludePunctuation(false)\n                .excludeUppercase(false)\n                .generateStringKey(\"generateStringKey\")\n                .includeSpace(false)\n                .passwordLength(123)\n                .requireEachIncludedType(false)\n                .secretStringTemplate(\"secretStringTemplate\")\n                .build())\n        .kmsKeyId(\"kmsKeyId\")\n        .name(\"name\")\n        .replicaRegions(List.of(ReplicaRegionProperty.builder()\n                .region(\"region\")\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build()))\n        .secretString(\"secretString\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ncfnSecretProps := &CfnSecretProps{\n\tDescription: jsii.String(\"description\"),\n\tGenerateSecretString: &GenerateSecretStringProperty{\n\t\tExcludeCharacters: jsii.String(\"excludeCharacters\"),\n\t\tExcludeLowercase: jsii.Boolean(false),\n\t\tExcludeNumbers: jsii.Boolean(false),\n\t\tExcludePunctuation: jsii.Boolean(false),\n\t\tExcludeUppercase: jsii.Boolean(false),\n\t\tGenerateStringKey: jsii.String(\"generateStringKey\"),\n\t\tIncludeSpace: jsii.Boolean(false),\n\t\tPasswordLength: jsii.Number(123),\n\t\tRequireEachIncludedType: jsii.Boolean(false),\n\t\tSecretStringTemplate: jsii.String(\"secretStringTemplate\"),\n\t},\n\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\tName: jsii.String(\"name\"),\n\tReplicaRegions: []interface{}{\n\t\t&ReplicaRegionProperty{\n\t\t\tRegion: jsii.String(\"region\"),\n\n\t\t\t// the properties below are optional\n\t\t\tKmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t},\n\t},\n\tSecretString: jsii.String(\"secretString\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecretProps: secretsmanager.CfnSecretProps = {\n  description: 'description',\n  generateSecretString: {\n    excludeCharacters: 'excludeCharacters',\n    excludeLowercase: false,\n    excludeNumbers: false,\n    excludePunctuation: false,\n    excludeUppercase: false,\n    generateStringKey: 'generateStringKey',\n    includeSpace: false,\n    passwordLength: 123,\n    requireEachIncludedType: false,\n    secretStringTemplate: 'secretStringTemplate',\n  },\n  kmsKeyId: 'kmsKeyId',\n  name: 'name',\n  replicaRegions: [{\n    region: 'region',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  }],\n  secretString: 'secretString',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnSecretProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnSecretProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecretProps: secretsmanager.CfnSecretProps = {\n  description: 'description',\n  generateSecretString: {\n    excludeCharacters: 'excludeCharacters',\n    excludeLowercase: false,\n    excludeNumbers: false,\n    excludePunctuation: false,\n    excludeUppercase: false,\n    generateStringKey: 'generateStringKey',\n    includeSpace: false,\n    passwordLength: 123,\n    requireEachIncludedType: false,\n    secretStringTemplate: 'secretStringTemplate',\n  },\n  kmsKeyId: 'kmsKeyId',\n  name: 'name',\n  replicaRegions: [{\n    region: 'region',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  }],\n  secretString: 'secretString',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":12,"75":25,"91":6,"153":1,"169":1,"192":2,"193":4,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":21,"290":1},"fqnsFingerprint":"763f6dcf668c4172682db9a1c39bbf458fee04701b87d5816101f0640026a471"},"bf1f98fb6a7548d5214bf86f16bf0d7c06bbe7b926614b1ae1b41c4fca9d3b23":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ncfn_secret_target_attachment = secretsmanager.CfnSecretTargetAttachment(self, \"MyCfnSecretTargetAttachment\",\n    secret_id=\"secretId\",\n    target_id=\"targetId\",\n    target_type=\"targetType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar cfnSecretTargetAttachment = new CfnSecretTargetAttachment(this, \"MyCfnSecretTargetAttachment\", new CfnSecretTargetAttachmentProps {\n    SecretId = \"secretId\",\n    TargetId = \"targetId\",\n    TargetType = \"targetType\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nCfnSecretTargetAttachment cfnSecretTargetAttachment = CfnSecretTargetAttachment.Builder.create(this, \"MyCfnSecretTargetAttachment\")\n        .secretId(\"secretId\")\n        .targetId(\"targetId\")\n        .targetType(\"targetType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ncfnSecretTargetAttachment := secretsmanager.NewCfnSecretTargetAttachment(this, jsii.String(\"MyCfnSecretTargetAttachment\"), &CfnSecretTargetAttachmentProps{\n\tSecretId: jsii.String(\"secretId\"),\n\tTargetId: jsii.String(\"targetId\"),\n\tTargetType: jsii.String(\"targetType\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecretTargetAttachment = new secretsmanager.CfnSecretTargetAttachment(this, 'MyCfnSecretTargetAttachment', {\n  secretId: 'secretId',\n  targetId: 'targetId',\n  targetType: 'targetType',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachment","@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecretTargetAttachment = new secretsmanager.CfnSecretTargetAttachment(this, 'MyCfnSecretTargetAttachment', {\n  secretId: 'secretId',\n  targetId: 'targetId',\n  targetType: 'targetType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"5a6f72596409b0e1af294f6c0540dcd3e6f25a31028222bab523f6264fe2bdf4"},"0a90e17beae882084052b1d347cceaaefe975d4d94dc4bc1053e84823edb7567":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\ncfn_secret_target_attachment_props = secretsmanager.CfnSecretTargetAttachmentProps(\n    secret_id=\"secretId\",\n    target_id=\"targetId\",\n    target_type=\"targetType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar cfnSecretTargetAttachmentProps = new CfnSecretTargetAttachmentProps {\n    SecretId = \"secretId\",\n    TargetId = \"targetId\",\n    TargetType = \"targetType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nCfnSecretTargetAttachmentProps cfnSecretTargetAttachmentProps = CfnSecretTargetAttachmentProps.builder()\n        .secretId(\"secretId\")\n        .targetId(\"targetId\")\n        .targetType(\"targetType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\ncfnSecretTargetAttachmentProps := &CfnSecretTargetAttachmentProps{\n\tSecretId: jsii.String(\"secretId\"),\n\tTargetId: jsii.String(\"targetId\"),\n\tTargetType: jsii.String(\"targetType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst cfnSecretTargetAttachmentProps: secretsmanager.CfnSecretTargetAttachmentProps = {\n  secretId: 'secretId',\n  targetId: 'targetId',\n  targetType: 'targetType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecretTargetAttachmentProps: secretsmanager.CfnSecretTargetAttachmentProps = {\n  secretId: 'secretId',\n  targetId: 'targetId',\n  targetType: 'targetType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"b2398b0f9482966ab991a297ef0170299ad05e73f40a80af3b2953b81e6793c8"},"bb9bfd00e52192a95818283ea1052e6bec8e16f64e48e8fd585b35b04a30bfe8":{"translations":{"python":{"source":"secret = secretsmanager.Secret(self, \"Secret\")\n\nsecret.add_rotation_schedule(\"RotationSchedule\",\n    hosted_rotation=secretsmanager.HostedRotation.mysql_single_user()\n)","version":"2"},"csharp":{"source":"var secret = new Secret(this, \"Secret\");\n\nsecret.AddRotationSchedule(\"RotationSchedule\", new RotationScheduleOptions {\n    HostedRotation = HostedRotation.MysqlSingleUser()\n});","version":"1"},"java":{"source":"Secret secret = new Secret(this, \"Secret\");\n\nsecret.addRotationSchedule(\"RotationSchedule\", RotationScheduleOptions.builder()\n        .hostedRotation(HostedRotation.mysqlSingleUser())\n        .build());","version":"1"},"go":{"source":"secret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\n\nsecret.addRotationSchedule(jsii.String(\"RotationSchedule\"), &RotationScheduleOptions{\n\tHostedRotation: secretsmanager.HostedRotation_MysqlSingleUser(),\n})","version":"1"},"$":{"source":"const secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.HostedRotation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.HostedRotation","@aws-cdk/aws-secretsmanager.HostedRotation#mysqlSingleUser","@aws-cdk/aws-secretsmanager.RotationScheduleOptions","@aws-cdk/aws-secretsmanager.Secret","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":9,"104":1,"193":1,"194":4,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"902b1106b2db404db3893a5c5891f3451bc70ec63f978b641304de0ce9e0e091"},"41f9186f7e01d37a0ef8415dc97284978a49ea27facd8b99f19d655e61bf67f1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\nhosted_rotation_type = secretsmanager.HostedRotationType.MARIADB_MULTI_USER","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar hostedRotationType = HostedRotationType.MARIADB_MULTI_USER;","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nHostedRotationType hostedRotationType = HostedRotationType.MARIADB_MULTI_USER;","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nhostedRotationType := secretsmanager.HostedRotationType_MARIADB_MULTI_USER()","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst hostedRotationType = secretsmanager.HostedRotationType.MARIADB_MULTI_USER;","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.HostedRotationType"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.HostedRotationType","@aws-cdk/aws-secretsmanager.HostedRotationType#MARIADB_MULTI_USER"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst hostedRotationType = secretsmanager.HostedRotationType.MARIADB_MULTI_USER;\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":5,"194":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"b245b6dfea74a7fe164a225df0143596a73eae255c2ddc60aebf5d2b0ff63209"},"4dfd91ea96360c7f4e54c63bce8a781c879469aa36ac814d1ced0c554aa23825":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# secret: secretsmanager.Secret\n# security_group: ec2.SecurityGroup\n# subnet: ec2.Subnet\n# subnet_filter: ec2.SubnetFilter\n# vpc: ec2.Vpc\n\nmulti_user_hosted_rotation_options = secretsmanager.MultiUserHostedRotationOptions(\n    master_secret=secret,\n\n    # the properties below are optional\n    function_name=\"functionName\",\n    security_groups=[security_group],\n    vpc=vpc,\n    vpc_subnets=ec2.SubnetSelection(\n        availability_zones=[\"availabilityZones\"],\n        one_per_az=False,\n        subnet_filters=[subnet_filter],\n        subnet_group_name=\"subnetGroupName\",\n        subnet_name=\"subnetName\",\n        subnets=[subnet],\n        subnet_type=ec2.SubnetType.ISOLATED\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.SecretsManager;\n\nSecret secret;\nSecurityGroup securityGroup;\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\n\nvar multiUserHostedRotationOptions = new MultiUserHostedRotationOptions {\n    MasterSecret = secret,\n\n    // the properties below are optional\n    FunctionName = \"functionName\",\n    SecurityGroups = new [] { securityGroup },\n    Vpc = vpc,\n    VpcSubnets = new SubnetSelection {\n        AvailabilityZones = new [] { \"availabilityZones\" },\n        OnePerAz = false,\n        SubnetFilters = new [] { subnetFilter },\n        SubnetGroupName = \"subnetGroupName\",\n        SubnetName = \"subnetName\",\n        Subnets = new [] { subnet },\n        SubnetType = SubnetType.ISOLATED\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecret secret;\nSecurityGroup securityGroup;\nSubnet subnet;\nSubnetFilter subnetFilter;\nVpc vpc;\n\nMultiUserHostedRotationOptions multiUserHostedRotationOptions = MultiUserHostedRotationOptions.builder()\n        .masterSecret(secret)\n\n        // the properties below are optional\n        .functionName(\"functionName\")\n        .securityGroups(List.of(securityGroup))\n        .vpc(vpc)\n        .vpcSubnets(SubnetSelection.builder()\n                .availabilityZones(List.of(\"availabilityZones\"))\n                .onePerAz(false)\n                .subnetFilters(List.of(subnetFilter))\n                .subnetGroupName(\"subnetGroupName\")\n                .subnetName(\"subnetName\")\n                .subnets(List.of(subnet))\n                .subnetType(SubnetType.ISOLATED)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar secret secret\nvar securityGroup securityGroup\nvar subnet subnet\nvar subnetFilter subnetFilter\nvar vpc vpc\n\nmultiUserHostedRotationOptions := &MultiUserHostedRotationOptions{\n\tMasterSecret: secret,\n\n\t// the properties below are optional\n\tFunctionName: jsii.String(\"functionName\"),\n\tSecurityGroups: []iSecurityGroup{\n\t\tsecurityGroup,\n\t},\n\tVpc: vpc,\n\tVpcSubnets: &SubnetSelection{\n\t\tAvailabilityZones: []*string{\n\t\t\tjsii.String(\"availabilityZones\"),\n\t\t},\n\t\tOnePerAz: jsii.Boolean(false),\n\t\tSubnetFilters: []*subnetFilter{\n\t\t\tsubnetFilter,\n\t\t},\n\t\tSubnetGroupName: jsii.String(\"subnetGroupName\"),\n\t\tSubnetName: jsii.String(\"subnetName\"),\n\t\tSubnets: []iSubnet{\n\t\t\tsubnet,\n\t\t},\n\t\tSubnetType: ec2.SubnetType_ISOLATED,\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst multiUserHostedRotationOptions: secretsmanager.MultiUserHostedRotationOptions = {\n  masterSecret: secret,\n\n  // the properties below are optional\n  functionName: 'functionName',\n  securityGroups: [securityGroup],\n  vpc: vpc,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-ec2.SubnetSelection","@aws-cdk/aws-ec2.SubnetType","@aws-cdk/aws-ec2.SubnetType#ISOLATED","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.MultiUserHostedRotationOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst multiUserHostedRotationOptions: secretsmanager.MultiUserHostedRotationOptions = {\n  masterSecret: secret,\n\n  // the properties below are optional\n  functionName: 'functionName',\n  securityGroups: [securityGroup],\n  vpc: vpc,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":40,"91":1,"130":5,"153":6,"169":6,"192":4,"193":2,"194":2,"225":6,"242":6,"243":6,"254":2,"255":2,"256":2,"281":12,"290":1},"fqnsFingerprint":"22d9af53c0e52b3ea6d5a0be8a41e63714e3885de53c035eaac0c7eeedbb8e56"},"2be31489df0cbc5b60e8d3825e60859a0bae88774361a1478c77c3d946c0fa45":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# key: kms.Key\n\nreplica_region = secretsmanager.ReplicaRegion(\n    region=\"region\",\n\n    # the properties below are optional\n    encryption_key=key\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK.AWS.SecretsManager;\n\nKey key;\n\nvar replicaRegion = new ReplicaRegion {\n    Region = \"region\",\n\n    // the properties below are optional\n    EncryptionKey = key\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nKey key;\n\nReplicaRegion replicaRegion = ReplicaRegion.builder()\n        .region(\"region\")\n\n        // the properties below are optional\n        .encryptionKey(key)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar key key\n\nreplicaRegion := &ReplicaRegion{\n\tRegion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tEncryptionKey: key,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const key: kms.Key;\nconst replicaRegion: secretsmanager.ReplicaRegion = {\n  region: 'region',\n\n  // the properties below are optional\n  encryptionKey: key,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.ReplicaRegion"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-kms.IKey","@aws-cdk/aws-secretsmanager.ReplicaRegion"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicaRegion: secretsmanager.ReplicaRegion = {\n  region: 'region',\n\n  // the properties below are optional\n  encryptionKey: key,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":11,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"c4e270340df2b89ca27aa70dfd6cfc606218c2d3c944795dd831f209f4071339"},"58e521ad8932d6eed331e4345c0c437ccdeffcefd0743173d73a60b1212b9224":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# secret: secretsmanager.Secret\n\nresource_policy = secretsmanager.ResourcePolicy(self, \"MyResourcePolicy\",\n    secret=secret\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nSecret secret;\n\nvar resourcePolicy = new ResourcePolicy(this, \"MyResourcePolicy\", new ResourcePolicyProps {\n    Secret = secret\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecret secret;\n\nResourcePolicy resourcePolicy = ResourcePolicy.Builder.create(this, \"MyResourcePolicy\")\n        .secret(secret)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar secret secret\n\nresourcePolicy := secretsmanager.NewResourcePolicy(this, jsii.String(\"MyResourcePolicy\"), &ResourcePolicyProps{\n\tSecret: secret,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\nconst resourcePolicy = new secretsmanager.ResourcePolicy(this, 'MyResourcePolicy', {\n  secret: secret,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.ResourcePolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.ResourcePolicy","@aws-cdk/aws-secretsmanager.ResourcePolicyProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourcePolicy = new secretsmanager.ResourcePolicy(this, 'MyResourcePolicy', {\n  secret: secret,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"104":1,"130":1,"153":1,"169":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"30ad00851ae1b86c6ce34b61b356475637b2fc18f5d960bceb63940cdb9efca3"},"43b1a1f4d54ad31c815d84c9b821031158745e48eb27b3f5597458f746c54427":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# secret: secretsmanager.Secret\n\nresource_policy_props = secretsmanager.ResourcePolicyProps(\n    secret=secret\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nSecret secret;\n\nvar resourcePolicyProps = new ResourcePolicyProps {\n    Secret = secret\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecret secret;\n\nResourcePolicyProps resourcePolicyProps = ResourcePolicyProps.builder()\n        .secret(secret)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar secret secret\n\nresourcePolicyProps := &ResourcePolicyProps{\n\tSecret: secret,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\nconst resourcePolicyProps: secretsmanager.ResourcePolicyProps = {\n  secret: secret,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.ResourcePolicyProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.ResourcePolicyProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourcePolicyProps: secretsmanager.ResourcePolicyProps = {\n  secret: secret,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":9,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"4ed9df588a14095784df911ee8c995e4d1819a26bcd5f69ee2f48d9c8657c559"},"64aa6b0633794826ec71036bd6d29eeeb9e74fc4eec6101c583943cb6cd6b982":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_lambda as lambda_\nimport aws_cdk.aws_secretsmanager as secretsmanager\nimport aws_cdk.core as cdk\n\n# function_: lambda.Function\n# hosted_rotation: secretsmanager.HostedRotation\n# secret: secretsmanager.Secret\n\nrotation_schedule = secretsmanager.RotationSchedule(self, \"MyRotationSchedule\",\n    secret=secret,\n\n    # the properties below are optional\n    automatically_after=cdk.Duration.minutes(30),\n    hosted_rotation=hosted_rotation,\n    rotation_lambda=function_\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Lambda;\nusing Amazon.CDK.AWS.SecretsManager;\nusing Amazon.CDK;\n\nFunction function_;\nHostedRotation hostedRotation;\nSecret secret;\nvar rotationSchedule = new RotationSchedule(this, \"MyRotationSchedule\", new RotationScheduleProps {\n    Secret = secret,\n\n    // the properties below are optional\n    AutomaticallyAfter = Duration.Minutes(30),\n    HostedRotation = hostedRotation,\n    RotationLambda = function_\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.lambda.*;\nimport software.amazon.awscdk.services.secretsmanager.*;\nimport software.amazon.awscdk.core.*;\n\nFunction function_;\nHostedRotation hostedRotation;\nSecret secret;\n\nRotationSchedule rotationSchedule = RotationSchedule.Builder.create(this, \"MyRotationSchedule\")\n        .secret(secret)\n\n        // the properties below are optional\n        .automaticallyAfter(Duration.minutes(30))\n        .hostedRotation(hostedRotation)\n        .rotationLambda(function_)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar function_ function\nvar hostedRotation hostedRotation\nvar secret secret\n\nrotationSchedule := secretsmanager.NewRotationSchedule(this, jsii.String(\"MyRotationSchedule\"), &RotationScheduleProps{\n\tSecret: secret,\n\n\t// the properties below are optional\n\tAutomaticallyAfter: cdk.Duration_Minutes(jsii.Number(30)),\n\tHostedRotation: hostedRotation,\n\tRotationLambda: function_,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\ndeclare const hostedRotation: secretsmanager.HostedRotation;\ndeclare const secret: secretsmanager.Secret;\nconst rotationSchedule = new secretsmanager.RotationSchedule(this, 'MyRotationSchedule', {\n  secret: secret,\n\n  // the properties below are optional\n  automaticallyAfter: cdk.Duration.minutes(30),\n  hostedRotation: hostedRotation,\n  rotationLambda: function_,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.RotationSchedule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-secretsmanager.HostedRotation","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.RotationSchedule","@aws-cdk/aws-secretsmanager.RotationScheduleProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\ndeclare const hostedRotation: secretsmanager.HostedRotation;\ndeclare const secret: secretsmanager.Secret;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rotationSchedule = new secretsmanager.RotationSchedule(this, 'MyRotationSchedule', {\n  secret: secret,\n\n  // the properties below are optional\n  automaticallyAfter: cdk.Duration.minutes(30),\n  hostedRotation: hostedRotation,\n  rotationLambda: function_,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":25,"104":1,"130":3,"153":3,"169":3,"193":1,"194":3,"196":1,"197":1,"225":4,"242":4,"243":4,"254":3,"255":3,"256":3,"281":4,"290":1},"fqnsFingerprint":"1d5c2d835083b718e0034f173c641b157ce4c645eff209fb5f0b1b475ec399c6"},"b77ae26667ec711f3cbe72653b0ddbef77bc2948af19dec7a0f3e821a572422d":{"translations":{"python":{"source":"import aws_cdk.aws_lambda as lambda_\n\n# fn: lambda.Function\n\nsecret = secretsmanager.Secret(self, \"Secret\")\n\nsecret.add_rotation_schedule(\"RotationSchedule\",\n    rotation_lambda=fn,\n    automatically_after=Duration.days(15)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Lambda;\n\nFunction fn;\n\nvar secret = new Secret(this, \"Secret\");\n\nsecret.AddRotationSchedule(\"RotationSchedule\", new RotationScheduleOptions {\n    RotationLambda = fn,\n    AutomaticallyAfter = Duration.Days(15)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.lambda.*;\n\nFunction fn;\n\nSecret secret = new Secret(this, \"Secret\");\n\nsecret.addRotationSchedule(\"RotationSchedule\", RotationScheduleOptions.builder()\n        .rotationLambda(fn)\n        .automaticallyAfter(Duration.days(15))\n        .build());","version":"1"},"go":{"source":"import lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\n\nvar fn function\n\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\n\nsecret.addRotationSchedule(jsii.String(\"RotationSchedule\"), &RotationScheduleOptions{\n\tRotationLambda: fn,\n\tAutomaticallyAfter: awscdkcore.Duration_Days(jsii.Number(15)),\n})","version":"1"},"$":{"source":"import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const fn: lambda.Function;\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.RotationScheduleOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-secretsmanager.RotationScheduleOptions","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const fn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":3,"75":14,"104":1,"130":1,"153":1,"169":1,"193":1,"194":3,"196":2,"197":1,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b57caccd8fe16f94174202d1da4e8ab65e8c4ddd817888343bab2a13bc0f4805"},"54314c6b515a261f1ce93bf40016746cbc445a5b1249d7a1a093cfcd21e31776":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_lambda as lambda_\nimport aws_cdk.aws_secretsmanager as secretsmanager\nimport aws_cdk.core as cdk\n\n# function_: lambda.Function\n# hosted_rotation: secretsmanager.HostedRotation\n# secret: secretsmanager.Secret\n\nrotation_schedule_props = secretsmanager.RotationScheduleProps(\n    secret=secret,\n\n    # the properties below are optional\n    automatically_after=cdk.Duration.minutes(30),\n    hosted_rotation=hosted_rotation,\n    rotation_lambda=function_\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Lambda;\nusing Amazon.CDK.AWS.SecretsManager;\nusing Amazon.CDK;\n\nFunction function_;\nHostedRotation hostedRotation;\nSecret secret;\nvar rotationScheduleProps = new RotationScheduleProps {\n    Secret = secret,\n\n    // the properties below are optional\n    AutomaticallyAfter = Duration.Minutes(30),\n    HostedRotation = hostedRotation,\n    RotationLambda = function_\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.lambda.*;\nimport software.amazon.awscdk.services.secretsmanager.*;\nimport software.amazon.awscdk.core.*;\n\nFunction function_;\nHostedRotation hostedRotation;\nSecret secret;\n\nRotationScheduleProps rotationScheduleProps = RotationScheduleProps.builder()\n        .secret(secret)\n\n        // the properties below are optional\n        .automaticallyAfter(Duration.minutes(30))\n        .hostedRotation(hostedRotation)\n        .rotationLambda(function_)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar function_ function\nvar hostedRotation hostedRotation\nvar secret secret\n\nrotationScheduleProps := &RotationScheduleProps{\n\tSecret: secret,\n\n\t// the properties below are optional\n\tAutomaticallyAfter: cdk.Duration_Minutes(jsii.Number(30)),\n\tHostedRotation: hostedRotation,\n\tRotationLambda: function_,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\ndeclare const hostedRotation: secretsmanager.HostedRotation;\ndeclare const secret: secretsmanager.Secret;\nconst rotationScheduleProps: secretsmanager.RotationScheduleProps = {\n  secret: secret,\n\n  // the properties below are optional\n  automaticallyAfter: cdk.Duration.minutes(30),\n  hostedRotation: hostedRotation,\n  rotationLambda: function_,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.RotationScheduleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-secretsmanager.HostedRotation","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.RotationScheduleProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: lambda.Function;\ndeclare const hostedRotation: secretsmanager.HostedRotation;\ndeclare const secret: secretsmanager.Secret;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rotationScheduleProps: secretsmanager.RotationScheduleProps = {\n  secret: secret,\n\n  // the properties below are optional\n  automaticallyAfter: cdk.Duration.minutes(30),\n  hostedRotation: hostedRotation,\n  rotationLambda: function_,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":3,"75":25,"130":3,"153":4,"169":4,"193":1,"194":2,"196":1,"225":4,"242":4,"243":4,"254":3,"255":3,"256":3,"281":4,"290":1},"fqnsFingerprint":"2ffab4b001f84cc3f689ca2435d51793eb1e56a50b846c4b30bdf698f89f124f"},"148eddc92675ce2bb457994d8968c785dd806c5a478874b6e632b76dc7937876":{"translations":{"python":{"source":"# Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(access_key.secret_access_key.to_string())\nsecretsmanager.Secret(self, \"Secret\",\n    secret_string_beta1=secret_value\n)","version":"2"},"csharp":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nvar user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(accessKey.SecretAccessKey.ToString());\nnew Secret(this, \"Secret\", new SecretProps {\n    SecretStringBeta1 = secretValue\n});","version":"1"},"java":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nUser user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nSecret.Builder.create(this, \"Secret\")\n        .secretStringBeta1(secretValue)\n        .build();","version":"1"},"go":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(accessKey.SecretAccessKey.ToString())\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tSecretStringBeta1: secretValue,\n})","version":"1"},"$":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.Secret"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.Intrinsic#toString","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":18,"104":3,"193":2,"194":7,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1,"282":1},"fqnsFingerprint":"29e1126638fc32b5acc17e92e9911afde7dddfc6dc9556daccc72357bc607ad5"},"b783b88e49556ecee99cbe7b48ccfbc7d677f4c5eef4f12d47824a8e8dd98a9f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\nsecret_attachment_target_props = secretsmanager.SecretAttachmentTargetProps(\n    target_id=\"targetId\",\n    target_type=secretsmanager.AttachmentTargetType.INSTANCE\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar secretAttachmentTargetProps = new SecretAttachmentTargetProps {\n    TargetId = \"targetId\",\n    TargetType = AttachmentTargetType.INSTANCE\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecretAttachmentTargetProps secretAttachmentTargetProps = SecretAttachmentTargetProps.builder()\n        .targetId(\"targetId\")\n        .targetType(AttachmentTargetType.INSTANCE)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nsecretAttachmentTargetProps := &SecretAttachmentTargetProps{\n\tTargetId: jsii.String(\"targetId\"),\n\tTargetType: secretsmanager.AttachmentTargetType_INSTANCE,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst secretAttachmentTargetProps: secretsmanager.SecretAttachmentTargetProps = {\n  targetId: 'targetId',\n  targetType: secretsmanager.AttachmentTargetType.INSTANCE,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.AttachmentTargetType","@aws-cdk/aws-secretsmanager.AttachmentTargetType#INSTANCE","@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst secretAttachmentTargetProps: secretsmanager.SecretAttachmentTargetProps = {\n  targetId: 'targetId',\n  targetType: secretsmanager.AttachmentTargetType.INSTANCE,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"153":1,"169":1,"193":1,"194":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"6307d7a7b29149dee9edee7b129b99383f44c012f7b0982728eb80e96c0c95a7"},"4633381698d20d963c3a43b704e4311e0eec2b2d8e71af6110b03450c5f4cbeb":{"translations":{"python":{"source":"# encryption_key: kms.Key\n\nsecret = secretsmanager.Secret.from_secret_attributes(self, \"ImportedSecret\",\n    secret_arn=\"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\",\n    # If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n    encryption_key=encryption_key\n)","version":"2"},"csharp":{"source":"Key encryptionKey;\n\nvar secret = Secret.FromSecretAttributes(this, \"ImportedSecret\", new SecretAttributes {\n    SecretArn = \"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\",\n    // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n    EncryptionKey = encryptionKey\n});","version":"1"},"java":{"source":"Key encryptionKey;\n\nISecret secret = Secret.fromSecretAttributes(this, \"ImportedSecret\", SecretAttributes.builder()\n        .secretArn(\"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\")\n        // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n        .encryptionKey(encryptionKey)\n        .build());","version":"1"},"go":{"source":"var encryptionKey key\n\nsecret := secretsmanager.Secret_FromSecretAttributes(this, jsii.String(\"ImportedSecret\"), &SecretAttributes{\n\tSecretArn: jsii.String(\"arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>\"),\n\t// If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n\tEncryptionKey: EncryptionKey,\n})","version":"1"},"$":{"source":"declare const encryptionKey: kms.Key;\nconst secret = secretsmanager.Secret.fromSecretAttributes(this, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-kms.IKey","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.Secret#fromSecretAttributes","@aws-cdk/aws-secretsmanager.SecretAttributes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const encryptionKey: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst secret = secretsmanager.Secret.fromSecretAttributes(this, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":9,"104":1,"130":1,"153":1,"169":1,"193":1,"194":2,"196":1,"225":2,"242":2,"243":2,"281":1,"282":1,"290":1},"fqnsFingerprint":"42c83a4a106f28a2e253913a45991862c329427092dcb2e2c0be620f3a6c884a"},"93441c6614a8267a61271063593895cf692eaaf08a8372af49ec736fe74270ef":{"translations":{"python":{"source":"# Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(access_key.secret_access_key.to_string())\nsecretsmanager.Secret(self, \"Secret\",\n    secret_string_beta1=secret_value\n)","version":"2"},"csharp":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nvar user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(accessKey.SecretAccessKey.ToString());\nnew Secret(this, \"Secret\", new SecretProps {\n    SecretStringBeta1 = secretValue\n});","version":"1"},"java":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nUser user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nSecret.Builder.create(this, \"Secret\")\n        .secretStringBeta1(secretValue)\n        .build();","version":"1"},"go":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(accessKey.SecretAccessKey.ToString())\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tSecretStringBeta1: secretValue,\n})","version":"1"},"$":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.Intrinsic#toString","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":18,"104":3,"193":2,"194":7,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1,"282":1},"fqnsFingerprint":"29e1126638fc32b5acc17e92e9911afde7dddfc6dc9556daccc72357bc607ad5"},"7e816a0304d745aa5feff118f9a3fe125c5fb2bca87b96c69720b57e22e6a33c":{"translations":{"python":{"source":"# my_secret: secretsmanager.Secret\n# my_database: ec2.IConnectable\n# my_vpc: ec2.Vpc\n\n\nsecretsmanager.SecretRotation(self, \"SecretRotation\",\n    application=secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  # MySQL single user scheme\n    secret=my_secret,\n    target=my_database,  # a Connectable\n    vpc=my_vpc,  # The VPC where the secret rotation application will be deployed\n    exclude_characters=\" %+:;{}\"\n)","version":"2"},"csharp":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nnew SecretRotation(this, \"SecretRotation\", new SecretRotationProps {\n    Application = SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  // MySQL single user scheme\n    Secret = mySecret,\n    Target = myDatabase,  // a Connectable\n    Vpc = myVpc,  // The VPC where the secret rotation application will be deployed\n    ExcludeCharacters = \" %+:;{}\"\n});","version":"1"},"java":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nSecretRotation.Builder.create(this, \"SecretRotation\")\n        .application(SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER) // MySQL single user scheme\n        .secret(mySecret)\n        .target(myDatabase) // a Connectable\n        .vpc(myVpc) // The VPC where the secret rotation application will be deployed\n        .excludeCharacters(\" %+:;{}\")\n        .build();","version":"1"},"go":{"source":"var mySecret secret\nvar myDatabase iConnectable\nvar myVpc vpc\n\n\nsecretsmanager.NewSecretRotation(this, jsii.String(\"SecretRotation\"), &SecretRotationProps{\n\tApplication: secretsmanager.SecretRotationApplication_MYSQL_ROTATION_SINGLE_USER(),\n\t // MySQL single user scheme\n\tSecret: mySecret,\n\tTarget: myDatabase,\n\t // a Connectable\n\tVpc: myVpc,\n\t // The VPC where the secret rotation application will be deployed\n\tExcludeCharacters: jsii.String(\" %+:;{}\"),\n})","version":"1"},"$":{"source":"declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretRotation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.SecretRotation","@aws-cdk/aws-secretsmanager.SecretRotationApplication","@aws-cdk/aws-secretsmanager.SecretRotationApplication#MYSQL_ROTATION_SINGLE_USER","@aws-cdk/aws-secretsmanager.SecretRotationProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":22,"104":1,"130":3,"153":3,"169":3,"193":1,"194":3,"197":1,"225":3,"226":1,"242":3,"243":3,"281":5,"290":1},"fqnsFingerprint":"d251a12e6c3f80854b9fc42dc4fcfc628778e4a88a5783532669a1428e85db55"},"bb6162f4a3fc21dacbe557ed00133efb9aeca2ed3cc5703defd85068bd9deee8":{"translations":{"python":{"source":"# my_secret: secretsmanager.Secret\n# my_database: ec2.IConnectable\n# my_vpc: ec2.Vpc\n\n\nsecretsmanager.SecretRotation(self, \"SecretRotation\",\n    application=secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  # MySQL single user scheme\n    secret=my_secret,\n    target=my_database,  # a Connectable\n    vpc=my_vpc,  # The VPC where the secret rotation application will be deployed\n    exclude_characters=\" %+:;{}\"\n)","version":"2"},"csharp":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nnew SecretRotation(this, \"SecretRotation\", new SecretRotationProps {\n    Application = SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  // MySQL single user scheme\n    Secret = mySecret,\n    Target = myDatabase,  // a Connectable\n    Vpc = myVpc,  // The VPC where the secret rotation application will be deployed\n    ExcludeCharacters = \" %+:;{}\"\n});","version":"1"},"java":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nSecretRotation.Builder.create(this, \"SecretRotation\")\n        .application(SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER) // MySQL single user scheme\n        .secret(mySecret)\n        .target(myDatabase) // a Connectable\n        .vpc(myVpc) // The VPC where the secret rotation application will be deployed\n        .excludeCharacters(\" %+:;{}\")\n        .build();","version":"1"},"go":{"source":"var mySecret secret\nvar myDatabase iConnectable\nvar myVpc vpc\n\n\nsecretsmanager.NewSecretRotation(this, jsii.String(\"SecretRotation\"), &SecretRotationProps{\n\tApplication: secretsmanager.SecretRotationApplication_MYSQL_ROTATION_SINGLE_USER(),\n\t // MySQL single user scheme\n\tSecret: mySecret,\n\tTarget: myDatabase,\n\t // a Connectable\n\tVpc: myVpc,\n\t // The VPC where the secret rotation application will be deployed\n\tExcludeCharacters: jsii.String(\" %+:;{}\"),\n})","version":"1"},"$":{"source":"declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretRotationApplication"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.SecretRotation","@aws-cdk/aws-secretsmanager.SecretRotationApplication","@aws-cdk/aws-secretsmanager.SecretRotationApplication#MYSQL_ROTATION_SINGLE_USER","@aws-cdk/aws-secretsmanager.SecretRotationProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":22,"104":1,"130":3,"153":3,"169":3,"193":1,"194":3,"197":1,"225":3,"226":1,"242":3,"243":3,"281":5,"290":1},"fqnsFingerprint":"d251a12e6c3f80854b9fc42dc4fcfc628778e4a88a5783532669a1428e85db55"},"b9091ccb98fb4f9f0dd69f864d65950ab09037e194e01369aa46c5460b2cbda7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\nsecret_rotation_application_options = secretsmanager.SecretRotationApplicationOptions(\n    is_multi_user=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nvar secretRotationApplicationOptions = new SecretRotationApplicationOptions {\n    IsMultiUser = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecretRotationApplicationOptions secretRotationApplicationOptions = SecretRotationApplicationOptions.builder()\n        .isMultiUser(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nsecretRotationApplicationOptions := &SecretRotationApplicationOptions{\n\tIsMultiUser: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nconst secretRotationApplicationOptions: secretsmanager.SecretRotationApplicationOptions = {\n  isMultiUser: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst secretRotationApplicationOptions: secretsmanager.SecretRotationApplicationOptions = {\n  isMultiUser: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":5,"91":1,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"f60f8b2779826e805608b6cbc00e313393bc814c3ae7dfcfa0cf6eacb93c1400"},"401d2b24e6eaa3a93562a4da280ba076b46607a68a47371f22e9ad00625b2d64":{"translations":{"python":{"source":"# my_secret: secretsmanager.Secret\n# my_database: ec2.IConnectable\n# my_vpc: ec2.Vpc\n\n\nsecretsmanager.SecretRotation(self, \"SecretRotation\",\n    application=secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  # MySQL single user scheme\n    secret=my_secret,\n    target=my_database,  # a Connectable\n    vpc=my_vpc,  # The VPC where the secret rotation application will be deployed\n    exclude_characters=\" %+:;{}\"\n)","version":"2"},"csharp":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nnew SecretRotation(this, \"SecretRotation\", new SecretRotationProps {\n    Application = SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER,  // MySQL single user scheme\n    Secret = mySecret,\n    Target = myDatabase,  // a Connectable\n    Vpc = myVpc,  // The VPC where the secret rotation application will be deployed\n    ExcludeCharacters = \" %+:;{}\"\n});","version":"1"},"java":{"source":"Secret mySecret;\nIConnectable myDatabase;\nVpc myVpc;\n\n\nSecretRotation.Builder.create(this, \"SecretRotation\")\n        .application(SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER) // MySQL single user scheme\n        .secret(mySecret)\n        .target(myDatabase) // a Connectable\n        .vpc(myVpc) // The VPC where the secret rotation application will be deployed\n        .excludeCharacters(\" %+:;{}\")\n        .build();","version":"1"},"go":{"source":"var mySecret secret\nvar myDatabase iConnectable\nvar myVpc vpc\n\n\nsecretsmanager.NewSecretRotation(this, jsii.String(\"SecretRotation\"), &SecretRotationProps{\n\tApplication: secretsmanager.SecretRotationApplication_MYSQL_ROTATION_SINGLE_USER(),\n\t // MySQL single user scheme\n\tSecret: mySecret,\n\tTarget: myDatabase,\n\t // a Connectable\n\tVpc: myVpc,\n\t // The VPC where the secret rotation application will be deployed\n\tExcludeCharacters: jsii.String(\" %+:;{}\"),\n})","version":"1"},"$":{"source":"declare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretRotationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.SecretRotation","@aws-cdk/aws-secretsmanager.SecretRotationApplication","@aws-cdk/aws-secretsmanager.SecretRotationApplication#MYSQL_ROTATION_SINGLE_USER","@aws-cdk/aws-secretsmanager.SecretRotationProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const mySecret: secretsmanager.Secret;\ndeclare const myDatabase: ec2.IConnectable;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew secretsmanager.SecretRotation(this, 'SecretRotation', {\n  application: secretsmanager.SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n  excludeCharacters: ' %+:;{}', // characters to never use when generating new passwords;\n                                // by default, no characters are excluded,\n                                // which might cause problems with some services, like DMS\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":22,"104":1,"130":3,"153":3,"169":3,"193":1,"194":3,"197":1,"225":3,"226":1,"242":3,"243":3,"281":5,"290":1},"fqnsFingerprint":"d251a12e6c3f80854b9fc42dc4fcfc628778e4a88a5783532669a1428e85db55"},"4a41715b51d0ac55eb30ce4200dc4c671a68ebdd05841caf8bd962127023edf5":{"translations":{"python":{"source":"# Default secret\nsecret = secretsmanager.Secret(self, \"Secret\")\n# Using the default secret\niam.User(self, \"User\",\n    password=secret.secret_value\n)\n# Templated secret\ntemplated_secret = secretsmanager.Secret(self, \"TemplatedSecret\",\n    generate_secret_string=secretsmanager.SecretStringGenerator(\n        secret_string_template=JSON.stringify({\"username\": \"user\"}),\n        generate_string_key=\"password\"\n    )\n)\n# Using the templated secret\niam.User(self, \"OtherUser\",\n    user_name=templated_secret.secret_value_from_json(\"username\").to_string(),\n    password=templated_secret.secret_value_from_json(\"password\")\n)","version":"2"},"csharp":{"source":"// Default secret\nvar secret = new Secret(this, \"Secret\");\n// Using the default secret\n// Using the default secret\nnew User(this, \"User\", new UserProps {\n    Password = secret.SecretValue\n});\n// Templated secret\nvar templatedSecret = new Secret(this, \"TemplatedSecret\", new SecretProps {\n    GenerateSecretString = new SecretStringGenerator {\n        SecretStringTemplate = JSON.Stringify(new Dictionary<string, string> { { \"username\", \"user\" } }),\n        GenerateStringKey = \"password\"\n    }\n});\n// Using the templated secret\n// Using the templated secret\nnew User(this, \"OtherUser\", new UserProps {\n    UserName = templatedSecret.SecretValueFromJson(\"username\").ToString(),\n    Password = templatedSecret.SecretValueFromJson(\"password\")\n});","version":"1"},"java":{"source":"// Default secret\nSecret secret = new Secret(this, \"Secret\");\n// Using the default secret\n// Using the default secret\nUser.Builder.create(this, \"User\")\n        .password(secret.getSecretValue())\n        .build();\n// Templated secret\nSecret templatedSecret = Secret.Builder.create(this, \"TemplatedSecret\")\n        .generateSecretString(SecretStringGenerator.builder()\n                .secretStringTemplate(JSON.stringify(Map.of(\"username\", \"user\")))\n                .generateStringKey(\"password\")\n                .build())\n        .build();\n// Using the templated secret\n// Using the templated secret\nUser.Builder.create(this, \"OtherUser\")\n        .userName(templatedSecret.secretValueFromJson(\"username\").toString())\n        .password(templatedSecret.secretValueFromJson(\"password\"))\n        .build();","version":"1"},"go":{"source":"// Default secret\nsecret := secretsmanager.NewSecret(this, jsii.String(\"Secret\"))\n// Using the default secret\n// Using the default secret\niam.NewUser(this, jsii.String(\"User\"), &UserProps{\n\tPassword: secret.secretValue,\n})\n// Templated secret\ntemplatedSecret := secretsmanager.NewSecret(this, jsii.String(\"TemplatedSecret\"), &SecretProps{\n\tGenerateSecretString: &SecretStringGenerator{\n\t\tSecretStringTemplate: jSON.stringify(map[string]*string{\n\t\t\t\"username\": jsii.String(\"user\"),\n\t\t}),\n\t\tGenerateStringKey: jsii.String(\"password\"),\n\t},\n})\n// Using the templated secret\n// Using the templated secret\niam.NewUser(this, jsii.String(\"OtherUser\"), &UserProps{\n\tUserName: templatedSecret.secretValueFromJson(jsii.String(\"username\")).ToString(),\n\tPassword: templatedSecret.secretValueFromJson(jsii.String(\"password\")),\n})","version":"1"},"$":{"source":"// Default secret\nconst secret = new secretsmanager.Secret(this, 'Secret');\n// Using the default secret\nnew iam.User(this, 'User', {\n  password: secret.secretValue,\n});\n// Templated secret\nconst templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n  generateSecretString: {\n    secretStringTemplate: JSON.stringify({ username: 'user' }),\n    generateStringKey: 'password',\n  },\n});\n// Using the templated secret\nnew iam.User(this, 'OtherUser', {\n  userName: templatedSecret.secretValueFromJson('username').toString(),\n  password: templatedSecret.secretValueFromJson('password'),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretStringGenerator"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.UserProps","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringGenerator","@aws-cdk/core.Intrinsic#toString","@aws-cdk/core.SecretValue","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Default secret\nconst secret = new secretsmanager.Secret(this, 'Secret');\n// Using the default secret\nnew iam.User(this, 'User', {\n  password: secret.secretValue,\n});\n// Templated secret\nconst templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n  generateSecretString: {\n    secretStringTemplate: JSON.stringify({ username: 'user' }),\n    generateStringKey: 'password',\n  },\n});\n// Using the templated secret\nnew iam.User(this, 'OtherUser', {\n  userName: templatedSecret.secretValueFromJson('username').toString(),\n  password: templatedSecret.secretValueFromJson('password'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":8,"75":26,"104":4,"193":5,"194":9,"196":4,"197":4,"225":2,"226":2,"242":2,"243":2,"281":7},"fqnsFingerprint":"21f998647d490a2f9d36c6661da07fd6767551697761137f413e8bd66b77ca90"},"184b66d7cfa26ea56a2ba988763ead4faab0bababfdf0d64b6a5b24cb14b5f97":{"translations":{"python":{"source":"# Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(access_key.secret_access_key.to_string())\nsecretsmanager.Secret(self, \"Secret\",\n    secret_string_beta1=secret_value\n)","version":"2"},"csharp":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nvar user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(accessKey.SecretAccessKey.ToString());\nnew Secret(this, \"Secret\", new SecretProps {\n    SecretStringBeta1 = secretValue\n});","version":"1"},"java":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nUser user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nSecret.Builder.create(this, \"Secret\")\n        .secretStringBeta1(secretValue)\n        .build();","version":"1"},"go":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(accessKey.SecretAccessKey.ToString())\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tSecretStringBeta1: secretValue,\n})","version":"1"},"$":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretStringValueBeta1"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.Intrinsic#toString","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":18,"104":3,"193":2,"194":7,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1,"282":1},"fqnsFingerprint":"29e1126638fc32b5acc17e92e9911afde7dddfc6dc9556daccc72357bc607ad5"},"9ae8f44644cc084c5ba1b0144aab26e1a8c9343d0973a2fc68111c4d0c47bd28":{"translations":{"python":{"source":"# Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(access_key.secret_access_key.to_string())\nsecretsmanager.Secret(self, \"Secret\",\n    secret_string_beta1=secret_value\n)","version":"2"},"csharp":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nvar user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(accessKey.SecretAccessKey.ToString());\nnew Secret(this, \"Secret\", new SecretProps {\n    SecretStringBeta1 = secretValue\n});","version":"1"},"java":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nUser user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nSecret.Builder.create(this, \"Secret\")\n        .secretStringBeta1(secretValue)\n        .build();","version":"1"},"go":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nuser := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(accessKey.SecretAccessKey.ToString())\nsecretsmanager.NewSecret(this, jsii.String(\"Secret\"), &SecretProps{\n\tSecretStringBeta1: secretValue,\n})","version":"1"},"$":{"source":"// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});","version":"0"}},"location":{"api":{"api":"member","fqn":"@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","memberName":"fromToken"},"field":{"field":"markdown","line":7}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-secretsmanager.Secret","@aws-cdk/aws-secretsmanager.SecretProps","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.Intrinsic#toString","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Creates a new IAM user, access and secret keys, and stores the secret access key in a Secret.\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(accessKey.secretAccessKey.toString());\nnew secretsmanager.Secret(this, 'Secret', {\n   secretStringBeta1: secretValue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":18,"104":3,"193":2,"194":7,"196":2,"197":3,"225":3,"226":1,"242":3,"243":3,"281":1,"282":1},"fqnsFingerprint":"29e1126638fc32b5acc17e92e9911afde7dddfc6dc9556daccc72357bc607ad5"},"4ba9ee134a99d46fb18f30c97c75fc4c7622c02f6b60433ef593f0aa2572a7f1":{"translations":{"python":{"source":"user = iam.User(self, \"User\")\naccess_key = iam.AccessKey(self, \"AccessKey\", user=user)\nsecret_value = secretsmanager.SecretStringValueBeta1.from_token(JSON.stringify({\n    \"username\": user.user_name,\n    \"database\": \"foo\",\n    \"password\": access_key.secret_access_key.unsafe_unwrap()\n}))","version":"2"},"csharp":{"source":"var user = new User(this, \"User\");\nvar accessKey = new AccessKey(this, \"AccessKey\", new AccessKeyProps { User = user });\nvar secretValue = SecretStringValueBeta1.FromToken(JSON.Stringify(new Dictionary<string, object> {\n    { \"username\", user.UserName },\n    { \"database\", \"foo\" },\n    { \"password\", accessKey.SecretAccessKey.UnsafeUnwrap() }\n}));","version":"1"},"java":{"source":"User user = new User(this, \"User\");\nAccessKey accessKey = AccessKey.Builder.create(this, \"AccessKey\").user(user).build();\nSecretStringValueBeta1 secretValue = SecretStringValueBeta1.fromToken(JSON.stringify(Map.of(\n        \"username\", user.getUserName(),\n        \"database\", \"foo\",\n        \"password\", accessKey.secretAccessKey.unsafeUnwrap())));","version":"1"},"go":{"source":"user := iam.NewUser(this, jsii.String(\"User\"))\naccessKey := iam.NewAccessKey(this, jsii.String(\"AccessKey\"), &AccessKeyProps{\n\tUser: User,\n})\nsecretValue := secretsmanager.SecretStringValueBeta1_FromToken(jSON.stringify(map[string]interface{}{\n\t\"username\": user.userName,\n\t\"database\": jsii.String(\"foo\"),\n\t\"password\": accessKey.secretAccessKey.unsafeUnwrap(),\n}))","version":"1"},"$":{"source":"const user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(JSON.stringify({\n   username: user.userName,\n   database: 'foo',\n   password: accessKey.secretAccessKey.unsafeUnwrap(),\n}));","version":"0"}},"location":{"api":{"api":"member","fqn":"@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","memberName":"fromToken"},"field":{"field":"markdown","line":19}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.AccessKey","@aws-cdk/aws-iam.AccessKey#secretAccessKey","@aws-cdk/aws-iam.AccessKeyProps","@aws-cdk/aws-iam.IUser","@aws-cdk/aws-iam.User","@aws-cdk/aws-iam.User#userName","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1","@aws-cdk/aws-secretsmanager.SecretStringValueBeta1#fromToken","@aws-cdk/core.SecretValue#unsafeUnwrap","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst user = new iam.User(this, 'User');\nconst accessKey = new iam.AccessKey(this, 'AccessKey', { user });\nconst secretValue = secretsmanager.SecretStringValueBeta1.fromToken(JSON.stringify({\n   username: user.userName,\n   database: 'foo',\n   password: accessKey.secretAccessKey.unsafeUnwrap(),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":3,"75":21,"104":2,"193":2,"194":8,"196":3,"197":2,"225":3,"242":3,"243":3,"281":3,"282":1},"fqnsFingerprint":"8f2da29119febfd40724746f11a39d01f658e1e3b7cdb176ee2140347e9c6bf6"},"8c5907685f632e4a85f364c7112bfe153acba8a85003644350d36e038ddba4d3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# secret: secretsmanager.Secret\n# secret_attachment_target: secretsmanager.ISecretAttachmentTarget\n\nsecret_target_attachment = secretsmanager.SecretTargetAttachment(self, \"MySecretTargetAttachment\",\n    secret=secret,\n    target=secret_attachment_target\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nSecret secret;\nISecretAttachmentTarget secretAttachmentTarget;\n\nvar secretTargetAttachment = new SecretTargetAttachment(this, \"MySecretTargetAttachment\", new SecretTargetAttachmentProps {\n    Secret = secret,\n    Target = secretAttachmentTarget\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecret secret;\nISecretAttachmentTarget secretAttachmentTarget;\n\nSecretTargetAttachment secretTargetAttachment = SecretTargetAttachment.Builder.create(this, \"MySecretTargetAttachment\")\n        .secret(secret)\n        .target(secretAttachmentTarget)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar secret secret\nvar secretAttachmentTarget iSecretAttachmentTarget\n\nsecretTargetAttachment := secretsmanager.NewSecretTargetAttachment(this, jsii.String(\"MySecretTargetAttachment\"), &SecretTargetAttachmentProps{\n\tSecret: secret,\n\tTarget: secretAttachmentTarget,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\nconst secretTargetAttachment = new secretsmanager.SecretTargetAttachment(this, 'MySecretTargetAttachment', {\n  secret: secret,\n  target: secretAttachmentTarget,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretTargetAttachment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget","@aws-cdk/aws-secretsmanager.SecretTargetAttachment","@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst secretTargetAttachment = new secretsmanager.SecretTargetAttachment(this, 'MySecretTargetAttachment', {\n  secret: secret,\n  target: secretAttachmentTarget,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":14,"104":1,"130":2,"153":2,"169":2,"193":1,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"be02e3005f0497f53b95f664705f64f3cd935894cd4642cbd0e0239fcdddfa34"},"a0fedf00c9340b31a058c76f9877dcad2dfb588e40f397f5a310c32acb767fdc":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_secretsmanager as secretsmanager\n\n# secret: secretsmanager.Secret\n# secret_attachment_target: secretsmanager.ISecretAttachmentTarget\n\nsecret_target_attachment_props = secretsmanager.SecretTargetAttachmentProps(\n    secret=secret,\n    target=secret_attachment_target\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SecretsManager;\n\nSecret secret;\nISecretAttachmentTarget secretAttachmentTarget;\n\nvar secretTargetAttachmentProps = new SecretTargetAttachmentProps {\n    Secret = secret,\n    Target = secretAttachmentTarget\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.secretsmanager.*;\n\nSecret secret;\nISecretAttachmentTarget secretAttachmentTarget;\n\nSecretTargetAttachmentProps secretTargetAttachmentProps = SecretTargetAttachmentProps.builder()\n        .secret(secret)\n        .target(secretAttachmentTarget)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport secretsmanager \"github.com/aws-samples/dummy/awscdkawssecretsmanager\"\n\nvar secret secret\nvar secretAttachmentTarget iSecretAttachmentTarget\n\nsecretTargetAttachmentProps := &SecretTargetAttachmentProps{\n\tSecret: secret,\n\tTarget: secretAttachmentTarget,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\nconst secretTargetAttachmentProps: secretsmanager.SecretTargetAttachmentProps = {\n  secret: secret,\n  target: secretAttachmentTarget,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-secretsmanager.ISecret","@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget","@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n\ndeclare const secret: secretsmanager.Secret;\ndeclare const secretAttachmentTarget: secretsmanager.ISecretAttachmentTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst secretTargetAttachmentProps: secretsmanager.SecretTargetAttachmentProps = {\n  secret: secret,\n  target: secretAttachmentTarget,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":14,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"c839109984fc7950e5b1fc31406516905237682c374209b5ea64cd7414b6d433"},"e6abeb34d5571482b8325b38210bb158c9c817cd8bd42b9a986ca36f4d1aac1a":{"translations":{"python":{"source":"# my_vpc: ec2.Vpc\n# db_connections: ec2.Connections\n# secret: secretsmanager.Secret\n\n\nmy_hosted_rotation = secretsmanager.HostedRotation.mysql_single_user(vpc=my_vpc)\nsecret.add_rotation_schedule(\"RotationSchedule\", hosted_rotation=my_hosted_rotation)\ndb_connections.allow_default_port_from(my_hosted_rotation)","version":"2"},"csharp":{"source":"Vpc myVpc;\nConnections dbConnections;\nSecret secret;\n\n\nvar myHostedRotation = HostedRotation.MysqlSingleUser(new SingleUserHostedRotationOptions { Vpc = myVpc });\nsecret.AddRotationSchedule(\"RotationSchedule\", new RotationScheduleOptions { HostedRotation = myHostedRotation });\ndbConnections.AllowDefaultPortFrom(myHostedRotation);","version":"1"},"java":{"source":"Vpc myVpc;\nConnections dbConnections;\nSecret secret;\n\n\nHostedRotation myHostedRotation = HostedRotation.mysqlSingleUser(SingleUserHostedRotationOptions.builder().vpc(myVpc).build());\nsecret.addRotationSchedule(\"RotationSchedule\", RotationScheduleOptions.builder().hostedRotation(myHostedRotation).build());\ndbConnections.allowDefaultPortFrom(myHostedRotation);","version":"1"},"go":{"source":"var myVpc vpc\nvar dbConnections connections\nvar secret secret\n\n\nmyHostedRotation := secretsmanager.HostedRotation_MysqlSingleUser(&SingleUserHostedRotationOptions{\n\tVpc: myVpc,\n})\nsecret.addRotationSchedule(jsii.String(\"RotationSchedule\"), &RotationScheduleOptions{\n\tHostedRotation: myHostedRotation,\n})\ndbConnections.AllowDefaultPortFrom(myHostedRotation)","version":"1"},"$":{"source":"declare const myVpc: ec2.Vpc;\ndeclare const dbConnections: ec2.Connections;\ndeclare const secret: secretsmanager.Secret;\n\nconst myHostedRotation = secretsmanager.HostedRotation.mysqlSingleUser({ vpc: myVpc });\nsecret.addRotationSchedule('RotationSchedule', { hostedRotation: myHostedRotation });\ndbConnections.allowDefaultPortFrom(myHostedRotation);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.Connections#allowDefaultPortFrom","@aws-cdk/aws-ec2.IConnectable","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-secretsmanager.HostedRotation","@aws-cdk/aws-secretsmanager.HostedRotation#mysqlSingleUser","@aws-cdk/aws-secretsmanager.RotationScheduleOptions","@aws-cdk/aws-secretsmanager.SingleUserHostedRotationOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myVpc: ec2.Vpc;\ndeclare const dbConnections: ec2.Connections;\ndeclare const secret: secretsmanager.Secret;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';  \nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst myHostedRotation = secretsmanager.HostedRotation.mysqlSingleUser({ vpc: myVpc });\nsecret.addRotationSchedule('RotationSchedule', { hostedRotation: myHostedRotation });\ndbConnections.allowDefaultPortFrom(myHostedRotation);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":1,"75":22,"130":3,"153":3,"169":3,"193":2,"194":4,"196":3,"225":4,"226":2,"242":4,"243":4,"281":2,"290":1},"fqnsFingerprint":"46d33bb68a350d89702604b1eb9034190f63d16e20637a322f71255338e7d44d"}}}