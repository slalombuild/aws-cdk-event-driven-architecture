{"version":"2","toolVersion":"1.80.0","snippets":{"63aae62ebac96bae4f87ee229f614a93944d2d1451b1656e00dfa9b3fa07a637":{"translations":{"python":{"source":"# on_event: lambda.Function\n# is_complete: lambda.Function\n# my_role: iam.Role\n\n\nmy_provider = cr.Provider(self, \"MyProvider\",\n    on_event_handler=on_event,\n    is_complete_handler=is_complete,  # optional async \"waiter\"\n    log_retention=logs.RetentionDays.ONE_DAY,  # default is INFINITE\n    role=my_role\n)\n\nCustomResource(self, \"Resource1\", service_token=my_provider.service_token)\nCustomResource(self, \"Resource2\", service_token=my_provider.service_token)","version":"2"},"csharp":{"source":"Function onEvent;\nFunction isComplete;\nRole myRole;\n\n\nvar myProvider = new Provider(this, \"MyProvider\", new ProviderProps {\n    OnEventHandler = onEvent,\n    IsCompleteHandler = isComplete,  // optional async \"waiter\"\n    LogRetention = RetentionDays.ONE_DAY,  // default is INFINITE\n    Role = myRole\n});\n\nnew CustomResource(this, \"Resource1\", new CustomResourceProps { ServiceToken = myProvider.ServiceToken });\nnew CustomResource(this, \"Resource2\", new CustomResourceProps { ServiceToken = myProvider.ServiceToken });","version":"1"},"java":{"source":"Function onEvent;\nFunction isComplete;\nRole myRole;\n\n\nProvider myProvider = Provider.Builder.create(this, \"MyProvider\")\n        .onEventHandler(onEvent)\n        .isCompleteHandler(isComplete) // optional async \"waiter\"\n        .logRetention(RetentionDays.ONE_DAY) // default is INFINITE\n        .role(myRole)\n        .build();\n\nCustomResource.Builder.create(this, \"Resource1\").serviceToken(myProvider.getServiceToken()).build();\nCustomResource.Builder.create(this, \"Resource2\").serviceToken(myProvider.getServiceToken()).build();","version":"1"},"go":{"source":"var onEvent function\nvar isComplete function\nvar myRole role\n\n\nmyProvider := cr.NewProvider(this, jsii.String(\"MyProvider\"), &ProviderProps{\n\tOnEventHandler: onEvent,\n\tIsCompleteHandler: isComplete,\n\t // optional async \"waiter\"\n\tLogRetention: logs.RetentionDays_ONE_DAY,\n\t // default is INFINITE\n\tRole: myRole,\n})\n\nawscdkcore.NewCustomResource(this, jsii.String(\"Resource1\"), &CustomResourceProps{\n\tServiceToken: myProvider.ServiceToken,\n})\nawscdkcore.NewCustomResource(this, jsii.String(\"Resource2\"), &CustomResourceProps{\n\tServiceToken: myProvider.*ServiceToken,\n})","version":"1"},"$":{"source":"declare const onEvent: lambda.Function;\ndeclare const isComplete: lambda.Function;\ndeclare const myRole: iam.Role;\n\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,        // optional async \"waiter\"\n  logRetention: logs.RetentionDays.ONE_DAY,   // default is INFINITE\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n});\n\nnew CustomResource(this, 'Resource1', { serviceToken: myProvider.serviceToken });\nnew CustomResource(this, 'Resource2', { serviceToken: myProvider.serviceToken });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":33}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#ONE_DAY","@aws-cdk/core.CustomResource","@aws-cdk/core.CustomResourceProps","@aws-cdk/custom-resources.Provider","@aws-cdk/custom-resources.Provider#serviceToken","@aws-cdk/custom-resources.ProviderProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const onEvent: lambda.Function;\ndeclare const isComplete: lambda.Function;\ndeclare const myRole: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,        // optional async \"waiter\"\n  logRetention: logs.RetentionDays.ONE_DAY,   // default is INFINITE\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n});\n\nnew CustomResource(this, 'Resource1', { serviceToken: myProvider.serviceToken });\nnew CustomResource(this, 'Resource2', { serviceToken: myProvider.serviceToken });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":30,"104":3,"130":3,"153":3,"169":3,"193":3,"194":5,"197":3,"225":4,"226":2,"242":4,"243":4,"281":6,"290":1},"fqnsFingerprint":"092ac4b8d7a24172d3b344c08aca684bc82e6cf69effa22260466e43106055bf"},"31dcaaa83fd6d119b5b291f6b40a316a641c95c90c573b8f565e6722f53829eb":{"translations":{"python":{"source":"lambda_.Function(self, \"OnEventHandler\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_inline(\"my code\"),\n    initial_policy=[\n        iam.PolicyStatement(actions=[\"s3:GetObject*\"], resources=[\"*\"])\n    ]\n)","version":"2"},"csharp":{"source":"new Function(this, \"OnEventHandler\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromInline(\"my code\"),\n    InitialPolicy = new [] {\n        new PolicyStatement(new PolicyStatementProps { Actions = new [] { \"s3:GetObject*\" }, Resources = new [] { \"*\" } }) }\n});","version":"1"},"java":{"source":"Function.Builder.create(this, \"OnEventHandler\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromInline(\"my code\"))\n        .initialPolicy(List.of(\n            PolicyStatement.Builder.create().actions(List.of(\"s3:GetObject*\")).resources(List.of(\"*\")).build()))\n        .build();","version":"1"},"go":{"source":"lambda.NewFunction(this, jsii.String(\"OnEventHandler\"), &FunctionProps{\n\tRuntime: lambda.Runtime_NODEJS_14_X(),\n\tHandler: jsii.String(\"index.handler\"),\n\tCode: lambda.Code_FromInline(jsii.String(\"my code\")),\n\tInitialPolicy: []policyStatement{\n\t\tiam.NewPolicyStatement(&PolicyStatementProps{\n\t\t\tActions: []*string{\n\t\t\t\tjsii.String(\"s3:GetObject*\"),\n\t\t\t},\n\t\t\tResources: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t},\n\t\t}),\n\t},\n})","version":"1"},"$":{"source":"new lambda.Function(this, 'OnEventHandler', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('my code'),\n  initialPolicy: [\n    new iam.PolicyStatement({ actions: [ 's3:GetObject*' ], resources: [ '*' ] }),\n  ],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":281}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.PolicyStatement","@aws-cdk/aws-iam.PolicyStatementProps","@aws-cdk/aws-lambda.Code","@aws-cdk/aws-lambda.Code#fromInline","@aws-cdk/aws-lambda.Function","@aws-cdk/aws-lambda.FunctionProps","@aws-cdk/aws-lambda.Runtime","@aws-cdk/aws-lambda.Runtime#NODEJS_14_X","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew lambda.Function(this, 'OnEventHandler', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('my code'),\n  initialPolicy: [\n    new iam.PolicyStatement({ actions: [ 's3:GetObject*' ], resources: [ '*' ] }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":16,"104":1,"192":3,"193":2,"194":6,"196":1,"197":2,"226":1,"281":6},"fqnsFingerprint":"433c57691cf18e264f4e75532e7b5866deb8e820ad31d700ac03e6b04a877fe5"},"de44dc4bd7e9eefebf4133946dd7b19962fd02e3196839ff0a73558afde8a9da":{"translations":{"python":{"source":"# on_event: lambda.Function\n# is_complete: lambda.Function\n# my_role: iam.Role\n\nmy_provider = cr.Provider(self, \"MyProvider\",\n    on_event_handler=on_event,\n    is_complete_handler=is_complete,\n    log_retention=logs.RetentionDays.ONE_DAY,\n    role=my_role,\n    provider_function_name=\"the-lambda-name\"\n)","version":"2"},"csharp":{"source":"Function onEvent;\nFunction isComplete;\nRole myRole;\n\nvar myProvider = new Provider(this, \"MyProvider\", new ProviderProps {\n    OnEventHandler = onEvent,\n    IsCompleteHandler = isComplete,\n    LogRetention = RetentionDays.ONE_DAY,\n    Role = myRole,\n    ProviderFunctionName = \"the-lambda-name\"\n});","version":"1"},"java":{"source":"Function onEvent;\nFunction isComplete;\nRole myRole;\n\nProvider myProvider = Provider.Builder.create(this, \"MyProvider\")\n        .onEventHandler(onEvent)\n        .isCompleteHandler(isComplete)\n        .logRetention(RetentionDays.ONE_DAY)\n        .role(myRole)\n        .providerFunctionName(\"the-lambda-name\")\n        .build();","version":"1"},"go":{"source":"var onEvent function\nvar isComplete function\nvar myRole role\n\nmyProvider := cr.NewProvider(this, jsii.String(\"MyProvider\"), &ProviderProps{\n\tOnEventHandler: onEvent,\n\tIsCompleteHandler: isComplete,\n\tLogRetention: logs.RetentionDays_ONE_DAY,\n\tRole: myRole,\n\tProviderFunctionName: jsii.String(\"the-lambda-name\"),\n})","version":"1"},"$":{"source":"declare const onEvent: lambda.Function;\ndeclare const isComplete: lambda.Function;\ndeclare const myRole: iam.Role;\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,\n  logRetention: logs.RetentionDays.ONE_DAY,\n  role: myRole,\n  providerFunctionName: 'the-lambda-name',   // Optional\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":371}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-lambda.IFunction","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#ONE_DAY","@aws-cdk/custom-resources.Provider","@aws-cdk/custom-resources.ProviderProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const onEvent: lambda.Function;\ndeclare const isComplete: lambda.Function;\ndeclare const myRole: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,\n  logRetention: logs.RetentionDays.ONE_DAY,\n  role: myRole,\n  providerFunctionName: 'the-lambda-name',   // Optional\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":23,"104":1,"130":3,"153":3,"169":3,"193":1,"194":3,"197":1,"225":4,"242":4,"243":4,"281":5,"290":1},"fqnsFingerprint":"2eb9790a81f2dfa971536fc6a324e12d8cbeca83df20d7c29430a161d083791e"},"bacf9734b9db8ff23d3da9069740e6b74f10ae144cfccac014a8c817f08640af":{"translations":{"python":{"source":"aws_custom1 = cr.AwsCustomResource(self, \"API1\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)\n\naws_custom2 = cr.AwsCustomResource(self, \"API2\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": aws_custom1.get_response_field(\"Items.0.text\")\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom1 = new AwsCustomResource(this, \"API1\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});\n\nvar awsCustom2 = new AwsCustomResource(this, \"API2\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", awsCustom1.GetResponseField(\"Items.0.text\") }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom1 = AwsCustomResource.Builder.create(this, \"API1\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();\n\nAwsCustomResource awsCustom2 = AwsCustomResource.Builder.create(this, \"API2\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", awsCustom1.getResponseField(\"Items.0.text\")))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom1 := cr.NewAwsCustomResource(this, jsii.String(\"API1\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})\n\nawsCustom2 := cr.NewAwsCustomResource(this, jsii.String(\"API2\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": awsCustom1.getResponseField(jsii.String(\"Items.0.text\")),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_*Of(jsii.String(\"...\")),\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_*FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom1 = new cr.AwsCustomResource(this, 'API1', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n\nconst awsCustom2 = new cr.AwsCustomResource(this, 'API2', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: awsCustom1.getResponseField('Items.0.text'),\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":436}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResource#getResponseField","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom1 = new cr.AwsCustomResource(this, 'API1', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n\nconst awsCustom2 = new cr.AwsCustomResource(this, 'API2', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: awsCustom1.getResponseField('Items.0.text'),\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":40,"104":2,"193":7,"194":15,"196":5,"197":2,"225":2,"242":2,"243":2,"281":14},"fqnsFingerprint":"89b632179eb21386c57d4eec4e20561f2d00499cc29cf998dbe117a0daf443bd"},"9cfc5fd3c89226d9157c30d4083d75cfd4eb6b49be116f0dfc2b065b67f9ffd0":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":467}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"8b72a97495f7225ddde9d0cb6ec5df8788fc10e93df516b9da92d3ba7e13850f":{"translations":{"python":{"source":"# my_role: iam.Role\n\ncr.AwsCustomResource(self, \"Customized\",\n    role=my_role,  # must be assumable by the `lambda.amazonaws.com` service principal\n    timeout=Duration.minutes(10),  # defaults to 2 minutes\n    log_retention=logs.RetentionDays.ONE_WEEK,  # defaults to never delete logs\n    function_name=\"my-custom-name\",  # defaults to a CloudFormation generated name\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"Role myRole;\n\nnew AwsCustomResource(this, \"Customized\", new AwsCustomResourceProps {\n    Role = myRole,  // must be assumable by the `lambda.amazonaws.com` service principal\n    Timeout = Duration.Minutes(10),  // defaults to 2 minutes\n    LogRetention = RetentionDays.ONE_WEEK,  // defaults to never delete logs\n    FunctionName = \"my-custom-name\",  // defaults to a CloudFormation generated name\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"Role myRole;\n\nAwsCustomResource.Builder.create(this, \"Customized\")\n        .role(myRole) // must be assumable by the `lambda.amazonaws.com` service principal\n        .timeout(Duration.minutes(10)) // defaults to 2 minutes\n        .logRetention(RetentionDays.ONE_WEEK) // defaults to never delete logs\n        .functionName(\"my-custom-name\") // defaults to a CloudFormation generated name\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"var myRole role\n\ncr.NewAwsCustomResource(this, jsii.String(\"Customized\"), &AwsCustomResourceProps{\n\tRole: myRole,\n\t // must be assumable by the `lambda.amazonaws.com` service principal\n\tTimeout: awscdkcore.Duration_Minutes(jsii.Number(10)),\n\t // defaults to 2 minutes\n\tLogRetention: logs.RetentionDays_ONE_WEEK,\n\t // defaults to never delete logs\n\tFunctionName: jsii.String(\"my-custom-name\"),\n\t // defaults to a CloudFormation generated name\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"declare const myRole: iam.Role;\nnew cr.AwsCustomResource(this, 'Customized', {\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n  timeout: Duration.minutes(10), // defaults to 2 minutes\n  logRetention: logs.RetentionDays.ONE_WEEK, // defaults to never delete logs\n  functionName: 'my-custom-name', // defaults to a CloudFormation generated name\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":509}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-logs.RetentionDays","@aws-cdk/aws-logs.RetentionDays#ONE_WEEK","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myRole: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cr.AwsCustomResource(this, 'Customized', {\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n  timeout: Duration.minutes(10), // defaults to 2 minutes\n  logRetention: logs.RetentionDays.ONE_WEEK, // defaults to never delete logs\n  functionName: 'my-custom-name', // defaults to a CloudFormation generated name\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":1,"10":2,"75":23,"104":1,"130":1,"153":1,"169":1,"193":2,"194":8,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":6,"290":1},"fqnsFingerprint":"dbafb2e776c295abcebcf0425c11cb115eff0c61f2c97a7deaece4c4730121ad"},"32004063d127477c469577f7a6c01d359144f0c4d0a55ca0e910edc01768f43c":{"translations":{"python":{"source":"cr.AwsCustomResource(self, \"ListObjects\",\n    on_create=cr.AwsSdkCall(\n        service=\"s3\",\n        action=\"listObjectsV2\",\n        parameters={\n            \"Bucket\": \"my-bucket\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"id\"),\n        output_paths=[\"Contents.0.Key\", \"Contents.1.Key\"]\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"new AwsCustomResource(this, \"ListObjects\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"s3\",\n        Action = \"listObjectsV2\",\n        Parameters = new Dictionary<string, string> {\n            { \"Bucket\", \"my-bucket\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"id\"),\n        OutputPaths = new [] { \"Contents.0.Key\", \"Contents.1.Key\" }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource.Builder.create(this, \"ListObjects\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"s3\")\n                .action(\"listObjectsV2\")\n                .parameters(Map.of(\n                        \"Bucket\", \"my-bucket\"))\n                .physicalResourceId(PhysicalResourceId.of(\"id\"))\n                .outputPaths(List.of(\"Contents.0.Key\", \"Contents.1.Key\"))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"cr.NewAwsCustomResource(this, jsii.String(\"ListObjects\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"s3\"),\n\t\tAction: jsii.String(\"listObjectsV2\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"Bucket\": jsii.String(\"my-bucket\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"id\")),\n\t\tOutputPaths: []*string{\n\t\t\tjsii.String(\"Contents.0.Key\"),\n\t\t\tjsii.String(\"Contents.1.Key\"),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"new cr.AwsCustomResource(this, 'ListObjects', {\n  onCreate: {\n    service: 's3',\n    action: 'listObjectsV2',\n    parameters: {\n      Bucket: 'my-bucket',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('id'),\n    outputPaths: ['Contents.0.Key', 'Contents.1.Key'], // Output only the two first keys\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":528}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cr.AwsCustomResource(this, 'ListObjects', {\n  onCreate: {\n    service: 's3',\n    action: 'listObjectsV2',\n    parameters: {\n      Bucket: 'my-bucket',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('id'),\n    outputPaths: ['Contents.0.Key', 'Contents.1.Key'], // Output only the two first keys\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":20,"104":1,"192":1,"193":4,"194":7,"196":2,"197":1,"226":1,"281":9},"fqnsFingerprint":"80153ad90e9d0caba4daf713235f3674fc721c67a0ec918489fffbc26282ee11"},"886de634243396b48573c2af0867f346a8921741d6cdad3db1d316673075a9f2":{"translations":{"python":{"source":"import aws_cdk.aws_route53 as route53\n\n# zone: route53.HostedZone\n\n\nverify_domain_identity = cr.AwsCustomResource(self, \"VerifyDomainIdentity\",\n    on_create=cr.AwsSdkCall(\n        service=\"SES\",\n        action=\"verifyDomainIdentity\",\n        parameters={\n            \"Domain\": \"example.com\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.from_response(\"VerificationToken\")\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)\nroute53.TxtRecord(self, \"SESVerificationRecord\",\n    zone=zone,\n    record_name=\"_amazonses.example.com\",\n    values=[verify_domain_identity.get_response_field(\"VerificationToken\")]\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.Route53;\n\nHostedZone zone;\n\n\nvar verifyDomainIdentity = new AwsCustomResource(this, \"VerifyDomainIdentity\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"SES\",\n        Action = \"verifyDomainIdentity\",\n        Parameters = new Dictionary<string, string> {\n            { \"Domain\", \"example.com\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.FromResponse(\"VerificationToken\")\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});\nnew TxtRecord(this, \"SESVerificationRecord\", new TxtRecordProps {\n    Zone = zone,\n    RecordName = \"_amazonses.example.com\",\n    Values = new [] { verifyDomainIdentity.GetResponseField(\"VerificationToken\") }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.route53.*;\n\nHostedZone zone;\n\n\nAwsCustomResource verifyDomainIdentity = AwsCustomResource.Builder.create(this, \"VerifyDomainIdentity\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"SES\")\n                .action(\"verifyDomainIdentity\")\n                .parameters(Map.of(\n                        \"Domain\", \"example.com\"))\n                .physicalResourceId(PhysicalResourceId.fromResponse(\"VerificationToken\"))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();\nTxtRecord.Builder.create(this, \"SESVerificationRecord\")\n        .zone(zone)\n        .recordName(\"_amazonses.example.com\")\n        .values(List.of(verifyDomainIdentity.getResponseField(\"VerificationToken\")))\n        .build();","version":"1"},"go":{"source":"import route53 \"github.com/aws-samples/dummy/awscdkawsroute53\"\n\nvar zone hostedZone\n\n\nverifyDomainIdentity := cr.NewAwsCustomResource(this, jsii.String(\"VerifyDomainIdentity\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"SES\"),\n\t\tAction: jsii.String(\"verifyDomainIdentity\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"Domain\": jsii.String(\"example.com\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_FromResponse(jsii.String(\"VerificationToken\")),\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})\nroute53.NewTxtRecord(this, jsii.String(\"SESVerificationRecord\"), &TxtRecordProps{\n\tZone: Zone,\n\tRecordName: jsii.String(\"_amazonses.example.com\"),\n\tValues: []*string{\n\t\tverifyDomainIdentity.GetResponseField(jsii.String(\"VerificationToken\")),\n\t},\n})","version":"1"},"$":{"source":"import * as route53 from '@aws-cdk/aws-route53';\n\nconst verifyDomainIdentity = new cr.AwsCustomResource(this, 'VerifyDomainIdentity', {\n  onCreate: {\n    service: 'SES',\n    action: 'verifyDomainIdentity',\n    parameters: {\n      Domain: 'example.com',\n    },\n    physicalResourceId: cr.PhysicalResourceId.fromResponse('VerificationToken'), // Use the token returned by the call as physical id\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n\ndeclare const zone: route53.HostedZone;\nnew route53.TxtRecord(this, 'SESVerificationRecord', {\n  zone,\n  recordName: `_amazonses.example.com`,\n  values: [verifyDomainIdentity.getResponseField('VerificationToken')],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":552}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53.IHostedZone","@aws-cdk/aws-route53.TxtRecord","@aws-cdk/aws-route53.TxtRecordProps","@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResource#getResponseField","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#fromResponse","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as route53 from '@aws-cdk/aws-route53';\n\ndeclare const zone: route53.HostedZone;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst verifyDomainIdentity = new cr.AwsCustomResource(this, 'VerifyDomainIdentity', {\n  onCreate: {\n    service: 'SES',\n    action: 'verifyDomainIdentity',\n    parameters: {\n      Domain: 'example.com',\n    },\n    physicalResourceId: cr.PhysicalResourceId.fromResponse('VerificationToken'), // Use the token returned by the call as physical id\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\nnew route53.TxtRecord(this, 'SESVerificationRecord', {\n  zone,\n  recordName: `_amazonses.example.com`,\n  values: [verifyDomainIdentity.getResponseField('VerificationToken')],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"14":1,"75":31,"104":2,"130":1,"153":1,"169":1,"192":1,"193":5,"194":9,"196":3,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":10,"282":1,"290":1},"fqnsFingerprint":"b992ff8514636b96d2c71a2fadeaa9b0f9f91edc471d17d14141f770996c6850"},"b549aac033f46f106da7661f063c1fa8ea740e6cff0c02693c29fb9ab8d0ca57":{"translations":{"python":{"source":"get_parameter = cr.AwsCustomResource(self, \"GetParameter\",\n    on_update=cr.AwsSdkCall( # will also be called for a CREATE event\n        service=\"SSM\",\n        action=\"getParameter\",\n        parameters={\n            \"Name\": \"my-parameter\",\n            \"WithDecryption\": True\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(Date.now().to_string())),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)\n\n# Use the value in another construct with\nget_parameter.get_response_field(\"Parameter.Value\")","version":"2"},"csharp":{"source":"var getParameter = new AwsCustomResource(this, \"GetParameter\", new AwsCustomResourceProps {\n    OnUpdate = new AwsSdkCall {  // will also be called for a CREATE event\n        Service = \"SSM\",\n        Action = \"getParameter\",\n        Parameters = new Dictionary<string, object> {\n            { \"Name\", \"my-parameter\" },\n            { \"WithDecryption\", true }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(Date.Now().ToString()) },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});\n\n// Use the value in another construct with\ngetParameter.GetResponseField(\"Parameter.Value\");","version":"1"},"java":{"source":"AwsCustomResource getParameter = AwsCustomResource.Builder.create(this, \"GetParameter\")\n        .onUpdate(AwsSdkCall.builder() // will also be called for a CREATE event\n                .service(\"SSM\")\n                .action(\"getParameter\")\n                .parameters(Map.of(\n                        \"Name\", \"my-parameter\",\n                        \"WithDecryption\", true))\n                .physicalResourceId(PhysicalResourceId.of(Date.now().toString())).build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();\n\n// Use the value in another construct with\ngetParameter.getResponseField(\"Parameter.Value\");","version":"1"},"go":{"source":"getParameter := cr.NewAwsCustomResource(this, jsii.String(\"GetParameter\"), &AwsCustomResourceProps{\n\tOnUpdate: &AwsSdkCall{\n\t\t // will also be called for a CREATE event\n\t\tService: jsii.String(\"SSM\"),\n\t\tAction: jsii.String(\"getParameter\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"Name\": jsii.String(\"my-parameter\"),\n\t\t\t\"WithDecryption\": jsii.Boolean(true),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(date.now().toString()),\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})\n\n// Use the value in another construct with\ngetParameter.GetResponseField(jsii.String(\"Parameter.Value\"))","version":"1"},"$":{"source":"const getParameter = new cr.AwsCustomResource(this, 'GetParameter', {\n  onUpdate: { // will also be called for a CREATE event\n    service: 'SSM',\n    action: 'getParameter',\n    parameters: {\n      Name: 'my-parameter',\n      WithDecryption: true,\n    },\n    physicalResourceId: cr.PhysicalResourceId.of(Date.now().toString()), // Update physical id to always fetch the latest version\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n\n// Use the value in another construct with\ngetParameter.getResponseField('Parameter.Value');","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":579}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResource#getResponseField","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst getParameter = new cr.AwsCustomResource(this, 'GetParameter', {\n  onUpdate: { // will also be called for a CREATE event\n    service: 'SSM',\n    action: 'getParameter',\n    parameters: {\n      Name: 'my-parameter',\n      WithDecryption: true,\n    },\n    physicalResourceId: cr.PhysicalResourceId.of(Date.now().toString()), // Update physical id to always fetch the latest version\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n\n// Use the value in another construct with\ngetParameter.getResponseField('Parameter.Value');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":26,"104":1,"106":1,"193":4,"194":10,"196":5,"197":1,"225":1,"226":1,"242":1,"243":1,"281":9},"fqnsFingerprint":"89b632179eb21386c57d4eec4e20561f2d00499cc29cf998dbe117a0daf443bd"},"d1ce8af571f9a8824babfbd6c4406221c5c73460f6ed78f306f5a2af554b823e":{"translations":{"python":{"source":"get_parameter = cr.AwsCustomResource(self, \"AssociateVPCWithHostedZone\",\n    on_create=cr.AwsSdkCall(\n        assumed_role_arn=\"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\",\n        service=\"Route53\",\n        action=\"associateVPCWithHostedZone\",\n        parameters={\n            \"HostedZoneId\": \"hz-123\",\n            \"VPC\": {\n                \"VPCId\": \"vpc-123\",\n                \"VPCRegion\": \"region-for-vpc\"\n            }\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\")\n    ),\n    # Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var getParameter = new AwsCustomResource(this, \"AssociateVPCWithHostedZone\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        AssumedRoleArn = \"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\",\n        Service = \"Route53\",\n        Action = \"associateVPCWithHostedZone\",\n        Parameters = new Dictionary<string, object> {\n            { \"HostedZoneId\", \"hz-123\" },\n            { \"VPC\", new Struct {\n                VPCId = \"vpc-123\",\n                VPCRegion = \"region-for-vpc\"\n            } }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\")\n    },\n    //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource getParameter = AwsCustomResource.Builder.create(this, \"AssociateVPCWithHostedZone\")\n        .onCreate(AwsSdkCall.builder()\n                .assumedRoleArn(\"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\")\n                .service(\"Route53\")\n                .action(\"associateVPCWithHostedZone\")\n                .parameters(Map.of(\n                        \"HostedZoneId\", \"hz-123\",\n                        \"VPC\", Map.of(\n                                \"VPCId\", \"vpc-123\",\n                                \"VPCRegion\", \"region-for-vpc\")))\n                .physicalResourceId(PhysicalResourceId.of(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\"))\n                .build())\n        //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"getParameter := cr.NewAwsCustomResource(this, jsii.String(\"AssociateVPCWithHostedZone\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tAssumedRoleArn: jsii.String(\"arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections\"),\n\t\tService: jsii.String(\"Route53\"),\n\t\tAction: jsii.String(\"associateVPCWithHostedZone\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"HostedZoneId\": jsii.String(\"hz-123\"),\n\t\t\t\"VPC\": map[string]*string{\n\t\t\t\t\"VPCId\": jsii.String(\"vpc-123\"),\n\t\t\t\t\"VPCRegion\": jsii.String(\"region-for-vpc\"),\n\t\t\t},\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}\")),\n\t},\n\t//Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const getParameter = new cr.AwsCustomResource(this, 'AssociateVPCWithHostedZone', {\n  onCreate: {\n    assumedRoleArn: 'arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections',\n    service: 'Route53',\n    action: 'associateVPCWithHostedZone',\n    parameters: {\n      HostedZoneId: 'hz-123',\n      VPC: {\n\t\t    VPCId: 'vpc-123',\n\t\t    VPCRegion: 'region-for-vpc',\n      },\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}'),\n  },\n  //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/custom-resources"},"field":{"field":"markdown","line":601}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst getParameter = new cr.AwsCustomResource(this, 'AssociateVPCWithHostedZone', {\n  onCreate: {\n    assumedRoleArn: 'arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections',\n    service: 'Route53',\n    action: 'associateVPCWithHostedZone',\n    parameters: {\n      HostedZoneId: 'hz-123',\n      VPC: {\n\t\t    VPCId: 'vpc-123',\n\t\t    VPCRegion: 'region-for-vpc',\n      },\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}'),\n  },\n  //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":24,"104":1,"193":5,"194":7,"196":2,"197":1,"225":1,"242":1,"243":1,"281":12},"fqnsFingerprint":"80153ad90e9d0caba4daf713235f3674fc721c67a0ec918489fffbc26282ee11"},"96f3b2f326a64867907604b4d09f1cf7d98ad083f69145268d8f5355bf51f323":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.AwsCustomResource"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"2555243382026c19f4d0ab1a0ef184012c3641387c5a439c79defb56c0a8e217":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.AwsCustomResourcePolicy"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"2bc44354b9994029f6ca8069e0e375551d1f578316a3c3506a427a0be2daf5ca":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.AwsCustomResourceProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"5f45b8cc84de2e0d69dba80c2d62c89f9241b0029b01d3ed3b81634848a3045d":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.AwsSdkCall"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"0131696665e42989b6ce15855fcba341c81305be27a3345cdbd83c77f7bacdc5":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.PhysicalResourceId"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"f6f6b521ab16e1fa47a0f5e79155a4e59c3830fb9bbc15e5f518fd567e9073d3":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.PhysicalResourceIdReference"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"},"33b849428051d3231cdc7297486f482a8e6f4f987f7636bbea7307c05ba3f8b7":{"translations":{"python":{"source":"import aws_cdk.custom_resources as custom_resources\nimport aws_cdk.aws_lambda as lambda_\nfrom aws_cdk.core import Stack\n# my_on_event_lambda: lambda.Function\n# my_is_complete_lambda: lambda.Function\nstack = Stack()\n\nprovider = custom_resources.Provider(stack, \"myProvider\",\n    on_event_handler=my_on_event_lambda,\n    is_complete_handler=my_is_complete_lambda\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.CustomResources;\nusing Amazon.CDK.AWS.Lambda;\nusing Amazon.CDK;\nFunction myOnEventLambda;\nFunction myIsCompleteLambda;\nvar stack = new Stack();\n\nvar provider = new Provider(stack, \"myProvider\", new ProviderProps {\n    OnEventHandler = myOnEventLambda,\n    IsCompleteHandler = myIsCompleteLambda\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.customresources.*;\nimport software.amazon.awscdk.services.lambda.*;\nimport software.amazon.awscdk.core.Stack;\nFunction myOnEventLambda;\nFunction myIsCompleteLambda;\nStack stack = new Stack();\n\nProvider provider = Provider.Builder.create(stack, \"myProvider\")\n        .onEventHandler(myOnEventLambda)\n        .isCompleteHandler(myIsCompleteLambda)\n        .build();","version":"1"},"go":{"source":"import custom_resources \"github.com/aws-samples/dummy/awscdkcustomresources\"\nimport lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\nvar myOnEventLambda function\nvar myIsCompleteLambda function\nstack := awscdkcore.NewStack()\n\nprovider := custom_resources.NewProvider(stack, jsii.String(\"myProvider\"), &ProviderProps{\n\tOnEventHandler: myOnEventLambda,\n\tIsCompleteHandler: myIsCompleteLambda,\n})","version":"1"},"$":{"source":"import * as custom_resources from '@aws-cdk/custom-resources';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport { Stack } from '@aws-cdk/core';\ndeclare const myOnEventLambda: lambda.Function;\ndeclare const myIsCompleteLambda: lambda.Function;\nconst stack = new Stack();\n\nconst provider = new custom_resources.Provider(stack, 'myProvider', {\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.Provider"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/core.Stack","@aws-cdk/custom-resources.Provider","@aws-cdk/custom-resources.ProviderProps","constructs.Construct"],"fullSource":"import * as custom_resources from '@aws-cdk/custom-resources';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport { Stack } from '@aws-cdk/core';\ndeclare const myOnEventLambda: lambda.Function;\ndeclare const myIsCompleteLambda: lambda.Function;\nconst stack = new Stack();\n\nconst provider = new custom_resources.Provider(stack, 'myProvider', {\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});","syntaxKindCounter":{"10":4,"75":19,"130":2,"153":2,"169":2,"193":1,"194":1,"197":2,"225":4,"242":4,"243":4,"254":3,"255":3,"256":2,"257":1,"258":1,"281":2,"290":1},"fqnsFingerprint":"50a253b87c8bb2cdfffb57c84cdec8ba820eb5f3c5a926c391a71d16821f3532"},"6b7fdf515779ddc6f4779fc2abdd7e31c93300925bbef9c51f8df3e3b1017e85":{"translations":{"python":{"source":"import aws_cdk.custom_resources as custom_resources\nimport aws_cdk.aws_lambda as lambda_\nfrom aws_cdk.core import Stack\n# my_on_event_lambda: lambda.Function\n# my_is_complete_lambda: lambda.Function\nstack = Stack()\n\nprovider = custom_resources.Provider(stack, \"myProvider\",\n    on_event_handler=my_on_event_lambda,\n    is_complete_handler=my_is_complete_lambda\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.CustomResources;\nusing Amazon.CDK.AWS.Lambda;\nusing Amazon.CDK;\nFunction myOnEventLambda;\nFunction myIsCompleteLambda;\nvar stack = new Stack();\n\nvar provider = new Provider(stack, \"myProvider\", new ProviderProps {\n    OnEventHandler = myOnEventLambda,\n    IsCompleteHandler = myIsCompleteLambda\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.customresources.*;\nimport software.amazon.awscdk.services.lambda.*;\nimport software.amazon.awscdk.core.Stack;\nFunction myOnEventLambda;\nFunction myIsCompleteLambda;\nStack stack = new Stack();\n\nProvider provider = Provider.Builder.create(stack, \"myProvider\")\n        .onEventHandler(myOnEventLambda)\n        .isCompleteHandler(myIsCompleteLambda)\n        .build();","version":"1"},"go":{"source":"import custom_resources \"github.com/aws-samples/dummy/awscdkcustomresources\"\nimport lambda \"github.com/aws-samples/dummy/awscdkawslambda\"\nimport \"github.com/aws-samples/dummy/awscdkcore\"\nvar myOnEventLambda function\nvar myIsCompleteLambda function\nstack := awscdkcore.NewStack()\n\nprovider := custom_resources.NewProvider(stack, jsii.String(\"myProvider\"), &ProviderProps{\n\tOnEventHandler: myOnEventLambda,\n\tIsCompleteHandler: myIsCompleteLambda,\n})","version":"1"},"$":{"source":"import * as custom_resources from '@aws-cdk/custom-resources';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport { Stack } from '@aws-cdk/core';\ndeclare const myOnEventLambda: lambda.Function;\ndeclare const myIsCompleteLambda: lambda.Function;\nconst stack = new Stack();\n\nconst provider = new custom_resources.Provider(stack, 'myProvider', {\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.ProviderProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-lambda.IFunction","@aws-cdk/core.Stack","@aws-cdk/custom-resources.Provider","@aws-cdk/custom-resources.ProviderProps","constructs.Construct"],"fullSource":"import * as custom_resources from '@aws-cdk/custom-resources';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport { Stack } from '@aws-cdk/core';\ndeclare const myOnEventLambda: lambda.Function;\ndeclare const myIsCompleteLambda: lambda.Function;\nconst stack = new Stack();\n\nconst provider = new custom_resources.Provider(stack, 'myProvider', {\n   onEventHandler: myOnEventLambda,\n   isCompleteHandler: myIsCompleteLambda, // optional\n});","syntaxKindCounter":{"10":4,"75":19,"130":2,"153":2,"169":2,"193":1,"194":1,"197":2,"225":4,"242":4,"243":4,"254":3,"255":3,"256":2,"257":1,"258":1,"281":2,"290":1},"fqnsFingerprint":"50a253b87c8bb2cdfffb57c84cdec8ba820eb5f3c5a926c391a71d16821f3532"},"0974fca7bee4b56f8188e645e578756f3bdf6c70683b9d93d08aad0b7bd00e44":{"translations":{"python":{"source":"aws_custom = cr.AwsCustomResource(self, \"aws-custom\",\n    on_create=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\"\n        },\n        physical_resource_id=cr.PhysicalResourceId.of(\"...\")\n    ),\n    on_update=cr.AwsSdkCall(\n        service=\"...\",\n        action=\"...\",\n        parameters={\n            \"text\": \"...\",\n            \"resource_id\": cr.PhysicalResourceIdReference()\n        }\n    ),\n    policy=cr.AwsCustomResourcePolicy.from_sdk_calls(\n        resources=cr.AwsCustomResourcePolicy.ANY_RESOURCE\n    )\n)","version":"2"},"csharp":{"source":"var awsCustom = new AwsCustomResource(this, \"aws-custom\", new AwsCustomResourceProps {\n    OnCreate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, string> {\n            { \"text\", \"...\" }\n        },\n        PhysicalResourceId = PhysicalResourceId.Of(\"...\")\n    },\n    OnUpdate = new AwsSdkCall {\n        Service = \"...\",\n        Action = \"...\",\n        Parameters = new Dictionary<string, object> {\n            { \"text\", \"...\" },\n            { \"resourceId\", new PhysicalResourceIdReference() }\n        }\n    },\n    Policy = AwsCustomResourcePolicy.FromSdkCalls(new SdkCallsPolicyOptions {\n        Resources = AwsCustomResourcePolicy.ANY_RESOURCE\n    })\n});","version":"1"},"java":{"source":"AwsCustomResource awsCustom = AwsCustomResource.Builder.create(this, \"aws-custom\")\n        .onCreate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\"))\n                .physicalResourceId(PhysicalResourceId.of(\"...\"))\n                .build())\n        .onUpdate(AwsSdkCall.builder()\n                .service(\"...\")\n                .action(\"...\")\n                .parameters(Map.of(\n                        \"text\", \"...\",\n                        \"resourceId\", new PhysicalResourceIdReference()))\n                .build())\n        .policy(AwsCustomResourcePolicy.fromSdkCalls(SdkCallsPolicyOptions.builder()\n                .resources(AwsCustomResourcePolicy.ANY_RESOURCE)\n                .build()))\n        .build();","version":"1"},"go":{"source":"awsCustom := cr.NewAwsCustomResource(this, jsii.String(\"aws-custom\"), &AwsCustomResourceProps{\n\tOnCreate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]*string{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t},\n\t\tPhysicalResourceId: cr.PhysicalResourceId_Of(jsii.String(\"...\")),\n\t},\n\tOnUpdate: &AwsSdkCall{\n\t\tService: jsii.String(\"...\"),\n\t\tAction: jsii.String(\"...\"),\n\t\tParameters: map[string]interface{}{\n\t\t\t\"text\": jsii.String(\"...\"),\n\t\t\t\"resourceId\": cr.NewPhysicalResourceIdReference(),\n\t\t},\n\t},\n\tPolicy: cr.AwsCustomResourcePolicy_FromSdkCalls(&SdkCallsPolicyOptions{\n\t\tResources: cr.AwsCustomResourcePolicy_ANY_RESOURCE(),\n\t}),\n})","version":"1"},"$":{"source":"const awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/custom-resources.SdkCallsPolicyOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/custom-resources.AwsCustomResource","@aws-cdk/custom-resources.AwsCustomResourcePolicy","@aws-cdk/custom-resources.AwsCustomResourcePolicy#ANY_RESOURCE","@aws-cdk/custom-resources.AwsCustomResourcePolicy#fromSdkCalls","@aws-cdk/custom-resources.AwsCustomResourceProps","@aws-cdk/custom-resources.AwsSdkCall","@aws-cdk/custom-resources.PhysicalResourceId","@aws-cdk/custom-resources.PhysicalResourceId#of","@aws-cdk/custom-resources.PhysicalResourceIdReference","@aws-cdk/custom-resources.SdkCallsPolicyOptions","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { CustomResource, Duration, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {           \n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awsCustom = new cr.AwsCustomResource(this, 'aws-custom', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n    },\n    physicalResourceId: cr.PhysicalResourceId.of('...'),\n  },\n  onUpdate: {\n    service: '...',\n    action: '...',\n    parameters: {\n      text: '...',\n      resourceId: new cr.PhysicalResourceIdReference(),\n    },\n  },\n  policy: cr.AwsCustomResourcePolicy.fromSdkCalls({\n    resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE,\n  }),\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":28,"104":1,"193":6,"194":8,"196":2,"197":2,"225":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"85a0e198a5307266d8d2c4bf60b1109c3eef8e08b84741422e5f28859268ee16"}}}