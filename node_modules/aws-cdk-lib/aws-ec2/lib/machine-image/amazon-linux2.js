"use strict";
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AmazonLinux2ImageSsmParameter = exports.AmazonLinux2Kernel = void 0;
const jsiiDeprecationWarnings = require("../../../.warnings.jsii.js");
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const common_1 = require("./common");
/**
 * Amazon Linux 2 kernel versions
 */
class AmazonLinux2Kernel {
    constructor(version) {
        this.version = version;
    }
    /**
     * Generate a string representation of the kernel
     */
    toString() {
        return this.version === 'default'
            ? undefined
            : `kernel-${this.version}`;
    }
}
_a = JSII_RTTI_SYMBOL_1;
AmazonLinux2Kernel[_a] = { fqn: "aws-cdk-lib.aws_ec2.AmazonLinux2Kernel", version: "2.76.0" };
/**
 * The latest kernel version currently available in a published AMI.
 *
 * When a new kernel version is available for an amzn2 AMI this will be
 * updated to contain the latest kernel version and will cause your instances
 * to be replaced. Do not store stateful information on the instance if you are
 * using this version.
 */
AmazonLinux2Kernel.CDK_LATEST = new AmazonLinux2Kernel('5.10');
/**
 * The default kernel version for Amazon Linux 2 is 4.14 and
 * Linux 4.14.311-233.529.amzn2.x86_64
 * the SSM parameter does not include it in the name
 * (i.e. /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2)
 */
AmazonLinux2Kernel.DEFAULT = new AmazonLinux2Kernel('default');
/**
 * Kernel version 5.10
 */
AmazonLinux2Kernel.KERNEL_5_10 = new AmazonLinux2Kernel('5.10');
exports.AmazonLinux2Kernel = AmazonLinux2Kernel;
/**
 * A SSM Parameter that contains the AMI ID for Amazon Linux 2
 */
class AmazonLinux2ImageSsmParameter extends common_1.AmazonLinuxImageSsmParameterBase {
    /**
     * Generates a SSM Parameter name for a specific amazon linux 2 AMI
     *
     * Example values:
     *
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-ebs",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-minimal-hvm-arm64-ebs",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-arm64-gp2",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2",
     *     "/aws/service/ami-amazon-linux-latest/amzn2-ami-minimal-hvm-x86_64-ebs"
     */
    static ssmParameterName(props) {
        try {
            jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_AmazonLinux2ImageSsmParameterProps(props);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.ssmParameterName);
            }
            throw error;
        }
        const edition = (props && props.edition) || common_1.AmazonLinuxEdition.STANDARD;
        const parts = [
            common_1.AmazonLinuxGeneration.AMAZON_LINUX_2,
            'ami',
            edition !== common_1.AmazonLinuxEdition.STANDARD ? edition : undefined,
            props.kernel?.toString(),
            props.virtualization ?? common_1.AmazonLinuxVirt.HVM,
            props.cpuType ?? common_1.AmazonLinuxCpuType.X86_64,
            props.storage ?? common_1.AmazonLinuxStorage.GENERAL_PURPOSE,
        ].filter(x => !!x);
        return '/aws/service/ami-amazon-linux-latest/' + parts.join('-');
    }
    constructor(props) {
        super({
            parameterName: AmazonLinux2ImageSsmParameter.ssmParameterName(props),
            cachedInContext: props.cachedInContext,
            userData: props.userData,
        });
        try {
            jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_AmazonLinux2ImageSsmParameterProps(props);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, AmazonLinux2ImageSsmParameter);
            }
            throw error;
        }
    }
}
_b = JSII_RTTI_SYMBOL_1;
AmazonLinux2ImageSsmParameter[_b] = { fqn: "aws-cdk-lib.aws_ec2.AmazonLinux2ImageSsmParameter", version: "2.76.0" };
exports.AmazonLinux2ImageSsmParameter = AmazonLinux2ImageSsmParameter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hem9uLWxpbnV4Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFtYXpvbi1saW51eDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEscUNBQTJNO0FBRTNNOztHQUVHO0FBQ0gsTUFBYSxrQkFBa0I7SUF3QjdCLFlBQTZCLE9BQWU7UUFBZixZQUFPLEdBQVAsT0FBTyxDQUFRO0tBQUs7SUFFakQ7O09BRUc7SUFDSSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxLQUFLLFNBQVM7WUFDL0IsQ0FBQyxDQUFDLFNBQVM7WUFDWCxDQUFDLENBQUMsVUFBVSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDOUI7Ozs7QUFoQ0Q7Ozs7Ozs7R0FPRztBQUNvQiw2QkFBVSxHQUFHLElBQUksa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFbkU7Ozs7O0dBS0c7QUFDb0IsMEJBQU8sR0FBRyxJQUFJLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRW5FOztHQUVHO0FBQ29CLDhCQUFXLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQXRCekQsZ0RBQWtCO0FBOEQvQjs7R0FFRztBQUNILE1BQWEsNkJBQThCLFNBQVEseUNBQWdDO0lBQ2pGOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsS0FBeUM7Ozs7Ozs7Ozs7UUFDdEUsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLDJCQUFrQixDQUFDLFFBQVEsQ0FBQztRQUV4RSxNQUFNLEtBQUssR0FBNEI7WUFDckMsOEJBQXFCLENBQUMsY0FBYztZQUNwQyxLQUFLO1lBQ0wsT0FBTyxLQUFLLDJCQUFrQixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTO1lBQzdELEtBQUssQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFO1lBQ3hCLEtBQUssQ0FBQyxjQUFjLElBQUksd0JBQWUsQ0FBQyxHQUFHO1lBQzNDLEtBQUssQ0FBQyxPQUFPLElBQUksMkJBQWtCLENBQUMsTUFBTTtZQUMxQyxLQUFLLENBQUMsT0FBTyxJQUFJLDJCQUFrQixDQUFDLGVBQWU7U0FDcEQsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbkIsT0FBTyx1Q0FBdUMsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ2xFO0lBRUQsWUFBWSxLQUF5QztRQUNuRCxLQUFLLENBQUM7WUFDSixhQUFhLEVBQUUsNkJBQTZCLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDO1lBQ3BFLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtZQUN0QyxRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7U0FDekIsQ0FBQyxDQUFDOzs7Ozs7K0NBcENNLDZCQUE2Qjs7OztLQXFDdkM7Ozs7QUFyQ1Usc0VBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQW1hem9uTGludXhDcHVUeXBlLCBBbWF6b25MaW51eEVkaXRpb24sIEFtYXpvbkxpbnV4R2VuZXJhdGlvbiwgQW1hem9uTGludXhJbWFnZVNzbVBhcmFtZXRlckJhc2UsIEFtYXpvbkxpbnV4SW1hZ2VTc21QYXJhbWV0ZXJDb21tb25PcHRpb25zLCBBbWF6b25MaW51eFN0b3JhZ2UsIEFtYXpvbkxpbnV4VmlydCB9IGZyb20gJy4vY29tbW9uJztcblxuLyoqXG4gKiBBbWF6b24gTGludXggMiBrZXJuZWwgdmVyc2lvbnNcbiAqL1xuZXhwb3J0IGNsYXNzIEFtYXpvbkxpbnV4Mktlcm5lbCB7XG4gIC8qKlxuICAgKiBUaGUgbGF0ZXN0IGtlcm5lbCB2ZXJzaW9uIGN1cnJlbnRseSBhdmFpbGFibGUgaW4gYSBwdWJsaXNoZWQgQU1JLlxuICAgKlxuICAgKiBXaGVuIGEgbmV3IGtlcm5lbCB2ZXJzaW9uIGlzIGF2YWlsYWJsZSBmb3IgYW4gYW16bjIgQU1JIHRoaXMgd2lsbCBiZVxuICAgKiB1cGRhdGVkIHRvIGNvbnRhaW4gdGhlIGxhdGVzdCBrZXJuZWwgdmVyc2lvbiBhbmQgd2lsbCBjYXVzZSB5b3VyIGluc3RhbmNlc1xuICAgKiB0byBiZSByZXBsYWNlZC4gRG8gbm90IHN0b3JlIHN0YXRlZnVsIGluZm9ybWF0aW9uIG9uIHRoZSBpbnN0YW5jZSBpZiB5b3UgYXJlXG4gICAqIHVzaW5nIHRoaXMgdmVyc2lvbi5cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQ0RLX0xBVEVTVCA9IG5ldyBBbWF6b25MaW51eDJLZXJuZWwoJzUuMTAnKTtcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQga2VybmVsIHZlcnNpb24gZm9yIEFtYXpvbiBMaW51eCAyIGlzIDQuMTQgYW5kXG4gICAqIExpbnV4IDQuMTQuMzExLTIzMy41MjkuYW16bjIueDg2XzY0XG4gICAqIHRoZSBTU00gcGFyYW1ldGVyIGRvZXMgbm90IGluY2x1ZGUgaXQgaW4gdGhlIG5hbWVcbiAgICogKGkuZS4gL2F3cy9zZXJ2aWNlL2FtaS1hbWF6b24tbGludXgtbGF0ZXN0L2Ftem4yLWFtaS1odm0teDg2XzY0LWdwMilcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgREVGQVVMVCA9IG5ldyBBbWF6b25MaW51eDJLZXJuZWwoJ2RlZmF1bHQnKTtcblxuICAvKipcbiAgICogS2VybmVsIHZlcnNpb24gNS4xMFxuICAgKi9cbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBLRVJORUxfNV8xMCA9IG5ldyBBbWF6b25MaW51eDJLZXJuZWwoJzUuMTAnKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHZlcnNpb246IHN0cmluZykgeyB9XG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXJuZWxcbiAgICovXG4gIHB1YmxpYyB0b1N0cmluZygpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLnZlcnNpb24gPT09ICdkZWZhdWx0J1xuICAgICAgPyB1bmRlZmluZWRcbiAgICAgIDogYGtlcm5lbC0ke3RoaXMudmVyc2lvbn1gO1xuICB9XG59XG5cbi8qKlxuICogUHJvcGVydGllcyBzcGVjaWZpYyB0byBhbXpuMiBpbWFnZXNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBbWF6b25MaW51eDJJbWFnZVNzbVBhcmFtZXRlclByb3BzIGV4dGVuZHMgQW1hem9uTGludXhJbWFnZVNzbVBhcmFtZXRlckNvbW1vbk9wdGlvbnMge1xuICAvKipcbiAgICogV2hhdCBzdG9yYWdlIGJhY2tlZCBpbWFnZSB0byB1c2VcbiAgICpcbiAgICogQGRlZmF1bHQgR2VuZXJhbFB1cnBvc2VcbiAgICovXG4gIHJlYWRvbmx5IHN0b3JhZ2U/OiBBbWF6b25MaW51eFN0b3JhZ2U7XG5cbiAgLyoqXG4gICAqIFdoYXQga2VybmVsIHZlcnNpb24gb2YgQW1hem9uIExpbnV4IHRvIHVzZVxuICAgKlxuICAgKiBAZGVmYXVsdCAtXG4gICAqL1xuICByZWFkb25seSBrZXJuZWw/OiBBbWF6b25MaW51eDJLZXJuZWw7XG5cbiAgLyoqXG4gICAqIFZpcnR1YWxpemF0aW9uIHR5cGVcbiAgICpcbiAgICogQGRlZmF1bHQgSFZNXG4gICAqL1xuICByZWFkb25seSB2aXJ0dWFsaXphdGlvbj86IEFtYXpvbkxpbnV4VmlydDtcbn1cblxuLyoqXG4gKiBBIFNTTSBQYXJhbWV0ZXIgdGhhdCBjb250YWlucyB0aGUgQU1JIElEIGZvciBBbWF6b24gTGludXggMlxuICovXG5leHBvcnQgY2xhc3MgQW1hem9uTGludXgySW1hZ2VTc21QYXJhbWV0ZXIgZXh0ZW5kcyBBbWF6b25MaW51eEltYWdlU3NtUGFyYW1ldGVyQmFzZSB7XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSBTU00gUGFyYW1ldGVyIG5hbWUgZm9yIGEgc3BlY2lmaWMgYW1hem9uIGxpbnV4IDIgQU1JXG4gICAqXG4gICAqIEV4YW1wbGUgdmFsdWVzOlxuICAgKlxuICAgKiAgICAgXCIvYXdzL3NlcnZpY2UvYW1pLWFtYXpvbi1saW51eC1sYXRlc3QvYW16bjItYW1pLWh2bS14ODZfNjQtZWJzXCIsXG4gICAqICAgICBcIi9hd3Mvc2VydmljZS9hbWktYW1hem9uLWxpbnV4LWxhdGVzdC9hbXpuMi1hbWktaHZtLXg4Nl82NC1ncDJcIixcbiAgICogICAgIFwiL2F3cy9zZXJ2aWNlL2FtaS1hbWF6b24tbGludXgtbGF0ZXN0L2Ftem4yLWFtaS1rZXJuZWwtNS4xMC1odm0teDg2XzY0LWVic1wiLFxuICAgKiAgICAgXCIvYXdzL3NlcnZpY2UvYW1pLWFtYXpvbi1saW51eC1sYXRlc3QvYW16bjItYW1pLWh2bS1hcm02NC1ncDJcIixcbiAgICogICAgIFwiL2F3cy9zZXJ2aWNlL2FtaS1hbWF6b24tbGludXgtbGF0ZXN0L2Ftem4yLWFtaS1taW5pbWFsLWh2bS1hcm02NC1lYnNcIixcbiAgICogICAgIFwiL2F3cy9zZXJ2aWNlL2FtaS1hbWF6b24tbGludXgtbGF0ZXN0L2Ftem4yLWFtaS1rZXJuZWwtNS4xMC1odm0tYXJtNjQtZ3AyXCIsXG4gICAqICAgICBcIi9hd3Mvc2VydmljZS9hbWktYW1hem9uLWxpbnV4LWxhdGVzdC9hbXpuMi1hbWkta2VybmVsLTUuMTAtaHZtLXg4Nl82NC1ncDJcIixcbiAgICogICAgIFwiL2F3cy9zZXJ2aWNlL2FtaS1hbWF6b24tbGludXgtbGF0ZXN0L2Ftem4yLWFtaS1taW5pbWFsLWh2bS14ODZfNjQtZWJzXCJcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgc3NtUGFyYW1ldGVyTmFtZShwcm9wczogQW1hem9uTGludXgySW1hZ2VTc21QYXJhbWV0ZXJQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgZWRpdGlvbiA9IChwcm9wcyAmJiBwcm9wcy5lZGl0aW9uKSB8fCBBbWF6b25MaW51eEVkaXRpb24uU1RBTkRBUkQ7XG5cbiAgICBjb25zdCBwYXJ0czogQXJyYXk8c3RyaW5nfHVuZGVmaW5lZD4gPSBbXG4gICAgICBBbWF6b25MaW51eEdlbmVyYXRpb24uQU1BWk9OX0xJTlVYXzIsXG4gICAgICAnYW1pJyxcbiAgICAgIGVkaXRpb24gIT09IEFtYXpvbkxpbnV4RWRpdGlvbi5TVEFOREFSRCA/IGVkaXRpb24gOiB1bmRlZmluZWQsXG4gICAgICBwcm9wcy5rZXJuZWw/LnRvU3RyaW5nKCksXG4gICAgICBwcm9wcy52aXJ0dWFsaXphdGlvbiA/PyBBbWF6b25MaW51eFZpcnQuSFZNLFxuICAgICAgcHJvcHMuY3B1VHlwZSA/PyBBbWF6b25MaW51eENwdVR5cGUuWDg2XzY0LFxuICAgICAgcHJvcHMuc3RvcmFnZSA/PyBBbWF6b25MaW51eFN0b3JhZ2UuR0VORVJBTF9QVVJQT1NFLFxuICAgIF0uZmlsdGVyKHggPT4gISF4KTtcblxuICAgIHJldHVybiAnL2F3cy9zZXJ2aWNlL2FtaS1hbWF6b24tbGludXgtbGF0ZXN0LycgKyBwYXJ0cy5qb2luKCctJyk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm9wczogQW1hem9uTGludXgySW1hZ2VTc21QYXJhbWV0ZXJQcm9wcykge1xuICAgIHN1cGVyKHtcbiAgICAgIHBhcmFtZXRlck5hbWU6IEFtYXpvbkxpbnV4MkltYWdlU3NtUGFyYW1ldGVyLnNzbVBhcmFtZXRlck5hbWUocHJvcHMpLFxuICAgICAgY2FjaGVkSW5Db250ZXh0OiBwcm9wcy5jYWNoZWRJbkNvbnRleHQsXG4gICAgICB1c2VyRGF0YTogcHJvcHMudXNlckRhdGEsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==